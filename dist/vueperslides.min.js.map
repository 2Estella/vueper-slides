{"version":3,"file":"vueperslides.min.js","sources":["../src/components/VueperSlide.vue","../src/components/VueperSlides.vue","../src/index.js"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"{ 'vueperslides__slide': true, 'vueperslides__slide--active': $parent.slides.activeUid === _uid }\" :style=\"styles\")\n  div.vueperslides__slide-content(v-show=\"!$parent.conf.slideContentOutside && (title || hasTitleSlotData || content || hasContentSlotData)\")\n    div.slide-title(v-if=\"title || hasTitleSlotData\")\n      slot(name=\"slideTitle\")\n      div(v-if=\"title\" v-html=\"title\")\n    div.slide-content(v-if=\"content || hasContentSlotData\")\n      slot(name=\"slideContent\")\n      div(v-if=\"content\" v-html=\"content\")\n</template>\n\n<script>\nexport default {\n  props: {\n    clone: {\n      type: Number,\n      default: null\n    },\n    image: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    content: {\n      type: String,\n      default: ''\n    }\n  },\n  mounted () {\n    if (this.hasTitleSlotData) this.$parent.updateSlideContent(this._uid, 'titleSlot', this.titleSlot)\n    if (this.hasContentSlotData) this.$parent.updateSlideContent(this._uid, 'contentSlot', this.contentSlot)\n  },\n  created () {\n    this.$parent.addSlide({\n      _uid: this._uid,\n      image: this.image,\n      title: this.title,\n      content: this.content,\n      clone: this.clone\n    })\n  },\n  // When removing a slide programmatically, remove it from the config so vueperslides\n  // component is aware of the change.\n  destroyed () {\n    if (this.clone === null) this.$parent.removeSlide(this._uid)\n  },\n  computed: {\n    styles () {\n      return { ...(this.image && { backgroundImage: `url(${this.image})` }) }\n    },\n  \thasTitleSlotData () {\n      return this.$slots.slideTitle\n    },\n  \thasContentSlotData () {\n      return this.$slots.slideContent\n    },\n  \ttitleSlot () {\n      return this.hasTitleSlotData ? this.$slots.slideTitle[0].elm.innerHTML : ''\n    },\n  \tcontentSlot () {\n      return this.hasContentSlotData ? this.$slots.slideContent[0].elm.innerHTML : ''\n    }\n  }\n}\n</script>\n","<template lang=\"pug\">\ndiv.vueperslides(:class=\"{ 'vueperslides--ready': isReady, 'vueperslides--fade': conf.fade, 'vueperslides--parallax': conf.parallax, 'vueperslides--touchable': touch.enabled && !disable, 'vueperslides--animated': true }\" ref=\"vueperslides\")\n  div.vueperslides__slide-content.vueperslides__slide-content--outside-top(:class=\"conf.slideContentOutsideClass\" v-if=\"conf.slideContentOutside === 'top'\")\n    div.slide-title(v-if=\"slides.count && slides.list[slides.current].title\" v-html=\"slides.list[slides.current].title\")\n    div.slide-title(v-if=\"slides.count && slides.list[slides.current].titleSlot\" v-html=\"slides.list[slides.current].titleSlot\")\n    div.slide-content(v-if=\"slides.count && slides.list[slides.current].content\" v-html=\"slides.list[slides.current].content\")\n    div.slide-content(v-if=\"slides.count && slides.list[slides.current].contentSlot\" v-html=\"slides.list[slides.current].contentSlot\")\n\n  div.vueperslides__inner\n    div.vueperslides__parallax-wrapper(:style=\"'padding-bottom:' + (conf.slideRatio * 100) + '%'\")\n      div.vueperslides__track-wrapper(:style=\"trackWrapperStyles\")\n        div.vueperslides__track(:class=\"{ 'vueperslides__track--dragging': touch.dragging, 'vueperslides__track--mousedown': mouseDown }\" ref=\"track\" :style=\"trackStyles\")\n          vueper-slide.vueperslides__slide--clone(v-if=\"slides.count && clones[0]\" :clone=\"0\" :title=\"clones[0].title\" :content=\"clones[0].content\" :image=\"clones[0].image\" :style=\"clones[0].style\")\n            div(v-if=\"clones[0].titleSlot\" slot=\"slideTitle\" v-html=\"clones[0].titleSlot\")\n            div(v-if=\"clones[0].contentSlot\" slot=\"slideContent\" v-html=\"clones[0].contentSlot\")\n          slot(:currentSlide=\"slides.current\")\n          vueper-slide.vueperslides__slide--clone(v-if=\"slides.count && clones[1]\" :clone=\"1\" :title=\"clones[1].title\" :content=\"clones[1].content\" :image=\"clones[1].image\" :style=\"clones[1].style\")\n            div(v-if=\"clones[1].titleSlot\" slot=\"slideTitle\" v-html=\"clones[1].titleSlot\")\n            div(v-if=\"clones[1].contentSlot\" slot=\"slideContent\" v-html=\"clones[1].contentSlot\")\n\n    div.vueperslides__paused(v-if=\"$slots.pausedIcon\")\n      slot(name=\"pausedIcon\")\n    div.vueperslides__arrows(:class=\"{ 'vueperslides__arrows--outside': conf.arrowsOutside }\" v-if=\"conf.arrows && slides.count > 1 && !disable\")\n      button.vueperslides__arrow.vueperslides__arrow--prev(@click=\"onArrowClick(false)\" v-show=\"!arrowPrevDisabled\")\n        slot(name=\"arrowLeft\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M16.2,21c0.3,0,0.5-0.1,0.7-0.3c0.4-0.4,0.4-1,0-1.4L9.6,12L17,4.7c0.4-0.4,0.4-1,0-1.4c-0.4-0.4-1-0.4-1.4,0L6.8,12l8.8,8.7C15.7,20.9,16,21,16.2,21z\")\n      button.vueperslides__arrow.vueperslides__arrow--next(@click=\"onArrowClick()\" v-show=\"!arrowNextDisabled\")\n        slot(name=\"arrowRight\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M7.8,21c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l7.4-7.3L7,4.7c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l8.8,8.7l-8.8,8.7C8.3,20.9,8,21,7.8,21z\")\n    div.vueperslides__bullets(v-if=\"conf.bullets && slides.count > 1 && !disable && !conf.bulletsOutside\")\n      button.vueperslides__bullet(:class=\"{ 'vueperslides__bullet--active': slides.current === i }\" v-for=\"(item, i) in slides.list\" :key=\"i\" @click=\"goToSlide(i)\" @keyup.left=\"onArrowClick(false)\" @keyup.right=\"onArrowClick()\" ref=\"bullet\")\n        span {{ i + 1 }}\n\n  div.vueperslides__bullets.vueperslides__bullets--outside(v-if=\"conf.bullets && slides.count > 1 && !disable && conf.bulletsOutside\")\n    button.vueperslides__bullet(:class=\"{ 'vueperslides__bullet--active': slides.current === i }\" v-for=\"(item, i) in slides.list\" :key=\"i\" @click=\"goToSlide(i)\" @keyup.left=\"onArrowClick(false)\" @keyup.right=\"onArrowClick()\" ref=\"bullet\")\n      span {{ i + 1 }}\n\n  div.vueperslides__slide-content.vueperslides__slide-content--outside-bottom(:class=\"conf.slideContentOutsideClass\" v-if=\"conf.slideContentOutside === 'bottom'\")\n    div.slide-title(v-if=\"slides.count && slides.list[slides.current].title\" v-html=\"slides.list[slides.current].title\")\n    div.slide-title(v-if=\"slides.count && slides.list[slides.current].titleSlot\" v-html=\"slides.list[slides.current].titleSlot\")\n    div.slide-content(v-if=\"slides.count && slides.list[slides.current].content\" v-html=\"slides.list[slides.current].content\")\n    div.slide-content(v-if=\"slides.count && slides.list[slides.current].contentSlot\" v-html=\"slides.list[slides.current].contentSlot\")\n</template>\n\n<script>\nimport VueperSlide from './VueperSlide.vue'\n\nexport default {\n  name: 'vueper-slides',\n  components: { VueperSlide },\n  props: {\n    initSlide: {\n      type: Number,\n      default: 1\n    },\n    slideRatio: {\n      type: Number,\n      default: 1/3\n    },\n    arrows: {\n      type: Boolean,\n      default: true\n    },\n    arrowsOutside: {\n      type: Boolean,\n      default: false\n    },\n    // Ability to disable arrows on slideshow edges. Only if not infinite mode.\n    disableArrowsOnEdges: {\n      type: [Boolean, String],\n      default: false\n    },\n    bullets: {\n      type: Boolean,\n      default: true\n    },\n    bulletsOutside: {\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    slideContentOutside: {\n      type: [Boolean, String],\n      default: false\n    },\n    slideContentOutsideClass: {\n      type: String,\n      default: ''\n    },\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    speed: {\n      type: [Number, String],\n      default: 4000\n    },\n    transitionSpeed: {\n      type: [Number, String],\n      default: 600\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true\n    },\n    infinite: {\n      type: Boolean,\n      default: true\n    },\n    parallax: {\n      type: [Boolean, Number],\n      default: false\n    },\n    touchable: {\n      type: Boolean,\n      default: true\n    },\n    // By default when touch is enabled you have to drag from a slide side and pass 50% of slideshow width to change\n    // slide. This setting changes this behavior to a horizontal pixel amount from anywhere on slideshow.\n    draggingDistance: {\n      type: Number,\n      default: null\n    },\n    disable: {\n      type: Boolean,\n      default: false\n    },\n    breakpoints: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data: () => ({\n    isReady: false,\n    container: null,\n    slides: { list: [], count: 0, activeUid: null, current: 0, clones: [] },\n    clones: [],\n    mouseDown: false,\n    mouseOver: false,\n    touch: { enabled: true, dragging: false, dragStartX: 0, dragAmount: 0, goNext: true },\n    transition: { currentTranslation: 0, speed: 0 },\n    timer: null,\n    arrowPrevDisabled: false,\n    arrowNextDisabled: false,\n    breakpointsData: { list: [], current: null },\n    parallaxData: { translation: 0, slideshowOffsetTop: null, isVisible: false },\n  }),\n  mounted () {\n    this.init()\n  },\n  methods: {\n    init () {\n      this.emit('before-init', false)\n      this.container = this.$refs.vueperslides\n      this.touch.enabled = this.conf.touchable\n      this.transition.speed = this.conf.transitionSpeed\n\n      if (Object.keys(this.breakpoints).length) {\n        this.setBreakpointsList()\n        this.setBreakpointConfig(this.getCurrentBreakpoint())\n      }\n\n      if (this.conf.infinite && !this.conf.fade) {\n        this.cloneSlides()\n        this.$nextTick(() => this.cloneSlides())\n      }\n\n      this.goToSlide(this.conf.initSlide - 1)\n      this.bindEvents()\n\n      this.isReady = true\n      this.emit('ready')\n    },\n\n    // Emit a named event outside the component with 2 possible parameters:\n    // current slide info & next slide info.\n    emit(name, includeCurrentSlide = true, includeNextSlide = false) {\n      let args = [name]\n\n      if (includeCurrentSlide || typeof includeNextSlide === 'number') {\n        args[1] = {}\n        if (includeCurrentSlide && this.slides.activeUid) {\n          args[1].currentSlide = {\n            index: this.slides.current,\n            title: this.slides.list[this.slides.current].titleSlot ?\n                   this.slides.list[this.slides.current].titleSlot\n                   : this.slides.list[this.slides.current].title,\n            content: this.slides.list[this.slides.current].contentSlot ?\n                     this.slides.list[this.slides.current].contentSlot\n                     : this.slides.list[this.slides.current].content,\n          }\n        }\n        if (typeof includeNextSlide === 'number') {\n          let { nextSlide } = this.getSlideInRange(includeNextSlide)\n          args[1].nextSlide = {\n            index: nextSlide,\n            title: this.slides.list[nextSlide].titleSlot ?\n                   this.slides.list[nextSlide].titleSlot\n                   : this.slides.list[nextSlide].title,\n            content: this.slides.list[nextSlide].contentSlot ?\n                     this.slides.list[nextSlide].contentSlot\n                     : this.slides.list[nextSlide].content,\n          }\n        }\n      }\n\n      this.$emit(name, ...args)\n    },\n\n    setBreakpointsList () {\n      this.breakpointsData.list = [99999, ...Object.keys(this.breakpoints)].sort((a, b) => parseInt(a) < parseInt(b))\n    },\n\n    getCurrentBreakpoint () {\n      let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      let breakpoints = [windowWidth, ...this.breakpointsData.list].sort((a, b) => parseInt(a) < parseInt(b))\n\n      return this.breakpointsData.list[breakpoints.indexOf(windowWidth) - 1]\n    },\n\n    hasBreakpointChanged (breakpoint) {\n      return this.breakpointsData.current !== breakpoint\n    },\n\n    setBreakpointConfig (breakpoint) {\n      this.breakpointsData.current = breakpoint\n      // this.conf gets updated by itself when this.breakpointsData.current changes.\n    },\n\n    cloneSlides () {\n      let firstNodeIsVnode = this.$slots.default[0].tag\n      let firstSlide = this.$slots.default[firstNodeIsVnode ? 0 : 1].elm\n      let lastSlide = this.$slots.default[this.$slots.default.length - 1].elm\n\n      this.clones[0] = {\n        title: this.slides.list[this.slides.count - 1].title,\n        titleSlot: this.slides.list[this.slides.count - 1].titleSlot || '',\n        content: this.slides.list[this.slides.count - 1].content,\n        contentSlot: this.slides.list[this.slides.count - 1].contentSlot || '',\n        image: this.slides.list[this.slides.count - 1].image,\n        style: lastSlide && lastSlide.attributes.style ? lastSlide.attributes.style.value : ''\n      }\n      this.clones[1] = {\n        title: this.slides.list[0].title,\n        titleSlot: this.slides.list[0].titleSlot || '',\n        content: this.slides.list[0].content,\n        contentSlot: this.slides.list[0].contentSlot || '',\n        image: this.slides.list[0].image,\n        style: firstSlide && firstSlide.attributes.style ? firstSlide.attributes.style.value : ''\n      }\n    },\n\n    updateSlideContent (slideUID, key, value) {\n      this.slides.list.some(slide => {\n        if (slide._uid === slideUID) {\n          slide[key] = value\n        }\n\n        return slide._uid === slideUID\n      })\n    },\n\n    bindEvents () {\n      const hasTouch = 'ontouchstart' in window\n\n      // Touch enabled slideshow.\n      if (this.touch.enabled) {\n        this.$refs.track.addEventListener(hasTouch ? 'touchstart' : 'mousedown', this.onMouseDown)\n        document.addEventListener(hasTouch ? 'touchmove' : 'mousemove', this.onMouseMove)\n        document.addEventListener(hasTouch ? 'touchend' : 'mouseup', this.onMouseUp)\n      }\n\n      // Pause autoplay on mouseover.\n      if (this.conf.pauseOnHover && !hasTouch && this.conf.autoplay) {\n        this.container.addEventListener('mouseover', this.onMouseIn)\n        this.container.addEventListener('mouseout', this.onMouseOut)\n      }\n\n      // Breakpoints or parallax need a resize event.\n      if (this.breakpointsData.list.length || this.conf.parallax) {\n        window.addEventListener('resize', this.onResize)\n      }\n\n      // Parallax slideshow.\n      if (this.conf.parallax) {\n        document.addEventListener('scroll', this.onScroll)\n      }\n    },\n\n    // Recursively sum all the offsetTop values from current element up the tree until body.\n    // By doing so a padding or margin on a parent won't cause a wrong calculation.\n    getSlideshowOffsetTop (force = false) {\n      if (this.parallaxData.slideshowOffsetTop === null || force) {\n        let el = this.container\n        let top = el.offsetTop\n\n        while (el = el.offsetParent) {\n          top += el.offsetTop\n        }\n\n        this.parallaxData.slideshowOffsetTop = top\n      }\n\n      return this.parallaxData.slideshowOffsetTop\n    },\n\n    onScroll (e) {\n      let doc = document.documentElement\n      let scrollTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n      let windowHeight = window.innerHeight || doc.clientHeight || document.body.clientHeight\n      let slideshowHeight = this.container.clientHeight\n      let slideshowTopOffset = this.getSlideshowOffsetTop()\n\n      // The distance between the bottom line of the current vueperslides slideshow and top of window.\n      // Negative value means the slideshow is totally above the current window box.\n      let vsBottom2WinTop = slideshowTopOffset + slideshowHeight - scrollTop\n      // The distance between the top line of the current vueperslides slideshow and bottom of window.\n      // Negative value means the slideshow is totally bellow the current window box.\n      let vsTop2winBottom = windowHeight + scrollTop - slideshowTopOffset\n\n      this.parallaxData.isVisible = vsBottom2WinTop > 0 && vsTop2winBottom > 0\n\n      // Only apply translation when slideshow is visible.\n      if (this.parallaxData.isVisible) {\n        let heightToCoverWithTranslation = windowHeight + slideshowHeight\n        let percentage = vsBottom2WinTop * 100 / heightToCoverWithTranslation\n        let translatePercentage = this.conf.parallax === -1 ? 100 - percentage : percentage\n        this.parallaxData.translation = - translatePercentage / 2\n      }\n    },\n\n    onResize () {\n      if (this.breakpointsData.list.length) {\n        let breakpoint = this.getCurrentBreakpoint()\n        if (this.hasBreakpointChanged(breakpoint)) {\n          this.setBreakpointConfig(breakpoint)\n        }\n      }\n\n      if (this.conf.parallax) {\n        // Only refresh parallaxData.slideshowOffsetTop value on resize for better performance.\n        this.getSlideshowOffsetTop(true)\n      }\n    },\n\n    onMouseIn () {\n      this.mouseOver = true\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.clearTimer()\n      }\n    },\n\n    onMouseOut () {\n      this.mouseOver = false\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.setTimer()\n      }\n    },\n\n    onMouseDown (e) {\n      if (!this.touch.enabled || this.disable) return\n      if (!e.touches) e.preventDefault()\n\n      // this.disableScroll()\n\n      this.mouseDown = true\n\n      if (this.draggingDistance) {\n        // Store drag start in var for distance calculation in onMouseUp().\n        this.touch.dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n      } else {\n        let dragPercentage = this.getDragPercentage(e)\n\n        // Set a flag for use while dragging in `onMouseMove` to know if drag was toward left or right.\n        this.touch.goNext = dragPercentage >= 0.5\n\n        this.transition.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n      }\n    },\n\n    onMouseMove (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = true\n\n        if (this.draggingDistance) {\n          this.touch.dragAmount = this.getDragAmount(e)\n          let dragAmountPercentage = this.touch.dragAmount / this.container.clientWidth\n\n          this.transition.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0) - dragAmountPercentage)\n        } else {\n          let dragPercentage = this.getDragPercentage(e)\n          this.transition.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n        }\n      }\n    },\n\n    onMouseUp (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = false\n\n        let slideOnDragEnd\n        if (this.draggingDistance) {\n          let dragAmount = this.touch.dragAmount\n          let dragAmountPercentage = dragAmount / this.container.clientWidth\n\n          slideOnDragEnd = this.slides.current\n          if (Math.abs(dragAmount) >= this.draggingDistance) {\n            slideOnDragEnd += dragAmount > 0 ? -1 : 1\n          }\n        } else {\n          // When the drag is realeased, calculate if the drag ends before or after the 50%-slideshow-width threshold.\n          // Then finish the sliding toward that slide.\n          slideOnDragEnd = - (Math.round(this.transition.currentTranslation / 100) + (this.clones.length ? 1 : 0))\n        }\n\n        let { nextSlide } = this.getSlideInRange(slideOnDragEnd)\n\n        // If drag is not allowed (`arrowNextDisabled` = true) and dragging beyond last slide,\n        // cancel sliding and snap back to last slide.\n        if (this.arrowNextDisabled && this.conf.autoplay && nextSlide === 0) {\n          nextSlide = this.slides.count - 1\n        }\n\n        // Only call `goToSlide` if the drag ends on a slide that is different than the currentSlide.\n        if (nextSlide !== this.slides.current) {\n          this.goToSlide(slideOnDragEnd)\n        } else {\n          // Apply transition to snap back to current slide.\n          this.transition.currentTranslation = - (this.slides.current + (this.clones.length ? 1 : 0)) * 100\n        }\n\n        this.touch.dragStartX = null\n        this.touch.dragAmount = null\n        this.enableScroll()\n      }\n    },\n\n    getDragPercentage (e) {\n      let dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n\n      // For full window width slideshow only.\n      // let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      // return dragStartX / windowWidth\n\n      return (dragStartX - this.container.offsetLeft) / this.container.clientWidth\n    },\n\n    /**\n     * Return the x distance in pixel between drag start and current drag position.\n     */\n    getDragAmount (e) {\n      return ('ontouchstart' in window ? e.touches[0].clientX : e.clientX) - this.touch.dragStartX\n    },\n\n    disableScroll () {\n      document.ontouchmove = function(e) {\n        e.preventDefault()\n      }\n    },\n\n    enableScroll () {\n      document.ontouchmove = function() {\n        return true\n      }\n    },\n\n    clearTimer () {\n      clearTimeout(this.timer)\n      this.timer = 0\n    },\n\n    setTimer () {\n      this.timer = setTimeout(() => {\n        this.goToSlide(this.slides.current + 1, true, true)\n      }, this.conf.speed)\n    },\n\n    onArrowClick (next = true) {\n      this.goToSlide(this.slides.current + (next ? 1 : -1))\n    },\n\n    getSlideInRange (i) {\n      let clone = null\n\n      // If infinite enabled, going out of range takes the first slide from the other end.\n      if (this.clones.length) {\n        if (i < 0) {\n          i = this.slides.count - 1\n          clone = 0\n        }\n        else if (i > this.slides.count - 1) {\n          i = 0\n          clone = 1\n        }\n      }\n\n      // If not infinite, can't go lower than 0 or beyond `slides.count` with `disableArrowsOnEdges`.\n      // If `disableArrowsOnEdges` is enabled going out of range will take first slide from the other end\n      // of the slideshow.\n      else {\n        if (i < 0) i = this.conf.disableArrowsOnEdges ? 0 : this.slides.count - 1\n        else if (i > this.slides.count - 1) {\n          // If autoplay is on but disableArrowsOnEdges is enabled, going beyond the last one will also bring\n          // the first one in.\n          i = this.conf.disableArrowsOnEdges ? (this.conf.autoplay ? 0 : this.slides.count - 1) : 0\n        }\n      }\n\n      return { nextSlide: i, clone: clone }\n    },\n\n    goToSlide (i, animation = true, autoSliding = false) {\n      if (!this.slides.count || this.disable) return\n\n      if (this.conf.autoplay) this.clearTimer()\n\n      let { nextSlide, clone: nextSlideIsClone } = this.getSlideInRange(i)\n\n      // First use of `goToSlide` is while init, so should not propagate an event.\n      if (this.isReady) this.emit('before-slide', true, nextSlide)\n\n      // Disable arrows if `disableArrowsOnEdges` is on and there is no slide to go to on that end.\n      if (this.conf.arrows && this.conf.disableArrowsOnEdges) {\n        this.arrowPrevDisabled = nextSlide === 0\n        this.arrowNextDisabled = nextSlide === this.slides.count - 1\n      }\n\n      // Infinite sliding with cloned slides:\n      // When reaching last slide and going next the cloned slide of the first slide\n      // shows up, when the animation ends the real change to the first slide is done\n      // immediately with no animation.\n      // Same principle when going beyond first slide.\n      if (nextSlideIsClone !== null) {// Gives clone id (0 or 1 or null).\n        setTimeout(() => {\n          // inside the callback, also check if it is not too late to apply next slide\n          // (user may have slid fast multiple times) if so cancel callback.\n          let passedCloneBackward = i === -1 && this.slides.current !== this.slides.count - 1\n          let passedCloneForward = i === this.slides.count && this.slides.current !== 0\n          let tooLateToSetTimeout = passedCloneBackward || passedCloneForward\n\n          if (!tooLateToSetTimeout) {\n            this.transition.speed = 0\n            this.goToSlide(nextSlideIsClone ? 0 : this.slides.count - 1, false, autoSliding)\n            setTimeout(() => { this.transition.speed = this.conf.transitionSpeed }, 10)\n          }\n        }, this.transition.speed - 50)\n      }\n\n      this.slides.current = nextSlide\n\n      // Only apply sliding transition when the slideshow animation type is `slide`.\n      if (!this.conf.fade) {\n        if (nextSlideIsClone !== null) {\n          this.transition.currentTranslation = - 100 * (nextSlideIsClone ? this.slides.count + 1 : 0)\n        }\n        else this.transition.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0))\n      }\n\n      this.slides.activeUid = this.slides.list[this.slides.current]._uid\n\n      if (this.conf.autoplay && !this.mouseOver) {\n        this.setTimer()\n      }\n\n      if (this.slides.count) {\n        if (this.$slots.default[this.slides.current]) {\n          // First use of goToSlide is while init, so should not propagate an event.\n          if (this.isReady) this.emit('slide')\n        }\n\n        if (this.isReady && !autoSliding && this.$refs.bullet[this.slides.current]) {\n          this.$refs.bullet[this.slides.current].focus()\n        }\n      }\n    },\n\n    addSlide (newSlide) {\n      const needReclone = this.conf.infinite && !this.conf.fade && this.isReady && newSlide.clone === null\n\n      if (newSlide.clone !== null) {\n        this.clones[newSlide.clone] = newSlide\n      }\n\n      else {\n        // Add the slide in the slides array & update slides.count.\n        this.slides.list.push(newSlide)\n        this.slides.count = this.slides.list.length\n      }\n\n      if (this.slides.count > 1 && this.touchable) {\n        this.touch.enabled = true\n      }\n\n      // cloneSlides() is called at the end of init so calling it before would be redundant.\n      if (needReclone) {\n        this.$nextTick(() => this.cloneSlides())\n      }\n    },\n\n    removeSlide (uid) {\n      let needReclone = false\n\n      this.slides.list.some((slide, i) => {\n        if (slide._uid === uid) {\n          // Remove the slide.\n          this.slides.list.splice(i, 1)\n          this.slides.count = this.slides.list.length\n\n          // If the slide to remove is the current slide, slide to the previous slide.\n          if (uid === this.slides.activeUid) {\n            this.slides.activeUid = null\n            this.goToSlide(i - 1, true, true)\n          }\n\n          if (this.slides.count <= 1) {\n            this.touch.enabled = false\n          }\n\n          if (this.clones.length && this.isReady && !slide.clone) needReclone = true\n\n          return true // Break the `Array.some` loop.\n        }\n      })\n\n      if (this.slides.count && needReclone) {\n        this.cloneSlides()\n      }\n    }\n  },\n\n  computed: {\n    // this.conf needs to be reactive so user can change a Vueper Slides option and everything gets updated.\n    conf () {\n      // Read config from the props then check if breakpoints are defined. If so override the config with\n      // the breakpoint ones.\n      return {\n        ...this.$props,\n        ...(this.$props.breakpoints && this.$props.breakpoints[this.breakpointsData.current] || {})\n      }\n    },\n    trackStyles () {\n      let styles = {}\n\n      styles.transitionDuration = this.transition.speed + 'ms'\n\n      if (!this.conf.fade) {\n        styles.transform = 'translateX(' + this.transition.currentTranslation + '%)'\n      }\n\n      return styles\n    },\n    trackWrapperStyles () {\n      let styles = {}\n\n      if (this.conf.parallax) {\n        styles.transform = 'translateY(' + this.parallaxData.translation + '%)'\n\n        // Increase browser optimizations by allocating more machine resource.\n        //!\\ To be used wisely so deactivate when not needed.\n        styles.willChange = this.parallaxData.isVisible ? 'transform' : 'auto'\n      }\n\n      return styles\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.vueperslides {\n  position: relative;\n\n  &__inner {\n    position: relative;\n    user-select: none;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n  }\n\n  &__parallax-wrapper {\n    position: relative;\n    padding-bottom: 33.33%;\n    overflow: hidden;\n\n    &::before,\n    &::after {\n      content: \"\";\n      position: absolute;\n      bottom: 100%;\n      left: -1em;\n      right: -1em;\n      height: 2em;\n      box-shadow: 0 0 20px rgba(#000, 0.25);\n      z-index: 2;\n    }\n\n    &::after {\n      top: 100%;\n      bottom: auto;\n    }\n  }\n\n  &__track-wrapper {\n    position: absolute;\n    top: 0;\n    height: 100%;\n    left: 0;\n    right: 0;\n    overflow: hidden;\n    z-index: 1;\n  }\n\n  &--parallax &__track-wrapper {\n    height: 200%;\n    transform: translateY(0);\n  }\n\n  &--fade &__track {\n    white-space: normal;\n    transition: none;\n  }\n\n  &--touchable &__track {\n    cursor: ew-resize;\n    cursor: -webkit-grab;\n    cursor: grab;\n\n    &--mousedown, &--dragging {\n      cursor: -webkit-grabbing;\n      cursor: grabbing;\n    }\n  }\n\n  &__track {\n    white-space: nowrap;\n    transition: 0.5s ease-in-out transform;\n    height: 100%;\n\n    &--mousedown {\n      transition: 0.2s ease-in-out transform !important;\n    }\n\n    &--dragging {\n      transition: none;\n    }\n\n    &--no-animation {\n      transition-duration: 0s;\n    }\n  }\n\n  &__slide {\n    white-space: normal;\n    background-position: top;\n    background-size: cover;\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n  }\n\n  &--fade &__slide {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    transition: .8s ease-in-out opacity;\n\n    &--active {\n      z-index: 1;\n      opacity: 1;\n    }\n  }\n\n  &__arrows {\n    color: #fff;\n\n    &--outside {\n      color: #000;\n    }\n  }\n\n  &__arrow {\n    position: absolute;\n    top: 50%;\n    background-color: transparent;\n    border: none;\n    fill: currentColor;\n    font-size: 3em;\n    width: 1em;\n    text-align: center;\n    transform: translateY(-50%);\n    opacity: 0.7;\n    transition: 0.3s ease-in-out;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n\n    &--prev {\n      left: 10px;\n    }\n\n    &--next {\n      right: 10px;\n    }\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  &__arrows--outside &__arrow--prev {\n    left: -40px;\n  }\n\n  &__arrows--outside &__arrow--next {\n    right: -40px;\n  }\n\n  &__paused {\n    position: absolute;\n    top: 3%;\n    right: 3%;\n    opacity: 0;\n    transition: 0.3s ease-in-out;\n    text-shadow: 0 0 3px rgba(#000, .4);\n    z-index: 1;\n  }\n\n  &:hover &__paused {\n    opacity: 1;\n  }\n\n  &__bullets {\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    &--outside {\n      position: relative;\n    }\n  }\n\n  &__bullet {\n    width: 12px;\n    height: 12px;\n    border-radius: 12px;\n    border: 1px solid #fff;\n    background-color: transparent;\n    box-shadow: 0 0 1px rgba(#000, 0.5), 0 0 3px rgba(#000, 0.3);\n    margin: 1.5em 0.6em;\n    padding: 0;\n    display: inline-block;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &--active {\n      background-color: #fff;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n    }\n\n    span {\n      display: none;\n    }\n  }\n}\n</style>\n","import VueperSlides from './components/VueperSlides.vue'\nimport VueperSlide from './components/VueperSlide.vue'\n\n// Expose component to global scope.\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.component('vueper-slides', VueperSlides)\n  window.Vue.component('vueper-slide', VueperSlide)\n}\n\nexport { VueperSlides, VueperSlide }\n"],"names":["render","Number","String","this","hasTitleSlotData","$parent","updateSlideContent","_uid","titleSlot","hasContentSlotData","contentSlot","addSlide","image","title","content","clone","removeSlide","backgroundImage","$slots","slideTitle","slideContent","elm","innerHTML","VueperSlide","Boolean","Object","list","count","activeUid","current","clones","enabled","dragging","dragStartX","dragAmount","goNext","currentTranslation","speed","translation","slideshowOffsetTop","isVisible","init","emit","container","$refs","vueperslides","touch","conf","touchable","transition","transitionSpeed","keys","breakpoints","length","setBreakpointsList","setBreakpointConfig","getCurrentBreakpoint","infinite","fade","cloneSlides","$nextTick","_this","goToSlide","initSlide","bindEvents","isReady","name","includeCurrentSlide","includeNextSlide","args","slides","currentSlide","nextSlide","getSlideInRange","$emit","breakpointsData","sort","a","b","parseInt","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","indexOf","breakpoint","firstNodeIsVnode","default","tag","firstSlide","lastSlide","attributes","style","value","slideUID","key","some","slide","hasTouch","track","addEventListener","onMouseDown","onMouseMove","onMouseUp","pauseOnHover","autoplay","onMouseIn","onMouseOut","parallax","onResize","onScroll","force","parallaxData","el","top","offsetTop","offsetParent","e","doc","scrollTop","pageYOffset","clientTop","windowHeight","innerHeight","clientHeight","slideshowHeight","slideshowTopOffset","getSlideshowOffsetTop","vsBottom2WinTop","vsTop2winBottom","percentage","translatePercentage","hasBreakpointChanged","mouseOver","clearTimer","setTimer","disable","touches","preventDefault","mouseDown","draggingDistance","clientX","dragPercentage","getDragPercentage","getDragAmount","dragAmountPercentage","slideOnDragEnd","Math","abs","round","arrowNextDisabled","enableScroll","offsetLeft","ontouchmove","timer","setTimeout","_this2","next","i","disableArrowsOnEdges","autoSliding","nextSlideIsClone","arrows","arrowPrevDisabled","passedCloneBackward","_this3","passedCloneForward","bullet","focus","newSlide","needReclone","push","_this4","uid","splice","_this5","$props","styles","transitionDuration","transform","willChange","Vue","component","VueperSlides"],"mappings":"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"}