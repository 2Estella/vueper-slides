{"version":3,"file":"vueperslides.min.js","sources":["../src/components/VueperSlide.vue","../src/components/VueperSlides.vue","../src/index.js"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"{'vueperslides__slide': true, 'vueperslides__slide--active': $parent.activeSlideUid === _uid }\" :style=\"styles\")\n  div.vueperslides__slide-content(v-if=\"!$parent.conf.slideContentOutside && (title || content)\")\n    p.slide-title(v-html=\"title\")\n    p.slide-content(v-html=\"content\")\n</template>\n\n<script>\nexport default {\n  props: {\n    clone: {\n      type: Number,\n      default: null\n    },\n    image: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    content: {\n      type: String,\n      default: ''\n    }\n  },\n  created () {\n    this.$parent.addSlide({\n      _uid: this._uid,\n      image: this.image,\n      title: this.title,\n      content: this.content,\n      clone: this.clone\n    })\n  },\n  // When removing a slide programmatically, remove it from the config so vueperslides\n  // component is aware of the change.\n  destroyed () {\n    if (this.clone === null) this.$parent.removeSlide(this._uid)\n  },\n  computed: {\n    styles () {\n      let styles = {}\n      if (this.image) {\n        styles.backgroundImage = `url(${this.image})`\n      }\n      if (this.$parent.conf.slideRatio) {\n        styles.paddingBottom = `${this.$parent.conf.slideRatio * 100}%`\n      }\n      return styles\n    }\n  }\n}\n</script>\n","<template lang=\"pug\">\ndiv.vueperslides-wrapper(:class=\"{'ready': isReady}\")\n  div.vueperslides__slide-content.vueperslides__slide-content--outside(:class=\"conf.slideContentOutsideClass\" v-if=\"conf.slideContentOutside\")\n    p.slide-title(v-if=\"slidesCount && slides[currentSlide].title\" v-html=\"slides[currentSlide].title\")\n    p.slide-content(v-if=\"slidesCount && slides[currentSlide].content\" v-html=\"slides[currentSlide].content\")\n\n  div.vueperslides(:class=\"{'vueperslides--fade': conf.fade, 'vueperslides--touchable': touchEnabled && !disable}\" ref=\"vueperslides\")\n    div.vueperslides__slides-wrapper\n      div.vueperslides__track(:class=\"{'vueperslides__track--dragging': dragging, 'vueperslides__track--mousedown': mouseDown}\" ref=\"track\" :style=\"!conf.fade ? 'transform: translate3d(' + currentTranslation + '%, 0, 0)' : ('padding-bottom: ' + (conf.slideRatio * 100) + '%')\")\n        vueper-slide.vueperslides__slide--clone(v-if=\"slidesCount && clones[0]\" :clone=\"0\" :title=\"clones[0].title\" :content=\"clones[0].content\" :image=\"clones[0].image\" :style=\"clones[0].style\")\n        slot(:currentSlide=\"currentSlide\")\n        vueper-slide.vueperslides__slide--clone(v-if=\"slidesCount && clones[1]\" :clone=\"1\" :title=\"clones[1].title\" :content=\"clones[1].content\" :image=\"clones[1].image\" :style=\"clones[1].style\")\n\n    div.vueperslides__paused(v-if=\"$slots.pausedIcon\")\n      slot(name=\"pausedIcon\")\n    div.vueperslides__arrows(v-if=\"conf.arrows && slidesCount > 1 && !disable\")\n      button.vueperslides__arrow.vueperslides__arrow--prev(@click=\"onArrowClick(false)\" v-show=\"!arrowPrevDisabled\")\n        slot(name=\"arrowLeft\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M16.2,21c0.3,0,0.5-0.1,0.7-0.3c0.4-0.4,0.4-1,0-1.4L9.6,12L17,4.7c0.4-0.4,0.4-1,0-1.4c-0.4-0.4-1-0.4-1.4,0L6.8,12l8.8,8.7C15.7,20.9,16,21,16.2,21z\")\n      button.vueperslides__arrow.vueperslides__arrow--next(@click=\"onArrowClick()\" v-show=\"!arrowNextDisabled\")\n        slot(name=\"arrowRight\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M7.8,21c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l7.4-7.3L7,4.7c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l8.8,8.7l-8.8,8.7C8.3,20.9,8,21,7.8,21z\")\n    div.vueperslides__bullets(:class=\"{'vueperslides__bullets--outside': conf.bulletsOutside}\" v-if=\"conf.bullets && slidesCount > 1 && !disable\")\n      button.vueperslides__bullet(:class=\"{'vueperslides__bullet--active': currentSlide === i}\" v-for=\"(item, i) in slides\" :key=\"i\" @click=\"goToSlide(i)\" @keyup.left=\"onArrowClick(false)\" @keyup.right=\"onArrowClick()\" ref=\"bullet\")\n        span {{ i + 1 }}\n</template>\n\n<script>\nimport VueperSlide from './VueperSlide.vue'\n\nexport default {\n  name: 'vueper-slides',\n  components: { VueperSlide },\n  props: {\n    initSlide: {\n      type: Number,\n      default: 1\n    },\n    slideRatio: {\n      type: Number,\n      default: 1/3\n    },\n    arrows: {\n      type: Boolean,\n      default: true\n    },\n    // Ability to disable arrows on slideshow edges. Only if not infinite mode.\n    disableArrowsOnEdges: {\n      type: [Boolean, String],\n      default: false\n    },\n    bullets: {\n      type: Boolean,\n      default: true\n    },\n    bulletsOutside: {\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    slideContentOutside: {\n      type: Boolean,\n      default: false\n    },\n    slideContentOutsideClass: {\n      type: String,\n      default: ''\n    },\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    speed: {\n      type: [Number, String],\n      default: 4000\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true\n    },\n    infinite: {\n      type: Boolean,\n      default: true\n    },\n    touchable: {\n      type: Boolean,\n      default: true\n    },\n    disable: {\n      type: Boolean,\n      default: false\n    },\n    breakpoints: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data: () => ({\n    isReady: false,\n    slides: [],\n    slidesCount: 0,\n    activeSlideUid: null,\n    mouseDown: false,\n    mouseOver: false,\n    dragging: false,\n    currentSlide: 0,\n    currentTranslation: 0,\n    dragStartX: 0,\n    dragStartY: 0,\n    goNext: true,\n    timer: null,\n    arrowPrevDisabled: false,\n    arrowNextDisabled: false,\n    touchEnabled: true,\n    clones: [],\n    breakpointsList: [],\n    currentBreakpoint: null,\n    conf: null\n  }),\n  created () {\n    this.conf = Object.assign({}, this.$props)\n    delete this.conf.breakpoints // Prevent cyclic redundancy.\n  },\n  mounted () {\n    this.init()\n  },\n  methods: {\n    init () {\n      this.emit('before-init', false)\n      this.slidesCount = this.slides.length\n\n      if (Object.keys(this.breakpoints).length) {\n        this.setBreakpointsList()\n        this.setBreakpointConfig(this.getCurrentBreakpoint())\n      }\n\n      this.touchEnabled = this.conf.touchable\n\n      if (this.conf.infinite && !this.conf.fade) {\n        this.cloneSlides()\n      }\n\n      this.goToSlide(this.conf.initSlide - 1)\n      this.bindEvents()\n\n      this.isReady = true\n      this.emit('ready')\n    },\n\n    // Emit a named event outside the component with 2 possible parameters:\n    // current slide info & next slide info.\n    emit(name, includeCurrentSlide = true, includeNextSlide = false) {\n      let args = [name]\n\n      if (includeCurrentSlide || typeof includeNextSlide === 'number') {\n        args[1] = {}\n        if (includeCurrentSlide && this.activeSlideUid) {\n          args[1].currentSlide = {\n            index: this.currentSlide,\n            title: this.slides[this.currentSlide].title,\n            content: this.slides[this.currentSlide].content\n          }\n        }\n        if (typeof includeNextSlide === 'number') {\n          let { nextSlide } = this.getSlideInRange(includeNextSlide)\n          args[1].nextSlide = {\n            index: nextSlide,\n            title: this.slides[nextSlide].title,\n            content: this.slides[nextSlide].content\n          }\n        }\n      }\n\n      this.$emit(name, ...args)\n    },\n\n    setBreakpointsList () {\n      this.breakpointsList = [99999, ...Object.keys(this.breakpoints)].sort((a, b) => parseInt(a) < parseInt(b))\n    },\n\n    getCurrentBreakpoint () {\n      let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      let breakpoints = [windowWidth, ...this.breakpointsList].sort((a, b) => parseInt(a) < parseInt(b))\n\n      return this.breakpointsList[breakpoints.indexOf(windowWidth) - 1]\n    },\n\n    hasBreakpointChanged (breakpoint) {\n      return this.currentBreakpoint !== breakpoint\n    },\n\n    setBreakpointConfig (breakpoint) {\n      this.currentBreakpoint = breakpoint\n      this.conf = Object.assign({}, this.$props, (this.$props.breakpoints[breakpoint] || {}))\n\n      // Re-apply slide ratio on clones.\n      if (this.clones.length && this.conf.slideRatio) {\n        this.clones[0].style['padding-bottom'] = `${this.conf.slideRatio * 100}%`\n        this.clones[1].style['padding-bottom'] = `${this.conf.slideRatio * 100}%`\n      }\n    },\n\n    cloneSlides () {\n      let firstNodeIsVnode = this.$slots.default[0].tag\n      let firstSlide = this.$slots.default[firstNodeIsVnode ? 0 : 1].elm\n      let lastSlide = this.$slots.default[this.$slots.default.length - 1].elm\n\n      this.clones[0] = {\n        title: this.slides[this.slidesCount - 1].title,\n        content: this.slides[this.slidesCount - 1].content,\n        image: this.slides[this.slidesCount - 1].image,\n        style: { cssText: lastSlide && lastSlide.attributes.style ? lastSlide.attributes.style.value : null }\n      }\n      this.clones[1] = {\n        title: this.slides[0].title,\n        content: this.slides[0].content,\n        image: this.slides[0].image,\n        // style: firstSlide && lastSlide.attributes.style ? firstSlide.attributes.style.value : null\n        style: { cssText: firstSlide && lastSlide.attributes.style ? firstSlide.attributes.style.value : null }\n      }\n    },\n\n    bindEvents () {\n      const hasTouch = 'ontouchstart' in window\n\n      if (this.touchEnabled) {\n        this.$refs.track.addEventListener(hasTouch ? 'touchstart' : 'mousedown', this.onMouseDown)\n        document.addEventListener(hasTouch ? 'touchmove' : 'mousemove', this.onMouseMove)\n        document.addEventListener(hasTouch ? 'touchend' : 'mouseup', this.onMouseUp)\n      }\n\n      // Pause autoplay on mouseover.\n      if (this.conf.pauseOnHover && !hasTouch && this.conf.autoplay) {\n        this.$refs.vueperslides.addEventListener('mouseover', this.onMouseIn)\n        this.$refs.vueperslides.addEventListener('mouseout', this.onMouseOut)\n      }\n\n      if (this.breakpointsList.length) {\n        window.addEventListener('resize', this.onResize)\n      }\n    },\n\n    getDragPercentage(e) {\n      this.dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n\n      // For full window width slideshow only.\n      // let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      // return this.dragStartX / windowWidth\n\n      const vueperslidesWrapper = this.$refs.vueperslides.offsetParent\n      return (this.dragStartX - vueperslidesWrapper.offsetLeft) / vueperslidesWrapper.clientWidth\n    },\n\n    onResize () {\n      let breakpoint = this.getCurrentBreakpoint()\n      if (this.hasBreakpointChanged(breakpoint)) {\n        this.setBreakpointConfig(breakpoint)\n      }\n    },\n\n    onMouseIn () {\n      this.mouseOver = true\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.clearTimer()\n      }\n    },\n\n    onMouseOut () {\n      this.mouseOver = false\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.setTimer()\n      }\n    },\n\n    onMouseDown (e) {\n      if (!this.touchEnabled || this.disable) return\n\n      if (!e.touches) {\n        e.preventDefault()\n      }\n\n      this.mouseDown = true\n\n      let dragPercentage = this.getDragPercentage(e)\n\n      // Set a flag for use while dragging in `onMouseMove` to know if drag was toward left or right.\n      this.goNext = dragPercentage >= 0.5\n\n      this.currentTranslation = - 100 * (this.currentSlide + (this.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n    },\n\n    onMouseMove (e) {\n      if (this.mouseDown || this.dragging) {\n        this.mouseDown = false\n        this.dragging = true\n\n        let dragPercentage = this.getDragPercentage(e)\n        this.currentTranslation = - 100 * (this.currentSlide + (this.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n      }\n    },\n\n    onMouseUp () {\n      if (this.mouseDown || this.dragging) {\n        this.mouseDown = false\n        this.dragging = false\n\n        // this.currentTranslation = Math.min(Math.max(0, Math.round(this.currentTranslation / 100) * 100), (this.slidesCount - 1) * 100)\n        // this.currentSlide = this.currentTranslation / 100\n\n        // When the drag is realeased, calculate if the drag ends before or after the 50%-slideshow-width threshold.\n        // Then finish the sliding toward that slide.\n        let slideOnDragEnd = - (Math.round(this.currentTranslation / 100) + (this.clones.length ? 1 : 0))\n        let { nextSlide } = this.getSlideInRange(slideOnDragEnd)\n\n        // If drag is not allowed (`arrowNextDisabled` = true) and dragging beyond last slide,\n        // cancel sliding and snap back to last slide.\n        if (this.arrowNextDisabled && this.conf.autoplay && nextSlide === 0) {\n          nextSlide = this.slidesCount - 1\n        }\n\n        // Only call `goToSlide` if the drag ends on a slide that is different than the currentSlide.\n        if (nextSlide !== this.currentSlide) {\n          this.goToSlide(slideOnDragEnd)\n        } else {\n          // Apply transition to snap back to current slide.\n          this.currentTranslation = - (this.currentSlide + (this.clones.length ? 1 : 0)) * 100\n        }\n\n        this.enableScroll()\n      }\n    },\n\n    disableScroll () {\n      document.ontouchmove = function(e) {\n        e.preventDefault()\n      }\n    },\n\n    enableScroll () {\n      document.ontouchmove = function() {\n        return true\n      }\n    },\n\n    clearTimer () {\n      clearTimeout(this.timer)\n      this.timer = 0\n    },\n\n    setTimer () {\n      this.timer = setTimeout(() => {\n        this.goToSlide(this.currentSlide + 1, true, true)\n      }, this.conf.speed)\n    },\n\n    onArrowClick (next = true) {\n      this.goToSlide(this.currentSlide + (next ? 1 : -1))\n    },\n\n    getSlideInRange (i) {\n      let clone = null\n\n      // If infinite enabled, going out of range takes the first slide from the other end.\n      if (this.clones.length) {\n        if (i < 0) {\n          i = this.slidesCount - 1\n          clone = 0\n        }\n        else if (i > this.slidesCount - 1) {\n          i = 0\n          clone = 1\n        }\n      }\n\n      // If not infinite, can't go lower than 0 or beyond `slidesCount` with `disableArrowsOnEdges`.\n      // If `disableArrowsOnEdges` is enabled going out of range will take first slide from the other end\n      // of the slideshow.\n      else {\n        if (i < 0) i = this.conf.disableArrowsOnEdges ? 0 : this.slidesCount - 1\n        else if (i > this.slidesCount - 1) {\n          // If autoplay is on but disableArrowsOnEdges is enabled, going beyond the last one will also bring\n          // the first one in.\n          i = this.conf.disableArrowsOnEdges ? (this.conf.autoplay ? 0 : this.slidesCount - 1) : 0\n        }\n      }\n\n      return { nextSlide: i, clone: clone }\n    },\n\n    goToSlide (i, animation = true, autoSliding = false) {\n      if (!this.slidesCount || this.disable) return\n\n      if (this.conf.autoplay) this.clearTimer()\n\n      let { nextSlide, clone: nextSlideIsClone } = this.getSlideInRange(i)\n\n      // First use of `goToSlide` is while init, so should not propagate an event.\n      if (this.isReady) this.emit('before-slide', true, nextSlide)\n\n      // Disable arrows if `disableArrowsOnEdges` is on and there is no slide to go to on that end.\n      if (this.conf.arrows && this.conf.disableArrowsOnEdges) {\n        this.arrowPrevDisabled = nextSlide === 0\n        this.arrowNextDisabled = nextSlide === this.slidesCount - 1\n      }\n\n      this.$refs.track.classList[animation ? 'remove' : 'add']('vueperslides__track--no-animation')\n\n      // Infinite sliding with cloned slides:\n      // When reaching last slide and going next the cloned slide of the first slide\n      // shows up, when the animation ends the real change to the first slide is done\n      // immediately with no animation.\n      // Same principle when going beyond first slide.\n      if (nextSlideIsClone !== null) {\n        setTimeout(() => {\n          this.goToSlide(nextSlideIsClone ? 0 : this.slidesCount - 1, false, autoSliding)\n        }, 400)\n      }\n\n      this.currentSlide = nextSlide\n\n      // Only apply sliding transition when the slideshow animation type is `slide`.\n      if (!this.conf.fade) {\n        if (nextSlideIsClone !== null) {\n          this.currentTranslation = - 100 * (nextSlideIsClone ? this.slidesCount + 1 : 0)\n        }\n        else this.currentTranslation = - 100 * (this.currentSlide + (this.clones.length ? 1 : 0))\n      }\n\n      this.activeSlideUid = this.slides[this.currentSlide]._uid\n\n      if (this.conf.autoplay && !this.mouseOver) {\n        this.setTimer()\n      }\n\n      if (this.slidesCount) {\n        if (this.$slots.default[this.currentSlide]) {\n          // First use of goToSlide is while init, so should not propagate an event.\n          if (this.isReady) this.emit('slide')\n        }\n\n        if (this.isReady && !autoSliding && this.$refs.bullet[this.currentSlide]) {\n          this.$refs.bullet[this.currentSlide].focus()\n        }\n      }\n    },\n\n    addSlide(newSlide) {\n      const needReclone = this.conf.infinite && !this.conf.fade && this.isReady && !newSlide.clone\n\n      if (newSlide.clone !== null) {\n        this.clones[newSlide.clone] = newSlide\n      }\n\n      else {\n        // Add the slide in the slides array & update slidesCount.\n        this.slides.push(newSlide)\n        this.slidesCount = this.slides.length\n      }\n\n      if (this.slidesCount > 1) {\n        this.touchEnabled = true\n      }\n\n      if (needReclone) {\n        this.$nextTick(() => this.cloneSlides())\n      }\n    },\n\n    removeSlide(uid) {\n      // let needReclone = this.infinite && !this.fade && this.isReady\n      let needReclone = false\n\n      this.slides.some((slide, i) => {\n        if (slide._uid === uid) {\n          // Remove the slide.\n          this.slides.splice(i, 1)\n          this.slidesCount = this.slides.length\n\n          // If the slide to remove is the current slide, slide to the previous slide.\n          if (uid === this.activeSlideUid) {\n            this.activeSlideUid = null\n            this.goToSlide(i - 1, true, true)\n          }\n\n          if (this.slidesCount <= 1) {\n            this.touchEnabled = false\n          }\n\n          if (this.clones.length && this.isReady && !slide.clone) needReclone = true\n\n          return true // Break the `Array.some` loop.\n        }\n      })\n\n      if (this.slidesCount && needReclone) {\n        this.cloneSlides()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.vueperslides {\n  position: relative;\n\n  &-wrapper {\n    position: relative;\n  }\n\n  &__slides-wrapper {\n    position: relative;\n    overflow: hidden;\n    border-top: 1px solid #ddd;\n    border-bottom: 1px solid #ddd;\n    z-index: 1;\n\n    &::before,\n    &::after {\n      content: \"\";\n      position: absolute;\n      bottom: 100%;\n      left: -1em;\n      right: -1em;\n      height: 2em;\n      box-shadow: 0 0 20px rgba(#000, 0.25);\n      z-index: 2;\n    }\n\n    &::after {\n      top: 100%;\n      bottom: auto;\n    }\n  }\n\n  &--fade &__track {\n    white-space: normal;\n    transition: none;\n  }\n\n  &--touchable &__track {\n    cursor: ew-resize;\n    cursor: -webkit-grab;\n\n    &--mousedown, &--dragging {\n      cursor: -webkit-grabbing;\n    }\n  }\n\n  &__track {\n    white-space: nowrap;\n    transition: 0.5s ease-in-out transform;\n\n    &--mousedown {\n      transition: 0.2s ease-in-out transform;\n    }\n\n    &--dragging {\n      transition: none;\n    }\n\n    &--no-animation {\n      transition-duration: 0s;\n    }\n  }\n\n  &__slide {\n    white-space: normal;\n    padding-bottom: 34%;\n    background-position: top;\n    background-size: cover;\n    display: inline-block;\n    width: 100%;\n    height: 0;\n    // Remove whitespace due to text nodes in combination with display\n    // inline block and whitespace nowrap.\n    margin-bottom: -8px;\n  }\n\n  &__slide-content {\n    user-select: none;\n\n    &--outside {\n      user-select: initial;\n    }\n  }\n\n  &--fade &__slide {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    transition: .8s ease-in-out opacity;\n\n    &--active {\n      z-index: 1;\n      opacity: 1;\n    }\n  }\n\n  &__arrow {\n    position: absolute;\n    top: 50%;\n    background-color: transparent;\n    border: none;\n    color: #fff;\n    fill: currentColor;\n    font-size: 3em;\n    width: 1em;\n    text-align: center;\n    transform: translateY(-50%);\n    opacity: 0.7;\n    z-index: 10;\n    transition: 0.3s ease-in-out;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n\n    &--prev {\n      left: 10px;\n    }\n\n    &--next {\n      right: 10px;\n    }\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  &__paused {\n    position: absolute;\n    top: 3%;\n    right: 3%;\n    opacity: 0;\n    transition: 0.3s ease-in-out;\n    text-shadow: 0 0 3px rgba(#000, .4);\n    z-index: 1;\n  }\n\n  &:hover &__paused {\n    opacity: 1;\n  }\n\n  &__bullets {\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    &--outside {\n      position: relative;\n    }\n  }\n\n  &__bullet {\n    width: 12px;\n    height: 12px;\n    border-radius: 12px;\n    border: 1px solid #fff;\n    background-color: transparent;\n    box-shadow: 0 0 1px rgba(#000, 0.5), 0 0 3px rgba(#000, 0.3);\n    margin: 1.5em 0.6em;\n    padding: 0;\n    display: inline-block;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &--active {\n      background-color: #fff;\n    }\n\n    span {display: none;}\n  }\n}\n\n@media screen and (max-width: 1000px) {\n  .vueperslides__slide {\n    padding-bottom: 45%;\n  }\n  .vueperslides--fade .vueperslides__track {\n    padding-bottom: 45%;\n  }\n}\n\n@media screen and (max-width: 700px) {\n  .vueperslides__slide {\n    padding-bottom: 54%;\n  }\n  .vueperslides--fade .vueperslides__track {\n    padding-bottom: 54%;\n  }\n}\n\n@media screen and (max-width: 400px) {\n  .vueperslides__slide {\n    padding-bottom: 60%;\n  }\n  .vueperslides--fade .vueperslides__track {\n    padding-bottom: 60%;\n  }\n}\n</style>\n","import VueperSlides from './components/VueperSlides.vue'\nimport VueperSlide from './components/VueperSlide.vue'\n\n// Expose component to global scope.\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.component('vueper-slides', VueperSlides)\n  window.Vue.component('vueper-slide', VueperSlide)\n}\n\nexport { VueperSlides, VueperSlide }\n"],"names":["render","Number","String","$parent","addSlide","this","_uid","image","title","content","clone","removeSlide","styles","backgroundImage","conf","slideRatio","paddingBottom","VueperSlide","Boolean","Object","assign","$props","breakpoints","init","emit","slidesCount","slides","length","keys","setBreakpointsList","setBreakpointConfig","getCurrentBreakpoint","touchEnabled","touchable","infinite","fade","cloneSlides","goToSlide","initSlide","bindEvents","isReady","name","includeCurrentSlide","includeNextSlide","args","activeSlideUid","currentSlide","nextSlide","getSlideInRange","$emit","breakpointsList","sort","a","b","parseInt","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","indexOf","breakpoint","currentBreakpoint","clones","style","firstNodeIsVnode","$slots","default","tag","firstSlide","elm","lastSlide","cssText","attributes","value","hasTouch","$refs","track","addEventListener","onMouseDown","onMouseMove","onMouseUp","pauseOnHover","autoplay","vueperslides","onMouseIn","onMouseOut","onResize","e","dragStartX","touches","clientX","vueperslidesWrapper","offsetParent","offsetLeft","hasBreakpointChanged","mouseOver","clearTimer","setTimer","disable","preventDefault","mouseDown","dragPercentage","getDragPercentage","goNext","currentTranslation","dragging","slideOnDragEnd","Math","round","arrowNextDisabled","enableScroll","ontouchmove","timer","setTimeout","_this","speed","next","i","disableArrowsOnEdges","animation","autoSliding","nextSlideIsClone","arrows","arrowPrevDisabled","classList","_this2","bullet","focus","newSlide","needReclone","push","$nextTick","_this3","uid","some","slide","splice","_this4","Vue","component","VueperSlides"],"mappings":"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"}