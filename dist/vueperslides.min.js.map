{"version":3,"file":"vueperslides.min.js","sources":["../src/components/VueperSlide.vue","../src/components/VueperSlides.vue","../src/index.js"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"{ 'vueperslides__slide': true, 'vueperslides__slide--active': $parent.slides.activeUid === _uid }\" :style=\"styles\")\n  div.vueperslides__slide-content(v-if=\"!$parent.conf.slideContentOutside && (title || content)\")\n    p.slide-title(v-html=\"title\")\n    p.slide-content(v-html=\"content\")\n</template>\n\n<script>\nexport default {\n  props: {\n    clone: {\n      type: Number,\n      default: null\n    },\n    image: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    content: {\n      type: String,\n      default: ''\n    }\n  },\n  created () {\n    this.$parent.addSlide({\n      _uid: this._uid,\n      image: this.image,\n      title: this.title,\n      content: this.content,\n      clone: this.clone\n    })\n  },\n  // When removing a slide programmatically, remove it from the config so vueperslides\n  // component is aware of the change.\n  destroyed () {\n    if (this.clone === null) this.$parent.removeSlide(this._uid)\n  },\n  computed: {\n    styles () {\n      return { ...(this.image && { backgroundImage: `url(${this.image})` }) }\n    }\n  }\n}\n</script>\n","<template lang=\"pug\">\ndiv.vueperslides(:class=\"{'vueperslides--ready': isReady, 'vueperslides--fade': conf.fade, 'vueperslides--touchable': touch.enabled && !disable }\" ref=\"vueperslides\")\n  div.vueperslides__slide-content.vueperslides__slide-content--outside(:class=\"conf.slideContentOutsideClass\" v-if=\"conf.slideContentOutside\")\n    p.slide-title(v-if=\"slides.count && slides.list[slides.current].title\" v-html=\"slides.list[slides.current].title\")\n    p.slide-content(v-if=\"slides.count && slides.list[slides.current].content\" v-html=\"slides.list[slides.current].content\")\n\n  div.vueperslides__inner(:style=\"'padding-bottom:' + (this.conf.slideRatio * 100) + '%'\")\n    div.vueperslides__track-wrapper\n      div.vueperslides__track(:class=\"{'vueperslides__track--dragging': touch.dragging, 'vueperslides__track--mousedown': mouseDown}\" ref=\"track\" :style=\"!conf.fade ? 'transform: translate3d(' + currentTranslation + '%, 0, 0)' : ''\")\n        vueper-slide.vueperslides__slide--clone(v-if=\"slides.count && clones[0]\" :clone=\"0\" :title=\"clones[0].title\" :content=\"clones[0].content\" :image=\"clones[0].image\" :style=\"clones[0].style\")\n        slot(:currentSlide=\"slides.current\")\n        vueper-slide.vueperslides__slide--clone(v-if=\"slides.count && clones[1]\" :clone=\"1\" :title=\"clones[1].title\" :content=\"clones[1].content\" :image=\"clones[1].image\" :style=\"clones[1].style\")\n\n    div.vueperslides__paused(v-if=\"$slots.pausedIcon\")\n      slot(name=\"pausedIcon\")\n    div.vueperslides__arrows(v-if=\"conf.arrows && slides.count > 1 && !disable\")\n      button.vueperslides__arrow.vueperslides__arrow--prev(@click=\"onArrowClick(false)\" v-show=\"!arrowPrevDisabled\")\n        slot(name=\"arrowLeft\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M16.2,21c0.3,0,0.5-0.1,0.7-0.3c0.4-0.4,0.4-1,0-1.4L9.6,12L17,4.7c0.4-0.4,0.4-1,0-1.4c-0.4-0.4-1-0.4-1.4,0L6.8,12l8.8,8.7C15.7,20.9,16,21,16.2,21z\")\n      button.vueperslides__arrow.vueperslides__arrow--next(@click=\"onArrowClick()\" v-show=\"!arrowNextDisabled\")\n        slot(name=\"arrowRight\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M7.8,21c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l7.4-7.3L7,4.7c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l8.8,8.7l-8.8,8.7C8.3,20.9,8,21,7.8,21z\")\n  div.vueperslides__bullets(:class=\"{'vueperslides__bullets--outside': conf.bulletsOutside}\" v-if=\"conf.bullets && slides.count > 1 && !disable\")\n    button.vueperslides__bullet(:class=\"{'vueperslides__bullet--active': slides.current === i}\" v-for=\"(item, i) in slides.list\" :key=\"i\" @click=\"goToSlide(i)\" @keyup.left=\"onArrowClick(false)\" @keyup.right=\"onArrowClick()\" ref=\"bullet\")\n      span {{ i + 1 }}\n</template>\n\n<script>\nimport VueperSlide from './VueperSlide.vue'\n\nexport default {\n  name: 'vueper-slides',\n  components: { VueperSlide },\n  props: {\n    initSlide: {\n      type: Number,\n      default: 1\n    },\n    slideRatio: {\n      type: Number,\n      default: 1/3\n    },\n    arrows: {\n      type: Boolean,\n      default: true\n    },\n    // Ability to disable arrows on slideshow edges. Only if not infinite mode.\n    disableArrowsOnEdges: {\n      type: [Boolean, String],\n      default: false\n    },\n    bullets: {\n      type: Boolean,\n      default: true\n    },\n    bulletsOutside: {\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    slideContentOutside: {\n      type: Boolean,\n      default: false\n    },\n    slideContentOutsideClass: {\n      type: String,\n      default: ''\n    },\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    speed: {\n      type: [Number, String],\n      default: 4000\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true\n    },\n    infinite: {\n      type: Boolean,\n      default: true\n    },\n    touchable: {\n      type: Boolean,\n      default: true\n    },\n    // By default when touch is enabled you have to drag from a slide side and pass 50% of slideshow width to change\n    // slide. This setting changes this behavior to a horizontal pixel amount from anywhere on slideshow.\n    draggingDistance: {\n      type: Number,\n      default: null\n    },\n    disable: {\n      type: Boolean,\n      default: false\n    },\n    breakpoints: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data: () => ({\n    isReady: false,\n    slides: { list: [], count: 0, activeUid: null, current: 0, clones: [] },\n    clones: [],\n    mouseDown: false,\n    mouseOver: false,\n    touch: { enabled: true, dragging: false, dragStartX: 0, dragAmount: 0, goNext: true },\n    currentTranslation: 0,\n    timer: null,\n    arrowPrevDisabled: false,\n    arrowNextDisabled: false,\n    breakpointsData: { list: [], current: null },\n    conf: null\n  }),\n  created () {\n    this.conf = { ...this.$props }\n    delete this.conf.breakpoints // Prevent cyclic redundancy.\n  },\n  mounted () {\n    this.init()\n  },\n  methods: {\n    init () {\n      this.emit('before-init', false)\n      this.slides.count = this.slides.list.length\n\n      if (Object.keys(this.breakpoints).length) {\n        this.setBreakpointsList()\n        this.setBreakpointConfig(this.getCurrentBreakpoint())\n      }\n\n      this.touch.enabled = this.conf.touchable\n\n      if (this.conf.infinite && !this.conf.fade) {\n        this.cloneSlides()\n      }\n\n      this.goToSlide(this.conf.initSlide - 1)\n      this.bindEvents()\n\n      this.isReady = true\n      this.emit('ready')\n    },\n\n    // Emit a named event outside the component with 2 possible parameters:\n    // current slide info & next slide info.\n    emit(name, includeCurrentSlide = true, includeNextSlide = false) {\n      let args = [name]\n\n      if (includeCurrentSlide || typeof includeNextSlide === 'number') {\n        args[1] = {}\n        if (includeCurrentSlide && this.slides.activeUid) {\n          args[1].currentSlide = {\n            index: this.slides.current,\n            title: this.slides.list[this.slides.current].title,\n            content: this.slides.list[this.slides.current].content\n          }\n        }\n        if (typeof includeNextSlide === 'number') {\n          let { nextSlide } = this.getSlideInRange(includeNextSlide)\n          args[1].nextSlide = {\n            index: nextSlide,\n            title: this.slides.list[nextSlide].title,\n            content: this.slides.list[nextSlide].content\n          }\n        }\n      }\n\n      this.$emit(name, ...args)\n    },\n\n    setBreakpointsList () {\n      this.breakpointsData.list = [99999, ...Object.keys(this.breakpoints)].sort((a, b) => parseInt(a) < parseInt(b))\n    },\n\n    getCurrentBreakpoint () {\n      let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      let breakpoints = [windowWidth, ...this.breakpointsData.list].sort((a, b) => parseInt(a) < parseInt(b))\n\n      return this.breakpointsData.list[breakpoints.indexOf(windowWidth) - 1]\n    },\n\n    hasBreakpointChanged (breakpoint) {\n      return this.breakpointsData.current !== breakpoint\n    },\n\n    setBreakpointConfig (breakpoint) {\n      this.breakpointsData.current = breakpoint\n      this.conf = { ...this.$props, ...(this.$props.breakpoints[breakpoint] || {}) }\n    },\n\n    cloneSlides () {\n      let firstNodeIsVnode = this.$slots.default[0].tag\n      let firstSlide = this.$slots.default[firstNodeIsVnode ? 0 : 1].elm\n      let lastSlide = this.$slots.default[this.$slots.default.length - 1].elm\n\n      this.clones[0] = {\n        title: this.slides.list[this.slides.count - 1].title,\n        content: this.slides.list[this.slides.count - 1].content,\n        image: this.slides.list[this.slides.count - 1].image,\n        style: lastSlide && lastSlide.attributes.style ? lastSlide.attributes.style.value : ''\n      }\n      this.clones[1] = {\n        title: this.slides.list[0].title,\n        content: this.slides.list[0].content,\n        image: this.slides.list[0].image,\n        style: firstSlide && lastSlide.attributes.style ? firstSlide.attributes.style.value : ''\n      }\n    },\n\n    bindEvents () {\n      const hasTouch = 'ontouchstart' in window\n\n      if (this.touch.enabled) {\n        this.$refs.track.addEventListener(hasTouch ? 'touchstart' : 'mousedown', this.onMouseDown)\n        document.addEventListener(hasTouch ? 'touchmove' : 'mousemove', this.onMouseMove)\n        document.addEventListener(hasTouch ? 'touchend' : 'mouseup', this.onMouseUp)\n      }\n\n      // Pause autoplay on mouseover.\n      if (this.conf.pauseOnHover && !hasTouch && this.conf.autoplay) {\n        this.$refs.vueperslides.addEventListener('mouseover', this.onMouseIn)\n        this.$refs.vueperslides.addEventListener('mouseout', this.onMouseOut)\n      }\n\n      if (this.breakpointsData.list.length) {\n        window.addEventListener('resize', this.onResize)\n      }\n    },\n\n    onResize () {\n      let breakpoint = this.getCurrentBreakpoint()\n      if (this.hasBreakpointChanged(breakpoint)) {\n        this.setBreakpointConfig(breakpoint)\n      }\n    },\n\n    onMouseIn () {\n      this.mouseOver = true\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.clearTimer()\n      }\n    },\n\n    onMouseOut () {\n      this.mouseOver = false\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.setTimer()\n      }\n    },\n\n    onMouseDown (e) {\n      if (!this.touch.enabled || this.disable) return\n      if (!e.touches) e.preventDefault()\n\n      // this.disableScroll()\n\n      this.mouseDown = true\n\n      if (this.draggingDistance) {\n        // Store drag start in var for distance calculation in onMouseUp().\n        this.touch.dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n      } else {\n        let dragPercentage = this.getDragPercentage(e)\n\n        // Set a flag for use while dragging in `onMouseMove` to know if drag was toward left or right.\n        this.touch.goNext = dragPercentage >= 0.5\n\n        this.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n      }\n    },\n\n    onMouseMove (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = true\n\n        if (this.draggingDistance) {\n          this.touch.dragAmount = this.getDragAmount(e)\n          let dragAmountPercentage = this.touch.dragAmount / this.$refs.vueperslides.clientWidth\n\n          this.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0) - dragAmountPercentage)\n        } else {\n          let dragPercentage = this.getDragPercentage(e)\n          this.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n        }\n      }\n    },\n\n    onMouseUp (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = false\n\n        let slideOnDragEnd\n        if (this.draggingDistance) {\n          let dragAmount = this.touch.dragAmount\n          let dragAmountPercentage = dragAmount / this.$refs.vueperslides.clientWidth\n\n          slideOnDragEnd = this.slides.current\n          if (Math.abs(dragAmount) >= this.draggingDistance) {\n            slideOnDragEnd += dragAmount > 0 ? -1 : 1\n          }\n        } else {\n          // When the drag is realeased, calculate if the drag ends before or after the 50%-slideshow-width threshold.\n          // Then finish the sliding toward that slide.\n          slideOnDragEnd = - (Math.round(this.currentTranslation / 100) + (this.clones.length ? 1 : 0))\n        }\n\n        let { nextSlide } = this.getSlideInRange(slideOnDragEnd)\n\n        // If drag is not allowed (`arrowNextDisabled` = true) and dragging beyond last slide,\n        // cancel sliding and snap back to last slide.\n        if (this.arrowNextDisabled && this.conf.autoplay && nextSlide === 0) {\n          nextSlide = this.slides.count - 1\n        }\n\n        // Only call `goToSlide` if the drag ends on a slide that is different than the currentSlide.\n        if (nextSlide !== this.slides.current) {\n          this.goToSlide(slideOnDragEnd)\n        } else {\n          // Apply transition to snap back to current slide.\n          this.currentTranslation = - (this.slides.current + (this.clones.length ? 1 : 0)) * 100\n        }\n\n        this.touch.dragStartX = null\n        this.touch.dragAmount = null\n        this.enableScroll()\n      }\n    },\n\n    getDragPercentage(e) {\n      let dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n\n      // For full window width slideshow only.\n      // let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      // return dragStartX / windowWidth\n\n      const vueperslidesWrapper = this.$refs.vueperslides\n      return (dragStartX - vueperslidesWrapper.offsetLeft) / vueperslidesWrapper.clientWidth\n    },\n\n    /**\n     * Return the x distance in pixel between drag start and current drag position.\n     */\n    getDragAmount(e) {\n      return ('ontouchstart' in window ? e.touches[0].clientX : e.clientX) - this.touch.dragStartX\n    },\n\n    disableScroll () {\n      document.ontouchmove = function(e) {\n        e.preventDefault()\n      }\n    },\n\n    enableScroll () {\n      document.ontouchmove = function() {\n        return true\n      }\n    },\n\n    clearTimer () {\n      clearTimeout(this.timer)\n      this.timer = 0\n    },\n\n    setTimer () {\n      this.timer = setTimeout(() => {\n        this.goToSlide(this.slides.current + 1, true, true)\n      }, this.conf.speed)\n    },\n\n    onArrowClick (next = true) {\n      this.goToSlide(this.slides.current + (next ? 1 : -1))\n    },\n\n    getSlideInRange (i) {\n      let clone = null\n\n      // If infinite enabled, going out of range takes the first slide from the other end.\n      if (this.clones.length) {\n        if (i < 0) {\n          i = this.slides.count - 1\n          clone = 0\n        }\n        else if (i > this.slides.count - 1) {\n          i = 0\n          clone = 1\n        }\n      }\n\n      // If not infinite, can't go lower than 0 or beyond `slides.count` with `disableArrowsOnEdges`.\n      // If `disableArrowsOnEdges` is enabled going out of range will take first slide from the other end\n      // of the slideshow.\n      else {\n        if (i < 0) i = this.conf.disableArrowsOnEdges ? 0 : this.slides.count - 1\n        else if (i > this.slides.count - 1) {\n          // If autoplay is on but disableArrowsOnEdges is enabled, going beyond the last one will also bring\n          // the first one in.\n          i = this.conf.disableArrowsOnEdges ? (this.conf.autoplay ? 0 : this.slides.count - 1) : 0\n        }\n      }\n\n      return { nextSlide: i, clone: clone }\n    },\n\n    goToSlide (i, animation = true, autoSliding = false) {\n      if (!this.slides.count || this.disable) return\n\n      if (this.conf.autoplay) this.clearTimer()\n\n      let { nextSlide, clone: nextSlideIsClone } = this.getSlideInRange(i)\n\n      // First use of `goToSlide` is while init, so should not propagate an event.\n      if (this.isReady) this.emit('before-slide', true, nextSlide)\n\n      // Disable arrows if `disableArrowsOnEdges` is on and there is no slide to go to on that end.\n      if (this.conf.arrows && this.conf.disableArrowsOnEdges) {\n        this.arrowPrevDisabled = nextSlide === 0\n        this.arrowNextDisabled = nextSlide === this.slides.count - 1\n      }\n\n      this.$refs.track.classList[animation ? 'remove' : 'add']('vueperslides__track--no-animation')\n\n      // Infinite sliding with cloned slides:\n      // When reaching last slide and going next the cloned slide of the first slide\n      // shows up, when the animation ends the real change to the first slide is done\n      // immediately with no animation.\n      // Same principle when going beyond first slide.\n      if (nextSlideIsClone !== null) {\n        setTimeout(() => {\n          this.goToSlide(nextSlideIsClone ? 0 : this.slides.count - 1, false, autoSliding)\n        }, 400)\n      }\n\n      this.slides.current = nextSlide\n\n      // Only apply sliding transition when the slideshow animation type is `slide`.\n      if (!this.conf.fade) {\n        if (nextSlideIsClone !== null) {\n          this.currentTranslation = - 100 * (nextSlideIsClone ? this.slides.count + 1 : 0)\n        }\n        else this.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0))\n      }\n\n      this.slides.activeUid = this.slides.list[this.slides.current]._uid\n\n      if (this.conf.autoplay && !this.mouseOver) {\n        this.setTimer()\n      }\n\n      if (this.slides.count) {\n        if (this.$slots.default[this.slides.current]) {\n          // First use of goToSlide is while init, so should not propagate an event.\n          if (this.isReady) this.emit('slide')\n        }\n\n        if (this.isReady && !autoSliding && this.$refs.bullet[this.slides.current]) {\n          this.$refs.bullet[this.slides.current].focus()\n        }\n      }\n    },\n\n    addSlide(newSlide) {\n      const needReclone = this.conf.infinite && !this.conf.fade && this.isReady && !newSlide.clone\n\n      if (newSlide.clone !== null) {\n        this.clones[newSlide.clone] = newSlide\n      }\n\n      else {\n        // Add the slide in the slides array & update slides.count.\n        this.slides.list.push(newSlide)\n        this.slides.count = this.slides.list.length\n      }\n\n      if (this.slides.count > 1 && this.touchable) {\n        this.touch.enabled = true\n      }\n\n      if (needReclone) {\n        this.$nextTick(() => this.cloneSlides())\n      }\n    },\n\n    removeSlide(uid) {\n      // let needReclone = this.infinite && !this.fade && this.isReady\n      let needReclone = false\n\n      this.slides.list.some((slide, i) => {\n        if (slide._uid === uid) {\n          // Remove the slide.\n          this.slides.list.splice(i, 1)\n          this.slides.count = this.slides.list.length\n\n          // If the slide to remove is the current slide, slide to the previous slide.\n          if (uid === this.slides.activeUid) {\n            this.slides.activeUid = null\n            this.goToSlide(i - 1, true, true)\n          }\n\n          if (this.slides.count <= 1) {\n            this.touch.enabled = false\n          }\n\n          if (this.clones.length && this.isReady && !slide.clone) needReclone = true\n\n          return true // Break the `Array.some` loop.\n        }\n      })\n\n      if (this.slides.count && needReclone) {\n        this.cloneSlides()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.vueperslides {\n  position: relative;\n\n  &__inner {\n    position: relative;\n    padding-bottom: 33.33%;\n  }\n\n  &__track-wrapper {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    overflow: hidden;\n    z-index: 1;\n\n    &::before,\n    &::after {\n      content: \"\";\n      position: absolute;\n      bottom: 100%;\n      left: -1em;\n      right: -1em;\n      height: 2em;\n      box-shadow: 0 0 20px rgba(#000, 0.25);\n      z-index: 2;\n    }\n\n    &::after {\n      top: 100%;\n      bottom: auto;\n    }\n  }\n\n  &--fade &__track {\n    white-space: normal;\n    transition: none;\n  }\n\n  &--touchable &__track {\n    cursor: ew-resize;\n    cursor: -webkit-grab;\n    cursor: grab;\n\n    &--mousedown, &--dragging {\n      cursor: -webkit-grabbing;\n      cursor: grabbing;\n    }\n  }\n\n  &__track {\n    white-space: nowrap;\n    transition: 0.5s ease-in-out transform;\n    height: 100%;\n\n    &--mousedown {\n      transition: 0.2s ease-in-out transform;\n    }\n\n    &--dragging {\n      transition: none;\n    }\n\n    &--no-animation {\n      transition-duration: 0s;\n    }\n  }\n\n  &__slide {\n    white-space: normal;\n    background-position: top;\n    background-size: cover;\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n  }\n\n  &__slide-content {\n    user-select: none;\n\n    &--outside {\n      user-select: initial;\n    }\n  }\n\n  &--fade &__slide {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    transition: .8s ease-in-out opacity;\n\n    &--active {\n      z-index: 1;\n      opacity: 1;\n    }\n  }\n\n  &__arrow {\n    position: absolute;\n    top: 50%;\n    background-color: transparent;\n    border: none;\n    color: #fff;\n    fill: currentColor;\n    font-size: 3em;\n    width: 1em;\n    text-align: center;\n    transform: translateY(-50%);\n    opacity: 0.7;\n    transition: 0.3s ease-in-out;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n\n    &--prev {\n      left: 10px;\n    }\n\n    &--next {\n      right: 10px;\n    }\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  &__paused {\n    position: absolute;\n    top: 3%;\n    right: 3%;\n    opacity: 0;\n    transition: 0.3s ease-in-out;\n    text-shadow: 0 0 3px rgba(#000, .4);\n    z-index: 1;\n  }\n\n  &:hover &__paused {\n    opacity: 1;\n  }\n\n  &__bullets {\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    &--outside {\n      position: relative;\n    }\n  }\n\n  &__bullet {\n    width: 12px;\n    height: 12px;\n    border-radius: 12px;\n    border: 1px solid #fff;\n    background-color: transparent;\n    box-shadow: 0 0 1px rgba(#000, 0.5), 0 0 3px rgba(#000, 0.3);\n    margin: 1.5em 0.6em;\n    padding: 0;\n    display: inline-block;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &--active {\n      background-color: #fff;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n    }\n\n    span {\n      display: none;\n    }\n  }\n}\n</style>\n","import VueperSlides from './components/VueperSlides.vue'\nimport VueperSlide from './components/VueperSlide.vue'\n\n// Expose component to global scope.\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.component('vueper-slides', VueperSlides)\n  window.Vue.component('vueper-slide', VueperSlide)\n}\n\nexport { VueperSlides, VueperSlide }\n"],"names":["render","Number","String","$parent","addSlide","this","_uid","image","title","content","clone","removeSlide","backgroundImage","VueperSlide","Boolean","Object","list","count","activeUid","current","clones","enabled","dragging","dragStartX","dragAmount","goNext","conf","$props","breakpoints","init","emit","slides","length","keys","setBreakpointsList","setBreakpointConfig","getCurrentBreakpoint","touch","touchable","infinite","fade","cloneSlides","goToSlide","initSlide","bindEvents","isReady","name","includeCurrentSlide","includeNextSlide","args","currentSlide","nextSlide","getSlideInRange","$emit","breakpointsData","sort","a","b","parseInt","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","indexOf","breakpoint","firstNodeIsVnode","$slots","default","tag","firstSlide","elm","lastSlide","attributes","style","value","hasTouch","$refs","track","addEventListener","onMouseDown","onMouseMove","onMouseUp","pauseOnHover","autoplay","vueperslides","onMouseIn","onMouseOut","onResize","hasBreakpointChanged","mouseOver","clearTimer","setTimer","e","disable","touches","preventDefault","mouseDown","draggingDistance","clientX","dragPercentage","getDragPercentage","currentTranslation","getDragAmount","dragAmountPercentage","slideOnDragEnd","Math","abs","round","arrowNextDisabled","enableScroll","vueperslidesWrapper","offsetLeft","ontouchmove","timer","setTimeout","_this","speed","next","i","disableArrowsOnEdges","animation","autoSliding","nextSlideIsClone","arrows","arrowPrevDisabled","classList","_this2","bullet","focus","newSlide","needReclone","push","$nextTick","_this3","uid","some","slide","splice","_this4","Vue","component","VueperSlides"],"mappings":"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"}