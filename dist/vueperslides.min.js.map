{"version":3,"file":"vueperslides.min.js","sources":["../src/components/VueperSlide.vue","../src/components/VueperSlides.vue","../src/index.js"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"{ 'vueperslides__slide': true, 'vueperslides__slide--active': $parent.slides.activeUid === _uid }\" :style=\"styles\")\n  div.vueperslides__slide-content(v-show=\"!$parent.conf.slideContentOutside && (title || hasTitleSlotData || content || hasContentSlotData)\")\n    div.slide-title(v-if=\"title || hasTitleSlotData\")\n      slot(name=\"slideTitle\")\n      div(v-if=\"title\" v-html=\"title\")\n    div.slide-content(v-if=\"content || hasContentSlotData\")\n      slot(name=\"slideContent\")\n      div(v-if=\"content\" v-html=\"content\")\n</template>\n\n<script>\nexport default {\n  props: {\n    clone: {\n      type: Number,\n      default: null\n    },\n    image: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    content: {\n      type: String,\n      default: ''\n    }\n  },\n  mounted () {\n    if (this.hasTitleSlotData) this.$parent.updateSlideContent(this._uid, 'titleSlot', this.titleSlot)\n    if (this.hasContentSlotData) this.$parent.updateSlideContent(this._uid, 'contentSlot', this.contentSlot)\n  },\n  created () {\n    this.$parent.addSlide({\n      _uid: this._uid,\n      image: this.image,\n      title: this.title,\n      content: this.content,\n      clone: this.clone\n    })\n  },\n  // When removing a slide programmatically, remove it from the config so vueperslides\n  // component is aware of the change.\n  destroyed () {\n    if (this.clone === null) this.$parent.removeSlide(this._uid)\n  },\n  computed: {\n    styles () {\n      return { ...(this.image && { backgroundImage: `url(${this.image})` }) }\n    },\n  \thasTitleSlotData () {\n      return this.$slots.slideTitle\n    },\n  \thasContentSlotData () {\n      return this.$slots.slideContent\n    },\n  \ttitleSlot () {\n      return this.hasTitleSlotData ? this.$slots.slideTitle[0].elm.innerHTML : ''\n    },\n  \tcontentSlot () {\n      return this.hasContentSlotData ? this.$slots.slideContent[0].elm.innerHTML : ''\n    }\n  }\n}\n</script>\n","<template lang=\"pug\">\ndiv.vueperslides(:class=\"{'vueperslides--ready': isReady, 'vueperslides--fade': conf.fade, 'vueperslides--parallax': conf.parallax, 'vueperslides--touchable': touch.enabled && !disable }\" ref=\"vueperslides\")\n  div.vueperslides__slide-content.vueperslides__slide-content--outside(:class=\"conf.slideContentOutsideClass\" v-if=\"conf.slideContentOutside\")\n    div.slide-title(v-if=\"slides.count && slides.list[slides.current].title\" v-html=\"slides.list[slides.current].title\")\n    div.slide-title(v-if=\"slides.count && slides.list[slides.current].titleSlot\" v-html=\"slides.list[slides.current].titleSlot\")\n    div.slide-content(v-if=\"slides.count && slides.list[slides.current].content\" v-html=\"slides.list[slides.current].content\")\n    div.slide-content(v-if=\"slides.count && slides.list[slides.current].contentSlot\" v-html=\"slides.list[slides.current].contentSlot\")\n\n  div.vueperslides__inner\n    div.vueperslides__parallax-wrapper(:style=\"'padding-bottom:' + (conf.slideRatio * 100) + '%'\")\n      div.vueperslides__track-wrapper(:style=\"trackWrapperStyles\")\n        div.vueperslides__track(:class=\"{'vueperslides__track--dragging': touch.dragging, 'vueperslides__track--mousedown': mouseDown}\" ref=\"track\" :style=\"!conf.fade ? 'transform: translateX(' + currentTranslation + '%)' : ''\")\n          vueper-slide.vueperslides__slide--clone(v-if=\"slides.count && clones[0]\" :clone=\"0\" :title=\"clones[0].title\" :content=\"clones[0].content\" :image=\"clones[0].image\" :style=\"clones[0].style\")\n            div(v-if=\"clones[0].titleSlot\" slot=\"slideTitle\" v-html=\"clones[0].titleSlot\")\n            div(v-if=\"clones[0].contentSlot\" slot=\"slideContent\" v-html=\"clones[0].contentSlot\")\n          slot(:currentSlide=\"slides.current\")\n          vueper-slide.vueperslides__slide--clone(v-if=\"slides.count && clones[1]\" :clone=\"1\" :title=\"clones[1].title\" :content=\"clones[1].content\" :image=\"clones[1].image\" :style=\"clones[1].style\")\n            div(v-if=\"clones[1].titleSlot\" slot=\"slideTitle\" v-html=\"clones[1].titleSlot\")\n            div(v-if=\"clones[1].contentSlot\" slot=\"slideContent\" v-html=\"clones[1].contentSlot\")\n\n    div.vueperslides__paused(v-if=\"$slots.pausedIcon\")\n      slot(name=\"pausedIcon\")\n    div.vueperslides__arrows(:class=\"{ 'vueperslides__arrows--outside': conf.arrowsOutside }\" v-if=\"conf.arrows && slides.count > 1 && !disable\")\n      button.vueperslides__arrow.vueperslides__arrow--prev(@click=\"onArrowClick(false)\" v-show=\"!arrowPrevDisabled\")\n        slot(name=\"arrowLeft\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M16.2,21c0.3,0,0.5-0.1,0.7-0.3c0.4-0.4,0.4-1,0-1.4L9.6,12L17,4.7c0.4-0.4,0.4-1,0-1.4c-0.4-0.4-1-0.4-1.4,0L6.8,12l8.8,8.7C15.7,20.9,16,21,16.2,21z\")\n      button.vueperslides__arrow.vueperslides__arrow--next(@click=\"onArrowClick()\" v-show=\"!arrowNextDisabled\")\n        slot(name=\"arrowRight\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M7.8,21c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l7.4-7.3L7,4.7c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l8.8,8.7l-8.8,8.7C8.3,20.9,8,21,7.8,21z\")\n  div.vueperslides__bullets(:class=\"{ 'vueperslides__bullets--outside': conf.bulletsOutside }\" v-if=\"conf.bullets && slides.count > 1 && !disable\")\n    button.vueperslides__bullet(:class=\"{ 'vueperslides__bullet--active': slides.current === i }\" v-for=\"(item, i) in slides.list\" :key=\"i\" @click=\"goToSlide(i)\" @keyup.left=\"onArrowClick(false)\" @keyup.right=\"onArrowClick()\" ref=\"bullet\")\n      span {{ i + 1 }}\n</template>\n\n<script>\nimport VueperSlide from './VueperSlide.vue'\n\nexport default {\n  name: 'vueper-slides',\n  components: { VueperSlide },\n  props: {\n    initSlide: {\n      type: Number,\n      default: 1\n    },\n    slideRatio: {\n      type: Number,\n      default: 1/3\n    },\n    arrows: {\n      type: Boolean,\n      default: true\n    },\n    arrowsOutside: {\n      type: Boolean,\n      default: false\n    },\n    // Ability to disable arrows on slideshow edges. Only if not infinite mode.\n    disableArrowsOnEdges: {\n      type: [Boolean, String],\n      default: false\n    },\n    bullets: {\n      type: Boolean,\n      default: true\n    },\n    bulletsOutside: {\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    slideContentOutside: {\n      type: Boolean,\n      default: false\n    },\n    slideContentOutsideClass: {\n      type: String,\n      default: ''\n    },\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    speed: {\n      type: [Number, String],\n      default: 4000\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true\n    },\n    infinite: {\n      type: Boolean,\n      default: true\n    },\n    parallax: {\n      type: [Boolean, Number],\n      default: false\n    },\n    touchable: {\n      type: Boolean,\n      default: true\n    },\n    // By default when touch is enabled you have to drag from a slide side and pass 50% of slideshow width to change\n    // slide. This setting changes this behavior to a horizontal pixel amount from anywhere on slideshow.\n    draggingDistance: {\n      type: Number,\n      default: null\n    },\n    disable: {\n      type: Boolean,\n      default: false\n    },\n    breakpoints: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data: () => ({\n    isReady: false,\n    container: null,\n    slides: { list: [], count: 0, activeUid: null, current: 0, clones: [] },\n    clones: [],\n    mouseDown: false,\n    mouseOver: false,\n    touch: { enabled: true, dragging: false, dragStartX: 0, dragAmount: 0, goNext: true },\n    currentTranslation: 0,\n    timer: null,\n    arrowPrevDisabled: false,\n    arrowNextDisabled: false,\n    breakpointsData: { list: [], current: null },\n    parallaxData: { translation: 0, slideshowOffsetTop: null, isVisible: false },\n  }),\n  mounted () {\n    this.init()\n  },\n  methods: {\n    init () {\n      this.emit('before-init', false)\n      this.container = this.$refs.vueperslides\n      this.touch.enabled = this.conf.touchable\n\n      if (Object.keys(this.breakpoints).length) {\n        this.setBreakpointsList()\n        this.setBreakpointConfig(this.getCurrentBreakpoint())\n      }\n\n      if (this.conf.infinite && !this.conf.fade) {\n        this.cloneSlides()\n        this.$nextTick(() => this.cloneSlides())\n      }\n\n      this.goToSlide(this.conf.initSlide - 1)\n      this.bindEvents()\n\n      this.isReady = true\n      this.emit('ready')\n    },\n\n    // Emit a named event outside the component with 2 possible parameters:\n    // current slide info & next slide info.\n    emit(name, includeCurrentSlide = true, includeNextSlide = false) {\n      let args = [name]\n\n      if (includeCurrentSlide || typeof includeNextSlide === 'number') {\n        args[1] = {}\n        if (includeCurrentSlide && this.slides.activeUid) {\n          args[1].currentSlide = {\n            index: this.slides.current,\n            title: this.slides.list[this.slides.current].titleSlot ?\n                   this.slides.list[this.slides.current].titleSlot\n                   : this.slides.list[this.slides.current].title,\n            content: this.slides.list[this.slides.current].contentSlot ?\n                     this.slides.list[this.slides.current].contentSlot\n                     : this.slides.list[this.slides.current].content,\n          }\n        }\n        if (typeof includeNextSlide === 'number') {\n          let { nextSlide } = this.getSlideInRange(includeNextSlide)\n          args[1].nextSlide = {\n            index: nextSlide,\n            title: this.slides.list[nextSlide].titleSlot ?\n                   this.slides.list[nextSlide].titleSlot\n                   : this.slides.list[nextSlide].title,\n            content: this.slides.list[nextSlide].contentSlot ?\n                     this.slides.list[nextSlide].contentSlot\n                     : this.slides.list[nextSlide].content,\n          }\n        }\n      }\n\n      this.$emit(name, ...args)\n    },\n\n    setBreakpointsList () {\n      this.breakpointsData.list = [99999, ...Object.keys(this.breakpoints)].sort((a, b) => parseInt(a) < parseInt(b))\n    },\n\n    getCurrentBreakpoint () {\n      let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      let breakpoints = [windowWidth, ...this.breakpointsData.list].sort((a, b) => parseInt(a) < parseInt(b))\n\n      return this.breakpointsData.list[breakpoints.indexOf(windowWidth) - 1]\n    },\n\n    hasBreakpointChanged (breakpoint) {\n      return this.breakpointsData.current !== breakpoint\n    },\n\n    setBreakpointConfig (breakpoint) {\n      this.breakpointsData.current = breakpoint\n      // this.conf gets updated by itself when this.breakpointsData.current changes.\n    },\n\n    cloneSlides () {\n      let firstNodeIsVnode = this.$slots.default[0].tag\n      let firstSlide = this.$slots.default[firstNodeIsVnode ? 0 : 1].elm\n      let lastSlide = this.$slots.default[this.$slots.default.length - 1].elm\n\n      this.clones[0] = {\n        title: this.slides.list[this.slides.count - 1].title,\n        titleSlot: this.slides.list[this.slides.count - 1].titleSlot || '',\n        content: this.slides.list[this.slides.count - 1].content,\n        contentSlot: this.slides.list[this.slides.count - 1].contentSlot || '',\n        image: this.slides.list[this.slides.count - 1].image,\n        style: lastSlide && lastSlide.attributes.style ? lastSlide.attributes.style.value : ''\n      }\n      this.clones[1] = {\n        title: this.slides.list[0].title,\n        titleSlot: this.slides.list[0].titleSlot || '',\n        content: this.slides.list[0].content,\n        contentSlot: this.slides.list[0].contentSlot || '',\n        image: this.slides.list[0].image,\n        style: firstSlide && firstSlide.attributes.style ? firstSlide.attributes.style.value : ''\n      }\n    },\n\n    updateSlideContent (slideUID, key, value) {\n      this.slides.list.some(slide => {\n        if (slide._uid === slideUID) {\n          slide[key] = value\n        }\n\n        return slide._uid === slideUID\n      })\n    },\n\n    bindEvents () {\n      const hasTouch = 'ontouchstart' in window\n\n      // Touch enabled slideshow.\n      if (this.touch.enabled) {\n        this.$refs.track.addEventListener(hasTouch ? 'touchstart' : 'mousedown', this.onMouseDown)\n        document.addEventListener(hasTouch ? 'touchmove' : 'mousemove', this.onMouseMove)\n        document.addEventListener(hasTouch ? 'touchend' : 'mouseup', this.onMouseUp)\n      }\n\n      // Pause autoplay on mouseover.\n      if (this.conf.pauseOnHover && !hasTouch && this.conf.autoplay) {\n        this.container.addEventListener('mouseover', this.onMouseIn)\n        this.container.addEventListener('mouseout', this.onMouseOut)\n      }\n\n      // Breakpoints or parallax need a resize event.\n      if (this.breakpointsData.list.length || this.conf.parallax) {\n        window.addEventListener('resize', this.onResize)\n      }\n\n      // Parallax slideshow.\n      if (this.conf.parallax) {\n        document.addEventListener('scroll', this.onScroll)\n      }\n    },\n\n    // Recursively sum all the offsetTop values from current element up the tree until body.\n    // By doing so a padding or margin on a parent won't cause a wrong calculation.\n    getSlideshowOffsetTop (force = false) {\n      if (this.parallaxData.slideshowOffsetTop === null || force) {\n        let el = this.container\n        let top = el.offsetTop\n\n        while (el = el.offsetParent) {\n          top += el.offsetTop\n        }\n\n        this.parallaxData.slideshowOffsetTop = top\n      }\n\n      return this.parallaxData.slideshowOffsetTop\n    },\n\n    onScroll (e) {\n      let doc = document.documentElement\n      let scrollTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n      let windowHeight = window.innerHeight || doc.clientHeight || document.body.clientHeight\n      let slideshowHeight = this.container.clientHeight\n      let slideshowTopOffset = this.getSlideshowOffsetTop()\n\n      // The distance between the bottom line of the current vueperslides slideshow and top of window.\n      // Negative value means the slideshow is totally above the current window box.\n      let vsBottom2WinTop = slideshowTopOffset + slideshowHeight - scrollTop\n      // The distance between the top line of the current vueperslides slideshow and bottom of window.\n      // Negative value means the slideshow is totally bellow the current window box.\n      let vsTop2winBottom = windowHeight + scrollTop - slideshowTopOffset\n\n      this.parallaxData.isVisible = vsBottom2WinTop > 0 && vsTop2winBottom > 0\n\n      // Only apply translation when slideshow is visible.\n      if (this.parallaxData.isVisible) {\n        let heightToCoverWithTranslation = windowHeight + slideshowHeight\n        let percentage = vsBottom2WinTop * 100 / heightToCoverWithTranslation\n        let translatePercentage = this.conf.parallax === -1 ? 100 - percentage : percentage\n        this.parallaxData.translation = - translatePercentage / 2\n      }\n    },\n\n    onResize () {\n      if (this.breakpointsData.list.length) {\n        let breakpoint = this.getCurrentBreakpoint()\n        if (this.hasBreakpointChanged(breakpoint)) {\n          this.setBreakpointConfig(breakpoint)\n        }\n      }\n\n      if (this.conf.parallax) {\n        // Only refresh parallaxData.slideshowOffsetTop value on resize for better performance.\n        this.getSlideshowOffsetTop(true)\n      }\n    },\n\n    onMouseIn () {\n      this.mouseOver = true\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.clearTimer()\n      }\n    },\n\n    onMouseOut () {\n      this.mouseOver = false\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.setTimer()\n      }\n    },\n\n    onMouseDown (e) {\n      if (!this.touch.enabled || this.disable) return\n      if (!e.touches) e.preventDefault()\n\n      // this.disableScroll()\n\n      this.mouseDown = true\n\n      if (this.draggingDistance) {\n        // Store drag start in var for distance calculation in onMouseUp().\n        this.touch.dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n      } else {\n        let dragPercentage = this.getDragPercentage(e)\n\n        // Set a flag for use while dragging in `onMouseMove` to know if drag was toward left or right.\n        this.touch.goNext = dragPercentage >= 0.5\n\n        this.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n      }\n    },\n\n    onMouseMove (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = true\n\n        if (this.draggingDistance) {\n          this.touch.dragAmount = this.getDragAmount(e)\n          let dragAmountPercentage = this.touch.dragAmount / this.container.clientWidth\n\n          this.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0) - dragAmountPercentage)\n        } else {\n          let dragPercentage = this.getDragPercentage(e)\n          this.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n        }\n      }\n    },\n\n    onMouseUp (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = false\n\n        let slideOnDragEnd\n        if (this.draggingDistance) {\n          let dragAmount = this.touch.dragAmount\n          let dragAmountPercentage = dragAmount / this.container.clientWidth\n\n          slideOnDragEnd = this.slides.current\n          if (Math.abs(dragAmount) >= this.draggingDistance) {\n            slideOnDragEnd += dragAmount > 0 ? -1 : 1\n          }\n        } else {\n          // When the drag is realeased, calculate if the drag ends before or after the 50%-slideshow-width threshold.\n          // Then finish the sliding toward that slide.\n          slideOnDragEnd = - (Math.round(this.currentTranslation / 100) + (this.clones.length ? 1 : 0))\n        }\n\n        let { nextSlide } = this.getSlideInRange(slideOnDragEnd)\n\n        // If drag is not allowed (`arrowNextDisabled` = true) and dragging beyond last slide,\n        // cancel sliding and snap back to last slide.\n        if (this.arrowNextDisabled && this.conf.autoplay && nextSlide === 0) {\n          nextSlide = this.slides.count - 1\n        }\n\n        // Only call `goToSlide` if the drag ends on a slide that is different than the currentSlide.\n        if (nextSlide !== this.slides.current) {\n          this.goToSlide(slideOnDragEnd)\n        } else {\n          // Apply transition to snap back to current slide.\n          this.currentTranslation = - (this.slides.current + (this.clones.length ? 1 : 0)) * 100\n        }\n\n        this.touch.dragStartX = null\n        this.touch.dragAmount = null\n        this.enableScroll()\n      }\n    },\n\n    getDragPercentage (e) {\n      let dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n\n      // For full window width slideshow only.\n      // let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      // return dragStartX / windowWidth\n\n      return (dragStartX - this.container.offsetLeft) / this.container.clientWidth\n    },\n\n    /**\n     * Return the x distance in pixel between drag start and current drag position.\n     */\n    getDragAmount (e) {\n      return ('ontouchstart' in window ? e.touches[0].clientX : e.clientX) - this.touch.dragStartX\n    },\n\n    disableScroll () {\n      document.ontouchmove = function(e) {\n        e.preventDefault()\n      }\n    },\n\n    enableScroll () {\n      document.ontouchmove = function() {\n        return true\n      }\n    },\n\n    clearTimer () {\n      clearTimeout(this.timer)\n      this.timer = 0\n    },\n\n    setTimer () {\n      this.timer = setTimeout(() => {\n        this.goToSlide(this.slides.current + 1, true, true)\n      }, this.conf.speed)\n    },\n\n    onArrowClick (next = true) {\n      this.goToSlide(this.slides.current + (next ? 1 : -1))\n    },\n\n    getSlideInRange (i) {\n      let clone = null\n\n      // If infinite enabled, going out of range takes the first slide from the other end.\n      if (this.clones.length) {\n        if (i < 0) {\n          i = this.slides.count - 1\n          clone = 0\n        }\n        else if (i > this.slides.count - 1) {\n          i = 0\n          clone = 1\n        }\n      }\n\n      // If not infinite, can't go lower than 0 or beyond `slides.count` with `disableArrowsOnEdges`.\n      // If `disableArrowsOnEdges` is enabled going out of range will take first slide from the other end\n      // of the slideshow.\n      else {\n        if (i < 0) i = this.conf.disableArrowsOnEdges ? 0 : this.slides.count - 1\n        else if (i > this.slides.count - 1) {\n          // If autoplay is on but disableArrowsOnEdges is enabled, going beyond the last one will also bring\n          // the first one in.\n          i = this.conf.disableArrowsOnEdges ? (this.conf.autoplay ? 0 : this.slides.count - 1) : 0\n        }\n      }\n\n      return { nextSlide: i, clone: clone }\n    },\n\n    goToSlide (i, animation = true, autoSliding = false) {\n      if (!this.slides.count || this.disable) return\n\n      if (this.conf.autoplay) this.clearTimer()\n\n      let { nextSlide, clone: nextSlideIsClone } = this.getSlideInRange(i)\n\n      // First use of `goToSlide` is while init, so should not propagate an event.\n      if (this.isReady) this.emit('before-slide', true, nextSlide)\n\n      // Disable arrows if `disableArrowsOnEdges` is on and there is no slide to go to on that end.\n      if (this.conf.arrows && this.conf.disableArrowsOnEdges) {\n        this.arrowPrevDisabled = nextSlide === 0\n        this.arrowNextDisabled = nextSlide === this.slides.count - 1\n      }\n\n      this.$refs.track.classList[animation ? 'remove' : 'add']('vueperslides__track--no-animation')\n\n      // Infinite sliding with cloned slides:\n      // When reaching last slide and going next the cloned slide of the first slide\n      // shows up, when the animation ends the real change to the first slide is done\n      // immediately with no animation.\n      // Same principle when going beyond first slide.\n      if (nextSlideIsClone !== null) {\n        setTimeout(() => {\n          this.goToSlide(nextSlideIsClone ? 0 : this.slides.count - 1, false, autoSliding)\n        }, 400)\n      }\n\n      this.slides.current = nextSlide\n\n      // Only apply sliding transition when the slideshow animation type is `slide`.\n      if (!this.conf.fade) {\n        if (nextSlideIsClone !== null) {\n          this.currentTranslation = - 100 * (nextSlideIsClone ? this.slides.count + 1 : 0)\n        }\n        else this.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0))\n      }\n\n      this.slides.activeUid = this.slides.list[this.slides.current]._uid\n\n      if (this.conf.autoplay && !this.mouseOver) {\n        this.setTimer()\n      }\n\n      if (this.slides.count) {\n        if (this.$slots.default[this.slides.current]) {\n          // First use of goToSlide is while init, so should not propagate an event.\n          if (this.isReady) this.emit('slide')\n        }\n\n        if (this.isReady && !autoSliding && this.$refs.bullet[this.slides.current]) {\n          this.$refs.bullet[this.slides.current].focus()\n        }\n      }\n    },\n\n    addSlide (newSlide) {\n      const needReclone = this.conf.infinite && !this.conf.fade && this.isReady && newSlide.clone === null\n\n      if (newSlide.clone !== null) {\n        this.clones[newSlide.clone] = newSlide\n      }\n\n      else {\n        // Add the slide in the slides array & update slides.count.\n        this.slides.list.push(newSlide)\n        this.slides.count = this.slides.list.length\n      }\n\n      if (this.slides.count > 1 && this.touchable) {\n        this.touch.enabled = true\n      }\n\n      // cloneSlides() is called at the end of init so calling it before would be redundant.\n      if (needReclone) {\n        this.$nextTick(() => this.cloneSlides())\n      }\n    },\n\n    removeSlide (uid) {\n      let needReclone = false\n\n      this.slides.list.some((slide, i) => {\n        if (slide._uid === uid) {\n          // Remove the slide.\n          this.slides.list.splice(i, 1)\n          this.slides.count = this.slides.list.length\n\n          // If the slide to remove is the current slide, slide to the previous slide.\n          if (uid === this.slides.activeUid) {\n            this.slides.activeUid = null\n            this.goToSlide(i - 1, true, true)\n          }\n\n          if (this.slides.count <= 1) {\n            this.touch.enabled = false\n          }\n\n          if (this.clones.length && this.isReady && !slide.clone) needReclone = true\n\n          return true // Break the `Array.some` loop.\n        }\n      })\n\n      if (this.slides.count && needReclone) {\n        this.cloneSlides()\n      }\n    }\n  },\n\n  computed: {\n    // this.conf needs to be reactive so user can change a Vueper Slides option and everything gets updated.\n    conf () {\n      // Read config from the props then check if breakpoints are defined. If so override the config with\n      // the breakpoint ones.\n      return {\n        ...this.$props,\n        ...(this.$props.breakpoints && this.$props.breakpoints[this.breakpointsData.current] || {})\n      }\n    },\n    trackWrapperStyles () {\n      let styles = {}\n\n      if (this.conf.parallax) {\n        styles.transform = 'translateY(' + this.parallaxData.translation + '%)'\n\n        // Increase browser optimizations by allocating more machine resource.\n        //!\\ To be used wisely so deactivate when not needed.\n        styles.willChange = this.parallaxData.isVisible ? 'transform' : 'auto'\n      }\n\n      return styles\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.vueperslides {\n  position: relative;\n\n  &__inner {\n    position: relative;\n    user-select: none;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n  }\n\n  &__parallax-wrapper {\n    position: relative;\n    padding-bottom: 33.33%;\n    overflow: hidden;\n\n    &::before,\n    &::after {\n      content: \"\";\n      position: absolute;\n      bottom: 100%;\n      left: -1em;\n      right: -1em;\n      height: 2em;\n      box-shadow: 0 0 20px rgba(#000, 0.25);\n      z-index: 2;\n    }\n\n    &::after {\n      top: 100%;\n      bottom: auto;\n    }\n  }\n\n  &__track-wrapper {\n    position: absolute;\n    top: 0;\n    height: 100%;\n    left: 0;\n    right: 0;\n    overflow: hidden;\n    z-index: 1;\n  }\n\n  &--parallax &__track-wrapper {\n    height: 200%;\n    transform: translateY(0);\n  }\n\n  &--fade &__track {\n    white-space: normal;\n    transition: none;\n  }\n\n  &--touchable &__track {\n    cursor: ew-resize;\n    cursor: -webkit-grab;\n    cursor: grab;\n\n    &--mousedown, &--dragging {\n      cursor: -webkit-grabbing;\n      cursor: grabbing;\n    }\n  }\n\n  &__track {\n    white-space: nowrap;\n    transition: 0.5s ease-in-out transform;\n    height: 100%;\n\n    &--mousedown {\n      transition: 0.2s ease-in-out transform;\n    }\n\n    &--dragging {\n      transition: none;\n    }\n\n    &--no-animation {\n      transition-duration: 0s;\n    }\n  }\n\n  &__slide {\n    white-space: normal;\n    background-position: top;\n    background-size: cover;\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n  }\n\n  &--fade &__slide {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    transition: .8s ease-in-out opacity;\n\n    &--active {\n      z-index: 1;\n      opacity: 1;\n    }\n  }\n\n  &__arrows {\n    color: #fff;\n\n    &--outside {\n      color: #000;\n    }\n  }\n\n  &__arrow {\n    position: absolute;\n    top: 50%;\n    background-color: transparent;\n    border: none;\n    fill: currentColor;\n    font-size: 3em;\n    width: 1em;\n    text-align: center;\n    transform: translateY(-50%);\n    opacity: 0.7;\n    transition: 0.3s ease-in-out;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n\n    &--prev {\n      left: 10px;\n    }\n\n    &--next {\n      right: 10px;\n    }\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  &__arrows--outside &__arrow--prev {\n    left: -40px;\n  }\n\n  &__arrows--outside &__arrow--next {\n    right: -40px;\n  }\n\n  &__paused {\n    position: absolute;\n    top: 3%;\n    right: 3%;\n    opacity: 0;\n    transition: 0.3s ease-in-out;\n    text-shadow: 0 0 3px rgba(#000, .4);\n    z-index: 1;\n  }\n\n  &:hover &__paused {\n    opacity: 1;\n  }\n\n  &__bullets {\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    &--outside {\n      position: relative;\n    }\n  }\n\n  &__bullet {\n    width: 12px;\n    height: 12px;\n    border-radius: 12px;\n    border: 1px solid #fff;\n    background-color: transparent;\n    box-shadow: 0 0 1px rgba(#000, 0.5), 0 0 3px rgba(#000, 0.3);\n    margin: 1.5em 0.6em;\n    padding: 0;\n    display: inline-block;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &--active {\n      background-color: #fff;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n    }\n\n    span {\n      display: none;\n    }\n  }\n}\n</style>\n","import VueperSlides from './components/VueperSlides.vue'\nimport VueperSlide from './components/VueperSlide.vue'\n\n// Expose component to global scope.\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.component('vueper-slides', VueperSlides)\n  window.Vue.component('vueper-slide', VueperSlide)\n}\n\nexport { VueperSlides, VueperSlide }\n"],"names":["render","Number","String","this","hasTitleSlotData","$parent","updateSlideContent","_uid","titleSlot","hasContentSlotData","contentSlot","addSlide","image","title","content","clone","removeSlide","backgroundImage","$slots","slideTitle","slideContent","elm","innerHTML","VueperSlide","Boolean","Object","list","count","activeUid","current","clones","enabled","dragging","dragStartX","dragAmount","goNext","translation","slideshowOffsetTop","isVisible","init","emit","container","$refs","vueperslides","touch","conf","touchable","keys","breakpoints","length","setBreakpointsList","setBreakpointConfig","getCurrentBreakpoint","infinite","fade","cloneSlides","$nextTick","_this","goToSlide","initSlide","bindEvents","isReady","name","includeCurrentSlide","includeNextSlide","args","slides","currentSlide","nextSlide","getSlideInRange","$emit","breakpointsData","sort","a","b","parseInt","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","indexOf","breakpoint","firstNodeIsVnode","default","tag","firstSlide","lastSlide","attributes","style","value","slideUID","key","some","slide","hasTouch","track","addEventListener","onMouseDown","onMouseMove","onMouseUp","pauseOnHover","autoplay","onMouseIn","onMouseOut","parallax","onResize","onScroll","force","parallaxData","el","top","offsetTop","offsetParent","e","doc","scrollTop","pageYOffset","clientTop","windowHeight","innerHeight","clientHeight","slideshowHeight","slideshowTopOffset","getSlideshowOffsetTop","vsBottom2WinTop","vsTop2winBottom","percentage","translatePercentage","hasBreakpointChanged","mouseOver","clearTimer","setTimer","disable","touches","preventDefault","mouseDown","draggingDistance","clientX","dragPercentage","getDragPercentage","currentTranslation","getDragAmount","dragAmountPercentage","slideOnDragEnd","Math","abs","round","arrowNextDisabled","enableScroll","offsetLeft","ontouchmove","timer","setTimeout","_this2","speed","next","i","disableArrowsOnEdges","animation","autoSliding","nextSlideIsClone","arrows","arrowPrevDisabled","classList","_this3","bullet","focus","newSlide","needReclone","push","_this4","uid","splice","_this5","$props","styles","transform","willChange","Vue","component","VueperSlides"],"mappings":"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"}