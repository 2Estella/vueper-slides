{"version":3,"file":"vueperslides.js","sources":["../src/components/VueperSlide.vue","../src/components/VueperSlides.vue","../src/index.js"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"{ 'vueperslide': true, 'vueperslide--active': $parent.slides.activeUid === _uid }\" :style=\"wrapperStyles\" :aria-hidden=\"$parent.slides.activeUid === _uid ? 'false' : 'true'\")\n  div.vueperslide__image(v-if=\"image && $parent.conf.slideImageInside\" :style=\"imageStyles\")\n  div.vueperslide__content-wrapper(v-show=\"!$parent.conf.slideContentOutside && (title || hasTitleSlotData || content || hasContentSlotData)\")\n    div.vueperslide__title(v-show=\"title || hasTitleSlotData\")\n      div(v-show=\"!$parent.conf.slideContentOutside && !title\")\n        slot(name=\"slideTitle\")\n      div(v-if=\"title\" v-html=\"title\")\n    div.vueperslide__content(v-if=\"content || hasContentSlotData\")\n      div(v-show=\"!$parent.conf.slideContentOutside && !content\")\n        slot(name=\"slideContent\")\n      div(v-if=\"content\" v-html=\"content\")\n</template>\n\n<script>\nexport default {\n  props: {\n    clone: {\n      type: Number,\n      default: null\n    },\n    image: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    content: {\n      type: String,\n      default: ''\n    }\n  },\n  created () {\n    // vueperslide component has this useful attributes:\n    // _uid, image, title, titleSlot, content, contentSlot, clone.\n    this.$parent.addSlide(this)\n  },\n  // When removing a slide programmatically, remove it from the config so vueperslides\n  // component is aware of the change.\n  destroyed () {\n    if (this.clone === null) this.$parent.removeSlide(this._uid)\n  },\n  computed: {\n    wrapperStyles () {\n      return { ...(!this.$parent.conf.slideImageInside && this.image && { backgroundImage: `url(${this.image})` }) }\n    },\n    imageStyles () {\n      return { ...(this.$parent.conf.slideImageInside && this.image && { backgroundImage: `url(${this.image})` }) }\n    },\n  \thasTitleSlotData () {\n      let { slideTitle } = this.$slots\n      return slideTitle !== undefined\n    },\n  \thasContentSlotData () {\n      let { slideContent } = this.$slots\n      return slideContent !== undefined\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.vueperslide {\n  white-space: normal;\n  background-size: cover;\n  display: inline-block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  &__image {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-size: cover;\n  }\n\n  &__content-wrapper:not(&__content-wrapper--outside-top):not(&__content-wrapper--outside-bottom) {\n    position: absolute;\n  }\n}\n\n.vueperslides--fade .vueperslide {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0;\n  transition: .8s ease-in-out opacity;\n\n  &--active {\n    z-index: 1;\n    opacity: 1;\n  }\n}\n</style>\n","<template lang=\"pug\">\ndiv.vueperslides(:class=\"{ 'vueperslides--ready': isReady, 'vueperslides--fade': conf.fade, 'vueperslides--parallax': conf.parallax, 'vueperslides--touchable': touch.enabled && !disable, 'vueperslides--fixed-height': conf.fixedHeight, 'vueperslides--animated': transition.animated }\" ref=\"vueperslides\" aria-label=\"Slideshow\" :style=\"vueperStyles\")\n  div.vueperslide__content-wrapper.vueperslide__content-wrapper--outside-top(:class=\"conf.slideContentOutsideClass\" v-if=\"conf.slideContentOutside === 'top'\")\n    div.vueperslide__title(v-if=\"slides.count\" v-html=\"getCurrentSlideData('title')\")\n    div.vueperslide__content(v-if=\"slides.count\" v-html=\"getCurrentSlideData('content')\")\n\n  div.vueperslides__inner\n    div.vueperslides__parallax-wrapper(:style=\"'padding-bottom:' + (conf.slideRatio * 100) + '%'\" aria-live=\"polite\")\n      div.vueperslides__track-wrapper(:style=\"trackWrapperStyles\")\n        div.vueperslides__track(:class=\"{ 'vueperslides__track--dragging': touch.dragging, 'vueperslides__track--mousedown': mouseDown }\" ref=\"track\" :style=\"trackStyles\")\n          vueper-slide.vueperslide--clone(v-if=\"slides.count && clones[0]\" :clone=\"0\" :title=\"clones[0].title\" :content=\"clones[0].content\" :image=\"clones[0].image\" :style=\"clones[0].style\" aria-hidden=\"true\")\n            div(v-if=\"clones[0].titleSlot\" slot=\"slideTitle\" v-html=\"clones[0].titleSlot\")\n            div(v-if=\"clones[0].contentSlot\" slot=\"slideContent\" v-html=\"clones[0].contentSlot\")\n          slot(:currentSlide=\"slides.current\")\n          vueper-slide.vueperslide--clone(v-if=\"slides.count && clones[1]\" :clone=\"1\" :title=\"clones[1].title\" :content=\"clones[1].content\" :image=\"clones[1].image\" :style=\"clones[1].style\" aria-hidden=\"true\")\n            div(v-if=\"clones[1].titleSlot\" slot=\"slideTitle\" v-html=\"clones[1].titleSlot\")\n            div(v-if=\"clones[1].contentSlot\" slot=\"slideContent\" v-html=\"clones[1].contentSlot\")\n\n    div.vueperslides__paused(v-if=\"$slots.pausedIcon\")\n      slot(name=\"pausedIcon\")\n    div.vueperslides__arrows(:class=\"{ 'vueperslides__arrows--outside': conf.arrowsOutside }\" v-if=\"conf.arrows && slides.count > 1 && !disable\")\n      button.vueperslides__arrow.vueperslides__arrow--prev(@click=\"previous()\" v-show=\"!arrowPrevDisabled\" aria-label=\"Previous\")\n        slot(name=\"arrowLeft\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M16.2,21c0.3,0,0.5-0.1,0.7-0.3c0.4-0.4,0.4-1,0-1.4L9.6,12L17,4.7c0.4-0.4,0.4-1,0-1.4c-0.4-0.4-1-0.4-1.4,0L6.8,12l8.8,8.7C15.7,20.9,16,21,16.2,21z\")\n      button.vueperslides__arrow.vueperslides__arrow--next(@click=\"next()\" v-show=\"!arrowNextDisabled\" aria-label=\"Next\")\n        slot(name=\"arrowRight\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M7.8,21c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l7.4-7.3L7,4.7c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l8.8,8.7l-8.8,8.7C8.3,20.9,8,21,7.8,21z\")\n    div.vueperslides__bullets(v-if=\"conf.bullets && slides.count > 1 && !disable && !conf.bulletsOutside\" role=\"tablist\" aria-label=\"Slideshow navigation\")\n      button.vueperslides__bullet(:class=\"{ 'vueperslides__bullet--active': slides.current === i }\" v-for=\"(item, i) in slides.list\" :key=\"i\" @click=\"goToSlide(i)\" @keyup.left=\"previous()\" @keyup.right=\"next()\" ref=\"bullet\")\n        span {{ i + 1 }}\n\n  div.vueperslides__bullets.vueperslides__bullets--outside(v-if=\"conf.bullets && slides.count > 1 && !disable && conf.bulletsOutside\")\n    button.vueperslides__bullet(:class=\"{ 'vueperslides__bullet--active': slides.current === i }\" v-for=\"(item, i) in slides.list\" :key=\"i\" @click=\"goToSlide(i)\" @keyup.left=\"previous()\" @keyup.right=\"next()\" ref=\"bullet\")\n      span {{ i + 1 }}\n\n  div.vueperslide__content-wrapper.vueperslide__content-wrapper--outside-bottom(:class=\"conf.slideContentOutsideClass\" v-if=\"conf.slideContentOutside === 'bottom'\")\n    div.vueperslide__title(v-if=\"slides.count\" v-html=\"getCurrentSlideData('title')\")\n    div.vueperslide__content(v-if=\"slides.count\" v-html=\"getCurrentSlideData('content')\")\n</template>\n\n<script>\nimport VueperSlide from './VueperSlide.vue'\nimport './styles.scss'\n\nexport default {\n  name: 'vueper-slides',\n  components: { VueperSlide },\n  props: {\n    initSlide: {\n      type: Number,\n      default: 1\n    },\n    slideRatio: {\n      type: Number,\n      default: 1/3\n    },\n    arrows: {\n      type: Boolean,\n      default: true\n    },\n    arrowsOutside: {\n      type: Boolean,\n      default: false\n    },\n    // Ability to disable arrows on slideshow edges. Only if not infinite mode.\n    disableArrowsOnEdges: {\n      type: [Boolean, String],\n      default: false\n    },\n    bullets: {\n      type: Boolean,\n      default: true\n    },\n    bulletsOutside: {\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    slideContentOutside: {\n      type: [Boolean, String],\n      default: false\n    },\n    slideContentOutsideClass: {\n      type: String,\n      default: ''\n    },\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    speed: {\n      type: [Number, String],\n      default: 4000\n    },\n    transitionSpeed: {\n      type: [Number, String],\n      default: 600\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true\n    },\n    infinite: {\n      type: Boolean,\n      default: true\n    },\n    refreshClonesOnDrag: {\n      type: Boolean,\n      default: false\n    },\n    parallax: {\n      type: [Boolean, Number],\n      default: false\n    },\n    touchable: {\n      type: Boolean,\n      default: true\n    },\n    // By default when touch is enabled you have to drag from a slide side and pass 50% of slideshow width to change\n    // slide. This setting changes this behavior to a horizontal pixel amount from anywhere on slideshow.\n    draggingDistance: {\n      type: Number,\n      default: null\n    },\n    disable: {\n      type: Boolean,\n      default: false\n    },\n    breakpoints: {\n      type: Object,\n      default: () => ({})\n    },\n    fixedHeight: {\n      type: [Boolean, String],\n      default: false\n    },\n    slideImageInside: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    isReady: false,\n    container: null,\n    slides: { list: [], count: 0, activeUid: null, current: 0, clones: [] },\n    clones: [],\n    mouseDown: false,\n    mouseOver: false,\n    touch: { enabled: true, dragging: false, dragStartX: 0, dragAmount: 0, goNext: true },\n    transition: { currentTranslation: 0, speed: 0, animated: false },\n    timer: null,\n    arrowPrevDisabled: false,\n    arrowNextDisabled: false,\n    breakpointsData: { list: [], current: null },\n    parallaxData: { translation: 0, slideshowOffsetTop: null, isVisible: false }\n  }),\n  mounted () {\n    this.init()\n  },\n  methods: {\n    init () {\n      this.emit('before-init', false)\n      this.container = this.$refs.vueperslides\n      this.touch.enabled = this.conf.touchable\n      // Store speed in extra variable because transition.speed can be set to 0,\n      // then after slide change we need to reapply original speed.\n      this.transition.speed = this.conf.transitionSpeed\n\n      if (Object.keys(this.breakpoints).length) {\n        this.setBreakpointsList()\n        this.setBreakpointConfig(this.getCurrentBreakpoint())\n      }\n\n      if (this.conf.infinite) {\n        this.cloneSlides()\n        this.$nextTick(() => this.cloneSlides())\n      }\n\n      this.goToSlide(this.conf.initSlide - 1)\n      this.bindEvents()\n\n      this.isReady = true\n      this.emit('ready')\n    },\n\n    // Emit a named event outside the component with 2 possible parameters:\n    // current slide info & next slide info.\n    emit(name, includeCurrentSlide = true, includeNextSlide = false) {\n      // Emit param 0 = event name string.\n      let args = [name]\n\n      if (includeCurrentSlide || typeof includeNextSlide === 'number') {\n        // Emit param 1 is object like { currentSlide: ...[, nextSlide: ...] }.\n        args[1] = {}\n\n        if (includeCurrentSlide && this.slides.activeUid) {\n          args[1].currentSlide = this.getSlideData(this.slides.current)\n        }\n\n        if (typeof includeNextSlide === 'number') {\n          let { nextSlide: nextSlideIndex } = this.getSlideInRange(includeNextSlide)\n          args[1].nextSlide = this.getSlideData(nextSlideIndex)\n        }\n      }\n\n      this.$emit(name, ...args)\n    },\n\n    getSlideData (index, withStyle = false) {\n      let slide = this.slides.list[index]\n      let { slideTitle = [{}], slideContent = [{}] } = slide.$slots\n      let { elm: elmT = {} } = slideTitle[0]\n      let { elm: elmC = {} } = slideContent[0]\n\n      let data =  {\n        index: index,\n        title: slide.title,\n        titleSlot: elmT && elmT.innerHTML || null,\n        content: slide.content,\n        contentSlot: elmC && elmC.innerHTML || null,\n        image: slide.image\n      }\n\n      if (withStyle) {\n        let { attributes: { style: { value = '' } = {} } = {} } = slide.$el\n        data.style = value\n      }\n\n      return data\n    },\n\n    getCurrentSlideData (what) {\n      let { titleSlot, title, contentSlot, content } = this.getSlideData(this.slides.current)\n      // If both slot and attribute are provided use the attribute source.\n      return what === 'title' ? title || titleSlot : (content || contentSlot)\n    },\n\n    setBreakpointsList () {\n      this.breakpointsData.list = [99999, ...Object.keys(this.breakpoints)].sort((a, b) => parseInt(a) < parseInt(b))\n    },\n\n    getCurrentBreakpoint () {\n      let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      let breakpoints = [windowWidth, ...this.breakpointsData.list].sort((a, b) => parseInt(a) < parseInt(b))\n\n      return this.breakpointsData.list[breakpoints.indexOf(windowWidth) - 1]\n    },\n\n    hasBreakpointChanged (breakpoint) {\n      return this.breakpointsData.current !== breakpoint\n    },\n\n    setBreakpointConfig (breakpoint) {\n      // this.conf gets updated by itself when this.breakpointsData.current changes.\n      this.breakpointsData.current = breakpoint\n    },\n\n    cloneSlides () {\n      this.clones[0] = this.getSlideData(this.slides.count - 1, true)\n      this.clones[1] = this.getSlideData(0, true)\n    },\n\n    bindEvents () {\n      const hasTouch = 'ontouchstart' in window\n\n      // Touch enabled slideshow.\n      if (this.touch.enabled) {\n        this.$refs.track.addEventListener(hasTouch ? 'touchstart' : 'mousedown', this.onMouseDown)\n        document.addEventListener(hasTouch ? 'touchmove' : 'mousemove', this.onMouseMove)\n        document.addEventListener(hasTouch ? 'touchend' : 'mouseup', this.onMouseUp)\n      }\n\n      // Pause autoplay on mouseover.\n      if (this.conf.pauseOnHover && !hasTouch && this.conf.autoplay) {\n        this.container.addEventListener('mouseover', this.onMouseIn)\n        this.container.addEventListener('mouseout', this.onMouseOut)\n      }\n\n      // Breakpoints or parallax need a resize event.\n      if (this.breakpointsData.list.length || this.conf.parallax) {\n        window.addEventListener('resize', this.onResize)\n      }\n\n      // Parallax slideshow.\n      if (this.conf.parallax) {\n        // First render the onload translation.\n        this.refreshParallax()\n\n        // then add event listener.\n        document.addEventListener('scroll', this.onScroll)\n      }\n    },\n\n    // Recursively sum all the offsetTop values from current element up the tree until body.\n    // By doing so a padding or margin on a parent won't cause a wrong calculation.\n    getSlideshowOffsetTop (force = false) {\n      if (this.parallaxData.slideshowOffsetTop === null || force) {\n        let el = this.container\n        let top = el.offsetTop\n\n        while (el = el.offsetParent) {\n          top += el.offsetTop\n        }\n\n        this.parallaxData.slideshowOffsetTop = top\n      }\n\n      return this.parallaxData.slideshowOffsetTop\n    },\n\n    onScroll () {\n      let doc = document.documentElement\n      let scrollTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n      let windowHeight = window.innerHeight || doc.clientHeight || document.body.clientHeight\n      let slideshowHeight = this.container.clientHeight\n      let slideshowTopOffset = this.getSlideshowOffsetTop()\n\n      // The distance between the bottom line of the current vueperslides slideshow and top of window.\n      // Negative value means the slideshow is totally above the current window box.\n      let vsBottom2WinTop = slideshowTopOffset + slideshowHeight - scrollTop\n      // The distance between the top line of the current vueperslides slideshow and bottom of window.\n      // Negative value means the slideshow is totally bellow the current window box.\n      let vsTop2winBottom = windowHeight + scrollTop - slideshowTopOffset\n\n      this.parallaxData.isVisible = vsBottom2WinTop > 0 && vsTop2winBottom > 0\n\n      // Only apply translation when slideshow is visible.\n      if (this.parallaxData.isVisible) {\n        let heightToCoverWithTranslation = windowHeight + slideshowHeight\n        let percentage = vsBottom2WinTop * 100 / heightToCoverWithTranslation\n        let translatePercentage = this.conf.parallax === -1 ? 100 - percentage : percentage\n        this.parallaxData.translation = - translatePercentage / 2\n      }\n    },\n\n    onResize () {\n      if (this.breakpointsData.list.length) {\n        let breakpoint = this.getCurrentBreakpoint()\n        if (this.hasBreakpointChanged(breakpoint)) {\n          this.setBreakpointConfig(breakpoint)\n        }\n      }\n\n      if (this.conf.parallax) {\n        // Only refresh parallaxData.slideshowOffsetTop value on resize for better performance.\n        this.getSlideshowOffsetTop(true)\n      }\n    },\n\n    onMouseIn () {\n      this.mouseOver = true\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.clearTimer()\n      }\n    },\n\n    onMouseOut () {\n      this.mouseOver = false\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.setTimer()\n      }\n    },\n\n    onMouseDown (e) {\n      if (!this.touch.enabled || this.disable) return\n      if (!e.touches) e.preventDefault()\n\n      if (this.conf.infinite) this.cloneSlides()\n      // this.disableScroll()\n\n      this.mouseDown = true\n\n      if (this.draggingDistance) {\n        // Store drag start in var for distance calculation in onMouseUp().\n        this.touch.dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n      } else {\n        let dragPercentage = this.getDragPercentage(e)\n\n        // Set a flag for use while dragging in `onMouseMove` to know if drag was toward left or right.\n        this.touch.goNext = dragPercentage >= 0.5\n\n        this.transition.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n      }\n    },\n\n    onMouseMove (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = true\n\n        // The clones are created with a copy of content.\n        // Set refreshClonesOnDrag to true if you want to keep updating clones before you see them.\n        if (this.conf.refreshClonesOnDrag && this.conf.infinite) {\n          this.cloneSlides()\n        }\n\n        if (this.draggingDistance) {\n          this.touch.dragAmount = this.getDragAmount(e)\n          let dragAmountPercentage = this.touch.dragAmount / this.container.clientWidth\n\n          this.transition.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0) - dragAmountPercentage)\n        } else {\n          let dragPercentage = this.getDragPercentage(e)\n          this.transition.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n        }\n      }\n    },\n\n    onMouseUp (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = false\n\n        let slideOnDragEnd\n        if (this.draggingDistance) {\n          let dragAmount = this.touch.dragAmount\n          let dragAmountPercentage = dragAmount / this.container.clientWidth\n\n          slideOnDragEnd = this.slides.current\n          if (Math.abs(dragAmount) >= this.draggingDistance) {\n            slideOnDragEnd += dragAmount > 0 ? -1 : 1\n          }\n        } else {\n          // When the drag is realeased, calculate if the drag ends before or after the 50%-slideshow-width threshold.\n          // Then finish the sliding toward that slide.\n          slideOnDragEnd = - (Math.round(this.transition.currentTranslation / 100) + (this.clones.length ? 1 : 0))\n        }\n\n        let { nextSlide } = this.getSlideInRange(slideOnDragEnd)\n\n        // If drag is not allowed (`arrowNextDisabled` = true) and dragging beyond last slide,\n        // cancel sliding and snap back to last slide.\n        if (this.arrowNextDisabled && this.conf.autoplay && nextSlide === 0) {\n          nextSlide = this.slides.count - 1\n        }\n\n        // Only call `goToSlide` if the drag ends on a slide that is different than the currentSlide.\n        if (nextSlide !== this.slides.current) {\n          this.goToSlide(slideOnDragEnd)\n        } else {\n          // Apply transition to snap back to current slide.\n          this.transition.currentTranslation = - (this.slides.current + (this.clones.length ? 1 : 0)) * 100\n        }\n\n        this.touch.dragStartX = null\n        this.touch.dragAmount = null\n        this.enableScroll()\n      }\n    },\n\n    getDragPercentage (e) {\n      let dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n\n      // For full window width slideshow only.\n      // let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      // return dragStartX / windowWidth\n\n      return (dragStartX - this.container.offsetLeft) / this.container.clientWidth\n    },\n\n    /**\n     * Return the x distance in pixel between drag start and current drag position.\n     */\n    getDragAmount (e) {\n      return ('ontouchstart' in window ? e.touches[0].clientX : e.clientX) - this.touch.dragStartX\n    },\n\n    disableScroll () {\n      document.ontouchmove = function(e) {\n        e.preventDefault()\n      }\n    },\n\n    enableScroll () {\n      document.ontouchmove = function() {\n        return true\n      }\n    },\n\n    clearTimer () {\n      clearTimeout(this.timer)\n      this.timer = 0\n    },\n\n    setTimer () {\n      this.timer = setTimeout(() => {\n        this.goToSlide(this.slides.current + 1, { autoPlaying: true })\n      }, this.conf.speed)\n    },\n\n    previous () {\n      this.goToSlide(this.slides.current - 1)\n    },\n\n    next () {\n      this.goToSlide(this.slides.current + 1)\n    },\n\n    refreshParallax () {\n      setTimeout(() => {\n        this.onResize()\n        this.onScroll()\n      }, 100)\n    },\n\n    getSlideInRange (index) {\n      let clone = null\n\n      // If infinite enabled, going out of range takes the first slide from the other end.\n      if (this.clones.length) {\n        if (index < 0) {\n          index = this.slides.count - 1\n          clone = 0\n        }\n        else if (index > this.slides.count - 1) {\n          index = 0\n          clone = 1\n        }\n      }\n\n      // If not infinite, can't go lower than 0 or beyond `slides.count` with `disableArrowsOnEdges`.\n      // If `disableArrowsOnEdges` is enabled going out of range will take first slide from the other end\n      // of the slideshow.\n      else {\n        if (index < 0) index = this.conf.disableArrowsOnEdges ? 0 : this.slides.count - 1\n        else if (index > this.slides.count - 1) {\n          // If autoplay is on but disableArrowsOnEdges is enabled, going beyond the last one will also bring\n          // the first one in.\n          index = this.conf.disableArrowsOnEdges ? (this.conf.autoplay ? 0 : this.slides.count - 1) : 0\n        }\n      }\n\n      return { nextSlide: index, clone: clone }\n    },\n\n    goToSlide (index, options = {}) {\n      if (!this.slides.count || this.disable) return\n\n      if (this.conf.autoplay) this.clearTimer()\n\n      // animation = slide transition is animated.\n      // autoPlaying = go to the next slide by autoplay - no user intervention.\n      // jumping = after reaching a clone, the callback jumps back to original slide with no animation.\n      let { animation = true, autoPlaying = false, jumping = false } = options\n\n      this.transition.animated = animation\n      setTimeout(() => this.transition.animated = false, this.transitionSpeed)\n\n      // Get the next slide index and whether it's a clone.\n      let { nextSlide, clone: nextSlideIsClone } = this.getSlideInRange(index)\n\n      // Emit event. First use of `goToSlide` is while init, so should not propagate an event.\n      if (this.isReady && !jumping) {\n        this.emit('before-slide', true, nextSlide)\n\n        if (nextSlideIsClone !== null) this.cloneSlides()\n      }\n\n      // Disable arrows if `disableArrowsOnEdges` is on and there is no slide to go to on that end.\n      if (this.conf.arrows && this.conf.disableArrowsOnEdges) {\n        this.arrowPrevDisabled = nextSlide === 0\n        this.arrowNextDisabled = nextSlide === this.slides.count - 1\n      }\n\n      // Infinite sliding with cloned slides:\n      // When reaching last slide and going next the cloned slide of the first slide\n      // shows up, when the animation ends the real change to the first slide is done\n      // immediately with no animation.\n      // Same principle when going beyond first slide.\n      if (nextSlideIsClone !== null) {// Gives clone id (0 or 1 or null).\n        setTimeout(() => {\n          // inside the callback, also check if it is not too late to apply next slide\n          // (user may have slid fast multiple times) if so cancel callback.\n          let passedCloneBackward = index === -1 && this.slides.current !== this.slides.count - 1\n          let passedCloneForward = index === this.slides.count && this.slides.current !== 0\n          let tooLateToSetTimeout = passedCloneBackward || passedCloneForward\n\n          if (!tooLateToSetTimeout) {\n            this.transition.speed = 0\n            this.goToSlide(nextSlideIsClone ? 0 : this.slides.count - 1, { animation: false, jumping: true })\n            setTimeout(() => this.transition.speed = this.conf.transitionSpeed, 10)\n          }\n        }, this.transition.speed - 50)\n      }\n\n      this.slides.current = nextSlide\n\n      // Only apply sliding transition when the slideshow animation type is `slide`.\n      if (!this.conf.fade) {\n        if (nextSlideIsClone !== null) {\n          this.transition.currentTranslation = - 100 * (nextSlideIsClone ? this.slides.count + 1 : 0)\n        }\n        else this.transition.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0))\n      }\n\n      this.slides.activeUid = this.slides.list[this.slides.current]._uid\n\n      if (this.conf.autoplay && !this.mouseOver) {\n        this.setTimer()\n      }\n\n      if (this.slides.count) {\n        if (this.$slots.default[this.slides.current]) {\n          // First use of goToSlide is while init, so should not propagate an event.\n          if (this.isReady && !jumping) this.emit('slide')\n        }\n\n        if (this.isReady && !autoPlaying && !jumping && this.$refs.bullet[this.slides.current]) {\n          this.$refs.bullet[this.slides.current].focus()\n        }\n      }\n    },\n\n    addSlide (newSlide) {\n      const needReclone = this.conf.infinite && this.isReady && newSlide.clone === null\n\n      if (newSlide.clone !== null) {\n        this.clones[newSlide.clone] = newSlide\n      }\n\n      else {\n        // Add the slide in the slides array & update slides.count.\n        this.slides.list.push(newSlide)\n        this.slides.count = this.slides.list.length\n      }\n\n      if (this.slides.count > 1 && this.touchable) {\n        this.touch.enabled = true\n      }\n\n      // cloneSlides() is called at the end of init so calling it before would be redundant.\n      if (needReclone) {\n        this.$nextTick(() => this.cloneSlides())\n      }\n    },\n\n    removeSlide (uid) {\n      let needReclone = false\n\n      this.slides.list.some((slide, i) => {\n        if (slide._uid === uid) {\n          // Remove the slide.\n          this.slides.list.splice(i, 1)\n          this.slides.count = this.slides.list.length\n\n          // If the slide to remove is the current slide, slide to the previous slide.\n          if (uid === this.slides.activeUid) {\n            this.slides.activeUid = null\n            this.goToSlide(i - 1, { autoPlaying: true })\n          }\n\n          if (this.slides.count <= 1) {\n            this.touch.enabled = false\n          }\n\n          if (this.clones.length && this.isReady && !slide.clone) needReclone = true\n\n          return true // Break the `Array.some` loop.\n        }\n      })\n\n      if (this.slides.count && needReclone) {\n        this.cloneSlides()\n      }\n    }\n  },\n\n  computed: {\n    // this.conf needs to be reactive so user can change a Vueper Slides option and everything gets updated.\n    conf () {\n      // Read config from the props then check if breakpoints are defined. If so override the config with\n      // the breakpoint ones.\n      let conf = {\n        ...this.$props,\n        ...(this.$props.breakpoints && this.$props.breakpoints[this.breakpointsData.current] || {})\n      }\n\n      if (conf.fade) {\n        conf.infinite = false\n      }\n\n      return conf\n    },\n    vueperStyles () {\n      return /^-?\\d/.test(this.conf.fixedHeight) ? 'height: ' + this.conf.fixedHeight : null\n    },\n    trackStyles () {\n      let styles = {}\n\n      styles.transitionDuration = this.transition.speed + 'ms'\n\n      if (!this.conf.fade) {\n        styles.transform = 'translateX(' + this.transition.currentTranslation + '%)'\n      }\n\n      return styles\n    },\n    trackWrapperStyles () {\n      let styles = {}\n\n      if (this.conf.parallax) {\n        styles.transform = 'translateY(' + this.parallaxData.translation + '%)'\n\n        // Increase browser optimizations by allocating more machine resource.\n        // ! \\\\ To be used wisely so deactivate when not needed.\n        styles.willChange = this.parallaxData.isVisible ? 'transform' : 'auto'\n      }\n\n      return styles\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n// Vueperslides REQUIRED styles.\n// The nice-to-have not required styles are placed in an external\n// css file so the end user can easily override them.\n.vueperslides {\n  position: relative;\n\n  &--fixed-height {\n    .vueperslides__inner,\n    .vueperslides__parallax-wrapper,\n    .vueperslide {\n      height: inherit;\n    }\n\n    .vueperslides__parallax-wrapper {\n      padding-bottom: 0 !important;\n    }\n  }\n\n  &__inner {\n    position: relative;\n    user-select: none;\n  }\n\n  &__parallax-wrapper {\n    position: relative;\n    // padding-bottom: 33.33%;\n    overflow: hidden;\n  }\n\n  &__track-wrapper {\n    position: absolute;\n    top: 0;\n    height: 100%;\n    left: 0;\n    right: 0;\n    overflow: hidden;\n    z-index: 1;\n  }\n\n  &--parallax &__track-wrapper {\n    height: 200%;\n    transform: translateY(0);\n  }\n\n  &--fade &__track {\n    white-space: normal;\n    transition: none;\n  }\n\n  &--touchable &__track {\n    cursor: ew-resize;\n    cursor: -webkit-grab;\n    cursor: grab;\n\n    &--mousedown, &--dragging {\n      cursor: -webkit-grabbing;\n      cursor: grabbing;\n    }\n  }\n\n  &__track {\n    white-space: nowrap;\n    transition: 0.5s ease-in-out transform;\n    height: 100%;\n\n    &--mousedown {\n      transition: 0.2s ease-in-out transform !important;\n    }\n\n    &--dragging {\n      transition: none;\n    }\n\n    &--no-animation {\n      transition-duration: 0s;\n    }\n  }\n\n  &__arrow {\n    position: absolute;\n    fill: currentColor;\n    width: 1em;\n    text-align: center;\n    transform: translateY(-50%);\n    transition: 0.3s ease-in-out;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n  }\n\n  &__paused {\n    position: absolute;\n    transition: 0.3s ease-in-out;\n  }\n\n  &__bullets {\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    &--outside {\n      position: relative;\n    }\n  }\n\n  &__bullet {\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &::-moz-focus-inner {\n      border: 0;\n    }\n  }\n}\n</style>","import VueperSlides from './components/VueperSlides.vue'\nimport VueperSlide from './components/VueperSlide.vue'\n\n// Expose component to global scope.\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.component('vueper-slides', VueperSlides)\n  window.Vue.component('vueper-slide', VueperSlide)\n}\n\nexport { VueperSlides, VueperSlide }\n"],"names":["render","Number","String","$parent","addSlide","clone","removeSlide","_uid","conf","slideImageInside","image","backgroundImage","slideTitle","$slots","undefined","slideContent","VueperSlide","Boolean","Object","list","count","activeUid","current","clones","enabled","dragging","dragStartX","dragAmount","goNext","currentTranslation","speed","animated","translation","slideshowOffsetTop","isVisible","init","emit","container","$refs","vueperslides","touch","touchable","transition","transitionSpeed","keys","breakpoints","length","setBreakpointsList","setBreakpointConfig","getCurrentBreakpoint","infinite","cloneSlides","$nextTick","goToSlide","initSlide","bindEvents","isReady","name","includeCurrentSlide","includeNextSlide","args","slides","currentSlide","getSlideData","getSlideInRange","nextSlideIndex","nextSlide","$emit","index","withStyle","slide","elm","elmT","elmC","data","title","innerHTML","content","$el","attributes","style","value","what","titleSlot","contentSlot","breakpointsData","sort","a","b","parseInt","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","indexOf","breakpoint","hasTouch","track","addEventListener","onMouseDown","onMouseMove","onMouseUp","pauseOnHover","autoplay","onMouseIn","onMouseOut","parallax","onResize","refreshParallax","onScroll","force","parallaxData","el","top","offsetTop","offsetParent","doc","scrollTop","pageYOffset","clientTop","windowHeight","innerHeight","clientHeight","slideshowHeight","slideshowTopOffset","getSlideshowOffsetTop","vsBottom2WinTop","vsTop2winBottom","heightToCoverWithTranslation","percentage","translatePercentage","hasBreakpointChanged","mouseOver","clearTimer","setTimer","e","disable","touches","preventDefault","mouseDown","draggingDistance","clientX","dragPercentage","getDragPercentage","refreshClonesOnDrag","getDragAmount","dragAmountPercentage","slideOnDragEnd","Math","abs","round","arrowNextDisabled","enableScroll","offsetLeft","ontouchmove","timer","setTimeout","autoPlaying","disableArrowsOnEdges","options","animation","jumping","nextSlideIsClone","arrows","arrowPrevDisabled","passedCloneBackward","passedCloneForward","tooLateToSetTimeout","fade","default","bullet","focus","newSlide","needReclone","push","uid","some","i","splice","$props","test","fixedHeight","styles","transitionDuration","transform","willChange","Vue","component","VueperSlides"],"mappings":"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"}