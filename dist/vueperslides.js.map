{"version":3,"file":"vueperslides.js","sources":["../src/components/VueperSlide.vue","../src/components/VueperSlides.vue","../src/index.js"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"{ 'vueperslides__slide': true, 'vueperslides__slide--active': $parent.slides.activeUid === _uid }\" :style=\"styles\" :aria-hidden=\"$parent.slides.activeUid === _uid ? 'false' : 'true'\")\n  div.vueperslides__slide-content(v-show=\"!$parent.conf.slideContentOutside && (title || hasTitleSlotData || content || hasContentSlotData)\")\n    div.slide-title(v-show=\"title || hasTitleSlotData\")\n      div(v-show=\"!$parent.conf.slideContentOutside && !title\")\n        slot(name=\"slideTitle\")\n      div(v-if=\"title\" v-html=\"title\")\n    div.slide-content(v-if=\"content || hasContentSlotData\")\n      div(v-show=\"!$parent.conf.slideContentOutside && !content\")\n        slot(name=\"slideContent\")\n      div(v-if=\"content\" v-html=\"content\")\n</template>\n\n<script>\nexport default {\n  props: {\n    clone: {\n      type: Number,\n      default: null\n    },\n    image: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    content: {\n      type: String,\n      default: ''\n    }\n  },\n  created () {\n    // vueperslide component has this useful attributes:\n    // _uid, image, title, titleSlot, content, contentSlot, clone.\n    this.$parent.addSlide(this)\n  },\n  // When removing a slide programmatically, remove it from the config so vueperslides\n  // component is aware of the change.\n  destroyed () {\n    if (this.clone === null) this.$parent.removeSlide(this._uid)\n  },\n  computed: {\n    styles () {\n      return { ...(this.image && { backgroundImage: `url(${this.image})` }) }\n    },\n  \thasTitleSlotData () {\n      let { slideTitle } = this.$slots\n      return slideTitle !== undefined\n    },\n  \thasContentSlotData () {\n      let { slideContent } = this.$slots\n      return slideContent !== undefined\n    }\n  }\n}\n</script>\n","<template lang=\"pug\">\ndiv.vueperslides(:class=\"{ 'vueperslides--ready': isReady, 'vueperslides--fade': conf.fade, 'vueperslides--parallax': conf.parallax, 'vueperslides--touchable': touch.enabled && !disable, 'vueperslides--animated': transition.animated }\" ref=\"vueperslides\" aria-label=\"Slideshow\")\n  div.vueperslides__slide-content.vueperslides__slide-content--outside-top(:class=\"conf.slideContentOutsideClass\" v-if=\"conf.slideContentOutside === 'top'\")\n    div.slide-title(v-if=\"slides.count\" v-html=\"getCurrentSlideData('title')\")\n    div.slide-content(v-if=\"slides.count\" v-html=\"getCurrentSlideData('content')\")\n\n  div.vueperslides__inner\n    div.vueperslides__parallax-wrapper(:style=\"'padding-bottom:' + (conf.slideRatio * 100) + '%'\" aria-live=\"polite\")\n      div.vueperslides__track-wrapper(:style=\"trackWrapperStyles\")\n        div.vueperslides__track(:class=\"{ 'vueperslides__track--dragging': touch.dragging, 'vueperslides__track--mousedown': mouseDown }\" ref=\"track\" :style=\"trackStyles\")\n          vueper-slide.vueperslides__slide--clone(v-if=\"slides.count && clones[0]\" :clone=\"0\" :title=\"clones[0].title\" :content=\"clones[0].content\" :image=\"clones[0].image\" :style=\"clones[0].style\" aria-hidden=\"true\")\n            div(v-if=\"clones[0].titleSlot\" slot=\"slideTitle\" v-html=\"clones[0].titleSlot\")\n            div(v-if=\"clones[0].contentSlot\" slot=\"slideContent\" v-html=\"clones[0].contentSlot\")\n          slot(:currentSlide=\"slides.current\")\n          vueper-slide.vueperslides__slide--clone(v-if=\"slides.count && clones[1]\" :clone=\"1\" :title=\"clones[1].title\" :content=\"clones[1].content\" :image=\"clones[1].image\" :style=\"clones[1].style\" aria-hidden=\"true\")\n            div(v-if=\"clones[1].titleSlot\" slot=\"slideTitle\" v-html=\"clones[1].titleSlot\")\n            div(v-if=\"clones[1].contentSlot\" slot=\"slideContent\" v-html=\"clones[1].contentSlot\")\n\n    div.vueperslides__paused(v-if=\"$slots.pausedIcon\")\n      slot(name=\"pausedIcon\")\n    div.vueperslides__arrows(:class=\"{ 'vueperslides__arrows--outside': conf.arrowsOutside }\" v-if=\"conf.arrows && slides.count > 1 && !disable\")\n      button.vueperslides__arrow.vueperslides__arrow--prev(@click=\"previous()\" v-show=\"!arrowPrevDisabled\" aria-label=\"Previous\")\n        slot(name=\"arrowLeft\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M16.2,21c0.3,0,0.5-0.1,0.7-0.3c0.4-0.4,0.4-1,0-1.4L9.6,12L17,4.7c0.4-0.4,0.4-1,0-1.4c-0.4-0.4-1-0.4-1.4,0L6.8,12l8.8,8.7C15.7,20.9,16,21,16.2,21z\")\n      button.vueperslides__arrow.vueperslides__arrow--next(@click=\"next()\" v-show=\"!arrowNextDisabled\" aria-label=\"Next\")\n        slot(name=\"arrowRight\")\n          svg(viewBox=\"0 0 24 24\")\n            path(d=\"M7.8,21c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l7.4-7.3L7,4.7c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l8.8,8.7l-8.8,8.7C8.3,20.9,8,21,7.8,21z\")\n    div.vueperslides__bullets(v-if=\"conf.bullets && slides.count > 1 && !disable && !conf.bulletsOutside\" role=\"tablist\" aria-label=\"Slideshow navigation\")\n      button.vueperslides__bullet(:class=\"{ 'vueperslides__bullet--active': slides.current === i }\" v-for=\"(item, i) in slides.list\" :key=\"i\" @click=\"goToSlide(i)\" @keyup.left=\"previous()\" @keyup.right=\"next()\" ref=\"bullet\")\n        span {{ i + 1 }}\n\n  div.vueperslides__bullets.vueperslides__bullets--outside(v-if=\"conf.bullets && slides.count > 1 && !disable && conf.bulletsOutside\")\n    button.vueperslides__bullet(:class=\"{ 'vueperslides__bullet--active': slides.current === i }\" v-for=\"(item, i) in slides.list\" :key=\"i\" @click=\"goToSlide(i)\" @keyup.left=\"previous()\" @keyup.right=\"next()\" ref=\"bullet\")\n      span {{ i + 1 }}\n\n  div.vueperslides__slide-content.vueperslides__slide-content--outside-bottom(:class=\"conf.slideContentOutsideClass\" v-if=\"conf.slideContentOutside === 'bottom'\")\n    div.slide-title(v-if=\"slides.count\" v-html=\"getCurrentSlideData('title')\")\n    div.slide-content(v-if=\"slides.count\" v-html=\"getCurrentSlideData('content')\")\n</template>\n\n<script>\nimport VueperSlide from './VueperSlide.vue'\nimport './styles.scss'\n\nexport default {\n  name: 'vueper-slides',\n  components: { VueperSlide },\n  props: {\n    initSlide: {\n      type: Number,\n      default: 1\n    },\n    slideRatio: {\n      type: Number,\n      default: 1/3\n    },\n    arrows: {\n      type: Boolean,\n      default: true\n    },\n    arrowsOutside: {\n      type: Boolean,\n      default: false\n    },\n    // Ability to disable arrows on slideshow edges. Only if not infinite mode.\n    disableArrowsOnEdges: {\n      type: [Boolean, String],\n      default: false\n    },\n    bullets: {\n      type: Boolean,\n      default: true\n    },\n    bulletsOutside: {\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      type: Boolean,\n      default: false\n    },\n    slideContentOutside: {\n      type: [Boolean, String],\n      default: false\n    },\n    slideContentOutsideClass: {\n      type: String,\n      default: ''\n    },\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    speed: {\n      type: [Number, String],\n      default: 4000\n    },\n    transitionSpeed: {\n      type: [Number, String],\n      default: 600\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true\n    },\n    infinite: {\n      type: Boolean,\n      default: true\n    },\n    refreshClonesOnDrag: {\n      type: Boolean,\n      default: false\n    },\n    parallax: {\n      type: [Boolean, Number],\n      default: false\n    },\n    touchable: {\n      type: Boolean,\n      default: true\n    },\n    // By default when touch is enabled you have to drag from a slide side and pass 50% of slideshow width to change\n    // slide. This setting changes this behavior to a horizontal pixel amount from anywhere on slideshow.\n    draggingDistance: {\n      type: Number,\n      default: null\n    },\n    disable: {\n      type: Boolean,\n      default: false\n    },\n    breakpoints: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data: () => ({\n    isReady: false,\n    container: null,\n    slides: { list: [], count: 0, activeUid: null, current: 0, clones: [] },\n    clones: [],\n    mouseDown: false,\n    mouseOver: false,\n    touch: { enabled: true, dragging: false, dragStartX: 0, dragAmount: 0, goNext: true },\n    transition: { currentTranslation: 0, speed: 0, animated: false },\n    timer: null,\n    arrowPrevDisabled: false,\n    arrowNextDisabled: false,\n    breakpointsData: { list: [], current: null },\n    parallaxData: { translation: 0, slideshowOffsetTop: null, isVisible: false }\n  }),\n  mounted () {\n    this.init()\n  },\n  methods: {\n    init () {\n      this.emit('before-init', false)\n      this.container = this.$refs.vueperslides\n      this.touch.enabled = this.conf.touchable\n      // Store speed in extra variable because transition.speed can be set to 0,\n      // then after slide change we need to reapply original speed.\n      this.transition.speed = this.conf.transitionSpeed\n\n      if (Object.keys(this.breakpoints).length) {\n        this.setBreakpointsList()\n        this.setBreakpointConfig(this.getCurrentBreakpoint())\n      }\n\n      if (this.conf.infinite) {\n        this.cloneSlides()\n        this.$nextTick(() => this.cloneSlides())\n      }\n\n      this.goToSlide(this.conf.initSlide - 1)\n      this.bindEvents()\n\n      this.isReady = true\n      this.emit('ready')\n    },\n\n    // Emit a named event outside the component with 2 possible parameters:\n    // current slide info & next slide info.\n    emit(name, includeCurrentSlide = true, includeNextSlide = false) {\n      // Emit param 0 = event name string.\n      let args = [name]\n\n      if (includeCurrentSlide || typeof includeNextSlide === 'number') {\n        // Emit param 1 is object like { currentSlide: ...[, nextSlide: ...] }.\n        args[1] = {}\n\n        if (includeCurrentSlide && this.slides.activeUid) {\n          args[1].currentSlide = this.getSlideData(this.slides.current)\n        }\n\n        if (typeof includeNextSlide === 'number') {\n          let { nextSlide: nextSlideIndex } = this.getSlideInRange(includeNextSlide)\n          args[1].nextSlide = this.getSlideData(nextSlideIndex)\n        }\n      }\n\n      this.$emit(name, ...args)\n    },\n\n    getSlideData (index, withStyle = false) {\n      let slide = this.slides.list[index]\n      let { slideTitle = [{}], slideContent = [{}] } = slide.$slots\n      let { elm: elmT = {} } = slideTitle[0]\n      let { elm: elmC = {} } = slideContent[0]\n\n      let data =  {\n        index: index,\n        title: slide.title,\n        titleSlot: elmT && elmT.innerHTML || null,\n        content: slide.content,\n        contentSlot: elmC && elmC.innerHTML || null,\n        image: slide.image\n      }\n\n      if (withStyle) {\n        let { attributes: { style: { value = '' } = {} } = {} } = slide.$el\n        data.style = value\n      }\n\n      return data\n    },\n\n    getCurrentSlideData (what) {\n      let { titleSlot, title, contentSlot, content } = this.getSlideData(this.slides.current)\n      // If both slot and attribute are provided use the attribute source.\n      return what === 'title' ? title || titleSlot : (content || contentSlot)\n    },\n\n    setBreakpointsList () {\n      this.breakpointsData.list = [99999, ...Object.keys(this.breakpoints)].sort((a, b) => parseInt(a) < parseInt(b))\n    },\n\n    getCurrentBreakpoint () {\n      let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      let breakpoints = [windowWidth, ...this.breakpointsData.list].sort((a, b) => parseInt(a) < parseInt(b))\n\n      return this.breakpointsData.list[breakpoints.indexOf(windowWidth) - 1]\n    },\n\n    hasBreakpointChanged (breakpoint) {\n      return this.breakpointsData.current !== breakpoint\n    },\n\n    setBreakpointConfig (breakpoint) {\n      // this.conf gets updated by itself when this.breakpointsData.current changes.\n      this.breakpointsData.current = breakpoint\n    },\n\n    cloneSlides () {\n      this.clones[0] = this.getSlideData(this.slides.count - 1, true)\n      this.clones[1] = this.getSlideData(0, true)\n    },\n\n    bindEvents () {\n      const hasTouch = 'ontouchstart' in window\n\n      // Touch enabled slideshow.\n      if (this.touch.enabled) {\n        this.$refs.track.addEventListener(hasTouch ? 'touchstart' : 'mousedown', this.onMouseDown)\n        document.addEventListener(hasTouch ? 'touchmove' : 'mousemove', this.onMouseMove)\n        document.addEventListener(hasTouch ? 'touchend' : 'mouseup', this.onMouseUp)\n      }\n\n      // Pause autoplay on mouseover.\n      if (this.conf.pauseOnHover && !hasTouch && this.conf.autoplay) {\n        this.container.addEventListener('mouseover', this.onMouseIn)\n        this.container.addEventListener('mouseout', this.onMouseOut)\n      }\n\n      // Breakpoints or parallax need a resize event.\n      if (this.breakpointsData.list.length || this.conf.parallax) {\n        window.addEventListener('resize', this.onResize)\n      }\n\n      // Parallax slideshow.\n      if (this.conf.parallax) {\n        // First render the onload translation.\n        setTimeout(() => {this.onResize();this.onScroll()}, 100)\n\n        // then add event listener.\n        document.addEventListener('scroll', this.onScroll)\n      }\n    },\n\n    // Recursively sum all the offsetTop values from current element up the tree until body.\n    // By doing so a padding or margin on a parent won't cause a wrong calculation.\n    getSlideshowOffsetTop (force = false) {\n      if (this.parallaxData.slideshowOffsetTop === null || force) {\n        let el = this.container\n        let top = el.offsetTop\n\n        while (el = el.offsetParent) {\n          top += el.offsetTop\n        }\n\n        this.parallaxData.slideshowOffsetTop = top\n      }\n\n      return this.parallaxData.slideshowOffsetTop\n    },\n\n    onScroll (e) {\n      let doc = document.documentElement\n      let scrollTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n      let windowHeight = window.innerHeight || doc.clientHeight || document.body.clientHeight\n      let slideshowHeight = this.container.clientHeight\n      let slideshowTopOffset = this.getSlideshowOffsetTop()\n\n      // The distance between the bottom line of the current vueperslides slideshow and top of window.\n      // Negative value means the slideshow is totally above the current window box.\n      let vsBottom2WinTop = slideshowTopOffset + slideshowHeight - scrollTop\n      // The distance between the top line of the current vueperslides slideshow and bottom of window.\n      // Negative value means the slideshow is totally bellow the current window box.\n      let vsTop2winBottom = windowHeight + scrollTop - slideshowTopOffset\n      console.log(vsBottom2WinTop > 0 && vsTop2winBottom > 0)\n\n      this.parallaxData.isVisible = vsBottom2WinTop > 0 && vsTop2winBottom > 0\n\n      // Only apply translation when slideshow is visible.\n      if (this.parallaxData.isVisible) {\n        let heightToCoverWithTranslation = windowHeight + slideshowHeight\n        let percentage = vsBottom2WinTop * 100 / heightToCoverWithTranslation\n        let translatePercentage = this.conf.parallax === -1 ? 100 - percentage : percentage\n        this.parallaxData.translation = - translatePercentage / 2\n      }\n    },\n\n    onResize () {\n      if (this.breakpointsData.list.length) {\n        let breakpoint = this.getCurrentBreakpoint()\n        if (this.hasBreakpointChanged(breakpoint)) {\n          this.setBreakpointConfig(breakpoint)\n        }\n      }\n\n      if (this.conf.parallax) {\n        // Only refresh parallaxData.slideshowOffsetTop value on resize for better performance.\n        this.getSlideshowOffsetTop(true)\n      }\n    },\n\n    onMouseIn () {\n      this.mouseOver = true\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.clearTimer()\n      }\n    },\n\n    onMouseOut () {\n      this.mouseOver = false\n\n      if (this.conf.pauseOnHover && this.conf.autoplay) {\n        this.setTimer()\n      }\n    },\n\n    onMouseDown (e) {\n      if (!this.touch.enabled || this.disable) return\n      if (!e.touches) e.preventDefault()\n\n      if (this.conf.infinite) this.cloneSlides()\n      // this.disableScroll()\n\n      this.mouseDown = true\n\n      if (this.draggingDistance) {\n        // Store drag start in var for distance calculation in onMouseUp().\n        this.touch.dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n      } else {\n        let dragPercentage = this.getDragPercentage(e)\n\n        // Set a flag for use while dragging in `onMouseMove` to know if drag was toward left or right.\n        this.touch.goNext = dragPercentage >= 0.5\n\n        this.transition.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n      }\n    },\n\n    onMouseMove (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = true\n\n        // The clones are created with a copy of content.\n        // Set refreshClonesOnDrag to true if you want to keep updating clones before you see them.\n        if (this.conf.refreshClonesOnDrag && this.conf.infinite) {\n          this.cloneSlides()\n        }\n\n        if (this.draggingDistance) {\n          this.touch.dragAmount = this.getDragAmount(e)\n          let dragAmountPercentage = this.touch.dragAmount / this.container.clientWidth\n\n          this.transition.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0) - dragAmountPercentage)\n        } else {\n          let dragPercentage = this.getDragPercentage(e)\n          this.transition.currentTranslation = - 100 * (this.slides.current + (this.touch.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage)\n        }\n      }\n    },\n\n    onMouseUp (e) {\n      if (this.mouseDown || this.touch.dragging) {\n        this.mouseDown = false\n        this.touch.dragging = false\n\n        let slideOnDragEnd\n        if (this.draggingDistance) {\n          let dragAmount = this.touch.dragAmount\n          let dragAmountPercentage = dragAmount / this.container.clientWidth\n\n          slideOnDragEnd = this.slides.current\n          if (Math.abs(dragAmount) >= this.draggingDistance) {\n            slideOnDragEnd += dragAmount > 0 ? -1 : 1\n          }\n        } else {\n          // When the drag is realeased, calculate if the drag ends before or after the 50%-slideshow-width threshold.\n          // Then finish the sliding toward that slide.\n          slideOnDragEnd = - (Math.round(this.transition.currentTranslation / 100) + (this.clones.length ? 1 : 0))\n        }\n\n        let { nextSlide } = this.getSlideInRange(slideOnDragEnd)\n\n        // If drag is not allowed (`arrowNextDisabled` = true) and dragging beyond last slide,\n        // cancel sliding and snap back to last slide.\n        if (this.arrowNextDisabled && this.conf.autoplay && nextSlide === 0) {\n          nextSlide = this.slides.count - 1\n        }\n\n        // Only call `goToSlide` if the drag ends on a slide that is different than the currentSlide.\n        if (nextSlide !== this.slides.current) {\n          this.goToSlide(slideOnDragEnd)\n        } else {\n          // Apply transition to snap back to current slide.\n          this.transition.currentTranslation = - (this.slides.current + (this.clones.length ? 1 : 0)) * 100\n        }\n\n        this.touch.dragStartX = null\n        this.touch.dragAmount = null\n        this.enableScroll()\n      }\n    },\n\n    getDragPercentage (e) {\n      let dragStartX = 'ontouchstart' in window ? e.touches[0].clientX : e.clientX\n\n      // For full window width slideshow only.\n      // let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      // return dragStartX / windowWidth\n\n      return (dragStartX - this.container.offsetLeft) / this.container.clientWidth\n    },\n\n    /**\n     * Return the x distance in pixel between drag start and current drag position.\n     */\n    getDragAmount (e) {\n      return ('ontouchstart' in window ? e.touches[0].clientX : e.clientX) - this.touch.dragStartX\n    },\n\n    disableScroll () {\n      document.ontouchmove = function(e) {\n        e.preventDefault()\n      }\n    },\n\n    enableScroll () {\n      document.ontouchmove = function() {\n        return true\n      }\n    },\n\n    clearTimer () {\n      clearTimeout(this.timer)\n      this.timer = 0\n    },\n\n    setTimer () {\n      this.timer = setTimeout(() => {\n        this.goToSlide(this.slides.current + 1, { autoPlaying: true })\n      }, this.conf.speed)\n    },\n\n    previous () {\n      this.goToSlide(this.slides.current - 1)\n    },\n\n    next () {\n      this.goToSlide(this.slides.current + 1)\n    },\n\n    getSlideInRange (index) {\n      let clone = null\n\n      // If infinite enabled, going out of range takes the first slide from the other end.\n      if (this.clones.length) {\n        if (index < 0) {\n          index = this.slides.count - 1\n          clone = 0\n        }\n        else if (index > this.slides.count - 1) {\n          index = 0\n          clone = 1\n        }\n      }\n\n      // If not infinite, can't go lower than 0 or beyond `slides.count` with `disableArrowsOnEdges`.\n      // If `disableArrowsOnEdges` is enabled going out of range will take first slide from the other end\n      // of the slideshow.\n      else {\n        if (index < 0) index = this.conf.disableArrowsOnEdges ? 0 : this.slides.count - 1\n        else if (index > this.slides.count - 1) {\n          // If autoplay is on but disableArrowsOnEdges is enabled, going beyond the last one will also bring\n          // the first one in.\n          index = this.conf.disableArrowsOnEdges ? (this.conf.autoplay ? 0 : this.slides.count - 1) : 0\n        }\n      }\n\n      return { nextSlide: index, clone: clone }\n    },\n\n    goToSlide (index, options = {}) {\n      if (!this.slides.count || this.disable) return\n\n      if (this.conf.autoplay) this.clearTimer()\n\n      // animation = slide transition is animated.\n      // autoPlaying = go to the next slide by autoplay - no user intervention.\n      // jumping = after reaching a clone, the callback jumps back to original slide with no animation.\n      let { animation = true, autoPlaying = false, jumping = false } = options\n\n      this.transition.animated = animation\n      setTimeout(() => this.transition.animated = false, this.transitionSpeed)\n\n      // Get the next slide index and whether it's a clone.\n      let { nextSlide, clone: nextSlideIsClone } = this.getSlideInRange(index)\n\n      // Emit event. First use of `goToSlide` is while init, so should not propagate an event.\n      if (this.isReady && !jumping) {\n        this.emit('before-slide', true, nextSlide)\n\n        if (nextSlideIsClone !== null) this.cloneSlides()\n      }\n\n      // Disable arrows if `disableArrowsOnEdges` is on and there is no slide to go to on that end.\n      if (this.conf.arrows && this.conf.disableArrowsOnEdges) {\n        this.arrowPrevDisabled = nextSlide === 0\n        this.arrowNextDisabled = nextSlide === this.slides.count - 1\n      }\n\n      // Infinite sliding with cloned slides:\n      // When reaching last slide and going next the cloned slide of the first slide\n      // shows up, when the animation ends the real change to the first slide is done\n      // immediately with no animation.\n      // Same principle when going beyond first slide.\n      if (nextSlideIsClone !== null) {// Gives clone id (0 or 1 or null).\n        setTimeout(() => {\n          // inside the callback, also check if it is not too late to apply next slide\n          // (user may have slid fast multiple times) if so cancel callback.\n          let passedCloneBackward = index === -1 && this.slides.current !== this.slides.count - 1\n          let passedCloneForward = index === this.slides.count && this.slides.current !== 0\n          let tooLateToSetTimeout = passedCloneBackward || passedCloneForward\n\n          if (!tooLateToSetTimeout) {\n            this.transition.speed = 0\n            this.goToSlide(nextSlideIsClone ? 0 : this.slides.count - 1, { animation: false, jumping: true })\n            setTimeout(() => this.transition.speed = this.conf.transitionSpeed, 10)\n          }\n        }, this.transition.speed - 50)\n      }\n\n      this.slides.current = nextSlide\n\n      // Only apply sliding transition when the slideshow animation type is `slide`.\n      if (!this.conf.fade) {\n        if (nextSlideIsClone !== null) {\n          this.transition.currentTranslation = - 100 * (nextSlideIsClone ? this.slides.count + 1 : 0)\n        }\n        else this.transition.currentTranslation = - 100 * (this.slides.current + (this.clones.length ? 1 : 0))\n      }\n\n      this.slides.activeUid = this.slides.list[this.slides.current]._uid\n\n      if (this.conf.autoplay && !this.mouseOver) {\n        this.setTimer()\n      }\n\n      if (this.slides.count) {\n        if (this.$slots.default[this.slides.current]) {\n          // First use of goToSlide is while init, so should not propagate an event.\n          if (this.isReady && !jumping) this.emit('slide')\n        }\n\n        if (this.isReady && !autoPlaying && !jumping && this.$refs.bullet[this.slides.current]) {\n          this.$refs.bullet[this.slides.current].focus()\n        }\n      }\n    },\n\n    addSlide (newSlide) {\n      const needReclone = this.conf.infinite && this.isReady && newSlide.clone === null\n\n      if (newSlide.clone !== null) {\n        this.clones[newSlide.clone] = newSlide\n      }\n\n      else {\n        // Add the slide in the slides array & update slides.count.\n        this.slides.list.push(newSlide)\n        this.slides.count = this.slides.list.length\n      }\n\n      if (this.slides.count > 1 && this.touchable) {\n        this.touch.enabled = true\n      }\n\n      // cloneSlides() is called at the end of init so calling it before would be redundant.\n      if (needReclone) {\n        this.$nextTick(() => this.cloneSlides())\n      }\n    },\n\n    removeSlide (uid) {\n      let needReclone = false\n\n      this.slides.list.some((slide, i) => {\n        if (slide._uid === uid) {\n          // Remove the slide.\n          this.slides.list.splice(i, 1)\n          this.slides.count = this.slides.list.length\n\n          // If the slide to remove is the current slide, slide to the previous slide.\n          if (uid === this.slides.activeUid) {\n            this.slides.activeUid = null\n            this.goToSlide(i - 1, { autoPlaying: true })\n          }\n\n          if (this.slides.count <= 1) {\n            this.touch.enabled = false\n          }\n\n          if (this.clones.length && this.isReady && !slide.clone) needReclone = true\n\n          return true // Break the `Array.some` loop.\n        }\n      })\n\n      if (this.slides.count && needReclone) {\n        this.cloneSlides()\n      }\n    }\n  },\n\n  computed: {\n    // this.conf needs to be reactive so user can change a Vueper Slides option and everything gets updated.\n    conf () {\n      // Read config from the props then check if breakpoints are defined. If so override the config with\n      // the breakpoint ones.\n      let conf = {\n        ...this.$props,\n        ...(this.$props.breakpoints && this.$props.breakpoints[this.breakpointsData.current] || {})\n      }\n\n      if (conf.fade) {\n        conf.infinite = false\n      }\n\n      return conf\n    },\n    trackStyles () {\n      let styles = {}\n\n      styles.transitionDuration = this.transition.speed + 'ms'\n\n      if (!this.conf.fade) {\n        styles.transform = 'translateX(' + this.transition.currentTranslation + '%)'\n      }\n\n      return styles\n    },\n    trackWrapperStyles () {\n      let styles = {}\n\n      if (this.conf.parallax) {\n        styles.transform = 'translateY(' + this.parallaxData.translation + '%)'\n\n        // Increase browser optimizations by allocating more machine resource.\n        // ! \\\\ To be used wisely so deactivate when not needed.\n        styles.willChange = this.parallaxData.isVisible ? 'transform' : 'auto'\n      }\n\n      return styles\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n// Vueperslides REQUIRED styles.\n// The nice-to-have not required styles are placed in an external\n// css file so the end user can easily override them.\n.vueperslides {\n  position: relative;\n\n  &__inner {\n    position: relative;\n    user-select: none;\n  }\n\n  &__parallax-wrapper {\n    position: relative;\n    // padding-bottom: 33.33%;\n    overflow: hidden;\n  }\n\n  &__track-wrapper {\n    position: absolute;\n    top: 0;\n    height: 100%;\n    left: 0;\n    right: 0;\n    overflow: hidden;\n    z-index: 1;\n  }\n\n  &--parallax &__track-wrapper {\n    height: 200%;\n    transform: translateY(0);\n  }\n\n  &--fade &__track {\n    white-space: normal;\n    transition: none;\n  }\n\n  &--touchable &__track {\n    cursor: ew-resize;\n    cursor: -webkit-grab;\n    cursor: grab;\n\n    &--mousedown, &--dragging {\n      cursor: -webkit-grabbing;\n      cursor: grabbing;\n    }\n  }\n\n  &__track {\n    white-space: nowrap;\n    transition: 0.5s ease-in-out transform;\n    height: 100%;\n\n    &--mousedown {\n      transition: 0.2s ease-in-out transform !important;\n    }\n\n    &--dragging {\n      transition: none;\n    }\n\n    &--no-animation {\n      transition-duration: 0s;\n    }\n  }\n\n  &__slide {\n    white-space: normal;\n    background-size: cover;\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n\n  &__slide &__slide-content {\n    position: absolute;\n  }\n\n  &--fade &__slide {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    transition: .8s ease-in-out opacity;\n\n    &--active {\n      z-index: 1;\n      opacity: 1;\n    }\n  }\n\n  &__arrow {\n    position: absolute;\n    fill: currentColor;\n    width: 1em;\n    text-align: center;\n    transform: translateY(-50%);\n    transition: 0.3s ease-in-out;\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n  }\n\n  &__paused {\n    position: absolute;\n    transition: 0.3s ease-in-out;\n  }\n\n  &__bullets {\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    &--outside {\n      position: relative;\n    }\n  }\n\n  &__bullet {\n    cursor: pointer;\n    user-select: none;\n    outline: none;\n    z-index: 2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &::-moz-focus-inner {\n      border: 0;\n    }\n  }\n}\n</style>","import VueperSlides from './components/VueperSlides.vue'\nimport VueperSlide from './components/VueperSlide.vue'\n\n// Expose component to global scope.\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.component('vueper-slides', VueperSlides)\n  window.Vue.component('vueper-slide', VueperSlide)\n}\n\nexport { VueperSlides, VueperSlide }\n"],"names":["render","Number","String","$parent","addSlide","clone","removeSlide","_uid","image","backgroundImage","slideTitle","$slots","undefined","slideContent","VueperSlide","Boolean","Object","list","count","activeUid","current","clones","enabled","dragging","dragStartX","dragAmount","goNext","currentTranslation","speed","animated","translation","slideshowOffsetTop","isVisible","init","emit","container","$refs","vueperslides","touch","conf","touchable","transition","transitionSpeed","keys","breakpoints","length","setBreakpointsList","setBreakpointConfig","getCurrentBreakpoint","infinite","cloneSlides","$nextTick","goToSlide","initSlide","bindEvents","isReady","name","includeCurrentSlide","includeNextSlide","args","slides","currentSlide","getSlideData","getSlideInRange","nextSlideIndex","nextSlide","$emit","index","withStyle","slide","elm","elmT","elmC","data","title","innerHTML","content","$el","attributes","style","value","what","titleSlot","contentSlot","breakpointsData","sort","a","b","parseInt","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","indexOf","breakpoint","hasTouch","track","addEventListener","onMouseDown","onMouseMove","onMouseUp","pauseOnHover","autoplay","onMouseIn","onMouseOut","parallax","onResize","onScroll","force","parallaxData","el","top","offsetTop","offsetParent","e","doc","scrollTop","pageYOffset","clientTop","windowHeight","innerHeight","clientHeight","slideshowHeight","slideshowTopOffset","getSlideshowOffsetTop","vsBottom2WinTop","vsTop2winBottom","log","heightToCoverWithTranslation","percentage","translatePercentage","hasBreakpointChanged","mouseOver","clearTimer","setTimer","disable","touches","preventDefault","mouseDown","draggingDistance","clientX","dragPercentage","getDragPercentage","refreshClonesOnDrag","getDragAmount","dragAmountPercentage","slideOnDragEnd","Math","abs","round","arrowNextDisabled","enableScroll","offsetLeft","ontouchmove","timer","setTimeout","autoPlaying","disableArrowsOnEdges","options","animation","jumping","nextSlideIsClone","arrows","arrowPrevDisabled","passedCloneBackward","passedCloneForward","tooLateToSetTimeout","fade","default","bullet","focus","newSlide","needReclone","push","uid","some","i","splice","$props","styles","transitionDuration","transform","willChange","Vue","component","VueperSlides"],"mappings":"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"}