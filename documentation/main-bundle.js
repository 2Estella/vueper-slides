/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/vueper-slides/documentation/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MTU5ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxjQUFjOztBQUVsRTtBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(15);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (\"development\" !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (\"development\" !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"development\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (\"development\" !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"development\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"development\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    \"development\" !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (true) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (\"development\" !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    true\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (\"development\" !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (true) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      \"development\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"development\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 true\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (true) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (\"development\" !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (true) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (\"development\" !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"development\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (true) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"development\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"development\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (\"development\" !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (\"development\" !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (true) {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (true) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (true) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (\"development\" !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (\"development\" !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"development\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"development\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"development\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (\"development\" !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (true) {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (true) {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (true) {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (\"development\" !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (\"development\" !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (true) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (\"development\" !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (\"development\" !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (\"development\" !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (\"development\" !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (true) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"development\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (true) {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (\"development\" !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (true) {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (true) {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (true) {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (\"development\" !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (\"development\" !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (true) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    \"development\" !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (true) {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (true) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (true) {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (\"development\" !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (\"development\" !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"development\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (\"development\" !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (\"development\" !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (true) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        \"development\" !== 'production' &&\n        \"development\" !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (\"development\" !== 'production' &&\n      \"development\" !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (\"development\" !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (true) {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (\"development\" !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (\"development\" !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"development\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (true) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (true) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (true) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (\"development\" !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (true) {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (true) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (\"development\" !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (\"development\" !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && el.attrsMap['v-for']) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (\"development\" !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (true) {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      \"development\" !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (\"development\" !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"development\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\"development\" !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (\"development\" !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (true) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (true) {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (true) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (true) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"development\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (\"development\" !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (true) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(3), __webpack_require__(5).setImmediate))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0Qzs7QUFFNUMiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxyXG5cdFx0ZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _vue = __webpack_require__(2);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _router = __webpack_require__(8);\n\nvar _router2 = _interopRequireDefault(_router);\n\nvar _vuetify = __webpack_require__(24);\n\nvar _vuetify2 = _interopRequireDefault(_vuetify);\n\n__webpack_require__(25);\n\n__webpack_require__(27);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_vue2.default.use(_vuetify2.default, {\n  theme: {\n    primary: '#ff5252',\n    secondary: '#42b983',\n    maintext: '#999'\n    // Default Vuetify colors.\n    // secondary: '#424242',\n    // accent: '#82B1FF',\n    // error: '#FF5252',\n    // info: '#2196F3',\n    // success: '#4CAF50',\n    // warning: '#FFC107'\n  }\n});\n\nnew _vue2.default({ // eslint-disable-line no-new\n  el: '#app',\n  router: _router2.default,\n  template: __webpack_require__(29),\n  data: function data() {\n    return {\n      offsetTop: 0\n    };\n  },\n  methods: {\n    onScroll: function onScroll(e) {\n      this.offsetTop = window.pageYOffset || document.documentElement.scrollTop;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/OTU1MiJdLCJuYW1lcyI6WyJ1c2UiLCJ0aGVtZSIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJtYWludGV4dCIsImVsIiwicm91dGVyIiwidGVtcGxhdGUiLCJyZXF1aXJlIiwiZGF0YSIsIm9mZnNldFRvcCIsIm1ldGhvZHMiLCJvblNjcm9sbCIsImUiLCJ3aW5kb3ciLCJwYWdlWU9mZnNldCIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsVG9wIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOztBQUNBOzs7O0FBRUEsY0FBSUEsR0FBSixvQkFBaUI7QUFDZkMsU0FBTztBQUNMQyxhQUFTLFNBREo7QUFFTEMsZUFBVyxTQUZOO0FBR0xDLGNBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZLO0FBRFEsQ0FBakI7O0FBZUEsa0JBQVEsRUFBRTtBQUNSQyxNQUFJLE1BREU7QUFFTkMsMEJBRk07QUFHTkMsWUFBVSxtQkFBQUMsQ0FBUSxFQUFSLENBSEo7QUFJTkMsUUFBTTtBQUFBLFdBQU87QUFDWEMsaUJBQVc7QUFEQSxLQUFQO0FBQUEsR0FKQTtBQU9OQyxXQUFTO0FBQ1BDLFlBRE8sb0JBQ0dDLENBREgsRUFDTTtBQUNYLFdBQUtILFNBQUwsR0FBaUJJLE9BQU9DLFdBQVAsSUFBc0JDLFNBQVNDLGVBQVQsQ0FBeUJDLFNBQWhFO0FBQ0Q7QUFITTtBQVBILENBQVIiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUgZnJvbSAndnVlJ1xuaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcidcbmltcG9ydCBWdWV0aWZ5IGZyb20gJ3Z1ZXRpZnknXG5pbXBvcnQgJy4uL25vZGVfbW9kdWxlcy92dWV0aWZ5L2Rpc3QvdnVldGlmeS5taW4uY3NzJ1xuaW1wb3J0ICcuL3N0eWxlcy9pbmRleC5zY3NzJ1xuXG5WdWUudXNlKFZ1ZXRpZnksIHtcbiAgdGhlbWU6IHtcbiAgICBwcmltYXJ5OiAnI2ZmNTI1MicsXG4gICAgc2Vjb25kYXJ5OiAnIzQyYjk4MycsXG4gICAgbWFpbnRleHQ6ICcjOTk5J1xuICAgIC8vIERlZmF1bHQgVnVldGlmeSBjb2xvcnMuXG4gICAgLy8gc2Vjb25kYXJ5OiAnIzQyNDI0MicsXG4gICAgLy8gYWNjZW50OiAnIzgyQjFGRicsXG4gICAgLy8gZXJyb3I6ICcjRkY1MjUyJyxcbiAgICAvLyBpbmZvOiAnIzIxOTZGMycsXG4gICAgLy8gc3VjY2VzczogJyM0Q0FGNTAnLFxuICAgIC8vIHdhcm5pbmc6ICcjRkZDMTA3J1xuICB9XG59KVxuXG5uZXcgVnVlKHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgZWw6ICcjYXBwJyxcbiAgcm91dGVyLFxuICB0ZW1wbGF0ZTogcmVxdWlyZSgnLi90ZW1wbGF0ZS5wdWcnKSxcbiAgZGF0YTogKCkgPT4gKHtcbiAgICBvZmZzZXRUb3A6IDBcbiAgfSksXG4gIG1ldGhvZHM6IHtcbiAgICBvblNjcm9sbCAoZSkge1xuICAgICAgdGhpcy5vZmZzZXRUb3AgPSB3aW5kb3cucGFnZVlPZmZzZXQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcFxuICAgIH1cbiAgfVxufSlcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(6);\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcz9kN2FkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcGx5ID0gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgd2luZG93LCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbCh3aW5kb3csIHRoaXMuX2lkKTtcbn07XG5cbi8vIERvZXMgbm90IHN0YXJ0IHRoZSB0aW1lLCBqdXN0IHNldHMgdXAgdGhlIG1lbWJlcnMgbmVlZGVkLlxuZXhwb3J0cy5lbnJvbGwgPSBmdW5jdGlvbihpdGVtLCBtc2Vjcykge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gbXNlY3M7XG59O1xuXG5leHBvcnRzLnVuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gLTE7XG59O1xuXG5leHBvcnRzLl91bnJlZkFjdGl2ZSA9IGV4cG9ydHMuYWN0aXZlID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG5cbiAgdmFyIG1zZWNzID0gaXRlbS5faWRsZVRpbWVvdXQ7XG4gIGlmIChtc2VjcyA+PSAwKSB7XG4gICAgaXRlbS5faWRsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gb25UaW1lb3V0KCkge1xuICAgICAgaWYgKGl0ZW0uX29uVGltZW91dClcbiAgICAgICAgaXRlbS5fb25UaW1lb3V0KCk7XG4gICAgfSwgbXNlY3MpO1xuICB9XG59O1xuXG4vLyBzZXRpbW1lZGlhdGUgYXR0YWNoZXMgaXRzZWxmIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG5yZXF1aXJlKFwic2V0aW1tZWRpYXRlXCIpO1xuLy8gT24gc29tZSBleG90aWMgZW52aXJvbm1lbnRzLCBpdCdzIG5vdCBjbGVhciB3aGljaCBvYmplY3QgYHNldGltbWVpZGF0ZWAgd2FzXG4vLyBhYmxlIHRvIGluc3RhbGwgb250by4gIFNlYXJjaCBlYWNoIHBvc3NpYmlsaXR5IGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZVxuLy8gYHNldGltbWVkaWF0ZWAgbGlicmFyeS5cbmV4cG9ydHMuc2V0SW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLnNldEltbWVkaWF0ZSk7XG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuY2xlYXJJbW1lZGlhdGUpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(7)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2V0aW1tZWRpYXRlL3NldEltbWVkaWF0ZS5qcz85YjJhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBDQUEwQyxzQkFBc0IsRUFBRTtBQUNsRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChnbG9iYWwsIHVuZGVmaW5lZCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgaWYgKGdsb2JhbC5zZXRJbW1lZGlhdGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBuZXh0SGFuZGxlID0gMTsgLy8gU3BlYyBzYXlzIGdyZWF0ZXIgdGhhbiB6ZXJvXG4gICAgdmFyIHRhc2tzQnlIYW5kbGUgPSB7fTtcbiAgICB2YXIgY3VycmVudGx5UnVubmluZ0FUYXNrID0gZmFsc2U7XG4gICAgdmFyIGRvYyA9IGdsb2JhbC5kb2N1bWVudDtcbiAgICB2YXIgcmVnaXN0ZXJJbW1lZGlhdGU7XG5cbiAgICBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoY2FsbGJhY2spIHtcbiAgICAgIC8vIENhbGxiYWNrIGNhbiBlaXRoZXIgYmUgYSBmdW5jdGlvbiBvciBhIHN0cmluZ1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNhbGxiYWNrID0gbmV3IEZ1bmN0aW9uKFwiXCIgKyBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgICAvLyBDb3B5IGZ1bmN0aW9uIGFyZ3VtZW50c1xuICAgICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpICsgMV07XG4gICAgICB9XG4gICAgICAvLyBTdG9yZSBhbmQgcmVnaXN0ZXIgdGhlIHRhc2tcbiAgICAgIHZhciB0YXNrID0geyBjYWxsYmFjazogY2FsbGJhY2ssIGFyZ3M6IGFyZ3MgfTtcbiAgICAgIHRhc2tzQnlIYW5kbGVbbmV4dEhhbmRsZV0gPSB0YXNrO1xuICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUobmV4dEhhbmRsZSk7XG4gICAgICByZXR1cm4gbmV4dEhhbmRsZSsrO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGhhbmRsZSkge1xuICAgICAgICBkZWxldGUgdGFza3NCeUhhbmRsZVtoYW5kbGVdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bih0YXNrKSB7XG4gICAgICAgIHZhciBjYWxsYmFjayA9IHRhc2suY2FsbGJhY2s7XG4gICAgICAgIHZhciBhcmdzID0gdGFzay5hcmdzO1xuICAgICAgICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bklmUHJlc2VudChoYW5kbGUpIHtcbiAgICAgICAgLy8gRnJvbSB0aGUgc3BlYzogXCJXYWl0IHVudGlsIGFueSBpbnZvY2F0aW9ucyBvZiB0aGlzIGFsZ29yaXRobSBzdGFydGVkIGJlZm9yZSB0aGlzIG9uZSBoYXZlIGNvbXBsZXRlZC5cIlxuICAgICAgICAvLyBTbyBpZiB3ZSdyZSBjdXJyZW50bHkgcnVubmluZyBhIHRhc2ssIHdlJ2xsIG5lZWQgdG8gZGVsYXkgdGhpcyBpbnZvY2F0aW9uLlxuICAgICAgICBpZiAoY3VycmVudGx5UnVubmluZ0FUYXNrKSB7XG4gICAgICAgICAgICAvLyBEZWxheSBieSBkb2luZyBhIHNldFRpbWVvdXQuIHNldEltbWVkaWF0ZSB3YXMgdHJpZWQgaW5zdGVhZCwgYnV0IGluIEZpcmVmb3ggNyBpdCBnZW5lcmF0ZWQgYVxuICAgICAgICAgICAgLy8gXCJ0b28gbXVjaCByZWN1cnNpb25cIiBlcnJvci5cbiAgICAgICAgICAgIHNldFRpbWVvdXQocnVuSWZQcmVzZW50LCAwLCBoYW5kbGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIHRhc2sgPSB0YXNrc0J5SGFuZGxlW2hhbmRsZV07XG4gICAgICAgICAgICBpZiAodGFzaykge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IHRydWU7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcnVuKHRhc2spO1xuICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW1tZWRpYXRlKGhhbmRsZSk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxOZXh0VGlja0ltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiAoKSB7IHJ1bklmUHJlc2VudChoYW5kbGUpOyB9KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYW5Vc2VQb3N0TWVzc2FnZSgpIHtcbiAgICAgICAgLy8gVGhlIHRlc3QgYWdhaW5zdCBgaW1wb3J0U2NyaXB0c2AgcHJldmVudHMgdGhpcyBpbXBsZW1lbnRhdGlvbiBmcm9tIGJlaW5nIGluc3RhbGxlZCBpbnNpZGUgYSB3ZWIgd29ya2VyLFxuICAgICAgICAvLyB3aGVyZSBgZ2xvYmFsLnBvc3RNZXNzYWdlYCBtZWFucyBzb21ldGhpbmcgY29tcGxldGVseSBkaWZmZXJlbnQgYW5kIGNhbid0IGJlIHVzZWQgZm9yIHRoaXMgcHVycG9zZS5cbiAgICAgICAgaWYgKGdsb2JhbC5wb3N0TWVzc2FnZSAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpIHtcbiAgICAgICAgICAgIHZhciBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzID0gdHJ1ZTtcbiAgICAgICAgICAgIHZhciBvbGRPbk1lc3NhZ2UgPSBnbG9iYWwub25tZXNzYWdlO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXMgPSBmYWxzZTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoXCJcIiwgXCIqXCIpO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IG9sZE9uTWVzc2FnZTtcbiAgICAgICAgICAgIHJldHVybiBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIC8vIEluc3RhbGxzIGFuIGV2ZW50IGhhbmRsZXIgb24gYGdsb2JhbGAgZm9yIHRoZSBgbWVzc2FnZWAgZXZlbnQ6IHNlZVxuICAgICAgICAvLyAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0RPTS93aW5kb3cucG9zdE1lc3NhZ2VcbiAgICAgICAgLy8gKiBodHRwOi8vd3d3LndoYXR3Zy5vcmcvc3BlY3Mvd2ViLWFwcHMvY3VycmVudC13b3JrL211bHRpcGFnZS9jb21tcy5odG1sI2Nyb3NzRG9jdW1lbnRNZXNzYWdlc1xuXG4gICAgICAgIHZhciBtZXNzYWdlUHJlZml4ID0gXCJzZXRJbW1lZGlhdGUkXCIgKyBNYXRoLnJhbmRvbSgpICsgXCIkXCI7XG4gICAgICAgIHZhciBvbkdsb2JhbE1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LnNvdXJjZSA9PT0gZ2xvYmFsICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIGV2ZW50LmRhdGEgPT09IFwic3RyaW5nXCIgJiZcbiAgICAgICAgICAgICAgICBldmVudC5kYXRhLmluZGV4T2YobWVzc2FnZVByZWZpeCkgPT09IDApIHtcbiAgICAgICAgICAgICAgICBydW5JZlByZXNlbnQoK2V2ZW50LmRhdGEuc2xpY2UobWVzc2FnZVByZWZpeC5sZW5ndGgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UsIGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdsb2JhbC5hdHRhY2hFdmVudChcIm9ubWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShtZXNzYWdlUHJlZml4ICsgaGFuZGxlLCBcIipcIik7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbE1lc3NhZ2VDaGFubmVsSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHZhciBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBoYW5kbGUgPSBldmVudC5kYXRhO1xuICAgICAgICAgICAgcnVuSWZQcmVzZW50KGhhbmRsZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGNoYW5uZWwucG9ydDIucG9zdE1lc3NhZ2UoaGFuZGxlKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICB2YXIgaHRtbCA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHJlZ2lzdGVySW1tZWRpYXRlID0gZnVuY3Rpb24oaGFuZGxlKSB7XG4gICAgICAgICAgICAvLyBDcmVhdGUgYSA8c2NyaXB0PiBlbGVtZW50OyBpdHMgcmVhZHlzdGF0ZWNoYW5nZSBldmVudCB3aWxsIGJlIGZpcmVkIGFzeW5jaHJvbm91c2x5IG9uY2UgaXQgaXMgaW5zZXJ0ZWRcbiAgICAgICAgICAgIC8vIGludG8gdGhlIGRvY3VtZW50LiBEbyBzbywgdGh1cyBxdWV1aW5nIHVwIHRoZSB0YXNrLiBSZW1lbWJlciB0byBjbGVhbiB1cCBvbmNlIGl0J3MgYmVlbiBjYWxsZWQuXG4gICAgICAgICAgICB2YXIgc2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJ1bklmUHJlc2VudChoYW5kbGUpO1xuICAgICAgICAgICAgICAgIHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgICAgICAgICBzY3JpcHQgPSBudWxsO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsU2V0VGltZW91dEltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgc2V0VGltZW91dChydW5JZlByZXNlbnQsIDAsIGhhbmRsZSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gSWYgc3VwcG9ydGVkLCB3ZSBzaG91bGQgYXR0YWNoIHRvIHRoZSBwcm90b3R5cGUgb2YgZ2xvYmFsLCBzaW5jZSB0aGF0IGlzIHdoZXJlIHNldFRpbWVvdXQgZXQgYWwuIGxpdmUuXG4gICAgdmFyIGF0dGFjaFRvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZihnbG9iYWwpO1xuICAgIGF0dGFjaFRvID0gYXR0YWNoVG8gJiYgYXR0YWNoVG8uc2V0VGltZW91dCA/IGF0dGFjaFRvIDogZ2xvYmFsO1xuXG4gICAgLy8gRG9uJ3QgZ2V0IGZvb2xlZCBieSBlLmcuIGJyb3dzZXJpZnkgZW52aXJvbm1lbnRzLlxuICAgIGlmICh7fS50b1N0cmluZy5jYWxsKGdsb2JhbC5wcm9jZXNzKSA9PT0gXCJbb2JqZWN0IHByb2Nlc3NdXCIpIHtcbiAgICAgICAgLy8gRm9yIE5vZGUuanMgYmVmb3JlIDAuOVxuICAgICAgICBpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbigpO1xuXG4gICAgfSBlbHNlIGlmIChjYW5Vc2VQb3N0TWVzc2FnZSgpKSB7XG4gICAgICAgIC8vIEZvciBub24tSUUxMCBtb2Rlcm4gYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSBpZiAoZ2xvYmFsLk1lc3NhZ2VDaGFubmVsKSB7XG4gICAgICAgIC8vIEZvciB3ZWIgd29ya2Vycywgd2hlcmUgc3VwcG9ydGVkXG4gICAgICAgIGluc3RhbGxNZXNzYWdlQ2hhbm5lbEltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2UgaWYgKGRvYyAmJiBcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiIGluIGRvYy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpKSB7XG4gICAgICAgIC8vIEZvciBJRSA24oCTOFxuICAgICAgICBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBGb3Igb2xkZXIgYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFNldFRpbWVvdXRJbXBsZW1lbnRhdGlvbigpO1xuICAgIH1cblxuICAgIGF0dGFjaFRvLnNldEltbWVkaWF0ZSA9IHNldEltbWVkaWF0ZTtcbiAgICBhdHRhY2hUby5jbGVhckltbWVkaWF0ZSA9IGNsZWFySW1tZWRpYXRlO1xufSh0eXBlb2Ygc2VsZiA9PT0gXCJ1bmRlZmluZWRcIiA/IHR5cGVvZiBnbG9iYWwgPT09IFwidW5kZWZpbmVkXCIgPyB0aGlzIDogZ2xvYmFsIDogc2VsZikpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvc2V0aW1tZWRpYXRlL3NldEltbWVkaWF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _vue = __webpack_require__(2);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _vueRouter = __webpack_require__(9);\n\nvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\nvar _main = __webpack_require__(10);\n\nvar _main2 = _interopRequireDefault(_main);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_vue2.default.use(_vueRouter2.default);\n\nexports.default = new _vueRouter2.default({\n  mode: 'history',\n  routes: [{\n    path: '/vueper-slides/documentation/',\n    component: _main2.default\n  }, {\n    path: '*',\n    redirect: '/vueper-slides/documentation/'\n  }]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcm91dGVyLmpzPzcwN2IiXSwibmFtZXMiOlsidXNlIiwibW9kZSIsInJvdXRlcyIsInBhdGgiLCJjb21wb25lbnQiLCJyZWRpcmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxjQUFJQSxHQUFKOztrQkFFZSx3QkFBYztBQUMzQkMsUUFBTSxTQURxQjtBQUUzQkMsVUFBUSxDQUNOO0FBQ0VDLFVBQU0sK0JBRFI7QUFFRUM7QUFGRixHQURNLEVBS047QUFDRUQsVUFBTSxHQURSO0FBRUVFLGNBQVU7QUFGWixHQUxNO0FBRm1CLENBQWQsQyIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5pbXBvcnQgVnVlUm91dGVyIGZyb20gJ3Z1ZS1yb3V0ZXInXG5pbXBvcnQgbWFpbiBmcm9tICcuL3BhZ2VzL21haW4nXG5cblZ1ZS51c2UoVnVlUm91dGVyKVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgVnVlUm91dGVyKHtcbiAgbW9kZTogJ2hpc3RvcnknLFxuICByb3V0ZXM6IFtcbiAgICB7XG4gICAgICBwYXRoOiAnL3Z1ZXBlci1zbGlkZXMvZG9jdW1lbnRhdGlvbi8nLFxuICAgICAgY29tcG9uZW50OiBtYWluXG4gICAgfSxcbiAgICB7XG4gICAgICBwYXRoOiAnKicsXG4gICAgICByZWRpcmVjdDogJy92dWVwZXItc2xpZGVzL2RvY3VtZW50YXRpb24vJ1xuICAgIH1cbiAgXVxufSlcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9yb3V0ZXIuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (\"development\" !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (true) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"development\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (true) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (true) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (true) {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (\"development\" !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (true) {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (true) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (true) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (true) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (true) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (true) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (true) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (true) {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"development\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (true) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"development\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (VueRouter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _vue = __webpack_require__(2);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _vueperslides = __webpack_require__(11);\n\nvar _syntaxHighlighter = __webpack_require__(12);\n\n__webpack_require__(16);\n\n__webpack_require__(18);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _vue2.default.extend({\n  components: {\n    VueperSlides: _vueperslides.VueperSlides,\n    VueperSlide: _vueperslides.VueperSlide,\n    precode: _syntaxHighlighter.precode\n  },\n  template: __webpack_require__(20),\n  data: function data() {\n    return {\n      events: '',\n      slideshowDisabled: false,\n      imagesRoot:  false ? './dist/images/' : './images/',\n      colors: ['#4caf50', '#2196f3', '#ffc107', '#ff5252'],\n      slides: [{\n        id: 'slide-1',\n        title: 'Slide <b style=\"font-size: 1.3em;color: yellow\">#1</b>',\n        content: 'Slide title can be HTML.<br>And so does the slide content, <span style=\"font-size: 1.2em;color: yellow\">why not?</span>'\n      }, {\n        id: 'slide-2',\n        title: 'Slide <b style=\"font-size: 1.3em;color: #ff5252\">#2</b>',\n        content: 'Slide 2 content.'\n      }, {\n        id: 'slide-3',\n        title: 'Slide 3',\n        content: 'Slide 3 content.'\n      }, {\n        id: 'slide-4',\n        title: 'Slide 4',\n        content: 'Slide 4 content.'\n      }, {\n        id: 'slide-5',\n        title: 'Slide 5',\n        content: 'Slide 5 content.'\n      }, {\n        id: 'slide-6',\n        title: 'Slide 6',\n        content: 'Slide 6 content.'\n      }, {\n        id: 'slide-7',\n        title: 'Slide 7',\n        content: 'Slide 7 content.'\n      }, {\n        id: 'slide-8',\n        title: 'Slide 8',\n        content: 'Slide 8 content.'\n      }],\n      slides2: [{\n        title: 'Mountain 1',\n        content: 'Slide 1 content.',\n        image: __webpack_require__(21)\n      }, {\n        title: 'Mountain 2',\n        content: 'Slide 2 content.',\n        image: __webpack_require__(22)\n      }, {\n        title: 'Mountain 3',\n        content: 'Slide 3 content.',\n        image: __webpack_require__(23)\n      }],\n      slides3: [{\n        title: 'Slide 1',\n        content: 'Slide 1 content.'\n      }, {\n        title: 'Slide 2',\n        content: 'Slide 2 content.'\n      }]\n    };\n  },\n  methods: {\n    logEvents: function logEvents(eventName, params) {\n      this.events += '<b>Event:</b> ' + eventName + ', <b>Params:</b> ' + JSON.stringify(params, null, 0) + '<br>';\n    },\n    appendSlide: function appendSlide() {\n      this.slides3.push({\n        title: 'Programmagically appended slide ' + (this.slides3.length + 1),\n        content: 'Programmagically appended slide ' + (this.slides3.length + 1) + ' content.'\n      });\n    },\n    removeSlide: function removeSlide() {\n      this.slides3.pop();\n    },\n    toggleSlideshow: function toggleSlideshow() {\n      this.slideshowDisabled = !this.slideshowDisabled;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    setTimeout(function () {\n      _this.disabled = true;\n    }, 3000);\n    setTimeout(function () {\n      _this.disabled = false;\n    }, 6000);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvbWFpbi9pbmRleC5qcz9mNzUyIl0sIm5hbWVzIjpbImV4dGVuZCIsImNvbXBvbmVudHMiLCJWdWVwZXJTbGlkZXMiLCJWdWVwZXJTbGlkZSIsInByZWNvZGUiLCJ0ZW1wbGF0ZSIsInJlcXVpcmUiLCJkYXRhIiwiZXZlbnRzIiwic2xpZGVzaG93RGlzYWJsZWQiLCJpbWFnZXNSb290IiwiY29sb3JzIiwic2xpZGVzIiwiaWQiLCJ0aXRsZSIsImNvbnRlbnQiLCJzbGlkZXMyIiwiaW1hZ2UiLCJzbGlkZXMzIiwibWV0aG9kcyIsImxvZ0V2ZW50cyIsImV2ZW50TmFtZSIsInBhcmFtcyIsIkpTT04iLCJzdHJpbmdpZnkiLCJhcHBlbmRTbGlkZSIsInB1c2giLCJsZW5ndGgiLCJyZW1vdmVTbGlkZSIsInBvcCIsInRvZ2dsZVNsaWRlc2hvdyIsImNyZWF0ZWQiLCJzZXRUaW1lb3V0IiwiZGlzYWJsZWQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7a0JBRWUsY0FBSUEsTUFBSixDQUFXO0FBQ3hCQyxjQUFZO0FBQ1ZDLDRDQURVO0FBRVZDLDBDQUZVO0FBR1ZDO0FBSFUsR0FEWTtBQU14QkMsWUFBVSxtQkFBQUMsQ0FBUSxFQUFSLENBTmM7QUFPeEJDLFFBQU07QUFBQSxXQUFPO0FBQ1hDLGNBQVEsRUFERztBQUVYQyx5QkFBbUIsS0FGUjtBQUdYQyxrQkFBWSxTQUF3QyxnQkFBeEMsR0FBMkQsV0FINUQ7QUFJWEMsY0FBUSxDQUNOLFNBRE0sRUFFTixTQUZNLEVBR04sU0FITSxFQUlOLFNBSk0sQ0FKRztBQVVYQyxjQUFRLENBQ047QUFDRUMsWUFBSSxTQUROO0FBRUVDLGVBQU8sd0RBRlQ7QUFHRUMsaUJBQVM7QUFIWCxPQURNLEVBTU47QUFDRUYsWUFBSSxTQUROO0FBRUVDLGVBQU8seURBRlQ7QUFHRUMsaUJBQVM7QUFIWCxPQU5NLEVBV047QUFDRUYsWUFBSSxTQUROO0FBRUVDLGVBQU8sU0FGVDtBQUdFQyxpQkFBUztBQUhYLE9BWE0sRUFnQk47QUFDRUYsWUFBSSxTQUROO0FBRUVDLGVBQU8sU0FGVDtBQUdFQyxpQkFBUztBQUhYLE9BaEJNLEVBcUJOO0FBQ0VGLFlBQUksU0FETjtBQUVFQyxlQUFPLFNBRlQ7QUFHRUMsaUJBQVM7QUFIWCxPQXJCTSxFQTBCTjtBQUNFRixZQUFJLFNBRE47QUFFRUMsZUFBTyxTQUZUO0FBR0VDLGlCQUFTO0FBSFgsT0ExQk0sRUErQk47QUFDRUYsWUFBSSxTQUROO0FBRUVDLGVBQU8sU0FGVDtBQUdFQyxpQkFBUztBQUhYLE9BL0JNLEVBb0NOO0FBQ0VGLFlBQUksU0FETjtBQUVFQyxlQUFPLFNBRlQ7QUFHRUMsaUJBQVM7QUFIWCxPQXBDTSxDQVZHO0FBb0RYQyxlQUFTLENBQ1A7QUFDRUYsZUFBTyxZQURUO0FBRUVDLGlCQUFTLGtCQUZYO0FBR0VFLGVBQU8sbUJBQUFYLENBQVEsRUFBUjtBQUhULE9BRE8sRUFNUDtBQUNFUSxlQUFPLFlBRFQ7QUFFRUMsaUJBQVMsa0JBRlg7QUFHRUUsZUFBTyxtQkFBQVgsQ0FBUSxFQUFSO0FBSFQsT0FOTyxFQVdQO0FBQ0VRLGVBQU8sWUFEVDtBQUVFQyxpQkFBUyxrQkFGWDtBQUdFRSxlQUFPLG1CQUFBWCxDQUFRLEVBQVI7QUFIVCxPQVhPLENBcERFO0FBcUVYWSxlQUFTLENBQ1A7QUFDRUosZUFBTyxTQURUO0FBRUVDLGlCQUFTO0FBRlgsT0FETyxFQUtQO0FBQ0VELGVBQU8sU0FEVDtBQUVFQyxpQkFBUztBQUZYLE9BTE87QUFyRUUsS0FBUDtBQUFBLEdBUGtCO0FBdUZ4QkksV0FBUztBQUNQQyxhQURPLHFCQUNJQyxTQURKLEVBQ2VDLE1BRGYsRUFDdUI7QUFDNUIsV0FBS2QsTUFBTCx1QkFBZ0NhLFNBQWhDLHlCQUE2REUsS0FBS0MsU0FBTCxDQUFlRixNQUFmLEVBQXVCLElBQXZCLEVBQTZCLENBQTdCLENBQTdEO0FBQ0QsS0FITTtBQUlQRyxlQUpPLHlCQUlRO0FBQ2IsV0FBS1AsT0FBTCxDQUFhUSxJQUFiLENBQWtCO0FBQ2hCWixxREFBMEMsS0FBS0ksT0FBTCxDQUFhUyxNQUFiLEdBQXNCLENBQWhFLENBRGdCO0FBRWhCWix1REFBNEMsS0FBS0csT0FBTCxDQUFhUyxNQUFiLEdBQXNCLENBQWxFO0FBRmdCLE9BQWxCO0FBSUQsS0FUTTtBQVVQQyxlQVZPLHlCQVVRO0FBQ2IsV0FBS1YsT0FBTCxDQUFhVyxHQUFiO0FBQ0QsS0FaTTtBQWFQQyxtQkFiTyw2QkFhWTtBQUNqQixXQUFLckIsaUJBQUwsR0FBeUIsQ0FBQyxLQUFLQSxpQkFBL0I7QUFDRDtBQWZNLEdBdkZlO0FBd0d4QnNCLFNBeEd3QixxQkF3R2I7QUFBQTs7QUFDVEMsZUFBVyxZQUFNO0FBQ2YsWUFBS0MsUUFBTCxHQUFnQixJQUFoQjtBQUNELEtBRkQsRUFFRyxJQUZIO0FBR0FELGVBQVcsWUFBTTtBQUNmLFlBQUtDLFFBQUwsR0FBZ0IsS0FBaEI7QUFDRCxLQUZELEVBRUcsSUFGSDtBQUdEO0FBL0d1QixDQUFYLEMiLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcbmltcG9ydCB7IFZ1ZXBlclNsaWRlcywgVnVlcGVyU2xpZGUgfSBmcm9tICcuLi8uLi8uLi8uLi9kaXN0L3Z1ZXBlcnNsaWRlcy51bWQnXG5pbXBvcnQgeyBwcmVjb2RlIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9zeW50YXgtaGlnaGxpZ2h0ZXInXG5cbmltcG9ydCAnLi9zdHlsZS5zY3NzJ1xuaW1wb3J0ICcuL2V4YW1wbGVzLnNjc3MnXG5cbmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoe1xuICBjb21wb25lbnRzOiB7XG4gICAgVnVlcGVyU2xpZGVzLFxuICAgIFZ1ZXBlclNsaWRlLFxuICAgIHByZWNvZGVcbiAgfSxcbiAgdGVtcGxhdGU6IHJlcXVpcmUoJy4vdGVtcGxhdGUucHVnJyksXG4gIGRhdGE6ICgpID0+ICh7XG4gICAgZXZlbnRzOiAnJyxcbiAgICBzbGlkZXNob3dEaXNhYmxlZDogZmFsc2UsXG4gICAgaW1hZ2VzUm9vdDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/ICcuL2Rpc3QvaW1hZ2VzLycgOiAnLi9pbWFnZXMvJyxcbiAgICBjb2xvcnM6IFtcbiAgICAgICcjNGNhZjUwJyxcbiAgICAgICcjMjE5NmYzJyxcbiAgICAgICcjZmZjMTA3JyxcbiAgICAgICcjZmY1MjUyJ1xuICAgIF0sXG4gICAgc2xpZGVzOiBbXG4gICAgICB7XG4gICAgICAgIGlkOiAnc2xpZGUtMScsXG4gICAgICAgIHRpdGxlOiAnU2xpZGUgPGIgc3R5bGU9XCJmb250LXNpemU6IDEuM2VtO2NvbG9yOiB5ZWxsb3dcIj4jMTwvYj4nLFxuICAgICAgICBjb250ZW50OiAnU2xpZGUgdGl0bGUgY2FuIGJlIEhUTUwuPGJyPkFuZCBzbyBkb2VzIHRoZSBzbGlkZSBjb250ZW50LCA8c3BhbiBzdHlsZT1cImZvbnQtc2l6ZTogMS4yZW07Y29sb3I6IHllbGxvd1wiPndoeSBub3Q/PC9zcGFuPidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiAnc2xpZGUtMicsXG4gICAgICAgIHRpdGxlOiAnU2xpZGUgPGIgc3R5bGU9XCJmb250LXNpemU6IDEuM2VtO2NvbG9yOiAjZmY1MjUyXCI+IzI8L2I+JyxcbiAgICAgICAgY29udGVudDogJ1NsaWRlIDIgY29udGVudC4nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogJ3NsaWRlLTMnLFxuICAgICAgICB0aXRsZTogJ1NsaWRlIDMnLFxuICAgICAgICBjb250ZW50OiAnU2xpZGUgMyBjb250ZW50LidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiAnc2xpZGUtNCcsXG4gICAgICAgIHRpdGxlOiAnU2xpZGUgNCcsXG4gICAgICAgIGNvbnRlbnQ6ICdTbGlkZSA0IGNvbnRlbnQuJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6ICdzbGlkZS01JyxcbiAgICAgICAgdGl0bGU6ICdTbGlkZSA1JyxcbiAgICAgICAgY29udGVudDogJ1NsaWRlIDUgY29udGVudC4nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogJ3NsaWRlLTYnLFxuICAgICAgICB0aXRsZTogJ1NsaWRlIDYnLFxuICAgICAgICBjb250ZW50OiAnU2xpZGUgNiBjb250ZW50LidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiAnc2xpZGUtNycsXG4gICAgICAgIHRpdGxlOiAnU2xpZGUgNycsXG4gICAgICAgIGNvbnRlbnQ6ICdTbGlkZSA3IGNvbnRlbnQuJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6ICdzbGlkZS04JyxcbiAgICAgICAgdGl0bGU6ICdTbGlkZSA4JyxcbiAgICAgICAgY29udGVudDogJ1NsaWRlIDggY29udGVudC4nXG4gICAgICB9XG4gICAgXSxcbiAgICBzbGlkZXMyOiBbXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnTW91bnRhaW4gMScsXG4gICAgICAgIGNvbnRlbnQ6ICdTbGlkZSAxIGNvbnRlbnQuJyxcbiAgICAgICAgaW1hZ2U6IHJlcXVpcmUoJy4uLy4uL2Fzc2V0cy9pbWFnZXMvcm91Z2gtaG9ybi0yMTQ2MTgxXzEyODAuanBnJylcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnTW91bnRhaW4gMicsXG4gICAgICAgIGNvbnRlbnQ6ICdTbGlkZSAyIGNvbnRlbnQuJyxcbiAgICAgICAgaW1hZ2U6IHJlcXVpcmUoJy4uLy4uL2Fzc2V0cy9pbWFnZXMvc25vdy0zMjEyMzQ1XzEyODAuanBnJylcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnTW91bnRhaW4gMycsXG4gICAgICAgIGNvbnRlbnQ6ICdTbGlkZSAzIGNvbnRlbnQuJyxcbiAgICAgICAgaW1hZ2U6IHJlcXVpcmUoJy4uLy4uL2Fzc2V0cy9pbWFnZXMvc25vdy0zMjM3NjMwXzEyODAuanBnJylcbiAgICAgIH1cbiAgICBdLFxuICAgIHNsaWRlczM6IFtcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdTbGlkZSAxJyxcbiAgICAgICAgY29udGVudDogJ1NsaWRlIDEgY29udGVudC4nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ1NsaWRlIDInLFxuICAgICAgICBjb250ZW50OiAnU2xpZGUgMiBjb250ZW50LidcbiAgICAgIH1cbiAgICBdXG4gIH0pLFxuICBtZXRob2RzOiB7XG4gICAgbG9nRXZlbnRzIChldmVudE5hbWUsIHBhcmFtcykge1xuICAgICAgdGhpcy5ldmVudHMgKz0gYDxiPkV2ZW50OjwvYj4gJHtldmVudE5hbWV9LCA8Yj5QYXJhbXM6PC9iPiAke0pTT04uc3RyaW5naWZ5KHBhcmFtcywgbnVsbCwgMCl9PGJyPmBcbiAgICB9LFxuICAgIGFwcGVuZFNsaWRlICgpIHtcbiAgICAgIHRoaXMuc2xpZGVzMy5wdXNoKHtcbiAgICAgICAgdGl0bGU6IGBQcm9ncmFtbWFnaWNhbGx5IGFwcGVuZGVkIHNsaWRlICR7dGhpcy5zbGlkZXMzLmxlbmd0aCArIDF9YCxcbiAgICAgICAgY29udGVudDogYFByb2dyYW1tYWdpY2FsbHkgYXBwZW5kZWQgc2xpZGUgJHt0aGlzLnNsaWRlczMubGVuZ3RoICsgMX0gY29udGVudC5gXG4gICAgICB9KVxuICAgIH0sXG4gICAgcmVtb3ZlU2xpZGUgKCkge1xuICAgICAgdGhpcy5zbGlkZXMzLnBvcCgpXG4gICAgfSxcbiAgICB0b2dnbGVTbGlkZXNob3cgKCkge1xuICAgICAgdGhpcy5zbGlkZXNob3dEaXNhYmxlZCA9ICF0aGlzLnNsaWRlc2hvd0Rpc2FibGVkXG4gICAgfVxuICB9LFxuICBjcmVhdGVkICgpIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuZGlzYWJsZWQgPSB0cnVlXG4gICAgfSwgMzAwMClcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZVxuICAgIH0sIDYwMDApXG4gIH1cbn0pXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvcGFnZXMvbWFpbi9pbmRleC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (global, factory) {\n  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.vueperslides = global.vueperslides || {});\n})(this, function (exports) {\n  'use strict';\n\n  (function () {\n    if (typeof document !== 'undefined') {\n      var head = document.head || document.getElementsByTagName('head')[0],\n          style = document.createElement('style'),\n          css = \"\";style.type = 'text/css';if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(document.createTextNode(css));\n      }head.appendChild(style);\n    }\n  })();\n\n  var VueperSlide = { render: function render() {\n      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { class: { 'vueperslides__slide': true, 'vueperslides__slide--active': _vm.$parent.activeSlideUid === _vm._uid }, style: _vm.styles }, [!_vm.$parent.slideContentOutside && (_vm.title || _vm.content) ? _c('div', { staticClass: \"vueperslides__slide-content\" }, [_c('p', { staticClass: \"slide-title\", domProps: { \"innerHTML\": _vm._s(_vm.title) } }), _c('p', { staticClass: \"slide-content\", domProps: { \"innerHTML\": _vm._s(_vm.content) } })]) : _vm._e()]);\n    }, staticRenderFns: [],\n    props: {\n      clone: {\n        type: Number,\n        default: null\n      },\n      image: {\n        type: String,\n        default: ''\n      },\n      title: {\n        type: String,\n        default: ''\n      },\n      content: {\n        type: String,\n        default: ''\n      }\n    },\n    created: function created() {\n      this.$parent.addSlide({\n        _uid: this._uid,\n        image: this.image,\n        title: this.title,\n        content: this.content,\n        clone: this.clone\n      });\n    },\n\n    // When removing a slide programmatically, remove it from the config so vueperslides\n    // component is aware of the change.\n    destroyed: function destroyed() {\n      if (this.clone === null) this.$parent.removeSlide(this._uid);\n    },\n\n    computed: {\n      styles: function styles() {\n        var styles = {};\n        if (this.image) {\n          styles.backgroundImage = 'url(' + this.image + ')';\n        }\n        if (this.$parent.slideRatio) {\n          styles.paddingBottom = this.$parent.slideRatio * 100 + '%';\n        }\n        return styles;\n      }\n    }\n  };\n\n  (function () {\n    if (typeof document !== 'undefined') {\n      var head = document.head || document.getElementsByTagName('head')[0],\n          style = document.createElement('style'),\n          css = \".vueperslides { position: relative; } .vueperslides-wrapper { position: relative; } .vueperslides__slides-wrapper { position: relative; overflow: hidden; border-top: 1px solid #ddd; border-bottom: 1px solid #ddd; } .vueperslides__slides-wrapper::before, .vueperslides__slides-wrapper::after { content: \\\"\\\"; position: absolute; bottom: 100%; left: -1em; right: -1em; height: 2em; box-shadow: 0 0 20px rgba(0, 0, 0, 0.25); z-index: 2; } .vueperslides__slides-wrapper::after { top: 100%; bottom: auto; } .vueperslides--fade .vueperslides__track { white-space: normal; transition: none; } .vueperslides--touchable .vueperslides__track { cursor: ew-resize; cursor: -webkit-grab; } .vueperslides--touchable .vueperslides__track--mousedown, .vueperslides--touchable .vueperslides__track--dragging { cursor: -webkit-grabbing; } .vueperslides__track { white-space: nowrap; transition: 0.5s ease-in-out transform; } .vueperslides__track--mousedown { transition: 0.2s ease-in-out transform; } .vueperslides__track--dragging { transition: none; } .vueperslides__track--no-animation { transition-duration: 0s; } .vueperslides__slide { white-space: normal; padding-bottom: 34%; background-position: top; background-size: cover; display: inline-block; width: 100%; height: 0; margin-bottom: -8px; } .vueperslides__slide-content { user-select: none; } .vueperslides__slide-content--outside { user-select: initial; } .vueperslides--fade .vueperslides__slide { position: absolute; top: 0; left: 0; right: 0; bottom: 0; opacity: 0; transition: .8s ease-in-out opacity; } .vueperslides--fade .vueperslides__slide--active { z-index: 1; opacity: 1; } .vueperslides__arrow { position: absolute; top: 50%; color: #fff; fill: currentColor; font-size: 3em; width: 1em; text-align: center; transform: translateY(-50%); opacity: 0.7; z-index: 10; transition: 0.3s ease-in-out; cursor: pointer; user-select: none; outline: none; z-index: 2; } .vueperslides__arrow--prev { left: 10px; } .vueperslides__arrow--next { right: 10px; } .vueperslides__arrow:hover { opacity: 1; } .vueperslides__paused { position: absolute; top: 3%; right: 3%; opacity: 0; transition: 0.3s ease-in-out; text-shadow: 0 0 3px rgba(0, 0, 0, 0.4); } .vueperslides:hover .vueperslides__paused { opacity: 1; } .vueperslides__bullets { display: flex; justify-content: center; position: absolute; bottom: 0; left: 0; right: 0; } .vueperslides__bullets--outside { bottom: auto; top: 100%; } .vueperslides__bullet { width: 12px; height: 12px; border-radius: 12px; border: 1px solid #fff; box-shadow: 0 0 1px rgba(0, 0, 0, 0.5), 0 0 3px rgba(0, 0, 0, 0.3); margin: 1.5em 0.6em; display: inline-block; cursor: pointer; user-select: none; outline: none; z-index: 2; display: flex; justify-content: center; align-items: center; } .vueperslides__bullet--active { background-color: #fff; } .vueperslides__bullet span { display: none; } @media screen and (max-width: 1000px) { .vueperslides__slide { padding-bottom: 45%; } .vueperslides--fade .vueperslides__track { padding-bottom: 45%; } } @media screen and (max-width: 700px) { .vueperslides__slide { padding-bottom: 54%; } .vueperslides--fade .vueperslides__track { padding-bottom: 54%; } } @media screen and (max-width: 400px) { .vueperslides__slide { padding-bottom: 60%; } .vueperslides--fade .vueperslides__track { padding-bottom: 60%; } } \";style.type = 'text/css';if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(document.createTextNode(css));\n      }head.appendChild(style);\n    }\n  })();\n\n  var VueperSlides = { render: function render() {\n      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"vueperslides-wrapper\", class: { 'ready': _vm.isReady } }, [_vm.slideContentOutside ? _c('div', { staticClass: \"vueperslides__slide-content vueperslides__slide-content--outside\", class: _vm.slideContentOutsideClass }, [_vm.slidesCount && _vm.slides[_vm.currentSlide].title ? _c('p', { staticClass: \"slide-title\", domProps: { \"innerHTML\": _vm._s(_vm.slides[_vm.currentSlide].title) } }) : _vm._e(), _vm.slidesCount && _vm.slides[_vm.currentSlide].content ? _c('p', { staticClass: \"slide-content\", domProps: { \"innerHTML\": _vm._s(_vm.slides[_vm.currentSlide].content) } }) : _vm._e()]) : _vm._e(), _c('div', { ref: \"vueperslides\", staticClass: \"vueperslides\", class: { 'vueperslides--fade': _vm.fade, 'vueperslides--touchable': _vm.touchEnabled && !_vm.disable } }, [_c('div', { staticClass: \"vueperslides__slides-wrapper\" }, [_c('div', { ref: \"track\", staticClass: \"vueperslides__track\", class: { 'vueperslides__track--dragging': _vm.dragging, 'vueperslides__track--mousedown': _vm.mouseDown }, style: !_vm.fade ? 'transform: translate3d(' + _vm.currentTranslation + '%, 0, 0)' : 'padding-bottom: ' + this.slideRatio * 100 + '%' }, [_vm.slidesCount && _vm.clones[0] ? _c('vueper-slide', { staticClass: \"vueperslides__slide--clone\", style: _vm.clones[0].style, attrs: { \"clone\": 0, \"title\": _vm.clones[0].title, \"content\": _vm.clones[0].content, \"image\": _vm.clones[0].image } }) : _vm._e(), _vm._t(\"default\", null, { currentSlide: _vm.currentSlide }), _vm.slidesCount && _vm.clones[1] ? _c('vueper-slide', { staticClass: \"vueperslides__slide--clone\", style: _vm.clones[1].style, attrs: { \"clone\": 1, \"title\": _vm.clones[1].title, \"content\": _vm.clones[1].content, \"image\": _vm.clones[1].image } }) : _vm._e()], 2)]), _vm.$slots.pausedIcon ? _c('div', { staticClass: \"vueperslides__paused\" }, [_vm._t(\"pausedIcon\")], 2) : _vm._e(), _vm.arrows && _vm.slidesCount > 1 && !_vm.disable ? _c('div', { staticClass: \"vueperslides__arrows\" }, [_c('button', { directives: [{ name: \"show\", rawName: \"v-show\", value: !_vm.arrowPrevDisabled, expression: \"!arrowPrevDisabled\" }], staticClass: \"vueperslides__arrow vueperslides__arrow--prev\", on: { \"click\": function click($event) {\n            _vm.onArrowClick(false);\n          } } }, [_vm._t(\"arrowLeft\", [_c('svg', { attrs: { \"viewBox\": \"0 0 24 24\" } }, [_c('path', { attrs: { \"d\": \"M16.2,21c0.3,0,0.5-0.1,0.7-0.3c0.4-0.4,0.4-1,0-1.4L9.6,12L17,4.7c0.4-0.4,0.4-1,0-1.4c-0.4-0.4-1-0.4-1.4,0L6.8,12l8.8,8.7C15.7,20.9,16,21,16.2,21z\" } })])])], 2), _c('button', { directives: [{ name: \"show\", rawName: \"v-show\", value: !_vm.arrowNextDisabled, expression: \"!arrowNextDisabled\" }], staticClass: \"vueperslides__arrow vueperslides__arrow--next\", on: { \"click\": function click($event) {\n            _vm.onArrowClick();\n          } } }, [_vm._t(\"arrowRight\", [_c('svg', { attrs: { \"viewBox\": \"0 0 24 24\" } }, [_c('path', { attrs: { \"d\": \"M7.8,21c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l7.4-7.3L7,4.7c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l8.8,8.7l-8.8,8.7C8.3,20.9,8,21,7.8,21z\" } })])])], 2)]) : _vm._e(), _vm.bullets && _vm.slidesCount > 1 && !_vm.disable ? _c('div', { staticClass: \"vueperslides__bullets\", class: { 'vueperslides__bullets--outside': _vm.bulletsOutside } }, _vm._l(_vm.slides, function (item, i) {\n        return _c('button', { key: i, ref: \"bullet\", refInFor: true, staticClass: \"vueperslides__bullet\", class: { 'vueperslides__bullet--active': _vm.currentSlide === i }, on: { \"click\": function click($event) {\n              _vm.goToSlide(i);\n            }, \"keyup\": [function ($event) {\n              if (!('button' in $event) && _vm._k($event.keyCode, \"left\", 37, $event.key, [\"Left\", \"ArrowLeft\"])) {\n                return null;\n              }if ('button' in $event && $event.button !== 0) {\n                return null;\n              }_vm.onArrowClick(false);\n            }, function ($event) {\n              if (!('button' in $event) && _vm._k($event.keyCode, \"right\", 39, $event.key, [\"Right\", \"ArrowRight\"])) {\n                return null;\n              }if ('button' in $event && $event.button !== 2) {\n                return null;\n              }_vm.onArrowClick();\n            }] } }, [_c('span', [_vm._v(_vm._s(i + 1))])]);\n      })) : _vm._e()])]);\n    }, staticRenderFns: [],\n    name: 'vueper-slides',\n    components: {\n      VueperSlide: VueperSlide\n    },\n    props: {\n      initSlide: {\n        type: Number,\n        default: 1\n      },\n      slideRatio: {\n        type: Number,\n        default: 1 / 3\n      },\n      arrows: {\n        type: Boolean,\n        default: true\n      },\n      // Ability to disable arrows on slideshow edges. Only if not infinite mode.\n      disableArrowsOnEdges: {\n        type: [Boolean, String],\n        default: false\n      },\n      bullets: {\n        type: Boolean,\n        default: true\n      },\n      bulletsOutside: {\n        type: Boolean,\n        default: false\n      },\n      fade: {\n        type: Boolean,\n        default: false\n      },\n      slideContentOutside: {\n        type: Boolean,\n        default: false\n      },\n      slideContentOutsideClass: {\n        type: String,\n        default: \"\"\n      },\n      autoplay: {\n        type: Boolean,\n        default: false\n      },\n      speed: {\n        type: [Number, String],\n        default: 4000\n      },\n      pauseOnHover: {\n        type: Boolean,\n        default: true\n      },\n      infinite: {\n        type: Boolean,\n        default: true\n      },\n      touchable: {\n        type: Boolean,\n        default: true\n      },\n      disable: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data: function data() {\n      return {\n        isReady: false,\n        slides: [],\n        slidesCount: 0,\n        activeSlideUid: null,\n        mouseDown: false,\n        mouseOver: false,\n        dragging: false,\n        currentSlide: 0,\n        currentTranslation: 0,\n        dragStartX: 0,\n        dragStartY: 0,\n        goNext: true,\n        timer: null,\n        arrowPrevDisabled: false,\n        arrowNextDisabled: false,\n        touchEnabled: true,\n        clones: []\n      };\n    },\n    mounted: function mounted() {\n      this.init();\n    },\n\n    methods: {\n      init: function init() {\n        this.emit('before-init', false);\n        this.slidesCount = this.slides.length;\n        this.touchEnabled = this.touchable;\n\n        if (this.infinite && !this.fade) {\n          this.cloneSlides();\n        }\n\n        this.goToSlide(this.initSlide - 1);\n        this.bindEvents();\n\n        this.isReady = true;\n        this.emit('ready');\n      },\n\n      // Emit a named event outside the component with 2 possible parameters:\n      // current slide info & next slide info.\n      emit: function emit(name) {\n        var includeCurrentSlide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var includeNextSlide = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        var args = [name];\n\n        if (includeCurrentSlide || typeof includeNextSlide === \"number\") {\n          args[1] = {};\n          if (includeCurrentSlide && this.activeSlideUid) {\n            args[1].currentSlide = {\n              index: this.currentSlide,\n              title: this.slides[this.currentSlide].title,\n              content: this.slides[this.currentSlide].content\n            };\n          }\n          if (typeof includeNextSlide === \"number\") {\n            var _getSlideInRange = this.getSlideInRange(includeNextSlide),\n                nextSlide = _getSlideInRange.nextSlide;\n\n            args[1].nextSlide = {\n              index: nextSlide,\n              title: this.slides[nextSlide].title,\n              content: this.slides[nextSlide].content\n            };\n          }\n        }\n\n        this.$emit.apply(this, [name].concat(args));\n      },\n      cloneSlides: function cloneSlides() {\n        var firstNodeIsVnode = this.$slots.default[0].tag;\n        var firstSlide = this.$slots.default[firstNodeIsVnode ? 0 : 1].elm;\n        var lastSlide = this.$slots.default[this.$slots.default.length - 1].elm;\n\n        this.clones[0] = {\n          title: this.slides[this.slidesCount - 1].title,\n          content: this.slides[this.slidesCount - 1].content,\n          image: this.slides[this.slidesCount - 1].image,\n          style: lastSlide && lastSlide.attributes.style ? lastSlide.attributes.style.value : null\n        };\n        this.clones[1] = {\n          title: this.slides[0].title,\n          content: this.slides[0].content,\n          image: this.slides[0].image,\n          style: firstSlide && lastSlide.attributes.style ? firstSlide.attributes.style.value : null\n        };\n      },\n      bindEvents: function bindEvents() {\n        var hasTouch = \"ontouchstart\" in window;\n\n        if (this.touchEnabled) {\n          this.$refs.track.addEventListener(hasTouch ? \"touchstart\" : \"mousedown\", this.onMouseDown);\n          document.addEventListener(hasTouch ? \"touchmove\" : \"mousemove\", this.onMouseMove);\n          document.addEventListener(hasTouch ? \"touchend\" : \"mouseup\", this.onMouseUp);\n        }\n\n        // Pause autoplay on mouseover.\n        if (this.pauseOnHover && !hasTouch && this.autoplay) {\n          this.$refs.vueperslides.addEventListener(\"mouseover\", this.onMouseIn);\n          this.$refs.vueperslides.addEventListener(\"mouseout\", this.onMouseOut);\n        }\n\n        // window.addEventListener('resize', this.getSlideshowWidth)\n      },\n      getDragPercentage: function getDragPercentage(e) {\n        this.dragStartX = \"ontouchstart\" in window ? e.touches[0].clientX : e.clientX;\n        this.dragStartY = \"ontouchstart\" in window ? e.touches[0].clientY : e.clientY;\n        var windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n        return this.dragStartX / windowWidth;\n      },\n      onMouseIn: function onMouseIn() {\n        this.mouseOver = true;\n\n        if (this.pauseOnHover && this.autoplay) {\n          this.clearTimer();\n        }\n      },\n      onMouseOut: function onMouseOut() {\n        this.mouseOver = false;\n\n        if (this.pauseOnHover && this.autoplay) {\n          this.setTimer();\n        }\n      },\n      onMouseDown: function onMouseDown(e) {\n        if (!this.touchEnabled || this.disable) return;\n\n        if (!e.touches) {\n          e.preventDefault();\n        }\n\n        this.mouseDown = true;\n\n        var dragPercentage = this.getDragPercentage(e);\n\n        // Set a flag for use while dragging in `onMouseMove` to know if drag was toward left or right.\n        this.goNext = dragPercentage >= 0.5;\n\n        this.currentTranslation = -100 * (this.currentSlide + (this.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage);\n      },\n      onMouseMove: function onMouseMove(e) {\n        if (this.mouseDown || this.dragging) {\n          this.mouseDown = false;\n          this.dragging = true;\n\n          var dragPercentage = this.getDragPercentage(e);\n          this.currentTranslation = -100 * (this.currentSlide + (this.goNext ? 1 : 0) + (this.clones.length ? 1 : 0) - dragPercentage);\n        }\n      },\n      onMouseUp: function onMouseUp() {\n        if (this.mouseDown || this.dragging) {\n          this.mouseDown = false;\n          this.dragging = false;\n\n          // this.currentTranslation = Math.min(Math.max(0, Math.round(this.currentTranslation / 100) * 100), (this.slidesCount - 1) * 100)\n          // this.currentSlide = this.currentTranslation / 100\n\n          // When the drag is realeased, calculate if the drag ends before or after the 50%-slideshow-width threshold.\n          // Then finish the sliding toward that slide.\n          var slideOnDragEnd = -(Math.round(this.currentTranslation / 100) + (this.clones.length ? 1 : 0));\n\n          var _getSlideInRange2 = this.getSlideInRange(slideOnDragEnd),\n              nextSlide = _getSlideInRange2.nextSlide;\n\n          // If drag is not allowed (`arrowNextDisabled` = true) and dragging beyond last slide,\n          // cancel sliding and snap back to last slide.\n\n\n          if (this.arrowNextDisabled && this.autoplay && nextSlide === 0) {\n            nextSlide = this.slidesCount - 1;\n          }\n\n          // Only call `goToSlide` if the drag ends on a slide that is different than the currentSlide.\n          if (nextSlide !== this.currentSlide) {\n            this.goToSlide(slideOnDragEnd);\n          } else {\n            // Apply transition to snap back to current slide.\n            this.currentTranslation = -(this.currentSlide + (this.clones.length ? 1 : 0)) * 100;\n          }\n\n          this.enableScroll();\n        }\n      },\n      disableScroll: function disableScroll() {\n        document.ontouchmove = function (e) {\n          e.preventDefault();\n        };\n      },\n      enableScroll: function enableScroll() {\n        document.ontouchmove = function () {\n          return true;\n        };\n      },\n      clearTimer: function clearTimer() {\n        clearTimeout(this.timer);\n        this.timer = 0;\n      },\n      setTimer: function setTimer() {\n        var _this = this;\n\n        this.timer = setTimeout(function () {\n          _this.goToSlide(_this.currentSlide + 1, true, true);\n        }, this.speed);\n      },\n      onArrowClick: function onArrowClick() {\n        var next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n        this.goToSlide(this.currentSlide + (next ? 1 : -1));\n      },\n      getSlideInRange: function getSlideInRange(i) {\n        var clone = null;\n\n        // If infinite enabled, going out of range takes the first slide from the other end.\n        if (this.clones.length) {\n          if (i < 0) {\n            i = this.slidesCount - 1;\n            clone = 0;\n          } else if (i > this.slidesCount - 1) {\n            i = 0;\n            clone = 1;\n          }\n        }\n\n        // If not infinite, can't go lower than 0 or beyond `slidesCount` with `disableArrowsOnEdges`.\n        // If `disableArrowsOnEdges` is enabled going out of range will take first slide from the other end\n        // of the slideshow.\n        else {\n            if (i < 0) i = this.disableArrowsOnEdges ? 0 : this.slidesCount - 1;else if (i > this.slidesCount - 1) {\n              // If autoplay is on but disableArrowsOnEdges is enabled, going beyond the last one will also bring\n              // the first one in.\n              i = this.disableArrowsOnEdges ? this.autoplay ? 0 : this.slidesCount - 1 : 0;\n            }\n          }\n\n        return { nextSlide: i, clone: clone };\n      },\n      goToSlide: function goToSlide(i) {\n        var _this2 = this;\n\n        var animation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var autoSliding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (!this.slidesCount || this.disable) return;\n\n        if (this.autoplay) this.clearTimer();\n\n        var _getSlideInRange3 = this.getSlideInRange(i),\n            nextSlide = _getSlideInRange3.nextSlide,\n            nextSlideIsClone = _getSlideInRange3.clone;\n\n        // First use of `goToSlide` is while init, so should not propagate an event.\n\n\n        if (this.isReady) this.emit('before-slide', true, nextSlide);\n\n        // Disable arrows if `disableArrowsOnEdges` is on and there is no slide to go to on that end.\n        if (this.arrows && this.disableArrowsOnEdges) {\n          this.arrowPrevDisabled = nextSlide === 0;\n          this.arrowNextDisabled = nextSlide === this.slidesCount - 1;\n        }\n\n        this.$refs.track.classList[animation ? 'remove' : 'add'](\"vueperslides__track--no-animation\");\n\n        // Infinite sliding with cloned slides:\n        // When reaching last slide and going next the cloned slide of the first slide\n        // shows up, when the animation ends the real change to the first slide is done\n        // immediately with no animation.\n        // Same principle when going beyond first slide.\n        if (nextSlideIsClone !== null) {\n          setTimeout(function () {\n            _this2.goToSlide(nextSlideIsClone ? 0 : _this2.slidesCount - 1, false, autoSliding);\n          }, 400);\n        }\n\n        this.currentSlide = nextSlide;\n\n        // Only apply sliding transition when the slideshow animation type is `slide`.\n        if (!this.fade) {\n          if (nextSlideIsClone !== null) {\n            this.currentTranslation = -100 * (nextSlideIsClone ? this.slidesCount + 1 : 0);\n          } else this.currentTranslation = -100 * (this.currentSlide + (this.clones.length ? 1 : 0));\n        }\n\n        this.activeSlideUid = this.slides[this.currentSlide]._uid;\n\n        if (this.autoplay && !this.mouseOver) {\n          this.setTimer();\n        }\n\n        if (this.slidesCount) {\n          if (this.$slots.default[this.currentSlide]) {\n            // First use of goToSlide is while init, so should not propagate an event.\n            if (this.isReady) this.emit('slide');\n          }\n\n          if (this.isReady && !autoSliding && this.$refs.bullet[this.currentSlide]) {\n            this.$refs.bullet[this.currentSlide].focus();\n          }\n        }\n      },\n      addSlide: function addSlide(newSlide) {\n        var _this3 = this;\n\n        var needReclone = this.infinite && !this.fade && this.isReady && !newSlide.clone;\n\n        if (newSlide.clone !== null) {\n          this.clones[newSlide.clone] = newSlide;\n        } else {\n          // Add the slide in the slides array & update slidesCount.\n          this.slides.push(newSlide);\n          this.slidesCount = this.slides.length;\n        }\n\n        if (this.slidesCount > 1) {\n          this.touchEnabled = true;\n        }\n\n        if (needReclone) {\n          this.$nextTick(function () {\n            return _this3.cloneSlides();\n          });\n        }\n      },\n      removeSlide: function removeSlide(uid) {\n        var _this4 = this;\n\n        // let needReclone = this.infinite && !this.fade && this.isReady\n        var needReclone = false;\n\n        this.slides.some(function (slide, i) {\n          if (slide._uid === uid) {\n            // Remove the slide.\n            _this4.slides.splice(i, 1);\n            _this4.slidesCount = _this4.slides.length;\n\n            // If the slide to remove is the current slide, slide to the previous slide.\n            if (uid === _this4.activeSlideUid) {\n              _this4.activeSlideUid = null;\n              _this4.goToSlide(i - 1, true, true);\n            }\n\n            if (_this4.slidesCount <= 1) {\n              _this4.touchEnabled = false;\n            }\n\n            if (_this4.clones.length && _this4.isReady && !slide.clone) needReclone = true;\n\n            return true; // Break the `Array.some` loop.\n          }\n        });\n\n        if (this.slidesCount && needReclone) {\n          this.cloneSlides();\n        }\n      }\n    }\n  };\n\n  // expose component to global scope\n  if (typeof window !== 'undefined' && window.Vue) {\n    Vue.component('vueper-slides', VueperSlides);\n    Vue.component('vueper-slide', VueperSlide);\n  }\n\n  exports.VueperSlides = VueperSlides;\n  exports.VueperSlide = VueperSlide;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.precode = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n__webpack_require__(13);\n\nvar regexBasics = {\n  quote: /(\"(?:\\\\\"|[^\"])*\")|('(?:\\\\'|[^'])*')/, // Match simple and double quotes by pair.\n  comment: /(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/, // Comments blocks (/* ... */) or trailing comments (// ...).\n  htmlTag: /(<([^>])*>)/,\n  ponctuation: /(!==?|(?:[[\\](){}.:;,+\\-?=]|&lt;|&gt;)+|&&|\\|\\|)/, // Ponctuation not in html tag.\n  number: /(-?(?:\\.\\d+|\\d+(?:\\.\\d+)?))/,\n  boolean: /\\b(true|false)\\b/\n\n  // The html tags names, attribute and inner special chars are treated inside the\n  // htmlTag regex above because javascript does not support lookbehind.\n};var dictionnary = {\n  shell: {\n    quote: regexBasics.quote,\n    comment: /(#.*?)\\n/,\n    keyword: /(?:^|\\b)(npm|yarn|install|run)(?:\\b|$)/,\n    param: /( --(?:save|save-dev))(?:\\s|$)/\n  },\n  xml: {\n    quote: regexBasics.quote,\n    comment: /(&lt;!--[\\s\\S]*?--&gt;)/,\n    tag: /(&lt;\\/?)([a-zA-Z\\-:]+)(.*?)(\\/?&gt;)/\n  },\n  html: {\n    quote: regexBasics.quote,\n    comment: /(&lt;!--[\\s\\S]*?--&gt;)/,\n    tag: /(&lt;\\/?)([a-z]\\w*)(.*?)(\\/?&gt;)/\n  },\n  'html-vue': {\n    quote: regexBasics.quote,\n    comment: /(&lt;!--[\\s\\S]*?--&gt;)/,\n    tag: /(&lt;\\/?)([a-z][a-z_-]*)((?:.|\\s)*?)(\\/?&gt;)/\n  },\n  css: {\n    quote: regexBasics.quote,\n    comment: /(\\/\\*[\\s\\S]*?\\*\\/)/,\n    pseudo: /(:(?:hover|active|focus|visited|before|after|(?:first|last|nth)-child))/,\n    'selector keyword vendor': /(@-(?:moz|o|webkit|ms)-(?=keyframes\\s))/,\n    'selector keyword': /((?:@(?:import|media|font-face|keyframes)|screen|print|and)(?=[\\s({])|keyframes|\\s(?:ul|ol|li|table|div|pre|p|a|img|br|hr|h[1-6]|em|strong|span|html|body|iframe|video|audio|input|button|form|label|fieldset|small|abbr|i|dd|dt)\\b)/,\n    selector: /((?:[.#-\\w\\*+ >:,~\\n]|&gt;)+)(?=\\s*\\{)/, // Any part before '{'.\n    'attribute keyword vendor': /(-(?:moz|o|webkit|ms)-(?=transform|transition|user-select|animation|background-size|box-shadow))/,\n    'attribute keyword': /\\b(content|float|display|position|top|left|right|bottom|(?:(?:max|min)-)?width|(?:(?:max|min|line)-)?height|font(?:-(?:family|style|size|weight|variant|stretch))?|vertical-align|color|opacity|visibility|z-index|transform(?:-(?:origin|style|delay|duration|property|timing-function))?|transition(?:-(?:delay|duration))?|animation(?:-(?:name|delay|duration|direction|fill-mode))?|background(?:-(?:color|position|image|repeat|size))?|(?:padding|margin|border)(?:-(?:top|left|right|bottom))?|border(?:-radius)|white-space|text-(?:align|transform|decoration|shadow|indent)|overflow(?:-(?:x|y))?|letter-spacing|box-(?:sizing|shadow)|stroke(?:-(?:width|opacity|dasharray|dashoffset|linecap|linejoin))?|fill|speak|outline|user-select|cursor)(?=\\s*:)/,\n    'value keyword vendor': /(-(?:moz|o|webkit|ms)-(?=linear-gradient))/,\n    'value keyword': /\\b(inline-block|inline|block|absolute|relative|static|fixed|inherit|initial|none|auto|hidden|visible|top|left|right|bottom|center|middle|baseline|pre|wrap|nowrap|(?:upper|lower)case|capitalize|linear(?:-gradient)?|ease(?:-in)?(?:-out)?|all|infinite|cubic-bezier|(?:translate|rotate)(?:[X-Z]|3d)?|skew[XY]?|scale|(?:no-)?repeat|repeat(?:-x|-y)|contain|cover|!important|url|inset|pointer|flex)(?=\\s*[,;}(]|\\s+[\\da-z])/,\n    number: regexBasics.number,\n    color: /(transparent|#(?:[\\da-fA-F]{6}|[\\da-fA-F]{3})|rgba?\\([\\d., ]*\\))/,\n    // ponctuation: /([:,;{}@#()]+)/,// @todo Why can't use this one if text contains '<' or '>' ??\n    htmlentity: /(&.*?;)/,\n    ponctuation: /([:,;{}@#()]+|&lt;|&gt;)/,\n    attribute: /([a-zA-Z-]+)(?=\\s*:)/,\n    unit: /(px|pt|%|r?em|m?s|deg|vh|vw|vmin|vmax)(?=(?:\\s*[;,{}}\\)]|\\s+[\\-\\da-z#]))/\n  },\n  json: {\n    quote: regexBasics.quote,\n    comment: regexBasics.comment,\n    number: regexBasics.number,\n    boolean: regexBasics.boolean,\n    ponctuation: /([[\\](){}:;,-]+)/ // Override default to simplify.\n  },\n  js: {\n    quote: regexBasics.quote,\n    comment: regexBasics.comment,\n    number: /\\b(\\d+(?:\\.\\d+)?|null)\\b/,\n    boolean: regexBasics.boolean,\n    keyword: /\\b(new|getElementsBy(?:Tag|Class|)Name|getElementById|arguments|if|else|do|return|case|default|function|typeof|undefined|instanceof|this|document|window|while|for|forEach|switch|in|break|continue|length|var|let|const|export|import|from|Number|Boolean|String|Array|Object|(?:clear|set)(?:Timeout|Interval)|Math(?=\\.)|Date)(?=\\W)/,\n    ponctuation: /(!==?|(?:[[\\](){}:;,+\\-%*/?=]|&lt;|&gt;)+|\\.+(?![a-zA-Z])|&amp;&amp;|\\|\\|)/, // Override default since '.' can be part of js variable.\n    variable: /(\\.?[a-zA-Z]\\w*)/,\n    htmlentity: /(&.*?;)/,\n    dollar: /(\\$|jQuery)(?=\\W|$)/ // jQuery or $.\n  },\n  php: {\n    quote: regexBasics.quote,\n    comment: regexBasics.comment,\n    ponctuation: regexBasics.ponctuation,\n    number: regexBasics.number,\n    boolean: regexBasics.boolean,\n    keyword: /\\b(define|echo|die|print_r|var_dump|if|else|do|return|case|default|function|\\$this|while|for|switch|in|break|continue)(?=\\W|$)/,\n    variable: /(?:(?=\\W))(\\$\\w+)/\n  },\n  sql: {\n    quote: regexBasics.quote,\n    comment: regexBasics.comment,\n    ponctuation: regexBasics.ponctuation,\n    number: /\\b(\\d+(?:\\.\\d+)?|null)\\b/,\n    boolean: regexBasics.boolean,\n    keyword: /\\b(\\*|CREATE|ALL|DATABASE|TABLE|GRANT|PRIVILEGES|IDENTIFIED|FLUSH|SELECT|UPDATE|DELETE|INSERT|FROM|WHERE|(?:ORDER|GROUP) BY|LIMIT|(?:(?:LEFT|RIGHT|INNER|OUTER) |)JOIN|AS|ON|COUNT|CASE|TO|IF|WHEN|BETWEEN|AND|OR|CONCAT)(?=\\W|$)/\n  }\n};\n\nvar attributesRegex = {\n  xml: /(\\s*)([a-zA-Z\\-:]+)=(\"|')(.*?)\\3/g,\n  html: /(\\s*)([a-zA-Z\\-]+)=(\"|')(.*?)\\3/g,\n  'html-vue': /(\\s*)(:?[a-zA-Z\\-]+)(?:(?:=(\"|')(.*?)\\3)|)/g\n};\n\nvar precode = exports.precode = {\n  name: 'precode',\n  template: '<pre class=\"precode\" v-html=\"content\" :data-type=\"language\" :data-label=\"label\"></pre>',\n  props: {\n    language: {\n      type: String,\n      default: ''\n    },\n    label: {\n      type: [String, Boolean],\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      knownLanguages: Object.keys(dictionnary),\n      content: ''\n    };\n  },\n  methods: {\n    htmlize: function htmlize(string) {\n      return string.replace(/&(lt|gt|amp);/g, function (m0, m1) {\n        return { lt: '<', gt: '>', amp: '&' }[m1];\n      });\n    },\n    unhtmlize: function unhtmlize(string) {\n      return string.replace(/[<>]/g, function (m) {\n        return { '<': '&lt;', '>': '&gt;' }[m];\n      });\n    },\n    isColorDark: function isColorDark(colorString) {\n      var rgbColor = void 0,\n          hexColor = void 0,\n          rDark = void 0,\n          gDark = void 0,\n          bDark = void 0;\n\n      if (rgbColor = colorString.match(/rgba?\\((.*),\\s*(.*),\\s*(.*)[^)]*\\)/)) {\n        rDark = parseInt(rgbColor[1]) <= 100;\n        gDark = parseInt(rgbColor[2]) <= 100;\n        bDark = parseInt(rgbColor[3]) <= 100;\n      } else if (hexColor = colorString.match(/#([\\da-f]{3}(?:[\\da-f]{3})?)/)) {\n        var has3chars = hexColor[1].length === 3;\n        rDark = parseInt(hexColor[1][0]) <= 9;\n        gDark = parseInt(hexColor[1][has3chars ? 1 : 2]) <= 9;\n        bDark = parseInt(hexColor[1][has3chars ? 2 : 4]) <= 9;\n      }\n\n      // #00f blue is also a dark color...\n      return rDark && gDark && bDark || rDark && gDark && !bDark || !rDark && gDark && bDark;\n    },\n\n    // Create a single regex pattern from assembling the regex pieces of the selected language.\n    // This regex pattern will be used all at once for the string replacement.\n    createRegexPattern: function createRegexPattern(string) {\n      var pattern = '';\n      var classMap = [];\n\n      for (var Class in dictionnary[this.language]) {\n        classMap.push(Class);\n\n        if (Class === 'quote') {\n          // Add twice because 2 captures are made in the quote regexp.\n          classMap.push(Class);\n        }\n\n        if (['xml', 'html', 'html-vue'].indexOf(this.language) > -1 && Class === 'tag') {\n          classMap.push(Class, Class, Class);\n        }\n\n        pattern += (pattern ? '|' : '') + dictionnary[this.language][Class].source;\n      }\n\n      return [pattern, classMap];\n    },\n    syntaxHighlightHtmlTag: function syntaxHighlightHtmlTag(dictionnaryMatches) {\n      var tagPieces = dictionnaryMatches.slice(3);\n\n      // Converts every html attribute with syntax highlighting, e.g:\n      // ` class=\"my-class\"` => ` <span class=\"attribute\">class</span><span class=\"ponctuation\">=</span><span class=\"quote\">\"my-class\"</span>`,\n      // ` checked` => ` <span class=\"attribute\">checked</span><span class=\"ponctuation\">=</span><span class=\"quote\">\"my-class\"</span>`.\n      var renderAttributesList = function renderAttributesList() {\n        return (\n          // `attribute-name`\n          arguments[1] + '<span class=\"attribute\">' + arguments[2] + '</span>' + (\n          // `=`\n          arguments[4] ? '<span class=\"ponctuation\">=</span>' : '') + (\n          // `\"attribute value\"`\n          arguments[4] ? '<span class=\"quote\">' + (arguments[3] || '') + (arguments[4] || '') + (arguments[3] || '') + '</span>' : '')\n        );\n      };\n      var attributesList = (tagPieces[2] || '').replace(attributesRegex[this.language], renderAttributesList);\n\n      // Considering these 3 possible captures of html tags:\n      // `<tag-name attrs>` or `<tag-name attrs />` or `</tag-name>`,\n      return (\n        // Will be the tag opening: `</` or `<`.\n        '<span class=\"ponctuation\">' + tagPieces[0] + '</span>' + (\n        // Will be the tag-name + attributes list if any.\n        '<span class=\"tag-name\">' + tagPieces[1] + '</span>') + attributesList + (\n        // Will be the tag end `>` or `/>`.\n        '<span class=\"ponctuation\">' + tagPieces[3] + '</span>')\n      );\n    },\n    syntaxHighlightContent: function syntaxHighlightContent(string) {\n      var _this = this;\n\n      // Only proceed if the language is supported.\n      if (this.knownLanguages.indexOf(this.language) > -1) {\n        var _createRegexPattern = this.createRegexPattern(),\n            _createRegexPattern2 = _slicedToArray(_createRegexPattern, 2),\n            regexPattern = _createRegexPattern2[0],\n            classMap = _createRegexPattern2[1];\n\n        string = this.unhtmlize(string).replace(new RegExp(regexPattern, 'g'), function () {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var match = void 0,\n              Class = void 0;\n\n          // \"arguments.length - 2\" because the function is called with arguments like so:\n          // function(strMatch, c1, c2, ..., cn, matchOffset, sourceString){}. With c = the captures.\n          var dictionnaryMatches = Array.prototype.slice.call(args, 1, args.length - 2);\n          for (var i = 0; i < dictionnaryMatches.length; i++) {\n            if (dictionnaryMatches[i]) {\n              match = dictionnaryMatches[i];\n              Class = classMap[i];\n              break;\n            }\n          }\n\n          if (Class === 'quote') match = _this.unhtmlize(args[1] || args[2]);\n          if (Class === 'comment') match = _this.unhtmlize(match);\n          if (Class === 'tag' && ['xml', 'html', 'html-vue'].indexOf(_this.language) > -1) {\n            return _this.syntaxHighlightHtmlTag(dictionnaryMatches);\n          }\n\n          if (Class === 'variable' && match[0] === '.' && _this.language === 'js') {\n            /**\n              * @todo don't apply variable color if char before '.' is not '\\w'.\n              */\n            return '<span class=\"ponctuation\">.</span><span class=\"objAttr\">' + match.substr(1) + '</span>';\n          }\n\n          var styles = '';\n          if (Class === 'color' && _this.language === 'css') {\n            styles = ' style=\"background-color: ' + match + ';color: #' + (_this.isColorDark(match) ? 'fff' : '000') + '\"';\n          }\n\n          return '<span class=\"' + Class + '\"' + styles + '>' + match + '</span>';\n        });\n      }\n\n      return string;\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.$slots.default.forEach(function (pieceOfCode) {\n      if (pieceOfCode.text) {\n        _this2.content += pieceOfCode.text;\n      }\n    });\n    this.content = this.syntaxHighlightContent(this.content);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(14);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(1)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9zeW50YXgtaGlnaGxpZ2h0ZXIvc3R5bGUuc2Nzcz9iM2JkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIFByZXBhcmUgY3NzVHJhbnNmb3JtYXRpb25cbnZhciB0cmFuc2Zvcm07XG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jb21wb25lbnRzL3N5bnRheC1oaWdobGlnaHRlci9zdHlsZS5zY3NzXG4vLyBtb2R1bGUgaWQgPSAxM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(0)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"pre.precode {\\n  position: relative;\\n  padding: 0.5em;\\n  margin: 2.5em 0 2em;\\n  border: 1px solid #ddd;\\n  background-color: #f8f8f8;\\n  border-radius: 4px;\\n  display: block;\\n  /* Syntax highlighting */ }\\n  pre.precode[data-label]:before {\\n    content: attr(data-label);\\n    position: absolute;\\n    bottom: 100%;\\n    right: 1em;\\n    padding: 0.1em 0.5em;\\n    background-color: #f8f8f8;\\n    border: 1px solid #ddd;\\n    border-bottom: none;\\n    border-radius: 3px;\\n    margin-bottom: -1px;\\n    font-size: 11px; }\\n  pre.precode .txt {\\n    color: #333; }\\n  pre.precode .comment {\\n    font-style: italic;\\n    color: #aaa; }\\n  pre.precode .comment * {\\n    color: #aaa !important; }\\n  pre.precode .quote {\\n    color: #c11; }\\n  pre.precode .quote * {\\n    color: #c11 !important; }\\n  pre.precode .number {\\n    color: #c11; }\\n  pre.precode .boolean {\\n    color: #c11; }\\n  pre.precode .keyword {\\n    color: #11c;\\n    font-weight: bold; }\\n  pre.precode .ponctuation {\\n    color: #99f; }\\n  pre.precode .dollar,\\n  pre.precode .special {\\n    color: #f63; }\\n  pre.precode .variable {\\n    color: #29e; }\\n  pre.precode .objAttr {\\n    color: #0bc; }\\n  pre.precode[data-type=\\\"shell\\\"] .keyword {\\n    color: #ff5252; }\\n  pre.precode[data-type=\\\"shell\\\"] .param {\\n    color: #f63; }\\n  pre.precode[data-type=\\\"html\\\"] .tag-name {\\n    color: #11c; }\\n  pre.precode[data-type=\\\"html\\\"] .attribute {\\n    color: #f63; }\\n  pre.precode[data-type=\\\"html-vue\\\"] .tag-name {\\n    color: #42b983; }\\n  pre.precode[data-type=\\\"html-vue\\\"] .ponctuation {\\n    color: #128953; }\\n  pre.precode[data-type=\\\"html-vue\\\"] .attribute {\\n    color: #ff5252; }\\n  pre.precode[data-type=\\\"xml\\\"] .tag-name {\\n    color: #11c; }\\n  pre.precode[data-type=\\\"xml\\\"] .attribute {\\n    color: #f93; }\\n  pre.precode[data-type=\\\"css\\\"] .selector {\\n    color: #f0d; }\\n  pre.precode[data-type=\\\"css\\\"] .selector.class-id {\\n    color: #f0d; }\\n  pre.precode[data-type=\\\"css\\\"] .pseudo {\\n    color: #f35; }\\n  pre.precode[data-type=\\\"css\\\"] .selector.keyword {\\n    color: #f5f; }\\n  pre.precode[data-type=\\\"css\\\"] .selector.keyword.vendor {\\n    color: #0c8; }\\n  pre.precode[data-type=\\\"css\\\"] .keyword {\\n    color: #c06; }\\n  pre.precode[data-type=\\\"css\\\"] .attribute {\\n    color: #70d; }\\n  pre.precode[data-type=\\\"css\\\"] .attribute.keyword {\\n    color: #e28; }\\n  pre.precode[data-type=\\\"css\\\"] .attribute.keyword.vendor {\\n    color: #0c8; }\\n  pre.precode[data-type=\\\"css\\\"] .value {\\n    color: #c11; }\\n  pre.precode[data-type=\\\"css\\\"] .value.vendor {\\n    color: #0c8; }\\n  pre.precode[data-type=\\\"css\\\"] .color {\\n    background: #eee;\\n    padding: 0px 3px;\\n    border: 1px solid rgba(0, 0, 0, 0.1); }\\n  pre.precode[data-type=\\\"css\\\"] .unit {\\n    color: #0bc; }\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9zeW50YXgtaGlnaGxpZ2h0ZXIvc3R5bGUuc2Nzcz9iMmJjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUdBO0FBQ0Esc0NBQXVDLHVCQUF1QixtQkFBbUIsd0JBQXdCLDJCQUEyQiw4QkFBOEIsdUJBQXVCLG1CQUFtQiwrQkFBK0Isb0NBQW9DLGdDQUFnQyx5QkFBeUIsbUJBQW1CLGlCQUFpQiwyQkFBMkIsZ0NBQWdDLDZCQUE2QiwwQkFBMEIseUJBQXlCLDBCQUEwQixzQkFBc0IsRUFBRSxzQkFBc0Isa0JBQWtCLEVBQUUsMEJBQTBCLHlCQUF5QixrQkFBa0IsRUFBRSw0QkFBNEIsNkJBQTZCLEVBQUUsd0JBQXdCLGtCQUFrQixFQUFFLDBCQUEwQiw2QkFBNkIsRUFBRSx5QkFBeUIsa0JBQWtCLEVBQUUsMEJBQTBCLGtCQUFrQixFQUFFLDBCQUEwQixrQkFBa0Isd0JBQXdCLEVBQUUsOEJBQThCLGtCQUFrQixFQUFFLGtEQUFrRCxrQkFBa0IsRUFBRSwyQkFBMkIsa0JBQWtCLEVBQUUsMEJBQTBCLGtCQUFrQixFQUFFLCtDQUErQyxxQkFBcUIsRUFBRSw2Q0FBNkMsa0JBQWtCLEVBQUUsK0NBQStDLGtCQUFrQixFQUFFLGdEQUFnRCxrQkFBa0IsRUFBRSxtREFBbUQscUJBQXFCLEVBQUUsc0RBQXNELHFCQUFxQixFQUFFLG9EQUFvRCxxQkFBcUIsRUFBRSw4Q0FBOEMsa0JBQWtCLEVBQUUsK0NBQStDLGtCQUFrQixFQUFFLDhDQUE4QyxrQkFBa0IsRUFBRSx1REFBdUQsa0JBQWtCLEVBQUUsNENBQTRDLGtCQUFrQixFQUFFLHNEQUFzRCxrQkFBa0IsRUFBRSw2REFBNkQsa0JBQWtCLEVBQUUsNkNBQTZDLGtCQUFrQixFQUFFLCtDQUErQyxrQkFBa0IsRUFBRSx1REFBdUQsa0JBQWtCLEVBQUUsOERBQThELGtCQUFrQixFQUFFLDJDQUEyQyxrQkFBa0IsRUFBRSxrREFBa0Qsa0JBQWtCLEVBQUUsMkNBQTJDLHVCQUF1Qix1QkFBdUIsMkNBQTJDLEVBQUUsMENBQTBDLGtCQUFrQixFQUFFOztBQUV2dkYiLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcInByZS5wcmVjb2RlIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHBhZGRpbmc6IDAuNWVtO1xcbiAgbWFyZ2luOiAyLjVlbSAwIDJlbTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4O1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICAvKiBTeW50YXggaGlnaGxpZ2h0aW5nICovIH1cXG4gIHByZS5wcmVjb2RlW2RhdGEtbGFiZWxdOmJlZm9yZSB7XFxuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1sYWJlbCk7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgYm90dG9tOiAxMDAlO1xcbiAgICByaWdodDogMWVtO1xcbiAgICBwYWRkaW5nOiAwLjFlbSAwLjVlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcXG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAtMXB4O1xcbiAgICBmb250LXNpemU6IDExcHg7IH1cXG4gIHByZS5wcmVjb2RlIC50eHQge1xcbiAgICBjb2xvcjogIzMzMzsgfVxcbiAgcHJlLnByZWNvZGUgLmNvbW1lbnQge1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICAgIGNvbG9yOiAjYWFhOyB9XFxuICBwcmUucHJlY29kZSAuY29tbWVudCAqIHtcXG4gICAgY29sb3I6ICNhYWEgIWltcG9ydGFudDsgfVxcbiAgcHJlLnByZWNvZGUgLnF1b3RlIHtcXG4gICAgY29sb3I6ICNjMTE7IH1cXG4gIHByZS5wcmVjb2RlIC5xdW90ZSAqIHtcXG4gICAgY29sb3I6ICNjMTEgIWltcG9ydGFudDsgfVxcbiAgcHJlLnByZWNvZGUgLm51bWJlciB7XFxuICAgIGNvbG9yOiAjYzExOyB9XFxuICBwcmUucHJlY29kZSAuYm9vbGVhbiB7XFxuICAgIGNvbG9yOiAjYzExOyB9XFxuICBwcmUucHJlY29kZSAua2V5d29yZCB7XFxuICAgIGNvbG9yOiAjMTFjO1xcbiAgICBmb250LXdlaWdodDogYm9sZDsgfVxcbiAgcHJlLnByZWNvZGUgLnBvbmN0dWF0aW9uIHtcXG4gICAgY29sb3I6ICM5OWY7IH1cXG4gIHByZS5wcmVjb2RlIC5kb2xsYXIsXFxuICBwcmUucHJlY29kZSAuc3BlY2lhbCB7XFxuICAgIGNvbG9yOiAjZjYzOyB9XFxuICBwcmUucHJlY29kZSAudmFyaWFibGUge1xcbiAgICBjb2xvcjogIzI5ZTsgfVxcbiAgcHJlLnByZWNvZGUgLm9iakF0dHIge1xcbiAgICBjb2xvcjogIzBiYzsgfVxcbiAgcHJlLnByZWNvZGVbZGF0YS10eXBlPVxcXCJzaGVsbFxcXCJdIC5rZXl3b3JkIHtcXG4gICAgY29sb3I6ICNmZjUyNTI7IH1cXG4gIHByZS5wcmVjb2RlW2RhdGEtdHlwZT1cXFwic2hlbGxcXFwiXSAucGFyYW0ge1xcbiAgICBjb2xvcjogI2Y2MzsgfVxcbiAgcHJlLnByZWNvZGVbZGF0YS10eXBlPVxcXCJodG1sXFxcIl0gLnRhZy1uYW1lIHtcXG4gICAgY29sb3I6ICMxMWM7IH1cXG4gIHByZS5wcmVjb2RlW2RhdGEtdHlwZT1cXFwiaHRtbFxcXCJdIC5hdHRyaWJ1dGUge1xcbiAgICBjb2xvcjogI2Y2MzsgfVxcbiAgcHJlLnByZWNvZGVbZGF0YS10eXBlPVxcXCJodG1sLXZ1ZVxcXCJdIC50YWctbmFtZSB7XFxuICAgIGNvbG9yOiAjNDJiOTgzOyB9XFxuICBwcmUucHJlY29kZVtkYXRhLXR5cGU9XFxcImh0bWwtdnVlXFxcIl0gLnBvbmN0dWF0aW9uIHtcXG4gICAgY29sb3I6ICMxMjg5NTM7IH1cXG4gIHByZS5wcmVjb2RlW2RhdGEtdHlwZT1cXFwiaHRtbC12dWVcXFwiXSAuYXR0cmlidXRlIHtcXG4gICAgY29sb3I6ICNmZjUyNTI7IH1cXG4gIHByZS5wcmVjb2RlW2RhdGEtdHlwZT1cXFwieG1sXFxcIl0gLnRhZy1uYW1lIHtcXG4gICAgY29sb3I6ICMxMWM7IH1cXG4gIHByZS5wcmVjb2RlW2RhdGEtdHlwZT1cXFwieG1sXFxcIl0gLmF0dHJpYnV0ZSB7XFxuICAgIGNvbG9yOiAjZjkzOyB9XFxuICBwcmUucHJlY29kZVtkYXRhLXR5cGU9XFxcImNzc1xcXCJdIC5zZWxlY3RvciB7XFxuICAgIGNvbG9yOiAjZjBkOyB9XFxuICBwcmUucHJlY29kZVtkYXRhLXR5cGU9XFxcImNzc1xcXCJdIC5zZWxlY3Rvci5jbGFzcy1pZCB7XFxuICAgIGNvbG9yOiAjZjBkOyB9XFxuICBwcmUucHJlY29kZVtkYXRhLXR5cGU9XFxcImNzc1xcXCJdIC5wc2V1ZG8ge1xcbiAgICBjb2xvcjogI2YzNTsgfVxcbiAgcHJlLnByZWNvZGVbZGF0YS10eXBlPVxcXCJjc3NcXFwiXSAuc2VsZWN0b3Iua2V5d29yZCB7XFxuICAgIGNvbG9yOiAjZjVmOyB9XFxuICBwcmUucHJlY29kZVtkYXRhLXR5cGU9XFxcImNzc1xcXCJdIC5zZWxlY3Rvci5rZXl3b3JkLnZlbmRvciB7XFxuICAgIGNvbG9yOiAjMGM4OyB9XFxuICBwcmUucHJlY29kZVtkYXRhLXR5cGU9XFxcImNzc1xcXCJdIC5rZXl3b3JkIHtcXG4gICAgY29sb3I6ICNjMDY7IH1cXG4gIHByZS5wcmVjb2RlW2RhdGEtdHlwZT1cXFwiY3NzXFxcIl0gLmF0dHJpYnV0ZSB7XFxuICAgIGNvbG9yOiAjNzBkOyB9XFxuICBwcmUucHJlY29kZVtkYXRhLXR5cGU9XFxcImNzc1xcXCJdIC5hdHRyaWJ1dGUua2V5d29yZCB7XFxuICAgIGNvbG9yOiAjZTI4OyB9XFxuICBwcmUucHJlY29kZVtkYXRhLXR5cGU9XFxcImNzc1xcXCJdIC5hdHRyaWJ1dGUua2V5d29yZC52ZW5kb3Ige1xcbiAgICBjb2xvcjogIzBjODsgfVxcbiAgcHJlLnByZWNvZGVbZGF0YS10eXBlPVxcXCJjc3NcXFwiXSAudmFsdWUge1xcbiAgICBjb2xvcjogI2MxMTsgfVxcbiAgcHJlLnByZWNvZGVbZGF0YS10eXBlPVxcXCJjc3NcXFwiXSAudmFsdWUudmVuZG9yIHtcXG4gICAgY29sb3I6ICMwYzg7IH1cXG4gIHByZS5wcmVjb2RlW2RhdGEtdHlwZT1cXFwiY3NzXFxcIl0gLmNvbG9yIHtcXG4gICAgYmFja2dyb3VuZDogI2VlZTtcXG4gICAgcGFkZGluZzogMHB4IDNweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpOyB9XFxuICBwcmUucHJlY29kZVtkYXRhLXR5cGU9XFxcImNzc1xcXCJdIC51bml0IHtcXG4gICAgY29sb3I6ICMwYmM7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyIS4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zcmMvY29tcG9uZW50cy9zeW50YXgtaGlnaGxpZ2h0ZXIvc3R5bGUuc2Nzc1xuLy8gbW9kdWxlIGlkID0gMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzPzk4OTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxXQUFXLEVBQUU7QUFDckQsd0NBQXdDLFdBQVcsRUFBRTs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQ0FBc0M7QUFDdEMsR0FBRztBQUNIO0FBQ0EsOERBQThEO0FBQzlEOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQSIsImZpbGUiOiIxNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(1)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvbWFpbi9zdHlsZS5zY3NzPzIzZTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3BhZ2VzL21haW4vc3R5bGUuc2Nzc1xuLy8gbW9kdWxlIGlkID0gMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(0)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".coming-soon {\\n  font-style: italic; }\\n\\n.coming-soon .card__title {\\n  padding-bottom: 0;\\n  font-size: 1.2em; }\\n\\n.coming-soon .chip {\\n  margin: 2px 0; }\\n\\n.chip i.icon {\\n  position: relative;\\n  color: rgba(0, 0, 0, 0.25);\\n  margin: 0 7px 0 -7px; }\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvbWFpbi9zdHlsZS5zY3NzP2E2MGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSx1Q0FBd0MsdUJBQXVCLEVBQUUsK0JBQStCLHNCQUFzQixxQkFBcUIsRUFBRSx3QkFBd0Isa0JBQWtCLEVBQUUsa0JBQWtCLHVCQUF1QiwrQkFBK0IseUJBQXlCLEVBQUU7O0FBRTVSIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29taW5nLXNvb24ge1xcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XFxuXFxuLmNvbWluZy1zb29uIC5jYXJkX190aXRsZSB7XFxuICBwYWRkaW5nLWJvdHRvbTogMDtcXG4gIGZvbnQtc2l6ZTogMS4yZW07IH1cXG5cXG4uY29taW5nLXNvb24gLmNoaXAge1xcbiAgbWFyZ2luOiAycHggMDsgfVxcblxcbi5jaGlwIGkuaWNvbiB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI1KTtcXG4gIG1hcmdpbjogMCA3cHggMCAtN3B4OyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlciEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3JjL3BhZ2VzL21haW4vc3R5bGUuc2Nzc1xuLy8gbW9kdWxlIGlkID0gMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(19);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(1)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./examples.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./examples.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvbWFpbi9leGFtcGxlcy5zY3NzP2ViODYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vZXhhbXBsZXMuc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9leGFtcGxlcy5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2V4YW1wbGVzLnNjc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3BhZ2VzL21haW4vZXhhbXBsZXMuc2Nzc1xuLy8gbW9kdWxlIGlkID0gMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(0)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".vueperslides__slide {\\n  position: relative;\\n  background-position: bottom; }\\n\\n.vueperslides__slide-content--outside {\\n  position: static;\\n  transform: none;\\n  text-align: left;\\n  color: #444; }\\n\\n.vueperslides__slide .vueperslides__slide-content {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  text-align: center;\\n  color: #fff;\\n  font-family: Tahoma, Geneva, sans-serif;\\n  text-shadow: 0 0 4px rgba(0, 0, 0, 0.3); }\\n\\n.vueperslides__slide-content .slide-title {\\n  font-size: 2em; }\\n\\n.vueperslides__slide-content .slide-content {\\n  font-style: italic; }\\n\\n.vueperslides__slide-content--outside .content {\\n  padding-left: 2em;\\n  margin-top: 0; }\\n\\n.vueperslides__slide .vueperslides__slide-content .slide-content {\\n  position: relative;\\n  top: 3em; }\\n\\n.ex1 .vueperslides__slide {\\n  background: linear-gradient(-45deg, #EE7752, #E73C7E, #23A6D5, #23D5AB);\\n  background-size: 400% 400%;\\n  -webkit-animation: gradient 15s ease infinite;\\n  -moz-animation: gradient 15s ease infinite;\\n  animation: gradient 15s ease infinite; }\\n\\n.ex1 .slide-title {\\n  font-size: 7em;\\n  opacity: 0.6; }\\n\\n.ex3 .vueperslides__bullet {\\n  background-color: rgba(0, 0, 0, 0.3);\\n  border: none;\\n  box-shadow: none;\\n  transition: 0.3s;\\n  width: 16px;\\n  height: 16px; }\\n\\n.ex3 .vueperslides__bullet--active {\\n  background-color: #ff5252; }\\n\\n.ex3 .vueperslides__bullet span {\\n  display: block;\\n  color: #fff;\\n  font-size: 10px;\\n  opacity: 0.8; }\\n\\n.ex-events .vueperslides__slide--active:before {\\n  content: 'This slide is active!';\\n  position: absolute;\\n  top: -18px;\\n  right: -18px;\\n  padding: 4px 25px;\\n  background: orange;\\n  color: #fff;\\n  font-size: 10px;\\n  transform: translateX(30%) rotate(45deg);\\n  transform-origin: 0 0;\\n  box-shadow: 0 0 9px rgba(0, 0, 0, 0.2); }\\n\\n@-webkit-keyframes gradient {\\n  0% {\\n    background-position: 0% 50%; }\\n  50% {\\n    background-position: 100% 50%; }\\n  100% {\\n    background-position: 0% 50%; } }\\n\\n@-moz-keyframes gradient {\\n  0% {\\n    background-position: 0% 50%; }\\n  50% {\\n    background-position: 100% 50%; }\\n  100% {\\n    background-position: 0% 50%; } }\\n\\n@keyframes gradient {\\n  0% {\\n    background-position: 0% 50%; }\\n  50% {\\n    background-position: 100% 50%; }\\n  100% {\\n    background-position: 0% 50%; } }\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvbWFpbi9leGFtcGxlcy5zY3NzPzgxNTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSwrQ0FBZ0QsdUJBQXVCLGdDQUFnQyxFQUFFLDJDQUEyQyxxQkFBcUIsb0JBQW9CLHFCQUFxQixnQkFBZ0IsRUFBRSx1REFBdUQsdUJBQXVCLGFBQWEsY0FBYyxxQ0FBcUMsdUJBQXVCLGdCQUFnQiw0Q0FBNEMsNENBQTRDLEVBQUUsK0NBQStDLG1CQUFtQixFQUFFLGlEQUFpRCx1QkFBdUIsRUFBRSxvREFBb0Qsc0JBQXNCLGtCQUFrQixFQUFFLHNFQUFzRSx1QkFBdUIsYUFBYSxFQUFFLCtCQUErQiw0RUFBNEUsK0JBQStCLGtEQUFrRCwrQ0FBK0MsMENBQTBDLEVBQUUsdUJBQXVCLG1CQUFtQixpQkFBaUIsRUFBRSxnQ0FBZ0MseUNBQXlDLGlCQUFpQixxQkFBcUIscUJBQXFCLGdCQUFnQixpQkFBaUIsRUFBRSx3Q0FBd0MsOEJBQThCLEVBQUUscUNBQXFDLG1CQUFtQixnQkFBZ0Isb0JBQW9CLGlCQUFpQixFQUFFLG9EQUFvRCxxQ0FBcUMsdUJBQXVCLGVBQWUsaUJBQWlCLHNCQUFzQix1QkFBdUIsZ0JBQWdCLG9CQUFvQiw2Q0FBNkMsMEJBQTBCLDJDQUEyQyxFQUFFLGlDQUFpQyxRQUFRLGtDQUFrQyxFQUFFLFNBQVMsb0NBQW9DLEVBQUUsVUFBVSxrQ0FBa0MsRUFBRSxFQUFFLDhCQUE4QixRQUFRLGtDQUFrQyxFQUFFLFNBQVMsb0NBQW9DLEVBQUUsVUFBVSxrQ0FBa0MsRUFBRSxFQUFFLHlCQUF5QixRQUFRLGtDQUFrQyxFQUFFLFNBQVMsb0NBQW9DLEVBQUUsVUFBVSxrQ0FBa0MsRUFBRSxFQUFFOztBQUUzMEUiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi52dWVwZXJzbGlkZXNfX3NsaWRlIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTsgfVxcblxcbi52dWVwZXJzbGlkZXNfX3NsaWRlLWNvbnRlbnQtLW91dHNpZGUge1xcbiAgcG9zaXRpb246IHN0YXRpYztcXG4gIHRyYW5zZm9ybTogbm9uZTtcXG4gIHRleHQtYWxpZ246IGxlZnQ7XFxuICBjb2xvcjogIzQ0NDsgfVxcblxcbi52dWVwZXJzbGlkZXNfX3NsaWRlIC52dWVwZXJzbGlkZXNfX3NsaWRlLWNvbnRlbnQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiA1MCU7XFxuICBsZWZ0OiA1MCU7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgZm9udC1mYW1pbHk6IFRhaG9tYSwgR2VuZXZhLCBzYW5zLXNlcmlmO1xcbiAgdGV4dC1zaGFkb3c6IDAgMCA0cHggcmdiYSgwLCAwLCAwLCAwLjMpOyB9XFxuXFxuLnZ1ZXBlcnNsaWRlc19fc2xpZGUtY29udGVudCAuc2xpZGUtdGl0bGUge1xcbiAgZm9udC1zaXplOiAyZW07IH1cXG5cXG4udnVlcGVyc2xpZGVzX19zbGlkZS1jb250ZW50IC5zbGlkZS1jb250ZW50IHtcXG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxcblxcbi52dWVwZXJzbGlkZXNfX3NsaWRlLWNvbnRlbnQtLW91dHNpZGUgLmNvbnRlbnQge1xcbiAgcGFkZGluZy1sZWZ0OiAyZW07XFxuICBtYXJnaW4tdG9wOiAwOyB9XFxuXFxuLnZ1ZXBlcnNsaWRlc19fc2xpZGUgLnZ1ZXBlcnNsaWRlc19fc2xpZGUtY29udGVudCAuc2xpZGUtY29udGVudCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB0b3A6IDNlbTsgfVxcblxcbi5leDEgLnZ1ZXBlcnNsaWRlc19fc2xpZGUge1xcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KC00NWRlZywgI0VFNzc1MiwgI0U3M0M3RSwgIzIzQTZENSwgIzIzRDVBQik7XFxuICBiYWNrZ3JvdW5kLXNpemU6IDQwMCUgNDAwJTtcXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBncmFkaWVudCAxNXMgZWFzZSBpbmZpbml0ZTtcXG4gIC1tb3otYW5pbWF0aW9uOiBncmFkaWVudCAxNXMgZWFzZSBpbmZpbml0ZTtcXG4gIGFuaW1hdGlvbjogZ3JhZGllbnQgMTVzIGVhc2UgaW5maW5pdGU7IH1cXG5cXG4uZXgxIC5zbGlkZS10aXRsZSB7XFxuICBmb250LXNpemU6IDdlbTtcXG4gIG9wYWNpdHk6IDAuNjsgfVxcblxcbi5leDMgLnZ1ZXBlcnNsaWRlc19fYnVsbGV0IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJveC1zaGFkb3c6IG5vbmU7XFxuICB0cmFuc2l0aW9uOiAwLjNzO1xcbiAgd2lkdGg6IDE2cHg7XFxuICBoZWlnaHQ6IDE2cHg7IH1cXG5cXG4uZXgzIC52dWVwZXJzbGlkZXNfX2J1bGxldC0tYWN0aXZlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjUyNTI7IH1cXG5cXG4uZXgzIC52dWVwZXJzbGlkZXNfX2J1bGxldCBzcGFuIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgY29sb3I6ICNmZmY7XFxuICBmb250LXNpemU6IDEwcHg7XFxuICBvcGFjaXR5OiAwLjg7IH1cXG5cXG4uZXgtZXZlbnRzIC52dWVwZXJzbGlkZXNfX3NsaWRlLS1hY3RpdmU6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6ICdUaGlzIHNsaWRlIGlzIGFjdGl2ZSEnO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAtMThweDtcXG4gIHJpZ2h0OiAtMThweDtcXG4gIHBhZGRpbmc6IDRweCAyNXB4O1xcbiAgYmFja2dyb3VuZDogb3JhbmdlO1xcbiAgY29sb3I6ICNmZmY7XFxuICBmb250LXNpemU6IDEwcHg7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMzAlKSByb3RhdGUoNDVkZWcpO1xcbiAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xcbiAgYm94LXNoYWRvdzogMCAwIDlweCByZ2JhKDAsIDAsIDAsIDAuMik7IH1cXG5cXG5ALXdlYmtpdC1rZXlmcmFtZXMgZ3JhZGllbnQge1xcbiAgMCUge1xcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7IH1cXG4gIDUwJSB7XFxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgNTAlOyB9XFxuICAxMDAlIHtcXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCUgNTAlOyB9IH1cXG5cXG5ALW1vei1rZXlmcmFtZXMgZ3JhZGllbnQge1xcbiAgMCUge1xcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7IH1cXG4gIDUwJSB7XFxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgNTAlOyB9XFxuICAxMDAlIHtcXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCUgNTAlOyB9IH1cXG5cXG5Aa2V5ZnJhbWVzIGdyYWRpZW50IHtcXG4gIDAlIHtcXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCUgNTAlOyB9XFxuICA1MCUge1xcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDUwJTsgfVxcbiAgMTAwJSB7XFxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAlIDUwJTsgfSB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlciEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3JjL3BhZ2VzL21haW4vZXhhbXBsZXMuc2Nzc1xuLy8gbW9kdWxlIGlkID0gMTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///19\n");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"documentation\\\"><v-layout class=\\\"max-widthed\\\" row=\\\"row\\\" align-center=\\\"align-center\\\"><p>Vueper Slides comes with a minimum of styling (using the <i>BEM</i> convention).<br/>\\nYou can easily override it, the aim is to let users have their own styles.</p><v-spacer></v-spacer><v-card class=\\\"coming-soon\\\"><v-card-title>To Do...</v-card-title><v-card-text><v-layout column=\\\"column\\\"><v-chip color=\\\"light-green lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>check_circle</v-icon>Emit events with params</v-chip><v-chip color=\\\"light-green lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>check_circle</v-icon>Slide with keyboard arrows</v-chip><v-chip color=\\\"light-green lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>check_circle</v-icon>Add / remove slides</v-chip><v-chip color=\\\"light-green lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>check_circle</v-icon>Disable / enable slideshow</v-chip><v-chip color=\\\"amber lighten-2\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>access_time</v-icon>Center mode</v-chip><v-chip color=\\\"amber lighten-2\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>access_time</v-icon>Minify VueperSlides</v-chip><v-chip color=\\\"deep-orange lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>remove_circle</v-icon>Breakpoints</v-chip><v-chip color=\\\"deep-orange lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>remove_circle</v-icon>Nav for</v-chip><v-chip color=\\\"deep-orange lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>remove_circle</v-icon>Slides to scroll at once</v-chip><v-chip color=\\\"deep-orange lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>remove_circle</v-icon>Dragging distance</v-chip><v-chip color=\\\"deep-orange lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>remove_circle</v-icon>Lazy loading</v-chip><v-chip color=\\\"deep-orange lighten-1\\\" text-color=\\\"white\\\" small=\\\"small\\\"><v-icon>remove_circle</v-icon>Parallax</v-chip></v-layout></v-card-text></v-card><v-spacer></v-spacer></v-layout><h2><a href=\\\"#installation\\\">Installation</a><a name=\\\"installation\\\"></a></h2><h3>NPM - Coming Soon!</h3><precode language=\\\"shell\\\" label=\\\"Shell\\\">npm install vueper-slides --save</precode><p>Then import the 2 components and use it:</p><precode language=\\\"js\\\" label=\\\"Javascript\\\">import { VueperSlides, VueperSlide } from '../../../../dist/vueperslides.umd'\\n...\\n\\nexport default {\\n  components: {\\n    VueperSlides,\\n    VueperSlide\\n  },\\n  template: ...,\\n  ...\\n}\\n\\n</precode><h3>Browser Use</h3><p>Place this in your document &lt;head&gt;</p><precode language=\\\"html\\\" label=\\\"HTML\\\">&lt;head&gt;\\n  ...\\n  &lt;script src=\\\"https://unpkg.com/vue/dist/vue.min.js\\\"&gt;&lt;/script&gt;\\n  &lt;script src=\\\"https://unpkg.com/vuetify/dist/vuetify.min.js\\\"&gt;&lt;/script&gt;\\n  &lt;script src=\\\"../dist/vueperslides.umd.js\\\"&gt;&lt;/script&gt;\\n  &lt;link href=\\\"https://unpkg.com/vuetify/dist/vuetify.min.css\\\" rel=\\\"stylesheet\\\"&gt;\\n&lt;/head&gt;</precode><p>Then use like this:</p><precode language=\\\"html-vue\\\" label=\\\"HTML Vue Template\\\">&lt;vueper-slides&gt;\\n  &lt;vueper-slide v-for=\\\"i in 5\\\" :key=\\\"i\\\" :title=\\\"i\\\"&gt;&lt;/vueper-slide&gt;\\n&lt;/vueper-slides&gt;\\n</precode><h2><a href=\\\"#vueper-slides-api\\\">&lt;vueper-slides&gt; API</a><a name=\\\"vueper-slides-api\\\"></a></h2><p>This is the main tag for the slider.<br/>\\nYou can set different options in html attributes.<br/>\\nYou can also override the default arrows and `paused` indicator if you want.\\n</p><h3><a href=\\\"#vueper-slides-settings\\\">Settings</a><a name=\\\"vueper-slides-settings\\\"></a></h3><p>Settings</p><precode language=\\\"js\\\">initSlide:                [Number],         default: 1\\nslideRatio:               [Number],         default: 1/3\\narrows:                   [Boolean],        default: true\\ndisableArrowsOnEdges:     [Boolean],        default: false\\nbullets:                  [Boolean],        default: true\\nbulletsOutside:           [Boolean],        default: false\\nfade:                     [Boolean],        default: false\\nslideContentOutside:      [Boolean],        default: false\\nslideContentOutsideClass: [String],         default: \\\"\\\"\\nautoplay:                 [Boolean],        default: false\\nspeed:                    [Number, String], default: 4000\\npauseOnHover:             [Boolean],        default: true\\ninfinite:                 [Boolean],        default: true\\ntouchable:                [Boolean],        default: true\\ndisable:                  [Boolean],        default: false\\n</precode><h3><a href=\\\"#events\\\">Events</a><a name=\\\"events\\\"></a></h3><p>To see the events in action you can check the <a href=\\\"#ex--events\\\">Events example</a>.</p><ul class=\\\"max-widthed\\\"><li><h4><code>before-init</code></h4></li><li><h4><code>ready</code></h4></li><li><h4><code>before-slide</code></h4><p>This event is emitted with:</p><ul><li>a <code>currentSlide</code> object containing the slide index, title & content of the current slide.</li><li>a <code>nextSlide</code> object containing the slide index, title & content of the next slide.</li></ul></li><li><h4><code>slide</code></h4><p>comes with information about the new current slide.</p></li></ul><h2><a href=\\\"#vueper-slide-api\\\">&lt;vueper-slide&gt; API</a><a name=\\\"vueper-slide-api\\\"></a></h2><h3><a href=\\\"#vueper-slide-settings\\\">Settings</a><a name=\\\"vueper-slide-settings\\\"></a></h3><p>Settings</p><precode language=\\\"js\\\">image:   [String], default: ''\\ntitle:   [String], default: ''\\ncontent: [String], default: ''\\n\\n</precode><h2><a href=\\\"#examples\\\">Examples of Use</a><a name=\\\"examples\\\"></a></h2><h3><a href=\\\"#ex--simplest-ever\\\">Simplest Ever</a><a name=\\\"ex--simplest-ever\\\"></a></h3><precode language=\\\"html-vue\\\" label=\\\"HTML Vue Template\\\">&lt;vueper-slides&gt;\\n  &lt;vueper-slide v-for=\\\"i in 5\\\" :key=\\\"i\\\" :title=\\\"i\\\"&gt;&lt;/vueper-slide&gt;\\n&lt;/vueper-slides&gt;</precode><vueper-slides class=\\\"ex1\\\"><vueper-slide v-for=\\\"i in 5\\\" :key=\\\"i\\\" :title=\\\"i.toString()\\\"></vueper-slide></vueper-slides><h3><a href=\\\"#ex--basic\\\">Basic with Autoplay</a><a name=\\\"ex--basic\\\"></a></h3><p>This example uses autoplay, slide titles & contents & an infinite mode (by default).<br/><em>The autoplay circles between all the slides and goes back to the begining after the last slide.</em></p><precode language=\\\"html-vue\\\" label=\\\"HTML Vue Template\\\">&lt;vueper-slides autoplay&gt;\\n  &lt;v-icon slot=\\\"pausedIcon\\\" large color=\\\"white\\\"&gt;pause&lt;/v-icon&gt;\\n  &lt;vueper-slide v-for=\\\"(slide, i) in slides\\\"\\n    :key=\\\"slide.id\\\"\\n    :title=\\\"slide.title\\\"\\n    :content=\\\"slide.content\\\"\\n    :style=\\\"'background-color: ' + colors[i % 4]\\\"&gt;&lt;/vueper-slide&gt;\\n&lt;/vueper-slides&gt;</precode><vueper-slides class=\\\"ex2\\\" autoplay=\\\"autoplay\\\"><v-icon slot=\\\"pausedIcon\\\" large=\\\"large\\\" color=\\\"white\\\">pause_circle_outline</v-icon><vueper-slide v-for=\\\"(slide, i) in slides\\\" :key=\\\"slide.id\\\" :title=\\\"slide.title\\\" :content=\\\"slide.content\\\" :style=\\\"'background-color: ' + colors[i % 4]\\\"></vueper-slide></vueper-slides><h3><a href=\\\"#ex--arrows-and-bullets\\\">Arrows & bullets</a><a name=\\\"ex--arrows-and-bullets\\\"></a></h3><p>This example uses custom arrows and positions the bullets outside of the slideshow.<br/>\\nThe bullets are showing slide indexes which is disabled by default.<br/>\\nYou can also disable arrows and/or bullets. E.g. <code>:arrows=\\\"false\\\"</code>, <code>:bullets=\\\"false\\\"</code></p><precode language=\\\"html-vue\\\" label=\\\"HTML Vue Template\\\">&lt;vueper-slides :infinite=\\\"false\\\" :bullets-outside=\\\"true\\\"&gt;\\n  &lt;v-icon slot=\\\"arrowLeft\\\" color=\\\"white\\\" large&gt;arrow_left&lt;/v-icon&gt;\\n  &lt;v-icon slot=\\\"arrowRight\\\" color=\\\"white\\\" large&gt;arrow_right&lt;/v-icon&gt;\\n  &lt;vueper-slide\\n    v-for=\\\"(slide, i) in slides\\\"\\n    :key=\\\"slide.id\\\"\\n    :title=\\\"slide.title\\\"\\n    :content=\\\"slide.content\\\"\\n    :style=\\\"'background-color: ' + colors[(i + 1) % 4]\\\"&gt;&lt;/vueper-slide&gt;\\n&lt;/vueper-slides&gt;</precode><precode language=\\\"css\\\" label=\\\"CSS\\\">.ex3 .vueperslides__bullet {\\n  background-color: rgba(0, 0, 0, 0.3);\\n  border: none;\\n  box-shadow: none;\\n  transition: 0.3s;\\n  width: 16px;\\n  height: 16px;\\n}\\n\\n.ex3 .vueperslides__bullet--active {\\n  background-color: #ff5252;\\n}\\n\\n.ex3 .vueperslides__bullet span {\\n  display: block;\\n  color: #fff;\\n  font-size: 10px;\\n  opacity: 0.8;\\n}</precode><vueper-slides class=\\\"ex3\\\" :infinite=\\\"false\\\" :bullets-outside=\\\"true\\\"><v-icon slot=\\\"arrowLeft\\\" color=\\\"white\\\" x-large=\\\"x-large\\\">undo</v-icon><v-icon slot=\\\"arrowRight\\\" color=\\\"white\\\" x-large=\\\"x-large\\\">redo</v-icon><vueper-slide v-for=\\\"(slide, i) in slides\\\" :key=\\\"slide.id\\\" :title=\\\"slide.title\\\" :content=\\\"slide.content\\\" :style=\\\"'background-color: ' + colors[(i + 1) % 4]\\\"></vueper-slide></vueper-slides><h3><a href=\\\"#ex--images-and-fading\\\">Images & Fading</a><a name=\\\"ex--images-and-fading\\\"></a></h3><p>This example uses <b>images</b> and <b>fading</b> as the slide transition.<br/>\\nThe <b>dragging</b> ability to change slide is <b>disabled</b>.<br/>\\nThe current slide title & content are shown <b>outside</b> of the slider.\\n<br/>Of course you can position it with a bit of CSS.</p><precode language=\\\"html-vue\\\" label=\\\"HTML Vue Template\\\">&lt;vueper-slides&gt;\\n  &lt;vueper-slide\\n    v-for=\\\"(slide, i) in slides2\\\"\\n    :key=\\\"i\\\"\\n    :image=\\\"'images/' + slide.image\\\"\\n    :title=\\\"'# ' + slide.title\\\"\\n    :content=\\\"slide.content\\\"&gt;&lt;/vueper-slide&gt;\\n&lt;/vueper-slides&gt;</precode><vueper-slides fade=\\\"fade\\\" :slide-content-outside=\\\"true\\\" slide-content-outside-class=\\\"max-widthed\\\" :touchable=\\\"false\\\" :slide-ratio=\\\"0.3\\\"><vueper-slide v-for=\\\"(slide, i) in slides2\\\" :key=\\\"i\\\" :image=\\\"slide.image\\\" :title=\\\"'# ' + slide.title\\\" :content=\\\"slide.content\\\"></vueper-slide></vueper-slides><h3><a href=\\\"#ex--events\\\">Events</a><a name=\\\"ex--events\\\"></a></h3><p>This example demonstrates how to use the vueper slides provided events and how to style the current slide.<br/>\\nThe events box bellow will log all the events (and the given params) triggered while using the slideshow.<br/>\\nYou can change slides to see new events.</p><precode language=\\\"css\\\" label=\\\"CSS\\\">.ex--events .vueperslides__slide--active:before {\\n  content: 'This slide is active!';\\n  position: absolute;\\n  top: -18px;\\n  right: -18px;\\n  padding: 4px 25px;\\n  background: orange;\\n  color: #fff;\\n  font-size: 10px;\\n  transform: translateX(30%) rotate(45deg);\\n  transform-origin: 0 0;\\n  box-shadow: 0 0 9px rgba(0, 0, 0, 0.2);\\n}</precode><pre class=\\\"precode\\\" data-label=\\\"Event box\\\" style=\\\"min-height: 120px\\\">listening...<p v-html=\\\"events\\\"></p></pre><vueper-slides class=\\\"ex-events\\\" @before-init=\\\"logEvents\\\" @ready=\\\"logEvents\\\" @before-slide=\\\"logEvents\\\" @slide=\\\"logEvents\\\" :slide-ratio=\\\"0.2\\\"><vueper-slide v-for=\\\"i in 6\\\" :key=\\\"i\\\" :title=\\\"i.toString()\\\" :style=\\\"'background-color: ' + ['#ff5252', '#42b983'][i % 2]\\\"></vueper-slide></vueper-slides><h3><a href=\\\"#ex--add-remove-slides--disable\\\">Add / remove slides & disable slideshow</a><a name=\\\"ex--add-remove-slides--disable\\\"></a></h3><p>This example demonstrates how to use the vueper slides provided events.<br/>\\nThe box bellow will be populated by all the events triggered while using the slideshow.<br/>\\nYou can change slides to see new events.<v-btn color=\\\"primary\\\" @click=\\\"appendSlide\\\" small=\\\"small\\\"><v-icon>add</v-icon>&nbsp; Add Slide</v-btn><v-btn color=\\\"primary\\\" @click=\\\"removeSlide\\\" small=\\\"small\\\"><v-icon>remove</v-icon>&nbsp; Remove Slide</v-btn><v-btn color=\\\"secondary\\\" @click=\\\"toggleSlideshow\\\" small=\\\"small\\\"><v-icon>{{ slideshowDisabled ? 'check_circle' : 'highlight_off'}}</v-icon>&nbsp; {{ slideshowDisabled ? 'Enable' : 'Disable' }} Slideshow</v-btn></p><vueper-slides :slide-ratio=\\\"0.2\\\" :infinite=\\\"false\\\" disableArrowsOnEdges=\\\"disableArrowsOnEdges\\\" :disable=\\\"slideshowDisabled\\\"><vueper-slide v-for=\\\"(slide, i) in slides3\\\" :key=\\\"i\\\" :title=\\\"slide.title\\\" :content=\\\"slide.content\\\" :style=\\\"'background-color: ' + ['#ff5252', '#42b983'][i % 2]\\\"></vueper-slide></vueper-slides></div>\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/rough-horn-2146181_1280.4e2f642c.jpg\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9yb3VnaC1ob3JuLTIxNDYxODFfMTI4MC5qcGc/ZWM5OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIyMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9yb3VnaC1ob3JuLTIxNDYxODFfMTI4MC40ZTJmNjQyYy5qcGdcIjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9hc3NldHMvaW1hZ2VzL3JvdWdoLWhvcm4tMjE0NjE4MV8xMjgwLmpwZ1xuLy8gbW9kdWxlIGlkID0gMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/snow-3212345_1280.18898f1b.jpg\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9zbm93LTMyMTIzNDVfMTI4MC5qcGc/YTI1NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIyMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9zbm93LTMyMTIzNDVfMTI4MC4xODg5OGYxYi5qcGdcIjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9hc3NldHMvaW1hZ2VzL3Nub3ctMzIxMjM0NV8xMjgwLmpwZ1xuLy8gbW9kdWxlIGlkID0gMjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/snow-3237630_1280.06ff6c0c.jpg\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltYWdlcy9zbm93LTMyMzc2MzBfMTI4MC5qcGc/NTcwMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9zbm93LTMyMzc2MzBfMTI4MC4wNmZmNmMwYy5qcGdcIjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9hc3NldHMvaW1hZ2VzL3Nub3ctMzIzNzYzMF8xMjgwLmpwZ1xuLy8gbW9kdWxlIGlkID0gMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vuetify\"] = factory();\n\telse\n\t\troot[\"Vuetify\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 46);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    color: String\n  },\n\n  data: function data() {\n    return {\n      defaultColor: null\n    };\n  },\n\n\n  computed: {\n    computedColor: function computedColor() {\n      return this.color || this.defaultColor;\n    }\n  },\n\n  methods: {\n    addBackgroundColorClassChecks: function addBackgroundColorClassChecks() {\n      var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'computedColor';\n\n      var classes = Object.assign({}, obj);\n\n      if (prop && this[prop]) {\n        classes[this[prop]] = true;\n      }\n\n      return classes;\n    },\n    addTextColorClassChecks: function addTextColorClassChecks() {\n      var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'computedColor';\n\n      var classes = Object.assign({}, obj);\n\n      if (prop && this[prop]) {\n        var parts = this[prop].trim().split(' ');\n\n        var color = parts[0] + '--text';\n\n        if (parts.length > 1) color += ' text--' + parts[1];\n\n        classes[color] = !!this[prop];\n      }\n\n      return classes;\n    }\n  }\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    dark: Boolean,\n    light: Boolean\n  },\n\n  computed: {\n    themeClasses: function themeClasses() {\n      return {\n        'theme--light': this.light,\n        'theme--dark': this.dark\n      };\n    }\n  }\n});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = createSimpleFunctional;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = createSimpleTransition;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createJavaScriptTransition;\n/* unused harmony export directiveConfig */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = addOnceEventListener;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = getObjectValueByPath;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = createRange;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = getZIndex;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = escapeHTML;\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction createSimpleFunctional(c) {\n  var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'div';\n  var name = arguments[2];\n\n  name = name || c.replace(/__/g, '-');\n\n  return {\n    name: 'v-' + name,\n    functional: true,\n\n    render: function render(h, _ref) {\n      var data = _ref.data,\n          children = _ref.children;\n\n      data.staticClass = (c + ' ' + (data.staticClass || '')).trim();\n\n      return h(el, data, children);\n    }\n  };\n}\n\nfunction createSimpleTransition(name) {\n  var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top center 0';\n  var mode = arguments[2];\n\n  return {\n    name: name,\n\n    functional: true,\n\n    props: {\n      origin: {\n        type: String,\n        default: origin\n      }\n    },\n\n    render: function render(h, context) {\n      context.data = context.data || {};\n      context.data.props = { name: name };\n      context.data.on = context.data.on || {};\n      if (!Object.isExtensible(context.data.on)) {\n        context.data.on = _extends({}, context.data.on);\n      }\n\n      if (mode) context.data.props.mode = mode;\n\n      context.data.on.beforeEnter = function (el) {\n        el.style.transformOrigin = context.props.origin;\n        el.style.webkitTransformOrigin = context.props.origin;\n      };\n\n      return h('transition', context.data, context.children);\n    }\n  };\n}\n\nfunction createJavaScriptTransition(name, functions) {\n  var css = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var mode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'in-out';\n\n  return {\n    name: name,\n\n    functional: true,\n\n    props: {\n      css: {\n        type: Boolean,\n        default: css\n      },\n      mode: {\n        type: String,\n        default: mode\n      }\n    },\n\n    render: function render(h, context) {\n      var data = {\n        props: _extends({}, context.props, {\n          name: name\n        }),\n        on: functions\n      };\n\n      return h('transition', data, context.children);\n    }\n  };\n}\n\nfunction directiveConfig(binding) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return Object.assign({}, defaults, binding.modifiers, { value: binding.arg }, binding.value || {});\n}\n\nfunction addOnceEventListener(el, event, cb) {\n  var once = function once() {\n    cb();\n    el.removeEventListener(event, once, false);\n  };\n\n  el.addEventListener(event, once, false);\n}\n\nfunction getObjectValueByPath(obj, path) {\n  // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621\n  if (!path || path.constructor !== String) return;\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n  path = path.replace(/^\\./, ''); // strip a leading dot\n  var a = path.split('.');\n  for (var i = 0, n = a.length; i < n; ++i) {\n    var k = a[i];\n    if (obj instanceof Object && k in obj) {\n      obj = obj[k];\n    } else {\n      return;\n    }\n  }\n  return obj;\n}\n\nfunction createRange(length) {\n  return [].concat(_toConsumableArray(Array.from({ length: length }, function (v, k) {\n    return k;\n  })));\n}\n\nfunction getZIndex(el) {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0;\n  var zi = document.defaultView.getComputedStyle(el).getPropertyValue('z-index');\n  if (isNaN(zi)) return getZIndex(el.parentNode);\n\n  return zi;\n}\n\nvar tagsToReplace = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;'\n};\nfunction escapeHTML(str) {\n  return str.replace(/[&<>]/g, function (tag) {\n    return tagsToReplace[tag] || tag;\n  });\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VIcon__ = __webpack_require__(64);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */]);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = factory;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction factory() {\n  var _watch;\n\n  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'input';\n\n  return {\n    model: { prop: prop, event: event },\n\n    props: _defineProperty({}, prop, { required: false }),\n\n    data: function data() {\n      return {\n        isActive: !!this[prop]\n      };\n    },\n\n\n    watch: (_watch = {}, _defineProperty(_watch, prop, function (val) {\n      this.isActive = !!val;\n    }), _defineProperty(_watch, 'isActive', function isActive(val) {\n      !!val !== this[prop] && this.$emit(event, val);\n    }), _watch)\n  };\n}\n\nvar Toggleable = factory();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Toggleable);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VBottomSheetTranstion */\n/* unused harmony export VCarouselTransition */\n/* unused harmony export VCarouselReverseTransition */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return VTabTransition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return VTabReverseTransition; });\n/* unused harmony export VMenuTransition */\n/* unused harmony export VFabTransition */\n/* unused harmony export VDialogTransition */\n/* unused harmony export VDialogBottomTransition */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return VFadeTransition; });\n/* unused harmony export VScaleTransition */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return VSlideXTransition; });\n/* unused harmony export VSlideXReverseTransition */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return VSlideYTransition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return VSlideYReverseTransition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return VExpandTransition; });\n/* unused harmony export VRowExpandTransition */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__expand_transition__ = __webpack_require__(30);\n\n\n\n\n// Component specific transitions\nvar VBottomSheetTranstion = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('bottom-sheet-transition');\nvar VCarouselTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('carousel-transition');\nvar VCarouselReverseTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('carousel-reverse-transition');\nvar VTabTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('tab-transition');\nvar VTabReverseTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('tab-reverse-transition');\nvar VMenuTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('menu-transition');\nvar VFabTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('fab-transition', 'center center', 'out-in');\n\n// Generic transitions\nvar VDialogTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('dialog-transition');\nvar VDialogBottomTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('dialog-bottom-transition');\nvar VFadeTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('fade-transition');\nvar VScaleTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('scale-transition');\nvar VSlideXTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('slide-x-transition');\nvar VSlideXReverseTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('slide-x-reverse-transition');\nvar VSlideYTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('slide-y-transition');\nvar VSlideYReverseTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"e\" /* createSimpleTransition */])('slide-y-reverse-transition');\n\n// JavaScript transitions\nvar VExpandTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"b\" /* createJavaScriptTransition */])('expand-transition', Object(__WEBPACK_IMPORTED_MODULE_1__expand_transition__[\"a\" /* default */])());\nvar VRowExpandTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"b\" /* createJavaScriptTransition */])('row-expand-transition', Object(__WEBPACK_IMPORTED_MODULE_1__expand_transition__[\"a\" /* default */])('datatable__expand-col--expanded'));\n\n/* harmony default export */ __webpack_exports__[\"h\"] = (install);\n/* istanbul ignore next */\nfunction install(Vue) {\n  Vue.component('v-bottom-sheet-transition', VBottomSheetTranstion);\n  Vue.component('v-carousel-transition', VCarouselTransition);\n  Vue.component('v-carousel-reverse-transition', VCarouselReverseTransition);\n  Vue.component('v-dialog-transition', VDialogTransition);\n  Vue.component('v-dialog-bottom-transition', VDialogBottomTransition);\n  Vue.component('v-fab-transition', VFabTransition);\n  Vue.component('v-fade-transition', VFadeTransition);\n  Vue.component('v-menu-transition', VMenuTransition);\n  Vue.component('v-scale-transition', VScaleTransition);\n  Vue.component('v-slide-x-transition', VSlideXTransition);\n  Vue.component('v-slide-x-reverse-transition', VSlideXReverseTransition);\n  Vue.component('v-slide-y-transition', VSlideYTransition);\n  Vue.component('v-slide-y-reverse-transition', VSlideYReverseTransition);\n  Vue.component('v-tab-reverse-transition', VTabReverseTransition);\n  Vue.component('v-tab-transition', VTabTransition);\n  Vue.component('v-expand-transition', VExpandTransition);\n  Vue.component('v-row-expand-transition', VRowExpandTransition);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction directive(e, el, binding, v) {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || v.context.isActive === false) return;\n\n  // If click was triggered programmaticaly (domEl.click()) then\n  // it shouldn't be treated as click-outside\n  // Chrome/Firefox support isTrusted property\n  // IE/Edge support pointerType property (empty if not triggered\n  // by pointing device)\n  if ('isTrusted' in e && !e.isTrusted || 'pointerType' in e && !e.pointerType) return;\n\n  // Get value passed to directive\n  var val = binding.value || function () {\n    return true;\n  };\n  // Check if callback was passed in object or as the value\n  var cb = val.callback || val;\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  var elements = (val.include || function () {\n    return [];\n  })();\n  // Add the root element for the component this directive was defined on\n  elements.push(el);\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occure before\n  // the bubbling click event on any outside elements.\n  if (!clickedInEls(e, elements) && cb(e)) {\n    // Delay setting toggleable inactive to avoid conflicting\n    // with an outside click on any activator toggling our state.\n    setTimeout(function () {\n      return v.context.isActive = false;\n    }, 0);\n  }\n}\n\nfunction clickedInEls(e, elements) {\n  // Get position of click\n  var x = e.clientX,\n      y = e.clientY;\n  // Loop over all included elements to see if click was in any of them\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var el = _step.value;\n\n      if (clickedInEl(el, x, y)) return true;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction clickedInEl(el, x, y) {\n  // Get bounding rect for element\n  // (we're in capturing event and we want to check for multiple elements,\n  //  so can't use target.)\n  var b = el.getBoundingClientRect();\n  // Check if the click was in the element's bounding rect\n\n  return x >= b.left && x <= b.right && y >= b.top && y <= b.bottom;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'click-outside',\n\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  inserted: function inserted(el, binding, v) {\n    var onClick = function onClick(e) {\n      return directive(e, el, binding, v);\n    };\n    // iOS does not recognize click events on document\n    // or body, this is the entire purpose of the v-app\n    // component and [data-app], stop removing this\n    var app = document.querySelector('[data-app]') || document.body; // This is only for unit tests\n    app.addEventListener('click', onClick, true);\n    el._clickOutside = onClick;\n  },\n  unbind: function unbind(el) {\n    var app = document.querySelector('[data-app]') || document.body; // This is only for unit tests\n    app && app.removeEventListener('click', el._clickOutside, true);\n    delete el._clickOutside;\n  }\n});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _touchstart = function _touchstart(event, wrapper) {\n  var touch = event.changedTouches[0];\n  wrapper.touchstartX = touch.clientX;\n  wrapper.touchstartY = touch.clientY;\n\n  wrapper.start && wrapper.start(Object.assign(event, wrapper));\n};\n\nvar _touchend = function _touchend(event, wrapper) {\n  var touch = event.changedTouches[0];\n  wrapper.touchendX = touch.clientX;\n  wrapper.touchendY = touch.clientY;\n\n  wrapper.end && wrapper.end(Object.assign(event, wrapper));\n\n  handleGesture(wrapper);\n};\n\nvar _touchmove = function _touchmove(event, wrapper) {\n  var touch = event.changedTouches[0];\n  wrapper.touchmoveX = touch.clientX;\n  wrapper.touchmoveY = touch.clientY;\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper));\n};\n\nvar handleGesture = function handleGesture(wrapper) {\n  var touchstartX = wrapper.touchstartX,\n      touchendX = wrapper.touchendX,\n      touchstartY = wrapper.touchstartY,\n      touchendY = wrapper.touchendY;\n\n  var dirRatio = 0.5;\n  var minDistance = 16;\n  wrapper.offsetX = touchendX - touchstartX;\n  wrapper.offsetY = touchendY - touchstartY;\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && touchendX < touchstartX - minDistance && wrapper.left(wrapper);\n    wrapper.right && touchendX > touchstartX + minDistance && wrapper.right(wrapper);\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && touchendY < touchstartY - minDistance && wrapper.up(wrapper);\n    wrapper.down && touchendY > touchstartY + minDistance && wrapper.down(wrapper);\n  }\n};\n\nfunction inserted(el, _ref, _ref2) {\n  var value = _ref.value;\n  var context = _ref2.context;\n\n  var wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end\n  };\n\n  var target = value.parent ? el.parentNode : el;\n  var options = value.options || { passive: true\n\n    // Needed to pass unit tests\n  };if (!target) return;\n\n  target._touchHandlers = Object.assign(Object(target._touchHandlers), _defineProperty({}, context._uid, {\n    touchstart: function touchstart(e) {\n      return _touchstart(e, wrapper);\n    },\n    touchend: function touchend(e) {\n      return _touchend(e, wrapper);\n    },\n    touchmove: function touchmove(e) {\n      return _touchmove(e, wrapper);\n    }\n  }));\n  Object.keys(target._touchHandlers[context._uid]).forEach(function (eventName) {\n    target.addEventListener(eventName, target._touchHandlers[context._uid][eventName], options);\n  });\n}\n\nfunction unbind(el, _ref3, _ref4) {\n  var value = _ref3.value;\n  var context = _ref4.context;\n\n  var target = value.parent ? el.parentNode : el;\n\n  if (!target) return;\n\n  var handlers = target._touchHandlers[context._uid];\n  Object.keys(handlers).forEach(function (eventName) {\n    return target.removeEventListener(eventName, handlers[eventName]);\n  });\n  delete target._touchHandlers[context._uid];\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'touch',\n  inserted: inserted,\n  unbind: unbind\n});\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction inserted(el, binding) {\n  var cb = binding.value;\n  var debounce = 200;\n  var callOnLoad = true;\n\n  if (typeof binding.value !== 'function') {\n    cb = binding.value.value;\n    debounce = binding.value.debounce || debounce;\n    callOnLoad = binding.value.quiet != null ? false : callOnLoad;\n  }\n\n  var debounceTimeout = null;\n  var onResize = function onResize() {\n    clearTimeout(debounceTimeout);\n    debounceTimeout = setTimeout(cb, debounce);\n  };\n\n  window.addEventListener('resize', onResize, { passive: true });\n  el._onResize = onResize;\n\n  callOnLoad && onResize();\n}\n\nfunction unbind(el, binding) {\n  window.removeEventListener('resize', el._onResize);\n  delete el._onResize;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'resize',\n  inserted: inserted,\n  unbind: unbind\n});\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction style(el, value) {\n  ['transform', 'webkitTransform'].forEach(function (i) {\n    el.style[i] = value;\n  });\n}\n\nvar RippleDataAttribute = 'data-ripple';\n\nvar ripple = {\n  /**\n   * @param {Event} e\n   * @param {Element} el\n   * @param {{ class?: string, center?: boolean }} [value={}]\n   */\n  show: function show(e, el, _ref) {\n    var _ref$value = _ref.value,\n        value = _ref$value === undefined ? {} : _ref$value;\n\n    if (el.getAttribute(RippleDataAttribute) !== 'true') {\n      return;\n    }\n\n    var container = document.createElement('span');\n    var animation = document.createElement('span');\n\n    container.appendChild(animation);\n    container.className = 'ripple__container';\n\n    if (value.class) {\n      container.className += ' ' + value.class;\n    }\n\n    var size = el.clientWidth > el.clientHeight ? el.clientWidth : el.clientHeight;\n    animation.className = 'ripple__animation';\n    animation.style.width = size * (value.center ? 1 : 2) + 'px';\n    animation.style.height = animation.style.width;\n\n    el.appendChild(container);\n    var computed = window.getComputedStyle(el);\n    if (computed.position !== 'absolute' && computed.position !== 'fixed') el.style.position = 'relative';\n\n    var offset = el.getBoundingClientRect();\n    var x = value.center ? '50%' : e.clientX - offset.left + 'px';\n    var y = value.center ? '50%' : e.clientY - offset.top + 'px';\n\n    animation.classList.add('ripple__animation--enter');\n    animation.classList.add('ripple__animation--visible');\n    style(animation, 'translate(-50%, -50%) translate(' + x + ', ' + y + ') scale3d(0.01,0.01,0.01)');\n    animation.dataset.activated = Date.now();\n\n    setTimeout(function () {\n      animation.classList.remove('ripple__animation--enter');\n      style(animation, 'translate(-50%, -50%) translate(' + x + ', ' + y + ')  scale3d(0.99,0.99,0.99)');\n    }, 0);\n  },\n\n  hide: function hide(el) {\n    if (el.getAttribute(RippleDataAttribute) !== 'true') {\n      return;\n    }\n\n    var ripples = el.getElementsByClassName('ripple__animation');\n\n    if (ripples.length === 0) return;\n    var animation = ripples[ripples.length - 1];\n    var diff = Date.now() - Number(animation.dataset.activated);\n    var delay = 400 - diff;\n\n    delay = delay < 0 ? 0 : delay;\n\n    setTimeout(function () {\n      animation.classList.remove('ripple__animation--visible');\n\n      setTimeout(function () {\n        // Need to figure out a new way to do this\n        try {\n          if (ripples.length < 1) el.style.position = null;\n          animation.parentNode && el.removeChild(animation.parentNode);\n        } catch (e) {}\n      }, 300);\n    }, delay);\n  }\n};\n\nfunction isRippleEnabled(binding) {\n  return typeof binding.value === 'undefined' || !!binding.value;\n}\n\nfunction directive(el, binding) {\n  el.setAttribute(RippleDataAttribute, isRippleEnabled(binding));\n\n  if ('ontouchstart' in window) {\n    el.addEventListener('touchend', function () {\n      return ripple.hide(el);\n    }, false);\n    el.addEventListener('touchcancel', function () {\n      return ripple.hide(el);\n    }, false);\n  }\n\n  el.addEventListener('mousedown', function (e) {\n    return ripple.show(e, el, binding);\n  }, false);\n  el.addEventListener('mouseup', function () {\n    return ripple.hide(el);\n  }, false);\n  el.addEventListener('mouseleave', function () {\n    return ripple.hide(el);\n  }, false);\n  // Anchor tags can be dragged, causes other hides to fail - #1537\n  el.addEventListener('dragstart', function () {\n    return ripple.hide(el);\n  }, false);\n}\n\nfunction unbind(el, binding) {\n  el.removeEventListener('touchstart', function (e) {\n    return ripple.show(e, el, binding);\n  }, false);\n  el.removeEventListener('mousedown', function (e) {\n    return ripple.show(e, el, binding);\n  }, false);\n  el.removeEventListener('touchend', function () {\n    return ripple.hide(el);\n  }, false);\n  el.removeEventListener('touchcancel', function () {\n    return ripple.hide(el);\n  }, false);\n  el.removeEventListener('mouseup', function () {\n    return ripple.hide(el);\n  }, false);\n  el.removeEventListener('mouseleave', function () {\n    return ripple.hide(el);\n  }, false);\n  el.removeEventListener('dragstart', function () {\n    return ripple.hide(el);\n  }, false);\n}\n\nfunction update(el, binding) {\n  if (binding.value === binding.oldValue) {\n    return;\n  }\n\n  el.setAttribute(RippleDataAttribute, isRippleEnabled(binding));\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'ripple',\n  bind: directive,\n  unbind: unbind,\n  update: update\n});\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VBtn__ = __webpack_require__(85);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VBtn__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VBtn__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VBtn__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VBtn__[\"a\" /* default */]);\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    app: Boolean\n  },\n\n  watch: {\n    app: function app() {\n      this.updateApplication();\n    }\n  },\n\n  mounted: function mounted() {\n    this.updateApplication();\n  }\n});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      isBooted: false\n    };\n  },\n\n  props: {\n    lazy: Boolean\n  },\n\n  watch: {\n    isActive: function isActive() {\n      this.isBooted = true;\n    }\n  },\n\n  methods: {\n    showLazyContent: function showLazyContent(content) {\n      return this.isBooted || !this.lazy ? content : null;\n    }\n  }\n});\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_ripple__ = __webpack_require__(9);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  directives: {\n    Ripple: __WEBPACK_IMPORTED_MODULE_0__directives_ripple__[\"a\" /* default */]\n  },\n\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: Boolean,\n    exactActiveClass: String,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: Boolean,\n    tag: String,\n    target: String\n  },\n\n  methods: {\n    click: function click() {},\n    generateRouteLink: function generateRouteLink() {\n      var exact = this.exact;\n      var tag = void 0;\n\n      var data = {\n        attrs: { disabled: this.disabled },\n        class: this.classes,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.ripple || false\n        }],\n        on: _extends({}, this.$listeners || {}, {\n          click: this.click\n        })\n      };\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' || this.to === Object(this.to) && this.to.path === '/';\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        var activeClass = this.activeClass;\n        var exactActiveClass = this.exactActiveClass || activeClass;\n\n        if (this.proxyClass) {\n          activeClass += ' ' + this.proxyClass;\n          exactActiveClass += ' ' + this.proxyClass;\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link';\n        Object.assign(data.props, {\n          to: this.to,\n          exact: exact,\n          activeClass: activeClass,\n          exactActiveClass: exactActiveClass,\n          append: this.append,\n          replace: this.replace\n        });\n      } else {\n        tag = this.href && 'a' || this.tag || 'a';\n\n        if (tag === 'a') {\n          if (this.href) data.attrs.href = this.href;\n          if (this.target) data.attrs.target = this.target;\n        }\n      }\n\n      return { tag: tag, data: data };\n    }\n  }\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__loadable__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__themeable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__validatable__ = __webpack_require__(100);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_VIcon__ = __webpack_require__(3);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  components: {\n    VIcon: __WEBPACK_IMPORTED_MODULE_3__components_VIcon__[\"a\" /* default */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__loadable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__themeable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__validatable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      isFocused: false,\n      tabFocused: false,\n      internalTabIndex: null,\n      lazyValue: this.value\n    };\n  },\n\n\n  props: {\n    appendIcon: String,\n    appendIconCb: Function,\n    disabled: Boolean,\n    hint: String,\n    hideDetails: Boolean,\n    label: String,\n    persistentHint: Boolean,\n    placeholder: String,\n    prependIcon: String,\n    prependIconCb: Function,\n    readonly: Boolean,\n    required: Boolean,\n    tabindex: {\n      default: 0\n    },\n    toggleKeys: {\n      type: Array,\n      default: function _default() {\n        return [13, 32];\n      }\n    },\n    value: {\n      required: false\n    }\n  },\n\n  computed: {\n    inputGroupClasses: function inputGroupClasses() {\n      return Object.assign({\n        'input-group': true,\n        'input-group--async-loading': this.loading !== false,\n        'input-group--focused': this.isFocused,\n        'input-group--dirty': this.isDirty,\n        'input-group--tab-focused': this.tabFocused,\n        'input-group--disabled': this.disabled,\n        'input-group--error': this.hasError,\n        'input-group--append-icon': this.appendIcon,\n        'input-group--prepend-icon': this.prependIcon,\n        'input-group--required': this.required,\n        'input-group--hide-details': this.hideDetails,\n        'input-group--placeholder': !!this.placeholder,\n        'theme--dark': this.dark,\n        'theme--light': this.light\n      }, this.classes);\n    },\n    isDirty: function isDirty() {\n      return !!this.inputValue;\n    }\n  },\n\n  methods: {\n    groupFocus: function groupFocus(e) {},\n    groupBlur: function groupBlur(e) {\n      this.tabFocused = false;\n    },\n    genLabel: function genLabel() {\n      return this.$createElement('label', {\n        attrs: {\n          for: this.$attrs.id\n        }\n      }, this.$slots.label || this.label);\n    },\n    genMessages: function genMessages() {\n      var messages = [];\n\n      if ((this.hint && this.isFocused || this.hint && this.persistentHint) && this.validations.length === 0) {\n        messages = [this.genHint()];\n      } else if (this.validations.length) {\n        messages = [this.genError(this.validations[0])];\n      }\n\n      return this.$createElement('transition-group', {\n        'class': 'input-group__messages',\n        props: {\n          tag: 'div',\n          name: 'slide-y-transition'\n        }\n      }, messages);\n    },\n    genHint: function genHint() {\n      return this.$createElement('div', {\n        'class': 'input-group__hint',\n        key: this.hint,\n        domProps: { innerHTML: this.hint }\n      });\n    },\n    genError: function genError(error) {\n      return this.$createElement('div', {\n        'class': 'input-group__error',\n        key: error\n      }, error);\n    },\n    genIcon: function genIcon(type) {\n      var _class;\n\n      var defaultCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      var shouldClear = type === 'append' && this.clearable && this.isDirty;\n      var icon = shouldClear ? 'clear' : this[type + 'Icon'];\n      var callback = shouldClear ? this.clearableCallback : this[type + 'IconCb'] || defaultCallback;\n\n      return this.$createElement('v-icon', {\n        'class': (_class = {}, _defineProperty(_class, 'input-group__' + type + '-icon', true), _defineProperty(_class, 'input-group__icon-cb', !!callback), _defineProperty(_class, 'input-group__icon-clearable', shouldClear), _class),\n        props: {\n          disabled: this.disabled\n        },\n        on: {\n          click: function click(e) {\n            if (!callback) return;\n\n            e.stopPropagation();\n            callback();\n          }\n        }\n      }, icon);\n    },\n    genInputGroup: function genInputGroup(input) {\n      var _this = this;\n\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var defaultAppendCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var children = [];\n      var wrapperChildren = [];\n      var detailsChildren = [];\n\n      data = Object.assign({}, {\n        'class': this.inputGroupClasses,\n        attrs: {\n          tabindex: this.disabled ? -1 : this.internalTabIndex || this.tabindex\n        },\n        on: {\n          focus: this.groupFocus,\n          blur: this.groupBlur,\n          click: function click() {\n            return _this.tabFocused = false;\n          },\n          keyup: function keyup(e) {\n            if ([9, 16].includes(e.keyCode)) {\n              _this.tabFocused = true;\n            }\n          },\n          keydown: function keydown(e) {\n            if (!_this.toggle) return;\n\n            if (_this.toggleKeys.includes(e.keyCode)) {\n              e.preventDefault();\n              _this.toggle();\n            }\n          }\n        }\n      }, data);\n\n      if (this.$slots.label || this.label) {\n        children.push(this.genLabel());\n      }\n\n      wrapperChildren.push(input);\n\n      if (this.prependIcon) {\n        wrapperChildren.unshift(this.genIcon('prepend'));\n      }\n\n      if (this.appendIcon || this.clearable) {\n        wrapperChildren.push(this.genIcon('append', defaultAppendCallback));\n      }\n\n      var progress = this.genProgress();\n      progress && detailsChildren.push(progress);\n\n      children.push(this.$createElement('div', {\n        'class': 'input-group__input'\n      }, wrapperChildren));\n\n      !this.hideDetails && detailsChildren.push(this.genMessages());\n\n      if (this.counter) {\n        detailsChildren.push(this.genCounter());\n      }\n\n      children.push(this.$createElement('div', {\n        'class': 'input-group__details'\n      }, detailsChildren));\n\n      return this.$createElement('div', data, children);\n    }\n  }\n});\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction searchChildren(children) {\n  var results = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var child = _step.value;\n\n      if (child.isActive && child.isDependent) {\n        results.push(child);\n      } else {\n        results.push.apply(results, _toConsumableArray(searchChildren(child.$children)));\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return results;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      closeDependents: true,\n      isDependent: true\n    };\n  },\n\n\n  methods: {\n    getOpenDependents: function getOpenDependents() {\n      if (this.closeDependents) return searchChildren(this.$children);\n\n      return [];\n    },\n    getOpenDependentElements: function getOpenDependentElements() {\n      var result = [];\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.getOpenDependents()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var dependent = _step2.value;\n\n          result.push.apply(result, _toConsumableArray(dependent.getClickableDependentElements()));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return result;\n    },\n    getClickableDependentElements: function getClickableDependentElements() {\n      var result = [this.$el];\n      if (this.$refs.content) result.push(this.$refs.content);\n      result.push.apply(result, _toConsumableArray(this.getOpenDependentElements()));\n\n      return result;\n    }\n  },\n\n  watch: {\n    isActive: function isActive(val) {\n      if (val) return;\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.getOpenDependents()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var dependent = _step3.value;\n\n          dependent.isActive = false;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }\n});\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VCardActions */\n/* unused harmony export VCardText */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VCard__ = __webpack_require__(91);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VCardMedia__ = __webpack_require__(93);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__VCardTitle__ = __webpack_require__(94);\n/* unused harmony reexport VCard */\n/* unused harmony reexport VCardMedia */\n/* unused harmony reexport VCardTitle */\n\n\n\n\n\nvar VCardActions = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('card__actions');\nvar VCardText = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('card__text');\n\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_1__VCard__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VCard__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VCard__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_2__VCardMedia__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_2__VCardMedia__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_3__VCardTitle__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_3__VCardTitle__[\"a\" /* default */]);\n  Vue.component(VCardActions.name, VCardActions);\n  Vue.component(VCardText.name, VCardText);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_1__VCard__[\"a\" /* default */]);\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = inject;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = provide;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction generateWarning(child, parent) {\n  return function () {\n    return console.warn(\"[Vuetify] Warn: The \" + child + \" component must be used inside a \" + parent + \".\");\n  };\n}\n\nfunction inject(namespace, child, parent) {\n  return {\n    inject: _defineProperty({}, namespace, {\n      default: {\n        register: generateWarning(child, parent),\n        unregister: generateWarning(child, parent)\n      }\n    })\n  };\n}\n\nfunction provide(namespace) {\n  return {\n    methods: {\n      register: null,\n      unregister: null\n    },\n    provide: function provide() {\n      return _defineProperty({}, namespace, {\n        register: this.register,\n        unregister: this.unregister\n      });\n    }\n  };\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bootable__ = __webpack_require__(12);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__bootable__[\"a\" /* default */]],\n\n  props: {\n    contentClass: {\n      default: ''\n    }\n  },\n\n  mounted: function mounted() {\n    this.initDetach();\n  },\n  deactivated: function deactivated() {\n    this.isActive = false;\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.$refs.content) return;\n\n    // IE11 Fix\n    try {\n      this.$refs.content.parentNode.removeChild(this.$refs.content);\n    } catch (e) {}\n  },\n\n\n  methods: {\n    initDetach: function initDetach() {\n      if (this._isDestroyed) return;\n\n      var app = document.querySelector('[data-app]');\n\n      if (!app) {\n        return console.warn('Application is missing <v-app> component.');\n      }\n\n      // If child has already been removed, bail\n      if (!this.$refs.content) return;\n\n      app.insertBefore(this.$refs.content, app.firstChild);\n    }\n  }\n});\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    absolute: Boolean,\n    bottom: Boolean,\n    fixed: Boolean,\n    left: Boolean,\n    right: Boolean,\n    top: Boolean\n  }\n});\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_ripple__ = __webpack_require__(9);\n\n\n/** @mixin */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  directives: { Ripple: __WEBPACK_IMPORTED_MODULE_0__directives_ripple__[\"a\" /* default */] },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true\n    }\n  },\n\n  methods: {\n    genRipple: function genRipple() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { directives: [] };\n\n      data.class = this.rippleClasses || 'input-group--selection-controls__ripple';\n      data.directives.push({\n        name: 'ripple',\n        value: this.ripple && !this.disabled && { center: true }\n      });\n      data.on = Object.assign({\n        click: this.toggle\n      }, this.$listeners);\n\n      return this.$createElement('div', data);\n    }\n  }\n});\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Grid;\nfunction Grid(name) {\n  return {\n    name: 'v-' + name,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div'\n      }\n    },\n\n    render: function render(h, _ref) {\n      var props = _ref.props,\n          data = _ref.data,\n          children = _ref.children;\n\n      data.staticClass = (name + ' ' + (data.staticClass || '')).trim();\n\n      if (data.attrs) {\n        var classes = [];\n\n        Object.keys(data.attrs).forEach(function (key) {\n          var value = data.attrs[key];\n\n          if (typeof value === 'string') classes.push(key);else if (value) classes.push(key);\n        });\n\n        if (classes.length) data.staticClass += ' ' + classes.join(' ');\n        delete data.attrs;\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {};\n        data.domProps.id = props.id;\n      }\n\n      return h(props.tag, data, children);\n    }\n  };\n}\n\n/***/ }),\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      buttons: [],\n      listeners: []\n    };\n  },\n\n\n  methods: {\n    getValue: function getValue(i) {\n      if (this.buttons[i].value != null) {\n        return this.buttons[i].value;\n      }\n\n      // Fix for testing, this should always be false in the browser\n      if (this.buttons[i].$el.value != null && this.buttons[i].$el.value !== '') {\n        return this.buttons[i].$el.value;\n      }\n\n      return i;\n    },\n    update: function update() {\n      var _this = this;\n\n      var selected = [];\n\n      this.buttons.forEach(function (button, i) {\n        var elm = button.$el;\n\n        // Fix for testing, dataset does not exist on elm?\n        if (!elm.dataset) elm.dataset = {};\n\n        elm.removeAttribute('data-only-child');\n\n        if (_this.isSelected(i)) {\n          elm.setAttribute('data-selected', true);\n\n          if (!elm.classList.contains('btn--router')) {\n            elm.classList.add('btn--active');\n          }\n\n          selected.push(i);\n        } else {\n          elm.removeAttribute('data-selected');\n\n          if (!elm.classList.contains('btn--router')) {\n            elm.classList.remove('btn--active');\n          }\n        }\n\n        elm.dataset.index = i;\n      });\n\n      if (selected.length === 1) {\n        this.buttons[selected[0]].$el.setAttribute('data-only-child', true);\n      }\n    }\n  },\n\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.buttons = this.$children;\n\n    this.buttons.forEach(function (button, i) {\n      _this2.listeners.push(_this2.updateValue.bind(_this2, i));\n      button.$on('click', _this2.listeners[i]);\n    });\n\n    this.update();\n  },\n  beforeDestroy: function beforeDestroy() {\n    var _this3 = this;\n\n    this.buttons.forEach(function (button, i) {\n      button.$off('click', _this3.listeners[i]);\n    });\n  }\n});\n\n/***/ }),\n/* 26 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_dependent__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_detachable__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_overlayable__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_stackable__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_toggleable__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__directives_click_outside__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_helpers__ = __webpack_require__(2);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n__webpack_require__(79);\n\n// Mixins\n\n\n\n\n\n\n// Directives\n\n\n// Helpers\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-dialog',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_dependent__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_detachable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_overlayable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_stackable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_toggleable__[\"a\" /* default */]],\n\n  directives: {\n    ClickOutside: __WEBPACK_IMPORTED_MODULE_5__directives_click_outside__[\"a\" /* default */]\n  },\n\n  data: function data() {\n    return {\n      isDependent: false,\n      stackClass: 'dialog__content__active',\n      stackMinZIndex: 200\n    };\n  },\n\n\n  props: {\n    disabled: Boolean,\n    persistent: Boolean,\n    fullscreen: Boolean,\n    fullWidth: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none'\n    },\n    origin: {\n      type: String,\n      default: 'center center'\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto'\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition'\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      var _ref;\n\n      return _ref = {}, _defineProperty(_ref, ('dialog ' + this.contentClass).trim(), true), _defineProperty(_ref, 'dialog--active', this.isActive), _defineProperty(_ref, 'dialog--persistent', this.persistent), _defineProperty(_ref, 'dialog--fullscreen', this.fullscreen), _defineProperty(_ref, 'dialog--stacked-actions', this.stackedActions && !this.fullscreen), _defineProperty(_ref, 'dialog--scrollable', this.scrollable), _ref;\n    },\n    contentClasses: function contentClasses() {\n      return {\n        'dialog__content': true,\n        'dialog__content__active': this.isActive\n      };\n    }\n  },\n\n  watch: {\n    isActive: function isActive(val) {\n      if (val) {\n        this.show();\n      } else {\n        this.removeOverlay();\n        this.unbind();\n      }\n    }\n  },\n\n  mounted: function mounted() {\n    this.isBooted = this.isActive;\n    this.isActive && this.show();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (typeof window !== 'undefined') this.unbind();\n  },\n\n\n  methods: {\n    closeConditional: function closeConditional(e) {\n      // close dialog if !persistent, clicked outside and we're the topmost dialog.\n      // Since this should only be called in a capture event (bottom up), we shouldn't need to stop propagation\n      return !this.persistent && Object(__WEBPACK_IMPORTED_MODULE_6__util_helpers__[\"h\" /* getZIndex */])(this.$refs.content) >= this.getMaxZIndex() && !this.$refs.content.contains(e.target);\n    },\n    show: function show() {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay();\n      this.fullscreen && this.hideScroll();\n      this.$refs.content.focus();\n      this.$listeners.keydown && this.bind();\n    },\n    bind: function bind() {\n      window.addEventListener('keydown', this.onKeydown);\n    },\n    unbind: function unbind() {\n      window.removeEventListener('keydown', this.onKeydown);\n    },\n    onKeydown: function onKeydown(e) {\n      this.$emit('keydown', e);\n    }\n  },\n\n  render: function render(h) {\n    var _this = this;\n\n    var children = [];\n    var data = {\n      'class': this.classes,\n      ref: 'dialog',\n      directives: [{\n        name: 'click-outside',\n        value: {\n          callback: this.closeConditional,\n          include: this.getOpenDependentElements\n        }\n      }, { name: 'show', value: this.isActive }],\n      on: { click: function click(e) {\n          return e.stopPropagation();\n        } }\n    };\n\n    if (!this.fullscreen) {\n      data.style = {\n        maxWidth: this.maxWidth === 'none' ? undefined : isNaN(this.maxWidth) ? this.maxWidth : this.maxWidth + 'px',\n        width: this.width === 'auto' ? undefined : isNaN(this.width) ? this.width : this.width + 'px'\n      };\n    }\n\n    if (this.$slots.activator) {\n      children.push(h('div', {\n        'class': 'dialog__activator',\n        on: {\n          click: function click(e) {\n            if (!_this.disabled) _this.isActive = !_this.isActive;\n          }\n        }\n      }, [this.$slots.activator]));\n    }\n\n    var dialog = h('transition', {\n      props: {\n        name: this.transition || '', // If false, show nothing\n        origin: this.origin\n      }\n    }, [h('div', data, this.showLazyContent(this.$slots.default))]);\n\n    children.push(h('div', {\n      'class': this.contentClasses,\n      domProps: { tabIndex: -1 },\n      style: { zIndex: this.activeZIndex },\n      ref: 'content'\n    }, [dialog]));\n\n    return h('div', {\n      'class': 'dialog__container',\n      style: {\n        display: !this.$slots.activator && 'none' || this.fullWidth ? 'block' : 'inline-block'\n      }\n    }, children);\n  }\n});\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__(80);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      overlay: null,\n      overlayOffset: 0,\n      overlayTimeout: null,\n      overlayTransitionDuration: 500 + 150 // transition + delay\n    };\n  },\n\n\n  props: {\n    hideOverlay: Boolean\n  },\n\n  beforeDestroy: function beforeDestroy() {\n    this.removeOverlay();\n  },\n\n\n  methods: {\n    genOverlay: function genOverlay() {\n      var _this = this;\n\n      // If fn is called and timeout is active\n      // or overlay already exists\n      // cancel removal of overlay and re-add active\n      if (!this.isActive || this.hideOverlay || this.isActive && this.overlayTimeout || this.overlay) {\n        clearTimeout(this.overlayTimeout);\n\n        return this.overlay && this.overlay.classList.add('overlay--active');\n      }\n\n      this.overlay = document.createElement('div');\n      this.overlay.className = 'overlay';\n\n      if (this.absolute) this.overlay.className += ' overlay--absolute';\n\n      this.hideScroll();\n\n      var parent = this.absolute ? this.$el.parentNode : document.querySelector('[data-app]');\n\n      parent && parent.insertBefore(this.overlay, parent.firstChild);\n\n      this.overlay.clientHeight; // Force repaint\n      requestAnimationFrame(function () {\n        _this.overlay.className += ' overlay--active';\n\n        if (_this.activeZIndex !== undefined) {\n          _this.overlay.style.zIndex = _this.activeZIndex - 1;\n        }\n      });\n\n      return true;\n    },\n    removeOverlay: function removeOverlay() {\n      var _this2 = this;\n\n      if (!this.overlay) {\n        return this.showScroll();\n      }\n\n      this.overlay.classList.remove('overlay--active');\n\n      this.overlayTimeout = setTimeout(function () {\n        // IE11 Fix\n        try {\n          _this2.overlay.parentNode.removeChild(_this2.overlay);\n          _this2.overlay = null;\n          _this2.showScroll();\n        } catch (e) {}\n\n        clearTimeout(_this2.overlayTimeout);\n        _this2.overlayTimeout = null;\n      }, this.overlayTransitionDuration);\n    },\n\n    /**\n     * @param {Event} e\n     * @returns void\n     */\n    scrollListener: function scrollListener(e) {\n      if (e.type === 'keydown') {\n        if (['INPUT', 'TEXTAREA', 'SELECT'].includes(e.target.tagName)) return;\n\n        var up = [38, 33];\n        var down = [40, 34];\n\n        if (up.includes(e.keyCode)) {\n          e.deltaY = -1;\n        } else if (down.includes(e.keyCode)) {\n          e.deltaY = 1;\n        } else {\n          return;\n        }\n      }\n\n      if (e.target === this.overlay || e.type !== 'keydown' && e.target === document.body || this.checkPath(e)) e.preventDefault();\n    },\n    hasScrollbar: function hasScrollbar(el) {\n      if (!el || el.nodeType !== Node.ELEMENT_NODE) return false;\n\n      var style = window.getComputedStyle(el);\n      return ['auto', 'scroll'].includes(style['overflow-y']) && el.scrollHeight > el.clientHeight;\n    },\n    shouldScroll: function shouldScroll(el, delta) {\n      if (el.scrollTop === 0 && delta < 0) return true;\n      return el.scrollTop + el.clientHeight === el.scrollHeight && delta > 0;\n    },\n    isInside: function isInside(el, parent) {\n      if (el === parent) {\n        return true;\n      } else if (el === null || el === document.body) {\n        return false;\n      } else {\n        return this.isInside(el.parentNode, parent);\n      }\n    },\n\n    /**\n     * @param {Event} e\n     * @returns boolean\n     */\n    checkPath: function checkPath(e) {\n      var path = e.path || this.composedPath(e);\n      var delta = e.deltaY || -e.wheelDelta;\n\n      if (e.type === 'keydown' && path[0] === document.body) {\n        var dialog = this.$refs.dialog;\n        var selected = window.getSelection().anchorNode;\n        if (this.hasScrollbar(dialog) && this.isInside(selected, dialog)) {\n          return this.shouldScroll(dialog, delta);\n        }\n        return true;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = path[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var el = _step.value;\n\n          if ([document, document.documentElement, this.$refs.content].includes(el)) return true;\n          if (this.hasScrollbar(el)) return this.shouldScroll(el, delta);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Polyfill for Event.prototype.composedPath\n     * @param {Event} e\n     * @returns Element[]\n     */\n    composedPath: function composedPath(e) {\n      if (e.composedPath) return e.composedPath();\n\n      var path = [];\n      var el = e.target;\n\n      while (el) {\n        path.push(el);\n\n        if (el.tagName === 'HTML') {\n          path.push(document);\n          path.push(window);\n\n          return path;\n        }\n\n        el = el.parentElement;\n      }\n    },\n    hideScroll: function hideScroll() {\n      if (this.$vuetify.breakpoint.smAndDown) {\n        document.documentElement.classList.add('overflow-y-hidden');\n      } else {\n        window.addEventListener('wheel', this.scrollListener);\n        window.addEventListener('keydown', this.scrollListener);\n      }\n    },\n    showScroll: function showScroll() {\n      document.documentElement.classList.remove('overflow-y-hidden');\n      window.removeEventListener('wheel', this.scrollListener);\n      window.removeEventListener('keydown', this.scrollListener);\n    }\n  }\n});\n\n/***/ }),\n/* 28 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      stackBase: null,\n      stackClass: 'unpecified',\n      stackElement: null,\n      stackExclude: null,\n      stackMinZIndex: 0\n    };\n  },\n\n  computed: {\n    activeZIndex: function activeZIndex() {\n      var content = this.stackElement || this.$refs.content;\n      // Return current zindex if not active\n      if (!this.isActive) return Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"h\" /* getZIndex */])(content);\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return this.getMaxZIndex(this.stackExclude || [content]) + 2;\n    }\n  },\n  methods: {\n    getMaxZIndex: function getMaxZIndex() {\n      var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var base = this.stackBase || this.$el;\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      var zis = [this.stackMinZIndex, Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"h\" /* getZIndex */])(base)];\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      var activeElements = [].concat(_toConsumableArray(document.getElementsByClassName(this.stackClass)));\n\n      // Get z-index for all active dialogs\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = activeElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var activeElement = _step.value;\n\n          if (!exclude.includes(activeElement)) {\n            zis.push(Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"h\" /* getZIndex */])(activeElement));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return Math.max.apply(Math, zis);\n    }\n  }\n});\n\n/***/ }),\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VCheckbox__ = __webpack_require__(99);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VCheckbox__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VCheckbox__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VCheckbox__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VCheckbox__[\"a\" /* default */]);\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  var expandedParentClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  return {\n    enter: function enter(el, done) {\n      el._parent = el.parentNode;\n\n      Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"a\" /* addOnceEventListener */])(el, 'transitionend', done);\n\n      // Get height that is to be scrolled\n      el.style.overflow = 'hidden';\n      el.style.height = 0;\n      el.style.display = 'block';\n      expandedParentClass && el._parent.classList.add(expandedParentClass);\n\n      setTimeout(function () {\n        return el.style.height = el.scrollHeight + 'px';\n      }, 100);\n    },\n    afterEnter: function afterEnter(el) {\n      el.style.overflow = null;\n      el.style.height = null;\n    },\n    leave: function leave(el, done) {\n      // Remove initial transition\n      Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"a\" /* addOnceEventListener */])(el, 'transitionend', done);\n\n      // Set height before we transition to 0\n      el.style.overflow = 'hidden';\n      el.style.height = el.offsetHeight + 'px';\n\n      setTimeout(function () {\n        return el.style.height = 0;\n      }, 100);\n    },\n    afterLeave: function afterLeave(el) {\n      expandedParentClass && el._parent.classList.remove(expandedParentClass);\n    }\n  };\n});\n\n/***/ }),\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input__ = __webpack_require__(15);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__input__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_0__colorable__[\"a\" /* default */]],\n\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n\n  data: function data() {\n    return {\n      defaultColor: 'accent'\n    };\n  },\n\n  props: {\n    id: String,\n    inputValue: null,\n    falseValue: null,\n    trueValue: null\n  },\n\n  computed: {\n    isActive: function isActive() {\n      if (Array.isArray(this.inputValue)) {\n        return this.inputValue.indexOf(this.value) !== -1;\n      }\n\n      if (!this.trueValue || !this.falseValue) {\n        return this.value ? this.value === this.inputValue : Boolean(this.inputValue);\n      }\n\n      return this.inputValue === this.trueValue;\n    },\n    isDirty: function isDirty() {\n      return this.isActive;\n    }\n  },\n\n  watch: {\n    indeterminate: function indeterminate(val) {\n      this.inputIndeterminate = val;\n    }\n  },\n\n  methods: {\n    genLabel: function genLabel() {\n      return this.$createElement('label', {\n        on: { click: this.toggle },\n        attrs: {\n          for: this.id\n        }\n      }, this.$slots.label || this.label);\n    },\n    toggle: function toggle() {\n      if (this.disabled) {\n        return;\n      }\n\n      var input = this.inputValue;\n      if (Array.isArray(input)) {\n        input = input.slice();\n        var i = input.indexOf(this.value);\n\n        if (i === -1) {\n          input.push(this.value);\n        } else {\n          input.splice(i, 1);\n        }\n      } else if (this.trueValue || this.falseValue) {\n        input = input === this.trueValue ? this.falseValue : this.trueValue;\n      } else if (this.value) {\n        input = this.value === this.inputValue ? null : this.value;\n      } else {\n        input = !input;\n      }\n\n      this.validate(true, input);\n\n      this.$emit('change', input);\n    }\n  }\n});\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Loadable\n *\n * @mixin\n *\n * Used to add linear progress bar to components\n * Can use a default bar with a specific color\n * or designate a custom progress linear bar\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    loading: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n\n  methods: {\n    genProgress: function genProgress() {\n      if (this.loading === false) return null;\n\n      return this.$slots.progress || this.$createElement('v-progress-linear', {\n        props: {\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          height: 2,\n          indeterminate: true\n        }\n      });\n    }\n  }\n});\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VChip__ = __webpack_require__(101);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VChip__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VChip__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VChip__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VChip__[\"a\" /* default */]);\n\n/***/ }),\n/* 34 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VProgressLinear__ = __webpack_require__(107);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VProgressLinear__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VProgressLinear__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VProgressLinear__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VProgressLinear__[\"a\" /* default */]);\n\n/***/ }),\n/* 35 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VSelect__ = __webpack_require__(109);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VSelect__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VSelect__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VSelect__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VSelect__[\"a\" /* default */]);\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VListTileActionText */\n/* unused harmony export VListTileAvatar */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return VListTileContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return VListTileTitle; });\n/* unused harmony export VListTileSubTitle */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VList__ = __webpack_require__(111);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VListGroup__ = __webpack_require__(113);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__VListTile__ = __webpack_require__(114);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__VListTileAction__ = __webpack_require__(115);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__VList__[\"a\"]; });\n/* unused harmony reexport VListGroup */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__VListTile__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_4__VListTileAction__[\"a\"]; });\n\n\n\n\n\n\n\n\nvar VListTileActionText = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('list__tile__action-text', 'span');\nvar VListTileAvatar = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('list__tile__avatar', 'v-avatar');\nvar VListTileContent = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('list__tile__content', 'div');\nvar VListTileTitle = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('list__tile__title', 'div');\nvar VListTileSubTitle = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('list__tile__sub-title', 'div');\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_1__VList__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VList__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VList__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_2__VListGroup__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_2__VListGroup__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_3__VListTile__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_3__VListTile__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_4__VListTileAction__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_4__VListTileAction__[\"a\" /* default */]);\n  Vue.component(VListTileActionText.name, VListTileActionText);\n  Vue.component(VListTileAvatar.name, VListTileAvatar);\n  Vue.component(VListTileContent.name, VListTileContent);\n  Vue.component(VListTileSubTitle.name, VListTileSubTitle);\n  Vue.component(VListTileTitle.name, VListTileTitle);\n};\n\n/* harmony default export */ __webpack_exports__[\"f\"] = (__WEBPACK_IMPORTED_MODULE_1__VList__[\"a\" /* default */]);\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VMenu__ = __webpack_require__(116);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VMenu__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VMenu__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VMenu__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VMenu__[\"a\" /* default */]);\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close\n * delay time for elements\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      openTimeout: null,\n      closeTimeout: null\n    };\n  },\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 200\n    }\n  },\n\n  methods: {\n    /**\n     * Clear any pending delay\n     * timers from executing\n     * \n     * @return {void}\n     */\n    clearDelay: function clearDelay() {\n      clearTimeout(this.openTimeout);\n      clearTimeout(this.closeTimeout);\n    },\n\n    /**\n     * Runs callback after\n     * a specified delay\n     * \n     * @param  {String}   type\n     * @param  {Function} cb\n     * \n     * @return {void}\n     */\n    runDelay: function runDelay(type, cb) {\n      this.clearDelay();\n\n      var delay = parseInt(this[type + \"Delay\"], 10);\n\n      this[type + \"Timeout\"] = setTimeout(cb, delay);\n    }\n  }\n});\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__positionable__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stackable__ = __webpack_require__(28);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\n\n\n\nvar dimensions = {\n  activator: {\n    top: 0, left: 0,\n    bottom: 0, right: 0,\n    width: 0, height: 0,\n    offsetTop: 0, scrollHeight: 0\n  },\n  content: {\n    top: 0, left: 0,\n    bottom: 0, right: 0,\n    width: 0, height: 0,\n    offsetTop: 0, scrollHeight: 0\n  },\n  hasWindow: false\n\n  /**\n   * Menuable\n   *\n   * @mixin\n   *\n   * Used for fixed or absolutely positioning\n   * elements within the DOM\n   * Can calculate X and Y axis overflows\n   * As well as be manually positioned\n   */\n};/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__positionable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__stackable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      absoluteX: 0,\n      absoluteY: 0,\n      dimensions: Object.assign({}, dimensions),\n      isContentActive: false,\n      pageYOffset: 0,\n      stackClass: 'menuable__content__active',\n      stackMinZIndex: 6\n    };\n  },\n\n  props: {\n    activator: {\n      default: null,\n      validator: function validator(val) {\n        return ['string', 'object'].includes(typeof val === 'undefined' ? 'undefined' : _typeof(val));\n      }\n    },\n    allowOverflow: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto'\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: Number,\n      default: 0\n    },\n    nudgeLeft: {\n      type: Number,\n      default: 0\n    },\n    nudgeRight: {\n      type: Number,\n      default: 0\n    },\n    nudgeTop: {\n      type: Number,\n      default: 0\n    },\n    nudgeWidth: {\n      type: Number,\n      default: 0\n    },\n    offsetOverflow: Boolean,\n    positionX: {\n      type: Number,\n      default: null\n    },\n    positionY: {\n      type: Number,\n      default: null\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null\n    }\n  },\n\n  computed: {\n    hasActivator: function hasActivator() {\n      return !!this.$slots.activator || this.activator;\n    }\n  },\n\n  watch: {\n    disabled: function disabled(val) {\n      val && this.callDeactivate();\n    },\n    isActive: function isActive(val) {\n      if (this.disabled) return;\n\n      val && this.callActivate() || this.callDeactivate();\n    }\n  },\n\n  methods: {\n    absolutePosition: function absolutePosition() {\n      return {\n        offsetTop: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0\n      };\n    },\n    activate: function activate() {},\n    calcLeft: function calcLeft() {\n      var a = this.dimensions.activator;\n      var c = this.dimensions.content;\n      // Content always has a min width\n      // of its activator. This is applied\n      // when the menu is shown, but not\n      // reflected in the getBoundingClientRect\n      // method\n      var minWidth = a.width < c.width ? c.width : a.width;\n      var left = this.left ? a.right - minWidth : a.left;\n\n      if (this.offsetX) left += this.left ? -a.width : a.width;\n      if (this.nudgeLeft) left -= this.nudgeLeft;\n      if (this.nudgeRight) left += this.nudgeRight;\n\n      return left;\n    },\n    calcTop: function calcTop() {\n      this.checkForWindow();\n\n      var a = this.dimensions.activator;\n      var c = this.dimensions.content;\n      var top = this.top ? a.bottom - c.height : a.top;\n\n      if (this.offsetY) top += this.top ? -a.height : a.height;\n      if (this.nudgeTop) top -= this.nudgeTop;\n      if (this.nudgeBottom) top += this.nudgeBottom;\n\n      return top + this.pageYOffset;\n    },\n    calcXOverflow: function calcXOverflow(left) {\n      var parsedMaxWidth = isNaN(parseInt(this.maxWidth)) ? 0 : parseInt(this.maxWidth);\n      var innerWidth = this.getInnerWidth();\n      var maxWidth = Math.max(this.dimensions.content.width, parsedMaxWidth);\n      var totalWidth = left + maxWidth;\n      var availableWidth = totalWidth - innerWidth;\n\n      if ((!this.left || this.right) && availableWidth > 0) {\n        left = innerWidth - maxWidth - (innerWidth > 600 ? 30 : 12) // Account for scrollbar\n        ;\n      }\n\n      if (left < 0) left = 12;\n\n      return left;\n    },\n    calcYOverflow: function calcYOverflow(top) {\n      var documentHeight = this.getInnerHeight();\n      var toTop = this.pageYOffset + documentHeight;\n      var activator = this.dimensions.activator;\n      var contentHeight = this.dimensions.content.height;\n      var totalHeight = top + contentHeight;\n      var isOverflowing = toTop < totalHeight;\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing && this.offsetOverflow) {\n        top = this.pageYOffset + (activator.top - contentHeight);\n        // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12;\n        // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12;\n      }\n\n      return top < 12 ? 12 : top;\n    },\n    callActivate: function callActivate() {\n      this.checkForWindow();\n      if (!this.hasWindow) return;\n\n      this.activate();\n    },\n    callDeactivate: function callDeactivate() {\n      this.isContentActive = false;\n\n      this.deactivate();\n    },\n    checkForWindow: function checkForWindow() {\n      this.hasWindow = typeof window !== 'undefined';\n\n      if (this.hasWindow) {\n        this.pageYOffset = this.getOffsetTop();\n      }\n    },\n    deactivate: function deactivate() {},\n    getActivator: function getActivator() {\n      if (this.activator) {\n        return typeof this.activator === 'string' ? document.querySelector(this.activator) : this.activator;\n      }\n\n      return this.$refs.activator.children ? this.$refs.activator.children[0] : this.$refs.activator;\n    },\n    getInnerHeight: function getInnerHeight() {\n      if (!this.hasWindow) return 0;\n\n      return window.innerHeight || document.documentElement.clientHeight;\n    },\n    getInnerWidth: function getInnerWidth() {\n      if (!this.hasWindow) return 0;\n\n      return window.innerWidth;\n    },\n    getOffsetTop: function getOffsetTop() {\n      if (!this.hasWindow) return 0;\n\n      return window.pageYOffset || document.documentElement.scrollTop;\n    },\n    measure: function measure(el, selector) {\n      el = selector ? el.querySelector(selector) : el;\n\n      if (!el) return null;\n\n      var _el$getBoundingClient = el.getBoundingClientRect(),\n          top = _el$getBoundingClient.top,\n          bottom = _el$getBoundingClient.bottom,\n          left = _el$getBoundingClient.left,\n          right = _el$getBoundingClient.right,\n          height = _el$getBoundingClient.height,\n          width = _el$getBoundingClient.width;\n\n      return {\n        offsetTop: el.offsetTop,\n        scrollHeight: el.scrollHeight,\n        top: top, bottom: bottom, left: left, right: right, height: height, width: width\n      };\n    },\n    sneakPeek: function sneakPeek(cb) {\n      var _this = this;\n\n      requestAnimationFrame(function () {\n        var el = _this.$refs.content;\n\n        if (!el || _this.isShown(el)) return cb();\n\n        el.style.display = 'inline-block';\n        cb();\n        el.style.display = 'none';\n      });\n    },\n    startTransition: function startTransition() {\n      var _this2 = this;\n\n      requestAnimationFrame(function () {\n        return _this2.isContentActive = true;\n      });\n    },\n    isShown: function isShown(el) {\n      return el.style.display !== 'none';\n    },\n    updateDimensions: function updateDimensions() {\n      var _this3 = this;\n\n      var dimensions = {};\n\n      // Activator should already be shown\n      dimensions.activator = !this.hasActivator || this.absolute ? this.absolutePosition() : this.measure(this.getActivator());\n\n      // Display and hide to get dimensions\n      this.sneakPeek(function () {\n        dimensions.content = _this3.measure(_this3.$refs.content);\n\n        _this3.dimensions = dimensions;\n      });\n    }\n  }\n});\n\n/***/ }),\n/* 41 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    noDataText: {\n      type: String,\n      default: 'No data available'\n    }\n  }\n});\n\n/***/ }),\n/* 42 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_mask__ = __webpack_require__(43);\n/**\n * Maskable\n *\n * @mixin\n *\n * Creates an input mask that is\n * generated from a masked str\n *\n * Example: mask=\"#### #### #### ####\"\n */\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      selection: 0,\n      preDefined: {\n        'credit-card': '#### - #### - #### - ####',\n        'date': '##/##/####',\n        'date-with-time': '##/##/#### ##:##',\n        'phone': '(###) ### - ####',\n        'social': '###-##-####',\n        'time': '##:##',\n        'time-with-seconds': '##:##:##'\n      }\n    };\n  },\n\n  props: {\n    dontFillMaskBlanks: Boolean,\n    mask: {\n      type: [Object, String],\n      default: null\n    },\n    returnMaskedValue: Boolean\n  },\n\n  computed: {\n    masked: function masked() {\n      var preDefined = this.preDefined[this.mask];\n      var mask = preDefined || this.mask || '';\n\n      return mask.split('');\n    }\n  },\n\n  watch: {\n    /**\n     * Make sure the cursor is in the correct\n     * location when the mask changes\n     */\n    mask: function mask() {\n      var _this = this;\n\n      if (!this.$refs.input) return;\n\n      var oldValue = this.$refs.input.value;\n      var newValue = this.maskText(this.lazyValue);\n      var position = 0;\n      var selection = this.selection;\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = oldValue.substr(0, selection)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _char = _step.value;\n\n          Object(__WEBPACK_IMPORTED_MODULE_0__util_mask__[\"a\" /* isMaskDelimiter */])(_char) || position++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      selection = 0;\n      if (newValue) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = newValue[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var char = _step2.value;\n\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_mask__[\"a\" /* isMaskDelimiter */])(char) || position--;\n            selection++;\n            if (position <= 0) break;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      this.$nextTick(function () {\n        _this.$refs.input.value = newValue;\n        _this.setCaretPosition(selection);\n      });\n    }\n  },\n\n  methods: {\n    setCaretPosition: function setCaretPosition(selection) {\n      var _this2 = this;\n\n      this.selection = selection;\n      window.setTimeout(function () {\n        _this2.$refs.input && _this2.$refs.input.setSelectionRange(_this2.selection, _this2.selection);\n      }, 0);\n    },\n    updateRange: function updateRange() {\n      if (!this.$refs.input) return;\n\n      var newValue = this.maskText(this.lazyValue);\n      var selection = 0;\n\n      this.$refs.input.value = newValue;\n      if (newValue) {\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = newValue[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var char = _step3.value;\n\n            if (this.lazySelection <= 0) break;\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_mask__[\"a\" /* isMaskDelimiter */])(char) || this.lazySelection--;\n            selection++;\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }\n\n      this.setCaretPosition(selection);\n      // this.$emit() must occur only when all internal values are correct\n      this.$emit('input', this.returnMaskedValue ? this.$refs.input.value : this.lazyValue);\n    },\n    maskText: function maskText(text) {\n      return this.mask ? Object(__WEBPACK_IMPORTED_MODULE_0__util_mask__[\"b\" /* maskText */])(text, this.masked, this.dontFillMaskBlanks) : text;\n    },\n    unmaskText: function unmaskText(text) {\n      return this.mask ? Object(__WEBPACK_IMPORTED_MODULE_0__util_mask__[\"c\" /* unmaskText */])(text) : text;\n    },\n\n    // When the input changes and is\n    // re-created, ensure that the\n    // caret location is correct\n    setSelectionRange: function setSelectionRange() {\n      this.$nextTick(this.updateRange);\n    }\n  }\n});\n\n/***/ }),\n/* 43 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export defaultDelimiters */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isMaskDelimiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return maskText; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return unmaskText; });\n/**\n * Mask keys\n *\n * @type {Object}\n */\nvar allowedMasks = {\n  '#': {\n    test: function test(char) {\n      return char.match(/[0-9]/);\n    }\n  },\n  'A': {\n    test: function test(char) {\n      return char.match(/[A-Z]/i);\n    },\n    convert: function convert(char) {\n      return char.toUpperCase();\n    }\n  },\n  'a': {\n    test: function test(char) {\n      return char.match(/[a-z]/i);\n    },\n    convert: function convert(char) {\n      return char.toLowerCase();\n    }\n  },\n  'N': {\n    test: function test(char) {\n      return char.match(/[0-9A-Z]/i);\n    },\n    convert: function convert(char) {\n      return char.toUpperCase();\n    }\n  },\n  'n': {\n    test: function test(char) {\n      return char.match(/[0-9a-z]/i);\n    },\n    convert: function convert(char) {\n      return char.toLowerCase();\n    }\n  },\n  'X': {\n    test: isMaskDelimiter\n  }\n\n  /**\n   * Default delimiter RegExp\n   *\n   * @type {RegExp}\n   */\n};var defaultDelimiters = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/\\\\ ]/;\n\n/**\n * Is Character mask\n *\n * @param  {String} char\n *\n * @return {Boolean}\n */\nvar isMask = function isMask(char) {\n  return allowedMasks.hasOwnProperty(char);\n};\n\n/**\n * Automatically convert char case\n *\n * @param  {String} mask\n * @param  {String} char\n *\n * @return {String}\n */\nvar convert = function convert(mask, char) {\n  return allowedMasks[mask].convert ? allowedMasks[mask].convert(char) : char;\n};\n\n/**\n *\n * @param {String} char\n *\n * @return {Boolean}\n */\nvar isMaskDelimiter = function isMaskDelimiter(char) {\n  return char && char.match(defaultDelimiters);\n};\n\n/**\n * Mask Validation\n *\n * @param  {String} mask\n * @param  {String} char\n *\n * @return {Boolean}\n */\nvar maskValidates = function maskValidates(mask, char) {\n  if (char == null || !isMask(mask)) return false;\n  return allowedMasks[mask].test(char);\n};\n\n/**\n * Mask Text\n *\n * Takes an array of characters\n * and returns a compiled str\n *\n * @param {*} text\n * @param {Array|String} masked\n * @param {Boolean} [dontFillMaskBlanks]\n *\n * @return {String}\n */\nvar maskText = function maskText(text, masked, dontFillMaskBlanks) {\n  if (text == null) return '';\n  text = String(text);\n  if (!masked.length || !text.length) return text;\n  if (!Array.isArray(masked)) masked = masked.split('');\n\n  var textIndex = 0;\n  var maskIndex = 0;\n  var newText = '';\n\n  while (maskIndex < masked.length) {\n    var mask = masked[maskIndex];\n\n    // Assign the next character\n    var char = text[textIndex];\n\n    // Check if mask is delimiter\n    // and current char matches\n    if (!isMask(mask) && char === mask) {\n      newText += mask;\n      textIndex++;\n      // Check if not mask\n    } else if (!isMask(mask) && !dontFillMaskBlanks) {\n      newText += mask;\n      // Check if is mask and validates\n    } else if (maskValidates(mask, char)) {\n      newText += convert(mask, char);\n      textIndex++;\n    } else {\n      return newText;\n    }\n\n    maskIndex++;\n  }\n\n  return newText;\n};\n\n/**\n * Unmask Text\n *\n * @param {String} text\n *\n * @return {String}\n */\nvar unmaskText = function unmaskText(text) {\n  return text ? String(text).replace(new RegExp(defaultDelimiters, 'g'), '') : text;\n};\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 45 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__themeable__ = __webpack_require__(1);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__themeable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      defaultColor: 'accent',\n      isSaving: false\n    };\n  },\n\n\n  props: {\n    actions: Boolean,\n    autosave: Boolean,\n    headerColor: String,\n    landscape: Boolean,\n    noTitle: Boolean,\n    scrollable: Boolean,\n    value: {\n      required: true\n    }\n  },\n\n  computed: {\n    titleColor: function titleColor() {\n      var darkTheme = this.dark || !this.light && this.$vuetify.dark;\n      var defaultTitleColor = darkTheme ? null : 'primary';\n      return this.headerColor || this.color || defaultTitleColor;\n    }\n  },\n\n  methods: {\n    save: function save() {},\n    cancel: function cancel() {},\n    genSlot: function genSlot() {\n      return this.$scopedSlots.default({\n        save: this.save,\n        cancel: this.cancel\n      });\n    },\n    genPickerTitle: function genPickerTitle(children) {\n      return this.$createElement('div', {\n        staticClass: 'picker__title',\n        'class': this.addBackgroundColorClassChecks({}, 'titleColor')\n      }, children);\n    }\n  }\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_semver__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_semver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_semver__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__package_json__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__package_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__package_json__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__directives__ = __webpack_require__(226);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n__webpack_require__(47);\n\n\n\n\n\nfunction Vuetify(Vue, args) {\n  var Vuetify = __WEBPACK_IMPORTED_MODULE_2__components__[\"Vuetify\"];\n\n  Vue.use(Vuetify, _extends({\n    components: __WEBPACK_IMPORTED_MODULE_2__components__,\n    directives: __WEBPACK_IMPORTED_MODULE_3__directives__\n  }, args));\n}\n\nVuetify.version = __WEBPACK_IMPORTED_MODULE_1__package_json__[\"version\"];\n\nfunction checkVueVersion() {\n  var vueDep = __WEBPACK_IMPORTED_MODULE_1__package_json__[\"peerDependencies\"].vue;\n  if (!__WEBPACK_IMPORTED_MODULE_0_semver___default.a.satisfies(window.Vue.version, vueDep)) {\n    console.warn('Vuetify requires Vue version ' + vueDep);\n  }\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.version && checkVueVersion();\n  window.Vue.use(Vuetify);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vuetify);\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\nComparator.prototype.intersects = function(comp, loose) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, loose);\n    return satisfies(this.value, rangeTmp, loose);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, loose);\n    return satisfies(comp.semver, rangeTmp, loose);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, loose) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, loose) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if (range instanceof Range) {\n    if (range.loose === loose) {\n      return range;\n    } else {\n      return new Range(range.raw, loose);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, loose);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, loose) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, loose);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, loose);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, loose);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, loose) {\n  r1 = new Range(r1, loose)\n  r2 = new Range(r2, loose)\n  return r1.intersects(r2)\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"name\":\"vuetify\",\"version\":\"0.17.7\",\"author\":{\"name\":\"John Leider\",\"email\":\"john@vuetifyjs.com\"},\"license\":\"MIT\",\"homepage\":\"http://vuetifyjs.com\",\"main\":\"dist/vuetify.js\",\"unpkg\":\"dist/vuetify.js\",\"types\":\"index.d.ts\",\"scripts\":{\"watch\":\"cross-env TARGET=development webpack --config build/config.js --progress --hide-modules --watch\",\"dev\":\"cross-env NODE_ENV=development webpack-dev-server --config build/webpack.dev.config.js --open --hot\",\"build\":\"npm run build:dist && npm run build:es5\",\"build:dev\":\"cross-env NODE_ENV=production node build/webpack.dev.config.js\",\"build:dist\":\"rimraf dist && cross-env NODE_ENV=production webpack --config build/config.js --progress --hide-modules\",\"build:es5\":\"rimraf es5 && cross-env NODE_ENV=es5 babel src --out-dir es5\",\"debug-build\":\"node --inspect --debug-brk build/config.js\",\"debug:test\":\"./node_modules/.bin/cross-env NODE_ENV=test node --inspect --inspect-brk ./node_modules/jest/bin/jest.js --no-cache --runInBand --verbose\",\"test\":\"cross-env NODE_ENV=test jest -i\",\"test:coverage\":\"cross-env NODE_ENV=test jest -i --coverage\",\"lint\":\"eslint --ext .js,.vue src\",\"preparecommitmsg\":\"node dev/prepare-commit-message.js\",\"precommit\":\"yarn run lint && yarn test\",\"prepush\":\"yarn run lint && yarn test\",\"prepare\":\"git update-index --skip-worktree .env\"},\"description\":\"Vue.js 2 Semantic Component Framework\",\"devDependencies\":{\"autoprefixer\":\"^7.1.4\",\"avoriaz\":\"^4.1.0\",\"babel-cli\":\"^6.26.0\",\"babel-core\":\"^6.26.0\",\"babel-eslint\":\"^8.0.0\",\"babel-jest\":\"^21.0.2\",\"babel-loader\":\"^7.1.2\",\"babel-plugin-add-filehash\":\"^6.9.4\",\"babel-plugin-detective\":\"^2.0.0\",\"babel-plugin-module-resolver\":\"^2.7.1\",\"babel-plugin-transform-async-to-generator\":\"^6.24.1\",\"babel-plugin-transform-runtime\":\"^6.23.0\",\"babel-polyfill\":\"^6.26.0\",\"babel-preset-env\":\"^1.5.1\",\"babel-preset-es2015\":\"^6.24.1\",\"babel-preset-stage-2\":\"^6.24.1\",\"cross-env\":\"^5.0.5\",\"cross-spawn\":\"^5.1.0\",\"css-loader\":\"^0.28.7\",\"css-mqpacker\":\"^6.0.1\",\"cssnano\":\"^3.10.0\",\"dotenv\":\"^4.0.0\",\"eslint\":\"^4.6.1\",\"eslint-config-standard\":\"^10.2.1\",\"eslint-config-vue\":\"^2.0.2\",\"eslint-friendly-formatter\":\"^3.0.0\",\"eslint-loader\":\"^1.6.1\",\"eslint-plugin-html\":\"^3.2.1\",\"eslint-plugin-import\":\"^2.7.0\",\"eslint-plugin-node\":\"^5.1.1\",\"eslint-plugin-promise\":\"^3.4.0\",\"eslint-plugin-pug\":\"^1.0.0\",\"eslint-plugin-standard\":\"^3.0.1\",\"eslint-plugin-vue\":\"^2.1.0\",\"eventsource-polyfill\":\"^0.9.6\",\"extract-text-webpack-plugin\":\"^3.0.0\",\"friendly-errors-webpack-plugin\":\"^1.6.1\",\"function-bind\":\"^1.1.1\",\"husky\":\"^0.14.3\",\"inquirer\":\"^4.0.1\",\"jest\":\"^21.1.0\",\"jest-cli\":\"^21.1.0\",\"jest-css-modules\":\"^1.1.0\",\"jest-serializer-html\":\"^4.0.0\",\"jest-vue-preprocessor\":\"^1.1.0\",\"optimize-css-assets-webpack-plugin\":\"^3.2.0\",\"optimize-js-plugin\":\"^0.0.4\",\"postcss-loader\":\"^1.3.3\",\"progress-bar-webpack-plugin\":\"^1.10.0\",\"pug\":\"^2.0.0-rc.4\",\"pug-loader\":\"^2.3.0\",\"ress\":\"^1.1.1\",\"rimraf\":\"^2.6.2\",\"semver\":\"^5.4.1\",\"serialize-javascript\":\"^1.3.0\",\"shelljs\":\"^0.7.8\",\"style-loader\":\"^0.18.2\",\"stylus\":\"^0.54.5\",\"stylus-loader\":\"^3.0.1\",\"uglifyjs-webpack-plugin\":\"^0.4.6\",\"vue\":\"^2.5.4\",\"vue-loader\":\"^13.5.0\",\"vue-router\":\"^3.0.1\",\"vue-server-renderer\":\"^2.5.4\",\"vue-template-compiler\":\"^2.5.4\",\"webpack\":\"^3.6.0\",\"webpack-bundle-analyzer\":\"^2.9.0\",\"webpack-bundle-size-analyzer\":\"^2.7.0\",\"webpack-dev-server\":\"^2.8.2\",\"webpack-merge\":\"^4.1.0\",\"write-file-webpack-plugin\":\"^4.1.0\"},\"dependencies\":{},\"peerDependencies\":{\"vue\":\"^2.5.0\"},\"engines\":{\"node\":\">= 4.0.0\",\"npm\":\">= 3.0.0\"},\"jest\":{\"verbose\":false,\"roots\":[\"<rootDir>/src\"],\"moduleFileExtensions\":[\"js\",\"vue\"],\"moduleDirectories\":[\"node_modules\"],\"moduleNameMapper\":{\"src/(.*)\":\"<rootDir>/src/$1\"},\"transform\":{\".*\\\\.(vue)$\":\"<rootDir>/node_modules/jest-vue-preprocessor\",\"\\\\.(styl)$\":\"<rootDir>/node_modules/jest-css-modules\",\".*\\\\.(vue|js)$\":\"<rootDir>/node_modules/babel-jest\"},\"transformIgnorePatterns\":[\"node_modules/(?!vue-router)\"],\"snapshotSerializers\":[\"jest-serializer-html\"]}}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Vuetify__ = __webpack_require__(52);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Vuetify\", function() { return __WEBPACK_IMPORTED_MODULE_0__Vuetify__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VApp__ = __webpack_require__(55);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VApp\", function() { return __WEBPACK_IMPORTED_MODULE_1__VApp__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VAlert__ = __webpack_require__(61);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VAlert\", function() { return __WEBPACK_IMPORTED_MODULE_2__VAlert__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__VAvatar__ = __webpack_require__(67);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VAvatar\", function() { return __WEBPACK_IMPORTED_MODULE_3__VAvatar__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__VBadge__ = __webpack_require__(70);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VBadge\", function() { return __WEBPACK_IMPORTED_MODULE_4__VBadge__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__VBottomNav__ = __webpack_require__(73);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VBottomNav\", function() { return __WEBPACK_IMPORTED_MODULE_5__VBottomNav__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__VBottomSheet__ = __webpack_require__(76);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VBottomSheet\", function() { return __WEBPACK_IMPORTED_MODULE_6__VBottomSheet__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__VBreadcrumbs__ = __webpack_require__(81);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VBreadcrumbs\", function() { return __WEBPACK_IMPORTED_MODULE_7__VBreadcrumbs__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__VBtn__ = __webpack_require__(10);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VBtn\", function() { return __WEBPACK_IMPORTED_MODULE_8__VBtn__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__VBtnToggle__ = __webpack_require__(88);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VBtnToggle\", function() { return __WEBPACK_IMPORTED_MODULE_9__VBtnToggle__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__VCard__ = __webpack_require__(17);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VCard\", function() { return __WEBPACK_IMPORTED_MODULE_10__VCard__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__VCarousel__ = __webpack_require__(95);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VCarousel\", function() { return __WEBPACK_IMPORTED_MODULE_11__VCarousel__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__VCheckbox__ = __webpack_require__(29);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VCheckbox\", function() { return __WEBPACK_IMPORTED_MODULE_12__VCheckbox__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__VChip__ = __webpack_require__(33);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VChip\", function() { return __WEBPACK_IMPORTED_MODULE_13__VChip__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__VDataTable__ = __webpack_require__(103);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VDataTable\", function() { return __WEBPACK_IMPORTED_MODULE_14__VDataTable__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__VDatePicker__ = __webpack_require__(136);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VDatePicker\", function() { return __WEBPACK_IMPORTED_MODULE_15__VDatePicker__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__VDialog__ = __webpack_require__(144);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VDialog\", function() { return __WEBPACK_IMPORTED_MODULE_16__VDialog__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__VDivider__ = __webpack_require__(145);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VDivider\", function() { return __WEBPACK_IMPORTED_MODULE_17__VDivider__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__VExpansionPanel__ = __webpack_require__(148);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VExpansionPanel\", function() { return __WEBPACK_IMPORTED_MODULE_18__VExpansionPanel__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__VFooter__ = __webpack_require__(152);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VFooter\", function() { return __WEBPACK_IMPORTED_MODULE_19__VFooter__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__VForm__ = __webpack_require__(155);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VForm\", function() { return __WEBPACK_IMPORTED_MODULE_20__VForm__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__VGrid__ = __webpack_require__(157);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VGrid\", function() { return __WEBPACK_IMPORTED_MODULE_21__VGrid__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__VIcon__ = __webpack_require__(3);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VIcon\", function() { return __WEBPACK_IMPORTED_MODULE_22__VIcon__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__VList__ = __webpack_require__(37);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VList\", function() { return __WEBPACK_IMPORTED_MODULE_23__VList__[\"f\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__VMenu__ = __webpack_require__(38);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VMenu\", function() { return __WEBPACK_IMPORTED_MODULE_24__VMenu__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__VNavigationDrawer__ = __webpack_require__(163);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VNavigationDrawer\", function() { return __WEBPACK_IMPORTED_MODULE_25__VNavigationDrawer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__VPagination__ = __webpack_require__(166);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VPagination\", function() { return __WEBPACK_IMPORTED_MODULE_26__VPagination__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__VParallax__ = __webpack_require__(169);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VParallax\", function() { return __WEBPACK_IMPORTED_MODULE_27__VParallax__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__VProgressCircular__ = __webpack_require__(173);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VProgressCircular\", function() { return __WEBPACK_IMPORTED_MODULE_28__VProgressCircular__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__VProgressLinear__ = __webpack_require__(34);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VProgressLinear\", function() { return __WEBPACK_IMPORTED_MODULE_29__VProgressLinear__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__VRadioGroup__ = __webpack_require__(176);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VRadioGroup\", function() { return __WEBPACK_IMPORTED_MODULE_30__VRadioGroup__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__VSelect__ = __webpack_require__(35);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VSelect\", function() { return __WEBPACK_IMPORTED_MODULE_31__VSelect__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__VSlider__ = __webpack_require__(181);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VSlider\", function() { return __WEBPACK_IMPORTED_MODULE_32__VSlider__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__VSnackbar__ = __webpack_require__(184);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VSnackbar\", function() { return __WEBPACK_IMPORTED_MODULE_33__VSnackbar__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__VSpeedDial__ = __webpack_require__(187);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VSpeedDial\", function() { return __WEBPACK_IMPORTED_MODULE_34__VSpeedDial__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__VStepper__ = __webpack_require__(190);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VStepper\", function() { return __WEBPACK_IMPORTED_MODULE_35__VStepper__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__VSubheader__ = __webpack_require__(195);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VSubheader\", function() { return __WEBPACK_IMPORTED_MODULE_36__VSubheader__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__VSwitch__ = __webpack_require__(198);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VSwitch\", function() { return __WEBPACK_IMPORTED_MODULE_37__VSwitch__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__VSystemBar__ = __webpack_require__(201);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VSystemBar\", function() { return __WEBPACK_IMPORTED_MODULE_38__VSystemBar__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__VTabs__ = __webpack_require__(204);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VTabs\", function() { return __WEBPACK_IMPORTED_MODULE_39__VTabs__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__VTextField__ = __webpack_require__(212);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VTextField\", function() { return __WEBPACK_IMPORTED_MODULE_40__VTextField__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__VTimePicker__ = __webpack_require__(214);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VTimePicker\", function() { return __WEBPACK_IMPORTED_MODULE_41__VTimePicker__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__VToolbar__ = __webpack_require__(219);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VToolbar\", function() { return __WEBPACK_IMPORTED_MODULE_42__VToolbar__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__VTooltip__ = __webpack_require__(223);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VTooltip\", function() { return __WEBPACK_IMPORTED_MODULE_43__VTooltip__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__transitions__ = __webpack_require__(5);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Transitions\", function() { return __WEBPACK_IMPORTED_MODULE_44__transitions__[\"h\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_application__ = __webpack_require__(53);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_theme__ = __webpack_require__(54);\n\n\n\nvar Vuetify = {\n  install: function install(Vue) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.installed) return;\n\n    this.installed = true;\n\n    var $vuetify = {};\n    Vue.util.defineReactive($vuetify, 'inspire', {\n      breakpoint: {},\n      application: __WEBPACK_IMPORTED_MODULE_0__mixins_application__[\"a\" /* default */],\n      dark: false,\n      theme: Object(__WEBPACK_IMPORTED_MODULE_1__mixins_theme__[\"a\" /* default */])(opts.theme),\n      touchSupport: false\n    });\n\n    Vue.prototype.$vuetify = $vuetify.inspire;\n\n    if (opts.transitions) {\n      Object.keys(opts.transitions).forEach(function (key) {\n        var t = opts.transitions[key];\n        if (t.name !== undefined && t.name.startsWith('v-')) {\n          Vue.component(t.name, t);\n        }\n      });\n    }\n\n    if (opts.directives) {\n      Object.keys(opts.directives).forEach(function (key) {\n        var d = opts.directives[key];\n        Vue.directive(d.name, d);\n      });\n    }\n\n    if (opts.components) {\n      Object.keys(opts.components).forEach(function (key) {\n        var c = opts.components[key];\n        Vue.use(c);\n      });\n    }\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vuetify);\n\n/***/ }),\n/* 53 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  bar: 0,\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0\n});\n\n/***/ }),\n/* 54 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = theme;\nvar THEME_DEFAULTS = {\n  primary: '#1976D2',\n  secondary: '#424242',\n  accent: '#82B1FF',\n  error: '#FF5252',\n  info: '#2196F3',\n  success: '#4CAF50',\n  warning: '#FFC107'\n};\n\nfunction theme(theme) {\n  theme = theme || {};\n\n  return Object.assign({}, THEME_DEFAULTS, theme);\n}\n\n/***/ }),\n/* 55 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VApp__ = __webpack_require__(56);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VApp__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VApp__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VApp__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VApp__[\"a\" /* default */]);\n\n/***/ }),\n/* 56 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_app_theme__ = __webpack_require__(58);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_app_breakpoint__ = __webpack_require__(59);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_resize__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_pointerSupport__ = __webpack_require__(60);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n__webpack_require__(57);\n\n// Component level mixins\n\n\n\n// Directives\n\n\n// Utilities\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-app',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_app_breakpoint__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_0__mixins_app_theme__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__util_pointerSupport__[\"a\" /* default */]],\n\n  directives: {\n    Resize: __WEBPACK_IMPORTED_MODULE_2__directives_resize__[\"a\" /* default */]\n  },\n\n  props: {\n    id: {\n      type: String,\n      default: 'app'\n    },\n    dark: Boolean\n  },\n\n  computed: {\n    classes: function classes() {\n      return _defineProperty({}, 'theme--' + (this.dark ? 'dark' : 'light'), true);\n    }\n  },\n\n  mounted: function mounted() {\n    this.$vuetify.dark = this.dark;\n  },\n\n\n  watch: {\n    dark: function dark() {\n      this.$vuetify.dark = this.dark;\n    }\n  },\n\n  render: function render(h) {\n    var data = {\n      staticClass: 'application',\n      'class': this.classes,\n      attrs: { 'data-app': true },\n      domProps: { id: this.id },\n      directives: [{\n        name: 'resize',\n        value: this.onResize\n      }]\n    };\n\n    var wrapper = h('div', { staticClass: 'application--wrap' }, this.$slots.default);\n\n    return h('div', data, [wrapper]);\n  }\n});\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 58 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      style: null\n    };\n  },\n\n  watch: {\n    '$vuetify.theme': {\n      deep: true,\n      handler: function handler() {\n        this.applyTheme();\n      }\n    }\n  },\n\n  created: function created() {\n    if (typeof document === 'undefined') {\n      this.$ssrContext && !this.$ssrContext._styles && (this.$ssrContext._styles = {});\n      return this.$ssrContext && this.$ssrContext._styles && (this.$ssrContext._styles['vuetify-theme-stylesheet'] = {\n        ids: ['vuetify-theme-stylesheet'],\n        css: this.genColors(this.$vuetify.theme),\n        media: ''\n      });\n    }\n    this.genStyle();\n    this.applyTheme();\n  },\n\n\n  methods: {\n    applyTheme: function applyTheme() {\n      this.style.innerHTML = this.genColors(this.$vuetify.theme);\n    },\n    genColors: function genColors(theme) {\n      var _this = this;\n\n      var colors = Object.keys(theme).map(function (key) {\n        var value = theme[key];\n\n        return _this.genBackgroundColor(key, value) + _this.genTextColor(key, value);\n      });\n\n      colors.push(this.genAnchorColor(this.$vuetify.theme.primary));\n\n      return colors.join('');\n    },\n    genAnchorColor: function genAnchorColor(color) {\n      return '.application a{color: ' + color + ';}';\n    },\n    genBackgroundColor: function genBackgroundColor(key, value) {\n      return '.' + key + '{background-color:' + value + ' !important;border-color:' + value + ' !important;}';\n    },\n    genTextColor: function genTextColor(key, value) {\n      return '.' + key + '--text{color:' + value + ' !important;}';\n    },\n    genStyle: function genStyle() {\n      var style = document.querySelector('[data-vue-ssr-id=vuetify-theme-stylesheet]');\n\n      if (!style) {\n        style = document.createElement('style');\n        style.type = 'text/css';\n        document.head.appendChild(style);\n      }\n\n      this.style = style;\n    }\n  }\n});\n\n/***/ }),\n/* 59 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * A modified version of https://gist.github.com/cb109/b074a65f7595cffc21cea59ce8d15f9b\n */\n\n/**\n * A Vue mixin to get the current width/height and the associated breakpoint.\n *\n * Useful to e.g. adapt the user interface from inside a Vue component\n * as opposed to using CSS classes. The breakpoint pixel values and\n * range names are taken from Vuetify (https://github.com/vuetifyjs).\n *\n * Use within a component:\n *\n *   import breakpoint from './breakpoint.js'\n *\n *   export default {\n *     name: 'my-component',\n *     mixins: [breakpoint],\n *     ...\n *\n * Then inside a template:\n *\n *   <div v-if=\"$breakpoint.smAndDown\">...</div>\n */\nvar breakpoint = {\n  data: function data() {\n    return {\n      clientWidth: clientDimensions.getWidth(),\n      clientHeight: clientDimensions.getHeight()\n    };\n  },\n\n\n  computed: {\n    breakpoint: function breakpoint() {\n      var xs = this.clientWidth < 600;\n      var sm = this.clientWidth < 960 && !xs;\n      var md = this.clientWidth < 1280 - 16 && !(sm || xs);\n      var lg = this.clientWidth < 1920 - 16 && !(md || sm || xs);\n      var xl = this.clientWidth >= 1920 - 16 && !(lg || md || sm || xs);\n\n      var xsOnly = xs;\n      var smOnly = sm;\n      var smAndDown = (xs || sm) && !(md || lg || xl);\n      var smAndUp = !xs && (sm || md || lg || xl);\n      var mdOnly = md;\n      var mdAndDown = (xs || sm || md) && !(lg || xl);\n      var mdAndUp = !(xs || sm) && (md || lg || xl);\n      var lgOnly = lg;\n      var lgAndDown = (xs || sm || md || lg) && !xl;\n      var lgAndUp = !(xs || sm || md) && (lg || xl);\n      var xlOnly = xl;\n\n      var name = void 0;\n      switch (true) {\n        case xs:\n          name = 'xs';\n          break;\n        case sm:\n          name = 'sm';\n          break;\n        case md:\n          name = 'md';\n          break;\n        case lg:\n          name = 'lg';\n          break;\n        default:\n          name = 'xl';\n          break;\n      }\n\n      var result = {\n        // Definite breakpoint.\n        xs: xs,\n        sm: sm,\n        md: md,\n        lg: lg,\n        xl: xl,\n\n        // Useful e.g. to construct CSS class names dynamically.\n        name: name,\n\n        // Breakpoint ranges.\n        xsOnly: xsOnly,\n        smOnly: smOnly,\n        smAndDown: smAndDown,\n        smAndUp: smAndUp,\n        mdOnly: mdOnly,\n        mdAndDown: mdAndDown,\n        mdAndUp: mdAndUp,\n        lgOnly: lgOnly,\n        lgAndDown: lgAndDown,\n        lgAndUp: lgAndUp,\n        xlOnly: xlOnly,\n\n        // For custom breakpoint logic.\n        width: this.clientWidth,\n        height: this.clientHeight\n      };\n\n      return result;\n    }\n  },\n\n  watch: {\n    breakpoint: function breakpoint(val) {\n      this.$vuetify.breakpoint = val;\n    }\n  },\n\n  created: function created() {\n    this.$vuetify.breakpoint = this.breakpoint;\n  },\n\n\n  methods: {\n    onResize: function onResize() {\n      this.clientWidth = clientDimensions.getWidth();\n      this.clientHeight = clientDimensions.getHeight();\n    }\n  }\n\n  // Cross-browser support as described in:\n  // https://stackoverflow.com/questions/1248081\n};var clientDimensions = {\n  getWidth: function getWidth() {\n    if (typeof document === 'undefined') return 0; // SSR\n    return Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n  },\n  getHeight: function getHeight() {\n    if (typeof document === 'undefined') return 0; // SSR\n    return Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (breakpoint);\n\n/***/ }),\n/* 60 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(2);\n\n\n/**\n * @mixin\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  mounted: function mounted() {\n    var _this = this;\n\n    var setupPointerSupport = function setupPointerSupport(propName, eventName) {\n      Object(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* addOnceEventListener */])(window, eventName, function () {\n        _this.$vuetify[propName] = true;\n        var className = 'application--' + propName.replace(/([A-Z])/g, '-$1').toLowerCase();\n        document.querySelector('[data-app]').classList.add(className);\n      });\n    };\n\n    // Adds application--touch-support class\n    // after touchstart event is triggered\n    setupPointerSupport('touchSupport', 'touchstart');\n\n    // Add application--hover-support class\n    // after mouseover event is triggered\n    // Useless as per #869 in Modernizr\n    // setupPointerSupport('hoverSupport', 'mouseover')\n  }\n});\n\n/***/ }),\n/* 61 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VAlert__ = __webpack_require__(62);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VAlert__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VAlert__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VAlert__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VAlert__[\"a\" /* default */]);\n\n/***/ }),\n/* 62 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_toggleable__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_transitionable__ = __webpack_require__(66);\n__webpack_require__(63);\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-alert',\n\n  components: {\n    VIcon: __WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_toggleable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_transitionable__[\"a\" /* default */]],\n\n  props: {\n    dismissible: Boolean,\n    icon: String,\n    outline: Boolean,\n    type: {\n      type: String,\n      validator: function validator(val) {\n        return ['info', 'error', 'success', 'warning'].includes(val);\n      }\n    }\n  },\n\n  data: function data() {\n    return {\n      defaultColor: 'error'\n    };\n  },\n\n  computed: {\n    classes: function classes() {\n      var colorProp = this.type && !this.color ? 'type' : 'computedColor';\n      var classes = {\n        'alert--dismissible': this.dismissible,\n        'alert--outline': this.outline\n      };\n\n      return this.outline ? this.addTextColorClassChecks(classes, colorProp) : this.addBackgroundColorClassChecks(classes, colorProp);\n    },\n    computedIcon: function computedIcon() {\n      if (this.icon || !this.type) return this.icon;\n\n      switch (this.type) {\n        case 'info':\n          return 'info';\n        case 'error':\n          return 'warning';\n        case 'success':\n          return 'check_circle';\n        case 'warning':\n          return 'priority_high';\n      }\n    }\n  },\n\n  render: function render(h) {\n    var _this = this;\n\n    var children = [h('div', this.$slots.default)];\n\n    if (this.computedIcon) {\n      children.unshift(h('v-icon', {\n        'class': 'alert__icon'\n      }, this.computedIcon));\n    }\n\n    if (this.dismissible) {\n      var close = h('a', {\n        'class': 'alert__dismissible',\n        on: { click: function click() {\n            return _this.$emit('input', false);\n          } }\n      }, [h(__WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */], {\n        props: {\n          right: true\n        }\n      }, 'cancel')]);\n\n      children.push(close);\n    }\n\n    var alert = h('div', {\n      staticClass: 'alert',\n      'class': this.classes,\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }],\n      on: this.$listeners\n    }, children);\n\n    if (!this.transition) return alert;\n\n    return h('transition', {\n      props: {\n        name: this.transition,\n        origin: this.origin,\n        mode: this.mode\n      }\n    }, [alert]);\n  }\n});\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 64 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_themeable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(0);\n__webpack_require__(65);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-icon',\n\n  functional: true,\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_0__mixins_themeable__[\"a\" /* default */]],\n\n  props: {\n    disabled: Boolean,\n    large: Boolean,\n    left: Boolean,\n    medium: Boolean,\n    right: Boolean,\n    xLarge: Boolean\n  },\n\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        _ref$children = _ref.children,\n        children = _ref$children === undefined ? [] : _ref$children;\n\n    var iconName = '';\n    if (children.length) {\n      iconName = children.pop().text;\n    } else if (data.domProps && data.domProps.textContent) {\n      iconName = data.domProps.textContent;\n      delete data.domProps.textContent;\n    } else if (data.domProps && data.domProps.innerHTML) {\n      iconName = data.domProps.innerHTML;\n      delete data.domProps.innerHTML;\n    }\n\n    var iconType = 'material-icons';\n    var thirdPartyIcon = iconName.indexOf('-') > -1;\n    if (thirdPartyIcon) iconType = iconName.slice(0, iconName.indexOf('-'));\n\n    data.staticClass = (iconType + ' icon ' + (data.staticClass || '')).trim();\n    data.attrs = data.attrs || {};\n\n    if (!('aria-hidden' in data.attrs)) {\n      data.attrs['aria-hidden'] = true;\n    }\n\n    var classes = Object.assign({\n      'icon--disabled': props.disabled,\n      'icon--large': props.large,\n      'icon--left': props.left,\n      'icon--medium': props.medium,\n      'icon--right': props.right,\n      'icon--x-large': props.xLarge,\n      'theme--dark': props.dark,\n      'theme--light': props.light\n    }, props.color ? __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */].methods.addTextColorClassChecks.call(props, {}, 'color') : {\n      'primary--text': props.primary,\n      'secondary--text': props.secondary,\n      'success--text': props.success,\n      'info--text': props.info,\n      'warning--text': props.warning,\n      'error--text': props.error\n    });\n\n    var iconClasses = Object.keys(classes).filter(function (k) {\n      return classes[k];\n    }).join(' ');\n    iconClasses && (data.staticClass += ' ' + iconClasses);\n\n    if (thirdPartyIcon) data.staticClass += ' ' + iconName;else children.push(iconName);\n\n    return h('i', data, children);\n  }\n});\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 66 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    mode: String,\n    origin: String,\n    transition: String\n  }\n});\n\n/***/ }),\n/* 67 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VAvatar__ = __webpack_require__(68);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VAvatar__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VAvatar__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VAvatar__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VAvatar__[\"a\" /* default */]);\n\n/***/ }),\n/* 68 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__(69);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-avatar',\n\n  functional: true,\n\n  props: {\n    size: {\n      type: String,\n      default: '48px'\n    },\n    tile: Boolean\n  },\n\n  render: function render(h, _ref) {\n    var data = _ref.data,\n        props = _ref.props,\n        children = _ref.children;\n\n    data.staticClass = ('avatar ' + (data.staticClass || '')).trim();\n    data.style = data.style || {};\n\n    if (props.tile) data.staticClass += ' avatar--tile';\n\n    data.style.height = props.size;\n    data.style.width = props.size;\n\n    return h('div', data, children);\n  }\n});\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 70 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VBadge__ = __webpack_require__(71);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VBadge__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VBadge__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VBadge__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VBadge__[\"a\" /* default */]);\n\n/***/ }),\n/* 71 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__ = __webpack_require__(4);\n__webpack_require__(72);\n\n// Mixins\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-badge',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__[\"a\" /* default */]],\n\n  props: {\n    bottom: Boolean,\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    left: Boolean,\n    overlap: Boolean,\n    transition: {\n      type: String,\n      default: 'fab-transition'\n    },\n    value: {\n      default: true\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'badge--bottom': this.bottom,\n        'badge--left': this.left,\n        'badge--overlap': this.overlap\n      };\n    }\n  },\n\n  render: function render(h) {\n    var badge = this.$slots.badge ? [h('span', {\n      staticClass: 'badge__badge',\n      'class': this.addBackgroundColorClassChecks(),\n      attrs: this.attrs,\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }, this.$slots.badge)] : null;\n\n    return h('span', {\n      staticClass: 'badge',\n      'class': this.classes\n    }, [this.$slots.default, h('transition', {\n      props: {\n        name: this.transition\n      }\n    }, badge)]);\n  }\n});\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 73 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VBottomNav__ = __webpack_require__(74);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VBottomNav__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VBottomNav__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VBottomNav__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VBottomNav__[\"a\" /* default */]);\n\n/***/ }),\n/* 74 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_button_group__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_colorable__ = __webpack_require__(0);\n__webpack_require__(75);\n\n// Mixins\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-bottom-nav',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_button_group__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_colorable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      defaultColor: 'primary'\n    };\n  },\n\n  props: {\n    absolute: Boolean,\n    active: [Number, String],\n    shift: Boolean,\n    value: { required: false }\n  },\n\n  watch: {\n    active: function active() {\n      this.update();\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'bottom-nav': true,\n        'bottom-nav--absolute': this.absolute,\n        'bottom-nav--shift': this.shift,\n        'bottom-nav--active': this.value\n      };\n    }\n  },\n\n  methods: {\n    isSelected: function isSelected(i) {\n      var item = this.getValue(i);\n      return this.active === item;\n    },\n    updateApplication: function updateApplication() {\n      if (!this.app) return;\n\n      this.$vuetify.application.bottom = this.$el.clientHeight;\n    },\n    updateValue: function updateValue(i) {\n      var item = this.getValue(i);\n      this.$emit('update:active', item);\n    }\n  },\n\n  render: function render(h) {\n    return h('div', {\n      class: this.addBackgroundColorClassChecks(this.classes),\n      ref: 'content'\n    }, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 76 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VBottomSheet__ = __webpack_require__(77);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VBottomSheet__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VBottomSheet__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VBottomSheet__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VBottomSheet__[\"a\" /* default */]);\n\n/***/ }),\n/* 77 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VDialog_VDialog__ = __webpack_require__(26);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n__webpack_require__(78);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-bottom-sheet',\n\n  props: {\n    disabled: Boolean,\n    fullWidth: Boolean,\n    inset: Boolean,\n    lazy: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'auto'\n    },\n    persistent: Boolean,\n    value: null\n  },\n\n  render: function render(h) {\n    var activator = h('template', {\n      slot: 'activator'\n    }, this.$slots.activator);\n\n    var contentClass = ['bottom-sheet', this.inset ? 'bottom-sheet--inset' : ''].join(' ');\n\n    return h(__WEBPACK_IMPORTED_MODULE_0__VDialog_VDialog__[\"a\" /* default */], {\n      attrs: _extends({}, this.$props),\n      on: _extends({}, this.$listeners),\n      props: {\n        contentClass: contentClass,\n        transition: 'bottom-sheet-transition',\n        value: this.value\n      }\n    }, [activator, this.$slots.default]);\n  }\n});\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 81 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VBreadcrumbs__ = __webpack_require__(82);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VBreadcrumbsItem__ = __webpack_require__(84);\n/* unused harmony reexport VBreadcrumbs */\n/* unused harmony reexport VBreadcrumbsItem */\n\n\n\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VBreadcrumbs__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VBreadcrumbs__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VBreadcrumbs__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VBreadcrumbsItem__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VBreadcrumbsItem__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VBreadcrumbs__[\"a\" /* default */]);\n\n/***/ }),\n/* 82 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__(83);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-breadcrumbs',\n\n  props: {\n    divider: {\n      type: String,\n      default: '/'\n    },\n    large: Boolean,\n    justifyCenter: Boolean,\n    justifyEnd: Boolean\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'breadcrumbs--large': this.large\n      };\n    },\n    computedDivider: function computedDivider() {\n      return this.$slots.divider ? this.$slots.divider : this.divider;\n    },\n    styles: function styles() {\n      var justify = this.justifyCenter ? 'center' : this.justifyEnd ? 'flex-end' : 'flex-start';\n\n      return {\n        'justify-content': justify\n      };\n    }\n  },\n\n  methods: {\n    /**\n     * Add dividers between\n     * v-breadcrumbs-item\n     * \n     * @return {array}\n     */\n    genChildren: function genChildren() {\n      var _this = this;\n\n      if (!this.$slots.default) return null;\n\n      var children = [];\n      var dividerData = { staticClass: 'breadcrumbs__divider' };\n      var length = this.$slots.default.length;\n\n      this.$slots.default.forEach(function (elm, i) {\n        children.push(elm);\n\n        if (!elm.componentOptions || elm.componentOptions.tag !== 'v-breadcrumbs-item' || i === length - 1) return;\n\n        children.push(_this.$createElement('li', dividerData, _this.computedDivider));\n      });\n\n      return children;\n    }\n  },\n\n  render: function render(h) {\n    return h('ul', {\n      staticClass: 'breadcrumbs',\n      'class': this.classes,\n      style: this.styles\n    }, this.genChildren());\n  }\n});\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 84 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_routable__ = __webpack_require__(13);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-breadcrumbs-item',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_routable__[\"a\" /* default */]],\n\n  props: {\n    // In a breadcrumb, the currently\n    // active item should be dimmed\n    activeClass: {\n      type: String,\n      default: 'breadcrumbs__item--disabled'\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      return _defineProperty({\n        'breadcrumbs__item': true\n      }, this.activeClass, this.disabled);\n    }\n  },\n\n  render: function render(h) {\n    var _generateRouteLink = this.generateRouteLink(),\n        tag = _generateRouteLink.tag,\n        data = _generateRouteLink.data;\n\n    return h('li', [h(tag, data, this.$slots.default)]);\n  }\n});\n\n/***/ }),\n/* 85 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_contextualable__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_positionable__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_routable__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_themeable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__ = __webpack_require__(4);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n__webpack_require__(86);\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-btn',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_contextualable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_routable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_positionable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_themeable__[\"a\" /* default */], Object(__WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__[\"b\" /* factory */])('inputValue')],\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'btn--active'\n    },\n    block: Boolean,\n    depressed: Boolean,\n    fab: Boolean,\n    flat: Boolean,\n    icon: Boolean,\n    large: Boolean,\n    loading: Boolean,\n    outline: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: true\n    },\n    round: Boolean,\n    small: Boolean,\n    tag: {\n      type: String,\n      default: 'button'\n    },\n    type: {\n      type: String,\n      default: 'button'\n    },\n    value: null\n  },\n\n  computed: {\n    classes: function classes() {\n      var colorBackground = !this.outline && !this.flat;\n      var colorText = !this.disabled && !colorBackground;\n\n      var classes = _extends({\n        'btn': true,\n        'btn--active': this.isActive,\n        'btn--absolute': this.absolute,\n        'btn--block': this.block,\n        'btn--bottom': this.bottom,\n        'btn--disabled': this.disabled,\n        'btn--flat': this.flat,\n        'btn--floating': this.fab,\n        'btn--fixed': this.fixed,\n        'btn--hover': this.hover,\n        'btn--icon': this.icon,\n        'btn--large': this.large,\n        'btn--left': this.left,\n        'btn--loader': this.loading,\n        'btn--outline': this.outline,\n        'btn--depressed': this.depressed && !this.flat || this.outline,\n        'btn--right': this.right,\n        'btn--round': this.round,\n        'btn--router': this.to,\n        'btn--small': this.small,\n        'btn--top': this.top\n      }, this.themeClasses);\n\n      if (!this.color) {\n        return Object.assign(classes, {\n          'primary': this.primary && colorBackground,\n          'secondary': this.secondary && colorBackground,\n          'success': this.success && colorBackground,\n          'info': this.info && colorBackground,\n          'warning': this.warning && colorBackground,\n          'error': this.error && colorBackground,\n          'primary--text': this.primary && colorText,\n          'secondary--text': this.secondary && colorText,\n          'success--text': this.success && colorText,\n          'info--text': this.info && colorText,\n          'warning--text': this.warning && colorText,\n          'error--text': this.error && colorText\n        });\n      }\n\n      return colorBackground ? this.addBackgroundColorClassChecks(classes) : this.addTextColorClassChecks(classes);\n    }\n  },\n\n  methods: {\n    // Prevent focus to match md spec\n    click: function click(e) {\n      !this.fab && e.detail && this.$el.blur();\n\n      this.$emit('click', e);\n    },\n    genContent: function genContent() {\n      return this.$createElement('div', { 'class': 'btn__content' }, [this.$slots.default]);\n    },\n    genLoader: function genLoader() {\n      var children = [];\n\n      if (!this.$slots.loader) {\n        children.push(this.$createElement('v-progress-circular', {\n          props: {\n            indeterminate: true,\n            size: 26\n          }\n        }));\n      } else {\n        children.push(this.$slots.loader);\n      }\n\n      return this.$createElement('span', { 'class': 'btn__loading' }, children);\n    }\n  },\n\n  mounted: function mounted() {\n    var _this = this;\n\n    Object.keys(__WEBPACK_IMPORTED_MODULE_1__mixins_contextualable__[\"a\" /* default */].props).forEach(function (prop) {\n      if (_this[prop]) {\n        console.warn('Context prop \\'' + prop + '\\' for VBtn component has been deprecated. Use \\'color\\' prop instead.');\n      }\n    });\n  },\n  render: function render(h) {\n    var _generateRouteLink = this.generateRouteLink(),\n        tag = _generateRouteLink.tag,\n        data = _generateRouteLink.data;\n\n    var children = [this.genContent()];\n\n    tag === 'button' && (data.attrs.type = this.type);\n    this.loading && children.push(this.genLoader());\n\n    data.attrs.value = ['string', 'number'].includes(_typeof(this.value)) ? this.value : JSON.stringify(this.value);\n\n    return h(tag, data, children);\n  }\n});\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 87 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    primary: Boolean,\n    secondary: Boolean,\n    success: Boolean,\n    info: Boolean,\n    warning: Boolean,\n    error: Boolean\n  }\n});\n\n/***/ }),\n/* 88 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VBtnToggle__ = __webpack_require__(89);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VBtnToggle__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VBtnToggle__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VBtnToggle__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VBtnToggle__[\"a\" /* default */]);\n\n/***/ }),\n/* 89 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_button_group__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_themeable__ = __webpack_require__(1);\n__webpack_require__(90);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-btn-toggle',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_button_group__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_themeable__[\"a\" /* default */]],\n\n  props: {\n    inputValue: {\n      required: false\n    },\n    items: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    mandatory: Boolean,\n    multiple: Boolean\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'btn-toggle': true,\n        'btn-toggle--selected': this.hasValue,\n        'theme--light': this.light,\n        'theme--dark': this.dark\n      };\n    },\n    hasValue: function hasValue() {\n      return this.multiple && this.inputValue.length || !this.multiple && this.inputValue !== null && typeof this.inputValue !== 'undefined';\n    }\n  },\n\n  watch: {\n    inputValue: {\n      handler: function handler() {\n        this.update();\n      },\n\n      deep: true\n    }\n  },\n\n  methods: {\n    isSelected: function isSelected(i) {\n      var item = this.getValue(i);\n      if (!this.multiple) {\n        return this.inputValue === item;\n      }\n\n      return this.inputValue.includes(item);\n    },\n    updateValue: function updateValue(i) {\n      var item = this.getValue(i);\n      if (!this.multiple) {\n        if (this.mandatory && this.inputValue === item) return;\n        return this.$emit('change', this.inputValue === item ? null : item);\n      }\n\n      var items = this.inputValue.slice();\n\n      var index = items.indexOf(item);\n      if (index > -1) {\n        if (this.mandatory && items.length === 1) return;\n        items.length >= 1 && items.splice(index, 1);\n      } else {\n        items.push(item);\n      }\n\n      this.$emit('change', items);\n    }\n  },\n\n  mounted: function mounted() {\n    if (this.items.length > 0) {\n      console.warn('The \\'items\\' props has been deprecated. v-btn-toggle now has a default slot where you can place buttons.');\n    }\n  },\n  render: function render(h) {\n    return h('div', { class: this.classes }, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 91 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_routable__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__ = __webpack_require__(1);\n__webpack_require__(92);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-card',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_routable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__[\"a\" /* default */]],\n\n  props: {\n    flat: Boolean,\n    height: {\n      type: String,\n      default: 'auto'\n    },\n    hover: Boolean,\n    img: String,\n    raised: Boolean,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    tile: Boolean\n  },\n\n  computed: {\n    classes: function classes() {\n      return this.addBackgroundColorClassChecks({\n        'card': true,\n        'card--flat': this.flat,\n        'card--horizontal': this.horizontal,\n        'card--hover': this.hover,\n        'card--raised': this.raised,\n        'card--tile': this.tile,\n        'theme--light': this.light,\n        'theme--dark': this.dark\n      });\n    },\n    styles: function styles() {\n      var style = {\n        height: isNaN(this.height) ? this.height : this.height + 'px'\n      };\n\n      if (this.img) {\n        style.background = 'url(\"' + this.img + '\") center center / cover no-repeat';\n      }\n\n      return style;\n    }\n  },\n\n  render: function render(h) {\n    var _generateRouteLink = this.generateRouteLink(),\n        tag = _generateRouteLink.tag,\n        data = _generateRouteLink.data;\n\n    data.style = this.styles;\n\n    return h(tag, data, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 93 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-card-media',\n\n  props: {\n    contain: Boolean,\n    height: {\n      type: [Number, String],\n      default: 'auto'\n    },\n    src: {\n      type: String\n    }\n  },\n\n  render: function render(h) {\n    var data = {\n      'class': 'card__media',\n      style: {\n        height: !isNaN(this.height) ? this.height + 'px' : this.height\n      },\n      on: this.$listeners\n    };\n\n    var children = [];\n\n    if (this.src) {\n      children.push(h('div', {\n        'class': 'card__media__background',\n        style: {\n          background: 'url(' + this.src + ') center center / ' + (this.contain ? 'contain' : 'cover') + ' no-repeat'\n        }\n      }));\n    }\n\n    children.push(h('div', {\n      'class': 'card__media__content'\n    }, this.$slots.default));\n\n    return h('div', data, children);\n  }\n});\n\n/***/ }),\n/* 94 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-card-title',\n\n  functional: true,\n\n  props: {\n    primaryTitle: Boolean\n  },\n\n  render: function render(h, _ref) {\n    var data = _ref.data,\n        props = _ref.props,\n        children = _ref.children;\n\n    data.staticClass = ('card__title ' + (data.staticClass || '')).trim();\n\n    if (props.primaryTitle) data.staticClass += ' card__title--primary';\n\n    return h('div', data, children);\n  }\n});\n\n/***/ }),\n/* 95 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VCarousel__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VCarouselItem__ = __webpack_require__(98);\n/* unused harmony reexport VCarousel */\n/* unused harmony reexport VCarouselItem */\n\n\n\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VCarousel__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VCarousel__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VCarousel__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VCarouselItem__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VCarouselItem__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VCarousel__[\"a\" /* default */]);\n\n/***/ }),\n/* 96 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VBtn__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_bootable__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_themeable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_registrable__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__directives_touch__ = __webpack_require__(7);\n__webpack_require__(97);\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-carousel',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_bootable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_themeable__[\"a\" /* default */], Object(__WEBPACK_IMPORTED_MODULE_4__mixins_registrable__[\"b\" /* provide */])('carousel')],\n\n  directives: { Touch: __WEBPACK_IMPORTED_MODULE_5__directives_touch__[\"a\" /* default */] },\n\n  data: function data() {\n    return {\n      inputValue: null,\n      items: [],\n      slideTimeout: null,\n      reverse: false\n    };\n  },\n\n\n  props: {\n    cycle: {\n      type: Boolean,\n      default: true\n    },\n    delimiterIcon: {\n      type: String,\n      default: 'fiber_manual_record'\n    },\n    hideControls: Boolean,\n    hideDelimiters: Boolean,\n    interval: {\n      type: [Number, String],\n      default: 6000,\n      validator: function validator(value) {\n        return value > 0;\n      }\n    },\n    leftControlIcon: {\n      type: [Boolean, String],\n      default: 'chevron_left'\n    },\n    rightControlIcon: {\n      type: [Boolean, String],\n      default: 'chevron_right'\n    },\n    value: Number\n  },\n\n  watch: {\n    items: function items() {\n      if (this.inputValue >= this.items.length) {\n        this.inputValue = this.items.length - 1;\n      }\n    },\n    inputValue: function inputValue() {\n      var _this = this;\n\n      // Evaluate items when inputValue changes to account for\n      // dynamic changing of children\n\n      this.items.forEach(function (i) {\n        i.open(_this.items[_this.inputValue].uid, _this.reverse);\n      });\n\n      this.$emit('input', this.inputValue);\n      this.restartTimeout();\n    },\n    value: function value(val) {\n      this.inputValue = val;\n    },\n    interval: function interval() {\n      this.restartTimeout();\n    },\n    cycle: function cycle(val) {\n      if (val) {\n        this.restartTimeout();\n      } else {\n        clearTimeout(this.slideTimeout);\n        this.slideTimeout = null;\n      }\n    }\n  },\n\n  mounted: function mounted() {\n    this.init();\n  },\n\n\n  methods: {\n    genDelimiters: function genDelimiters() {\n      return this.$createElement('div', {\n        staticClass: 'carousel__controls'\n      }, this.genItems());\n    },\n    genIcon: function genIcon(direction, icon, fn) {\n      if (!icon) return null;\n\n      return this.$createElement('div', {\n        staticClass: 'carousel__' + direction\n      }, [this.$createElement(__WEBPACK_IMPORTED_MODULE_0__VBtn__[\"a\" /* default */], {\n        props: {\n          icon: true,\n          dark: this.dark || !this.light,\n          light: this.light\n        },\n        on: { click: fn }\n      }, [this.$createElement(__WEBPACK_IMPORTED_MODULE_1__VIcon__[\"a\" /* default */], icon)])]);\n    },\n    genItems: function genItems() {\n      var _this2 = this;\n\n      return this.items.map(function (item, index) {\n        return _this2.$createElement(__WEBPACK_IMPORTED_MODULE_0__VBtn__[\"a\" /* default */], {\n          class: {\n            'carousel__controls__item': true,\n            'carousel__controls__item--active': index === _this2.inputValue\n          },\n          props: {\n            icon: true,\n            dark: _this2.dark || !_this2.light,\n            light: _this2.light\n          },\n          key: index,\n          on: { click: _this2.select.bind(_this2, index) }\n        }, [_this2.$createElement(__WEBPACK_IMPORTED_MODULE_1__VIcon__[\"a\" /* default */], _this2.delimiterIcon)]);\n      });\n    },\n    restartTimeout: function restartTimeout() {\n      this.slideTimeout && clearTimeout(this.slideTimeout);\n      this.slideTimeout = null;\n\n      var raf = requestAnimationFrame || setTimeout;\n      raf(this.startTimeout);\n    },\n    init: function init() {\n      this.inputValue = this.value || 0;\n    },\n    next: function next() {\n      this.reverse = false;\n      this.inputValue = (this.inputValue + 1) % this.items.length;\n    },\n    prev: function prev() {\n      this.reverse = true;\n      this.inputValue = (this.inputValue + this.items.length - 1) % this.items.length;\n    },\n    select: function select(index) {\n      this.reverse = index < this.inputValue;\n      this.inputValue = index;\n    },\n    startTimeout: function startTimeout() {\n      var _this3 = this;\n\n      if (!this.cycle) return;\n\n      this.slideTimeout = setTimeout(function () {\n        return _this3.next();\n      }, this.interval > 0 ? this.interval : 6000);\n    },\n    register: function register(uid, open) {\n      this.items.push({ uid: uid, open: open });\n    },\n    unregister: function unregister(uid) {\n      this.items = this.items.filter(function (i) {\n        return i.uid !== uid;\n      });\n    }\n  },\n\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'carousel',\n      directives: [{\n        name: 'touch',\n        value: {\n          left: this.next,\n          right: this.prev\n        }\n      }]\n    }, [this.hideControls ? null : this.genIcon('left', this.leftControlIcon, this.prev), this.hideControls ? null : this.genIcon('right', this.rightControlIcon, this.next), this.hideDelimiters ? null : this.genDelimiters(), this.$slots.default]);\n  }\n});\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 98 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_registrable__ = __webpack_require__(18);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-carousel-item',\n\n  mixins: [Object(__WEBPACK_IMPORTED_MODULE_0__mixins_registrable__[\"a\" /* inject */])('carousel', 'v-carousel-item', 'v-carousel')],\n\n  data: function data() {\n    return {\n      active: false,\n      reverse: false\n    };\n  },\n\n\n  props: {\n    src: {\n      type: String,\n      required: true\n    },\n\n    transition: {\n      type: String,\n      default: 'tab-transition'\n    },\n\n    reverseTransition: {\n      type: String,\n      default: 'tab-reverse-transition'\n    }\n  },\n\n  computed: {\n    computedTransition: function computedTransition() {\n      return this.reverse ? this.reverseTransition : this.transition;\n    },\n    styles: function styles() {\n      return {\n        backgroundImage: 'url(' + this.src + ')'\n      };\n    }\n  },\n\n  methods: {\n    open: function open(id, reverse) {\n      this.active = this._uid === id;\n      this.reverse = reverse;\n    }\n  },\n\n  mounted: function mounted() {\n    this.carousel.register(this._uid, this.open);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.carousel.unregister(this._uid, this.open);\n  },\n  render: function render(h) {\n    var item = h('div', {\n      class: {\n        'carousel__item': true,\n        'reverse': this.reverse\n      },\n      style: this.styles,\n      on: this.$listeners,\n      directives: [{\n        name: 'show',\n        value: this.active\n      }]\n    }, [this.$slots.default]);\n\n    return h('transition', { props: { name: this.computedTransition } }, [item]);\n  }\n});\n\n/***/ }),\n/* 99 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transitions__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_selectable__ = __webpack_require__(31);\n__webpack_require__(14);\n__webpack_require__(21);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-checkbox',\n\n  components: {\n    VFadeTransition: __WEBPACK_IMPORTED_MODULE_1__transitions__[\"b\" /* VFadeTransition */],\n    VIcon: __WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_selectable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      inputIndeterminate: this.indeterminate\n    };\n  },\n\n\n  props: {\n    indeterminate: Boolean\n  },\n\n  computed: {\n    classes: function classes() {\n      var classes = {\n        'checkbox': true,\n        'input-group--selection-controls': true,\n        'input-group--active': this.isActive\n      };\n\n      if (this.hasError) {\n        classes['error--text'] = true;\n      } else {\n        return this.addTextColorClassChecks(classes);\n      }\n\n      return classes;\n    },\n    icon: function icon() {\n      if (this.inputIndeterminate) {\n        return 'indeterminate_check_box';\n      } else if (this.isActive) {\n        return 'check_box';\n      } else {\n        return 'check_box_outline_blank';\n      }\n    }\n  },\n\n  methods: {\n    groupFocus: function groupFocus(e) {\n      this.isFocused = true;\n      this.$emit('focus', e);\n    },\n    groupBlur: function groupBlur(e) {\n      this.isFocused = false;\n      this.tabFocused = false;\n      this.$emit('blur', this.inputValue);\n    }\n  },\n\n  render: function render(h) {\n    var transition = h('v-fade-transition', [h('v-icon', {\n      staticClass: 'icon--selection-control',\n      'class': {\n        'icon--checkbox': this.icon === 'check_box'\n      },\n      key: this.icon,\n      on: Object.assign({\n        click: this.toggle\n      }, this.$listeners)\n    }, this.icon)]);\n\n    var data = {\n      attrs: {\n        tabindex: this.disabled ? -1 : this.internalTabIndex || this.tabindex,\n        role: 'checkbox',\n        'aria-checked': this.inputIndeterminate && 'mixed' || this.isActive && 'true' || 'false',\n        'aria-label': this.label\n      }\n    };\n\n    var ripple = this.ripple ? this.genRipple() : null;\n\n    return this.genInputGroup([transition, ripple], data);\n  }\n});\n\n/***/ }),\n/* 100 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      errorBucket: [],\n      hasFocused: false,\n      hasInput: false,\n      shouldValidate: false,\n      valid: false\n    };\n  },\n\n\n  props: {\n    error: {\n      type: Boolean\n    },\n    errorMessages: {\n      type: [String, Array],\n      default: function _default() {\n        return [];\n      }\n    },\n    rules: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    validateOnBlur: Boolean\n  },\n\n  computed: {\n    validations: function validations() {\n      if (!Array.isArray(this.errorMessages)) {\n        return [this.errorMessages];\n      } else if (this.errorMessages.length > 0) {\n        return this.errorMessages;\n      } else if (this.shouldValidate) {\n        return this.errorBucket;\n      } else {\n        return [];\n      }\n    },\n    hasError: function hasError() {\n      return this.validations.length > 0 || this.errorMessages.length > 0 || this.error;\n    }\n  },\n\n  watch: {\n    rules: {\n      handler: function handler(newVal, oldVal) {\n        // TODO: This handler seems to trigger when input changes, even though\n        // rules array stays the same? Solved it like this for now\n        if (newVal.length === oldVal.length) return;\n\n        this.validate();\n      },\n\n      deep: true\n    },\n    inputValue: function inputValue(val) {\n      // If it's the first time we're setting input,\n      // mark it with hasInput\n      if (!!val && !this.hasInput) this.hasInput = true;\n\n      if (this.hasInput && !this.validateOnBlur) this.shouldValidate = true;\n    },\n    isFocused: function isFocused(val) {\n      // If we're not focused, and it's the first time\n      // we're defocusing, set shouldValidate to true\n      if (!val && !this.hasFocused) {\n        this.hasFocused = true;\n        this.shouldValidate = true;\n\n        this.$emit('update:error', this.errorBucket.length > 0);\n      }\n    },\n    hasError: function hasError(val) {\n      if (this.shouldValidate) {\n        this.$emit('update:error', val);\n      }\n    },\n    error: function error(val) {\n      this.shouldValidate = !!val;\n    }\n  },\n\n  mounted: function mounted() {\n    this.shouldValidate = !!this.error;\n    this.validate();\n  },\n\n\n  methods: {\n    reset: function reset() {\n      var _this = this;\n\n      // TODO: Do this another way!\n      // This is so that we can reset all types of inputs\n      this.$emit('input', this.isMultiple ? [] : null);\n      this.$emit('change', null);\n\n      this.$nextTick(function () {\n        _this.shouldValidate = false;\n        _this.hasFocused = false;\n        _this.validate();\n      });\n    },\n    validate: function validate() {\n      var _this2 = this;\n\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.inputValue;\n\n      if (force) this.shouldValidate = true;\n\n      this.errorBucket = [];\n\n      this.rules.forEach(function (rule) {\n        var valid = typeof rule === 'function' ? rule(value) : rule;\n\n        if (valid !== true && !['string', 'boolean'].includes(typeof valid === 'undefined' ? 'undefined' : _typeof(valid))) {\n          throw new TypeError('Rules should return a string or boolean, received \\'' + (typeof valid === 'undefined' ? 'undefined' : _typeof(valid)) + '\\' instead');\n        }\n\n        if (valid !== true) {\n          _this2.errorBucket.push(valid);\n        }\n      });\n\n      this.valid = this.errorBucket.length === 0;\n\n      return this.valid;\n    }\n  }\n});\n\n/***/ }),\n/* 101 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_toggleable__ = __webpack_require__(4);\n__webpack_require__(102);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-chip',\n\n  components: {\n    VIcon: __WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_toggleable__[\"a\" /* default */]],\n\n  props: {\n    close: Boolean,\n    disabled: Boolean,\n    label: Boolean,\n    outline: Boolean,\n    // Used for selects/tagging\n    selected: Boolean,\n    small: Boolean,\n    textColor: String,\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      var classes = this.addBackgroundColorClassChecks({\n        'chip--disabled': this.disabled,\n        'chip--selected': this.selected,\n        'chip--label': this.label,\n        'chip--outline': this.outline,\n        'chip--small': this.small,\n        'chip--removable': this.close,\n        'theme--light': this.light,\n        'theme--dark': this.dark\n      });\n\n      return this.textColor || this.outline ? this.addTextColorClassChecks(classes, this.textColor ? 'textColor' : 'color') : classes;\n    }\n  },\n\n  methods: {\n    genClose: function genClose(h) {\n      var _this = this;\n\n      var data = {\n        staticClass: 'chip__close',\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n\n            _this.$emit('input', false);\n          }\n        }\n      };\n\n      return h('div', data, [h(__WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */], 'cancel')]);\n    },\n    genContent: function genContent(h) {\n      var children = [this.$slots.default];\n\n      this.close && children.push(this.genClose(h));\n\n      return h('span', {\n        staticClass: 'chip__content'\n      }, children);\n    }\n  },\n\n  render: function render(h) {\n    var data = {\n      staticClass: 'chip',\n      'class': this.classes,\n      attrs: { tabindex: this.disabled ? -1 : 0 },\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }],\n      on: this.$listeners\n    };\n\n    return h('span', data, [this.genContent(h)]);\n  }\n});\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 103 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VTableOverflow */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VDataTable__ = __webpack_require__(104);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VEditDialog__ = __webpack_require__(134);\n/* unused harmony reexport VDataTable */\n/* unused harmony reexport VEditDialog */\n\n\n\n\n\nvar VTableOverflow = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('table__overflow');\n\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_1__VDataTable__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VDataTable__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VDataTable__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_2__VEditDialog__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_2__VEditDialog__[\"a\" /* default */]);\n  Vue.component(VTableOverflow.name, VTableOverflow);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_1__VDataTable__[\"a\" /* default */]);\n\n/***/ }),\n/* 104 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VBtn__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VProgressLinear__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__VSelect__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_filterable__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_themeable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixins_loadable__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mixins_head__ = __webpack_require__(130);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__mixins_body__ = __webpack_require__(131);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__mixins_foot__ = __webpack_require__(132);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__mixins_progress__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__util_helpers__ = __webpack_require__(2);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__webpack_require__(105);\n__webpack_require__(106);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-data-table',\n\n  components: {\n    VBtn: __WEBPACK_IMPORTED_MODULE_0__VBtn__[\"a\" /* default */],\n    VIcon: __WEBPACK_IMPORTED_MODULE_1__VIcon__[\"a\" /* default */],\n    VProgressLinear: __WEBPACK_IMPORTED_MODULE_2__VProgressLinear__[\"a\" /* default */],\n    VSelect: __WEBPACK_IMPORTED_MODULE_3__VSelect__[\"a\" /* default */],\n    // Importing does not work properly\n    'v-table-overflow': Object(__WEBPACK_IMPORTED_MODULE_11__util_helpers__[\"d\" /* createSimpleFunctional */])('table__overflow')\n  },\n\n  data: function data() {\n    return {\n      all: false,\n      searchLength: 0,\n      defaultPagination: {\n        descending: false,\n        page: 1,\n        rowsPerPage: 5,\n        sortBy: null,\n        totalItems: 0\n      },\n      expanded: {}\n    };\n  },\n\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_7__mixins_head__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_8__mixins_body__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_filterable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_9__mixins_foot__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_6__mixins_loadable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_10__mixins_progress__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_5__mixins_themeable__[\"a\" /* default */]],\n\n  props: {\n    expand: {\n      type: Boolean\n    },\n    headers: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    headerText: {\n      type: String,\n      default: 'text'\n    },\n    hideActions: Boolean,\n    hideHeaders: Boolean,\n    disableInitialSort: Boolean,\n    mustSort: Boolean,\n    noResultsText: {\n      type: String,\n      default: 'No matching records found'\n    },\n    rowsPerPageItems: {\n      type: Array,\n      default: function _default() {\n        return [5, 10, 25, { text: 'All', value: -1 }];\n      }\n    },\n    rowsPerPageText: {\n      type: String,\n      default: 'Rows per page:'\n    },\n    selectAll: [Boolean, String],\n    search: {\n      required: false\n    },\n    filter: {\n      type: Function,\n      default: function _default(val, search) {\n        return val !== null && ['undefined', 'boolean'].indexOf(typeof val === 'undefined' ? 'undefined' : _typeof(val)) === -1 && val.toString().toLowerCase().indexOf(search) !== -1;\n      }\n    },\n    customFilter: {\n      type: Function,\n      default: function _default(items, search, filter, headers) {\n        search = search.toString().toLowerCase();\n        if (search.trim() === '') return items;\n\n        var props = headers.map(function (h) {\n          return h.value;\n        });\n\n        return items.filter(function (item) {\n          return props.some(function (prop) {\n            return filter(Object(__WEBPACK_IMPORTED_MODULE_11__util_helpers__[\"g\" /* getObjectValueByPath */])(item, prop), search);\n          });\n        });\n      }\n    },\n    customSort: {\n      type: Function,\n      default: function _default(items, index, isDescending) {\n        if (index === null) return items;\n\n        return items.sort(function (a, b) {\n          var sortA = Object(__WEBPACK_IMPORTED_MODULE_11__util_helpers__[\"g\" /* getObjectValueByPath */])(a, index);\n          var sortB = Object(__WEBPACK_IMPORTED_MODULE_11__util_helpers__[\"g\" /* getObjectValueByPath */])(b, index);\n\n          if (isDescending) {\n            var _ref = [sortB, sortA];\n            sortA = _ref[0];\n            sortB = _ref[1];\n          }\n\n          // Check if both are numbers\n          if (!isNaN(sortA) && !isNaN(sortB)) {\n            return sortA - sortB;\n          }\n\n          // Check if both cannot be evaluated\n          if (sortA === null && sortB === null) {\n            return 0;\n          }\n\n          var _map = [sortA, sortB].map(function (s) {\n            return (s || '').toString().toLocaleLowerCase();\n          });\n\n          var _map2 = _slicedToArray(_map, 2);\n\n          sortA = _map2[0];\n          sortB = _map2[1];\n\n\n          if (sortA > sortB) return 1;\n          if (sortA < sortB) return -1;\n\n          return 0;\n        });\n      }\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    items: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    },\n    totalItems: {\n      type: Number,\n      default: null\n    },\n    itemKey: {\n      type: String,\n      default: 'id'\n    },\n    pagination: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'datatable table': true,\n        'datatable--select-all': this.selectAll !== false,\n        'theme--dark': this.dark,\n        'theme--light': this.light\n      };\n    },\n    computedPagination: function computedPagination() {\n      return this.hasPagination ? this.pagination : this.defaultPagination;\n    },\n    hasPagination: function hasPagination() {\n      var pagination = this.pagination || {};\n\n      return Object.keys(pagination).length > 0;\n    },\n    hasSelectAll: function hasSelectAll() {\n      return this.selectAll !== undefined && this.selectAll !== false;\n    },\n    itemsLength: function itemsLength() {\n      if (this.search) return this.searchLength;\n      return this.totalItems || this.items.length;\n    },\n    indeterminate: function indeterminate() {\n      return this.hasSelectAll && this.someItems && !this.everyItem;\n    },\n    everyItem: function everyItem() {\n      var _this = this;\n\n      return this.filteredItems.length && this.filteredItems.every(function (i) {\n        return _this.isSelected(i);\n      });\n    },\n    someItems: function someItems() {\n      var _this2 = this;\n\n      return this.filteredItems.some(function (i) {\n        return _this2.isSelected(i);\n      });\n    },\n    getPage: function getPage() {\n      var rowsPerPage = this.computedPagination.rowsPerPage;\n\n\n      return rowsPerPage === Object(rowsPerPage) ? rowsPerPage.value : rowsPerPage;\n    },\n    pageStart: function pageStart() {\n      return this.getPage === -1 ? 0 : (this.computedPagination.page - 1) * this.getPage;\n    },\n    pageStop: function pageStop() {\n      return this.getPage === -1 ? this.itemsLength : this.computedPagination.page * this.getPage;\n    },\n    filteredItems: function filteredItems() {\n      if (this.totalItems) return this.items;\n\n      var items = this.items.slice();\n      var hasSearch = typeof this.search !== 'undefined' && this.search !== null;\n\n      if (hasSearch) {\n        items = this.customFilter(items, this.search, this.filter, this.headers);\n        this.searchLength = items.length;\n      }\n\n      items = this.customSort(items, this.computedPagination.sortBy, this.computedPagination.descending);\n\n      return this.hideActions && !this.hasPagination ? items : items.slice(this.pageStart, this.pageStop);\n    },\n    selected: function selected() {\n      var _this3 = this;\n\n      var selected = {};\n      this.value.forEach(function (i) {\n        return selected[i[_this3.itemKey]] = true;\n      });\n      return selected;\n    }\n  },\n\n  watch: {\n    indeterminate: function indeterminate(val) {\n      if (val) this.all = true;\n    },\n    someItems: function someItems(val) {\n      if (!val) this.all = false;\n    },\n    search: function search() {\n      this.updatePagination({ page: 1, totalItems: this.itemsLength });\n    },\n    everyItem: function everyItem(val) {\n      if (val) this.all = true;\n    }\n  },\n\n  methods: {\n    updatePagination: function updatePagination(val) {\n      var pagination = this.hasPagination ? this.pagination : this.defaultPagination;\n      var updatedPagination = Object.assign({}, pagination, val);\n      this.$emit('update:pagination', updatedPagination);\n\n      if (!this.hasPagination) {\n        this.defaultPagination = updatedPagination;\n      }\n    },\n    isSelected: function isSelected(item) {\n      return this.selected[item[this.itemKey]];\n    },\n    isExpanded: function isExpanded(item) {\n      return this.expanded[item[this.itemKey]];\n    },\n    sort: function sort(index) {\n      var _computedPagination = this.computedPagination,\n          sortBy = _computedPagination.sortBy,\n          descending = _computedPagination.descending;\n\n      if (sortBy === null) {\n        this.updatePagination({ sortBy: index, descending: false });\n      } else if (sortBy === index && !descending) {\n        this.updatePagination({ descending: true });\n      } else if (sortBy !== index) {\n        this.updatePagination({ sortBy: index, descending: false });\n      } else if (!this.mustSort) {\n        this.updatePagination({ sortBy: null, descending: null });\n      } else {\n        this.updatePagination({ sortBy: index, descending: false });\n      }\n    },\n    needsTR: function needsTR(row) {\n      return row.length && row.find(function (c) {\n        return c.tag === 'td' || c.tag === 'th';\n      });\n    },\n    genTR: function genTR(children) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return this.$createElement('tr', data, children);\n    },\n    toggle: function toggle(value) {\n      var _this4 = this;\n\n      var selected = Object.assign({}, this.selected);\n      this.filteredItems.forEach(function (i) {\n        return selected[i[_this4.itemKey]] = value;\n      });\n\n      this.$emit('input', this.items.filter(function (i) {\n        return selected[i[_this4.itemKey]];\n      }));\n    }\n  },\n\n  created: function created() {\n    var firstSortable = this.headers.find(function (h) {\n      return !('sortable' in h) || h.sortable;\n    });\n\n    this.defaultPagination.sortBy = !this.disableInitialSort && firstSortable ? firstSortable.value : null;\n\n    if (!this.rowsPerPageItems.length) {\n      console.warn('The prop \\'rows-per-page-items\\' in v-data-table can not be empty.');\n    } else {\n      this.defaultPagination.rowsPerPage = this.rowsPerPageItems[0];\n    }\n\n    this.defaultPagination.totalItems = this.itemsLength;\n\n    this.updatePagination(Object.assign({}, this.defaultPagination, this.pagination));\n  },\n  render: function render(h) {\n    return h('v-table-overflow', {}, [h('table', {\n      'class': this.classes\n    }, [this.genTHead(), this.genTBody(), this.genTFoot()])]);\n  }\n});\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 107 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transitions__ = __webpack_require__(5);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n__webpack_require__(108);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-progress-linear',\n\n  components: {\n    VFadeTransition: __WEBPACK_IMPORTED_MODULE_1__transitions__[\"b\" /* VFadeTransition */],\n    VSlideXTransition: __WEBPACK_IMPORTED_MODULE_1__transitions__[\"c\" /* VSlideXTransition */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__[\"a\" /* default */]],\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true\n    },\n    backgroundColor: {\n      type: String,\n      default: null\n    },\n    backgroundOpacity: {\n      type: [Number, String],\n      default: null\n    },\n    bufferValue: {\n      type: [Number, String],\n      default: 100\n    },\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    height: {\n      type: [Number, String],\n      default: 7\n    },\n    indeterminate: Boolean,\n    query: Boolean,\n    value: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n\n  computed: {\n    styles: function styles() {\n      var styles = {};\n\n      if (!this.active) {\n        styles.height = 0;\n      }\n\n      if (!this.indeterminate && parseInt(this.bufferValue, 10) !== 100) {\n        styles.width = this.bufferValue + '%';\n      }\n\n      return styles;\n    },\n    effectiveWidth: function effectiveWidth() {\n      if (!this.bufferValue) {\n        return 0;\n      }\n\n      return this.value * 100 / this.bufferValue;\n    },\n    bufferStyles: function bufferStyles() {\n      var styles = {};\n\n      if (!this.active) {\n        styles.height = 0;\n      }\n\n      return styles;\n    },\n    backgroundStyle: function backgroundStyle() {\n      var backgroundOpacity = this.backgroundOpacity == null ? this.backgroundColor ? 1 : 0.3 : parseFloat(this.backgroundOpacity);\n\n      return {\n        height: this.active ? 'auto' : 0,\n        opacity: backgroundOpacity,\n        width: this.bufferValue + '%'\n      };\n    }\n  },\n\n  methods: {\n    genDeterminate: function genDeterminate(h) {\n      return h('div', {\n        ref: 'front',\n        staticClass: 'progress-linear__bar__determinate',\n        class: this.addBackgroundColorClassChecks(),\n        style: {\n          width: this.effectiveWidth + '%'\n        }\n      });\n    },\n    genBar: function genBar(h, name) {\n      return h('div', {\n        staticClass: 'progress-linear__bar__indeterminate',\n        class: this.addBackgroundColorClassChecks(_defineProperty({}, name, true))\n      });\n    },\n    genIndeterminate: function genIndeterminate(h) {\n      return h('div', {\n        ref: 'front',\n        staticClass: 'progress-linear__bar__indeterminate',\n        class: {\n          'progress-linear__bar__indeterminate--active': this.active\n        }\n      }, [this.genBar(h, 'long'), this.genBar(h, 'short')]);\n    }\n  },\n\n  render: function render(h) {\n    var fade = h('v-fade-transition', [this.indeterminate && this.genIndeterminate(h)]);\n    var slide = h('v-slide-x-transition', [!this.indeterminate && this.genDeterminate(h)]);\n\n    var bar = h('div', {\n      staticClass: 'progress-linear__bar',\n      style: this.styles\n    }, [fade, slide]);\n    var background = h('div', {\n      staticClass: 'progress-linear__background',\n      class: [this.backgroundColor || this.color],\n      style: this.backgroundStyle\n    });\n\n    return h('div', {\n      staticClass: 'progress-linear',\n      class: {\n        'progress-linear--query': this.query\n      },\n      style: {\n        height: this.height + 'px'\n      },\n      on: this.$listeners\n    }, [background, bar]);\n  }\n});\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 109 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VBtn__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VCard__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VCheckbox__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__VChip__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__VList__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__VMenu__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mixins_dependent__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__mixins_filterable__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__mixins_input__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__mixins_maskable__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__mixins_select_autocomplete__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__mixins_select_computed__ = __webpack_require__(123);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__mixins_select_events__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__mixins_select_generators__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__mixins_select_helpers__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__mixins_select_menu__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__mixins_select_props__ = __webpack_require__(128);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__mixins_select_watchers__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__directives_click_outside__ = __webpack_require__(6);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n__webpack_require__(36);\n__webpack_require__(14);\n__webpack_require__(110);\n\n// Components\n\n\n\n\n\n\n\n// Mixins\n\n\n\n\n\n\n// Component level mixins\n\n\n\n\n\n\n\n\n\n// Directives\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-select',\n\n  inheritAttrs: false,\n\n  components: {\n    VCard: __WEBPACK_IMPORTED_MODULE_1__VCard__[\"a\" /* default */],\n    VCheckbox: __WEBPACK_IMPORTED_MODULE_2__VCheckbox__[\"a\" /* default */],\n    VChip: __WEBPACK_IMPORTED_MODULE_3__VChip__[\"a\" /* default */],\n    VList: __WEBPACK_IMPORTED_MODULE_4__VList__[\"a\" /* VList */],\n    VListTile: __WEBPACK_IMPORTED_MODULE_4__VList__[\"b\" /* VListTile */],\n    VListTileAction: __WEBPACK_IMPORTED_MODULE_4__VList__[\"c\" /* VListTileAction */],\n    VListTileContent: __WEBPACK_IMPORTED_MODULE_4__VList__[\"d\" /* VListTileContent */],\n    VListTileTitle: __WEBPACK_IMPORTED_MODULE_4__VList__[\"e\" /* VListTileTitle */],\n    VMenu: __WEBPACK_IMPORTED_MODULE_5__VMenu__[\"a\" /* default */],\n    VBtn: __WEBPACK_IMPORTED_MODULE_0__VBtn__[\"a\" /* default */]\n  },\n\n  directives: {\n    ClickOutside: __WEBPACK_IMPORTED_MODULE_19__directives_click_outside__[\"a\" /* default */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_11__mixins_select_autocomplete__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_6__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_7__mixins_dependent__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_13__mixins_select_events__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_8__mixins_filterable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_14__mixins_select_generators__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_15__mixins_select_helpers__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_9__mixins_input__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_10__mixins_maskable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_16__mixins_select_menu__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_17__mixins_select_props__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_18__mixins_select_watchers__[\"a\" /* default */],\n  // Input and Computed both\n  // contain isDirty props\n  // last gets merged in\n  __WEBPACK_IMPORTED_MODULE_12__mixins_select_computed__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      content: {},\n      defaultColor: 'primary',\n      inputValue: (this.multiple || this.tags) && !this.value ? [] : this.value,\n      isBooted: false,\n      lastItem: 20,\n      lazySearch: null,\n      isActive: false,\n      menuIsActive: false,\n      searchTimeout: null,\n      selectedIndex: -1,\n      selectedItems: [],\n      shouldBreak: false\n    };\n  },\n  mounted: function mounted() {\n    // If instance is being destroyed\n    // do not run mounted functions\n    if (this._isDestroyed) return;\n\n    // Evaluate the selected items immediately\n    // to avoid a unnecessary label transition\n    this.genSelectedItems();\n\n    this.content = this.$refs.menu.$refs.content;\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.isBooted) {\n      if (this.content) {\n        this.content.removeEventListener('scroll', this.onScroll, false);\n      }\n    }\n  },\n\n\n  methods: {\n    changeSelectedIndex: function changeSelectedIndex(keyCode) {\n      // backspace, left, right, delete\n      if (![8, 37, 39, 46].includes(keyCode)) return;\n\n      var indexes = this.selectedItems.length - 1;\n\n      if (keyCode === 37) {\n        // Left arrow\n        this.selectedIndex = this.selectedIndex === -1 ? indexes : this.selectedIndex - 1;\n      } else if (keyCode === 39) {\n        // Right arrow\n        this.selectedIndex = this.selectedIndex >= indexes ? -1 : this.selectedIndex + 1;\n      } else if (this.selectedIndex === -1) {\n        this.selectedIndex = indexes;\n        return;\n      }\n\n      // backspace/delete\n      if ([8, 46].includes(keyCode)) {\n        var newIndex = this.selectedIndex === indexes ? this.selectedIndex - 1 : this.selectedItems[this.selectedIndex + 1] ? this.selectedIndex : -1;\n\n        this.combobox ? this.inputValue = null : this.selectItem(this.selectedItems[this.selectedIndex]);\n        this.selectedIndex = newIndex;\n      }\n    },\n    filterDuplicates: function filterDuplicates(arr) {\n      var values = arr.map(this.getValue);\n      return arr.filter(function (el, i) {\n        return i === values.indexOf(values[i]);\n      });\n    },\n    genDirectives: function genDirectives() {\n      var _this = this;\n\n      return [{\n        name: 'click-outside',\n        value: function value(e) {\n          return !!_this.content && !_this.content.contains(e.target) && !!_this.$el && !_this.$el.contains(e.target);\n        }\n      }];\n    },\n    genSelectedItems: function genSelectedItems() {\n      var _this2 = this;\n\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.inputValue;\n\n      // If we are using tags, don't filter results\n      if (this.tags) return this.selectedItems = val;\n\n      // Combobox is the single version\n      // of a taggable select element\n      if (this.combobox) return this.selectedItems = val ? [val] : [];\n\n      var selectedItems = this.computedItems.filter(function (i) {\n        if (!_this2.isMultiple) {\n          return _this2.getValue(i) === _this2.getValue(val);\n        } else {\n          // Always return Boolean\n          return _this2.findExistingItem(i) > -1;\n        }\n      });\n\n      if (!selectedItems.length && val != null && this.tags) {\n        selectedItems = Array.isArray(val) ? val : [val];\n      }\n\n      this.selectedItems = selectedItems;\n    },\n    clearableCallback: function clearableCallback() {\n      var _this3 = this;\n\n      var inputValue = this.isMultiple ? [] : null;\n\n      this.inputValue = inputValue;\n      this.$emit('change', inputValue);\n      this.genSelectedItems();\n\n      // When input is cleared\n      // reset search value and\n      // re-focus the input\n      setTimeout(function () {\n        _this3.searchValue = null;\n        _this3.focusInput();\n      }, 0);\n\n      if (this.openOnClear) {\n        setTimeout(this.showMenu, 50);\n      }\n    },\n    onScroll: function onScroll() {\n      var _this4 = this;\n\n      if (!this.isActive) {\n        requestAnimationFrame(function () {\n          return _this4.content.scrollTop = 0;\n        });\n      } else {\n        if (this.lastItem >= this.computedItems.length) return;\n\n        var showMoreItems = this.content.scrollHeight - (this.content.scrollTop + this.content.clientHeight) < 200;\n\n        if (showMoreItems) {\n          this.lastItem += 20;\n        }\n      }\n    },\n    findExistingItem: function findExistingItem(item) {\n      var _this5 = this;\n\n      return this.inputValue.findIndex(function (i) {\n        var a = _this5.getValue(i);\n        var b = _this5.getValue(item);\n\n        if (a !== Object(a)) return a === b;\n\n        return _this5.compareObjects(a, b);\n      });\n    },\n    selectItem: function selectItem(item) {\n      var _this6 = this;\n\n      if (!this.isMultiple) {\n        this.inputValue = this.returnObject ? item : this.getValue(item);\n        this.selectedItems = [item];\n      } else {\n        var selectedItems = [];\n        var inputValue = this.inputValue.slice();\n        var i = this.findExistingItem(item);\n\n        i !== -1 && inputValue.splice(i, 1) || inputValue.push(item);\n        this.inputValue = inputValue.map(function (i) {\n          selectedItems.push(i);\n          return _this6.returnObject ? i : _this6.getValue(i);\n        });\n\n        this.selectedItems = selectedItems;\n      }\n\n      this.searchValue = !this.isMultiple && !this.chips && !this.$scopedSlots.selection ? this.getText(this.selectedItem) : null;\n\n      this.$emit('change', this.inputValue);\n\n      // List tile will re-render, reset index to\n      // maintain highlighting\n      var savedIndex = this.getMenuIndex();\n      this.resetMenuIndex();\n\n      // After selecting an item\n      // refocus the input and\n      // reset the caret pos\n      this.$nextTick(function () {\n        _this6.focusInput();\n        _this6.setCaretPosition(_this6.currentRange);\n\n        requestAnimationFrame(function () {\n          if (savedIndex > -1) {\n            _this6.setMenuIndex(savedIndex);\n          }\n        });\n      });\n    }\n  },\n\n  render: function render(h) {\n    var _this7 = this;\n\n    var data = {\n      attrs: _extends({\n        tabindex: this.isAutocomplete || this.disabled ? -1 : this.tabindex\n      }, this.isAutocomplete ? null : this.$attrs, {\n        role: this.isAutocomplete ? null : 'combobox'\n      })\n    };\n\n    if (!this.isAutocomplete) {\n      data.on = this.genListeners();\n      data.directives = this.genDirectives();\n    } else {\n      data.on = {\n        click: function click() {\n          if (_this7.disabled || _this7.readonly || _this7.isFocused) return;\n\n          // If the input is dirty,\n          // the input is not targetable\n          // so we must manually focus\n          if (_this7.isDirty) {\n            _this7.focus();\n            _this7.$nextTick(_this7.focusInput);\n          }\n        }\n      };\n    }\n\n    return this.genInputGroup([this.genSelectionsAndSearch(), this.genMenu()], data, this.toggleMenu);\n  }\n});\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 111 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_themeable__ = __webpack_require__(1);\n__webpack_require__(112);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-list',\n\n  provide: function provide() {\n    return {\n      listClick: this.listClick,\n      listClose: this.listClose\n    };\n  },\n\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_themeable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      uid: null,\n      groups: []\n    };\n  },\n\n\n  props: {\n    dense: Boolean,\n    subheader: Boolean,\n    threeLine: Boolean,\n    twoLine: Boolean\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'list': true,\n        'list--two-line': this.twoLine,\n        'list--dense': this.dense,\n        'list--three-line': this.threeLine,\n        'list--subheader': this.subheader,\n        'theme--dark dark--bg': this.dark,\n        'theme--light light--bg': this.light\n      };\n    }\n  },\n\n  watch: {\n    uid: function uid() {\n      var _this = this;\n\n      this.$children.filter(function (i) {\n        return i.$options._componentTag === 'v-list-group';\n      }).forEach(function (i) {\n        return i.toggle(_this.uid);\n      });\n    }\n  },\n\n  methods: {\n    listClick: function listClick(uid, force) {\n      if (force) {\n        this.uid = uid;\n      } else {\n        this.uid = this.uid === uid ? null : uid;\n      }\n    },\n    listClose: function listClose(uid) {\n      if (this.uid === uid) {\n        this.uid = null;\n      }\n    }\n  },\n\n  render: function render(h) {\n    var data = {\n      'class': this.classes,\n      attrs: { 'data-uid': this._uid }\n    };\n\n    return h('ul', data, [this.$slots.default]);\n  }\n});\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 113 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transitions__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_bootable__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_toggleable__ = __webpack_require__(4);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-list-group',\n\n  inject: ['listClick', 'listClose'],\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_bootable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_toggleable__[\"a\" /* default */]],\n\n  props: {\n    group: String,\n    noAction: Boolean\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'list--group__header': true,\n        'list--group__header--active': this.isActive,\n        'list--group__header--no-action': this.noAction\n      };\n    }\n  },\n\n  watch: {\n    isActive: function isActive() {\n      this.isBooted = true;\n\n      if (!this.isActive) {\n        this.listClose(this._uid);\n      }\n    },\n    $route: function $route(to) {\n      var isActive = this.matchRoute(to.path);\n\n      if (this.group) {\n        if (isActive && this.isActive !== isActive) {\n          this.listClick(this._uid);\n        }\n        this.isActive = isActive;\n      }\n    }\n  },\n\n  mounted: function mounted() {\n    this.isBooted = this.isActive;\n\n    if (this.group) {\n      this.isActive = this.matchRoute(this.$route.path);\n    }\n\n    if (this.isActive) {\n      this.listClick(this._uid);\n    }\n  },\n\n\n  methods: {\n    click: function click() {\n      var _this = this;\n\n      if (!this.$refs.item.querySelector('.list__tile--disabled')) {\n        requestAnimationFrame(function () {\n          return _this.listClick(_this._uid);\n        });\n      }\n    },\n    toggle: function toggle(uid) {\n      this.isActive = this._uid === uid;\n    },\n    matchRoute: function matchRoute(to) {\n      if (!this.group) return false;\n      return to.match(this.group) !== null;\n    }\n  },\n\n  render: function render(h) {\n    var group = h('ul', {\n      'class': 'list list--group',\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }],\n      ref: 'group'\n    }, this.showLazyContent(this.$slots.default));\n\n    var item = h('ul', {\n      'class': this.classes,\n      on: Object.assign({}, { click: this.click }, this.$listeners),\n      ref: 'item'\n    }, [this.$slots.item]);\n\n    var transition = h(__WEBPACK_IMPORTED_MODULE_0__transitions__[\"a\" /* VExpandTransition */], [group]);\n\n    return h('li', { 'class': 'list--group__container' }, [item, transition]);\n  }\n});\n\n/***/ }),\n/* 114 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_routable__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_ripple__ = __webpack_require__(9);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-list-tile',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_routable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__[\"a\" /* default */]],\n\n  directives: {\n    Ripple: __WEBPACK_IMPORTED_MODULE_2__directives_ripple__[\"a\" /* default */]\n  },\n\n  inheritAttrs: false,\n\n  data: function data() {\n    return {\n      proxyClass: 'list__tile--active'\n    };\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'primary--text'\n    },\n    avatar: Boolean,\n    inactive: Boolean,\n    tag: String\n  },\n\n  computed: {\n    classes: function classes() {\n      return _defineProperty({\n        'list__tile': true,\n        'list__tile--link': this.isLink && !this.inactive,\n        'list__tile--avatar': this.avatar,\n        'list__tile--disabled': this.disabled,\n        'list__tile--active': !this.to && this.isActive\n      }, this.activeClass, this.isActive);\n    },\n    isLink: function isLink() {\n      return this.href || this.to || this.$listeners && (this.$listeners.click || this.$listeners['!click']);\n    }\n  },\n\n  render: function render(h) {\n    var isRouteLink = !this.inactive && this.isLink;\n\n    var _ref2 = isRouteLink ? this.generateRouteLink() : {\n      tag: this.tag || 'div',\n      data: {\n        class: this.classes\n      }\n    },\n        tag = _ref2.tag,\n        data = _ref2.data;\n\n    data.attrs = Object.assign({}, data.attrs, this.$attrs);\n\n    return h('li', {\n      attrs: {\n        disabled: this.disabled\n      },\n      on: _extends({}, this.$listeners)\n    }, [h(tag, data, this.$slots.default)]);\n  }\n});\n\n/***/ }),\n/* 115 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  functional: true,\n\n  name: 'v-list-tile-action',\n\n  render: function render(h, _ref) {\n    var data = _ref.data,\n        children = _ref.children;\n\n    data.staticClass = data.staticClass ? 'list__tile__action ' + (data.staticClass || '') : 'list__tile__action';\n    if ((children || []).length > 1) data.staticClass += ' list__tile__action--stack';\n\n    return h('div', data, children);\n  }\n});\n\n/***/ }),\n/* 116 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_delayable__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_dependent__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_detachable__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_menuable_js__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_toggleable__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_menu_activator__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixins_menu_generators__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mixins_menu_keyable__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__mixins_menu_position__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__directives_click_outside__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__directives_resize__ = __webpack_require__(8);\n__webpack_require__(117);\n\n// Mixins\n\n\n\n\n\n\n// Component level mixins\n\n\n\n\n\n// Directives\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-menu',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_5__mixins_menu_activator__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_dependent__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_0__mixins_delayable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_detachable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_6__mixins_menu_generators__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_7__mixins_menu_keyable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_menuable_js__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_8__mixins_menu_position__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_toggleable__[\"a\" /* default */]],\n\n  directives: {\n    ClickOutside: __WEBPACK_IMPORTED_MODULE_9__directives_click_outside__[\"a\" /* default */],\n    Resize: __WEBPACK_IMPORTED_MODULE_10__directives_resize__[\"a\" /* default */]\n  },\n\n  data: function data() {\n    return {\n      defaultOffset: 8,\n      maxHeightAutoDefault: '200px',\n      startIndex: 3,\n      stopIndex: 0,\n      hasJustFocused: false,\n      resizeTimeout: null\n    };\n  },\n\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true\n    },\n    disabled: Boolean,\n    fullWidth: Boolean,\n    maxHeight: { default: 'auto' },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left'\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'menu-transition'\n    }\n  },\n\n  computed: {\n    calculatedLeft: function calculatedLeft() {\n      var left = this.calcLeft;\n      if (this.auto) left = this.calcLeftAuto;\n\n      return this.calcXOverflow(left()) + 'px';\n    },\n    calculatedMaxHeight: function calculatedMaxHeight() {\n      return this.auto ? '200px' : isNaN(this.maxHeight) ? this.maxHeight : this.maxHeight + 'px';\n    },\n    calculatedMaxWidth: function calculatedMaxWidth() {\n      return isNaN(this.maxWidth) ? this.maxWidth : this.maxWidth + 'px';\n    },\n    calculatedMinWidth: function calculatedMinWidth() {\n      if (this.minWidth) {\n        return isNaN(this.minWidth) ? this.minWidth : this.minWidth + 'px';\n      }\n\n      var minWidth = this.dimensions.activator.width + this.nudgeWidth + (this.auto ? 16 : 0);\n\n      var calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth)) ? minWidth : parseInt(this.calculatedMaxWidth);\n\n      return Math.min(calculatedMaxWidth, minWidth) + 'px';\n    },\n    calculatedTop: function calculatedTop() {\n      var top = this.auto ? this.calcTopAuto : this.calcTop;\n\n      return this.calcYOverflow(top()) + 'px';\n    },\n    styles: function styles() {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex\n      };\n    }\n  },\n\n  watch: {\n    activator: function activator(newActivator, oldActivator) {\n      this.removeActivatorEvents(oldActivator);\n      this.addActivatorEvents(newActivator);\n    },\n    isContentActive: function isContentActive(val) {\n      this.hasJustFocused = val;\n    }\n  },\n\n  methods: {\n    activate: function activate() {\n      // This exists primarily for v-select\n      // helps determine which tiles to activate\n      this.getTiles();\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions();\n      // Start the transition\n      requestAnimationFrame(this.startTransition);\n      // Once transitioning, calculate scroll position\n      setTimeout(this.calculateScroll, 50);\n    },\n    onResize: function onResize() {\n      if (!this.isActive) return;\n\n      // Account for screen resize\n      // and orientation change\n      this.$refs.content.offsetWidth;\n      this.updateDimensions();\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = setTimeout(this.updateDimensions, 100);\n    }\n  },\n\n  render: function render(h) {\n    var data = {\n      staticClass: 'menu',\n      class: {\n        'menu--disabled': this.disabled\n      },\n      style: {\n        display: this.fullWidth ? 'block' : 'inline-block'\n      },\n      directives: [{\n        name: 'resize',\n        value: {\n          debounce: 500,\n          value: this.onResize\n        }\n      }],\n      on: {\n        keydown: this.changeListIndex\n      }\n    };\n\n    return h('div', data, [this.genActivator(), this.genTransition()]);\n  }\n});\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 118 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Menu activator\n *\n * @mixin\n *\n * Handles the click and hover activation\n * Supports slotted and detached activators\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    activatorClickHandler: function activatorClickHandler(e) {\n      if (this.disabled) return;\n      if (this.openOnClick && !this.isActive) {\n        this.getActivator().focus();\n        this.isActive = true;\n        this.absoluteX = e.clientX;\n        this.absoluteY = e.clientY;\n      } else if (this.closeOnClick && this.isActive) {\n        this.getActivator().blur();\n        this.isActive = false;\n      }\n    },\n    mouseEnterHandler: function mouseEnterHandler(e) {\n      var _this = this;\n\n      this.runDelay('open', function () {\n        if (_this.hasJustFocused) return;\n\n        _this.hasJustFocused = true;\n        _this.isActive = true;\n      });\n    },\n    mouseLeaveHandler: function mouseLeaveHandler(e) {\n      var _this2 = this;\n\n      // Prevent accidental re-activation\n      this.runDelay('close', function () {\n        if (_this2.$refs.content.contains(e.relatedTarget)) return;\n\n        requestAnimationFrame(function () {\n          _this2.isActive = false;\n          _this2.callDeactivate();\n        });\n      });\n    },\n    addActivatorEvents: function addActivatorEvents() {\n      var activator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (!activator) return;\n      activator.addEventListener('click', this.activatorClickHandler);\n    },\n    removeActivatorEvents: function removeActivatorEvents() {\n      var activator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (!activator) return;\n      activator.removeEventListener('click', this.activatorClickHandler);\n    }\n  }\n});\n\n/***/ }),\n/* 119 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Menu generators\n *\n * @mixin\n *\n * Used for creating the DOM elements for VMenu\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genActivator: function genActivator() {\n      if (!this.$slots.activator) return null;\n\n      var options = {\n        staticClass: 'menu__activator',\n        'class': {\n          'menu__activator--active': this.hasJustFocused || this.isActive\n        },\n        ref: 'activator',\n        on: {}\n      };\n\n      if (this.openOnHover) {\n        options.on['mouseenter'] = this.mouseEnterHandler;\n        options.on['mouseleave'] = this.mouseLeaveHandler;\n      } else if (this.openOnClick) {\n        options.on['click'] = this.activatorClickHandler;\n      }\n\n      return this.$createElement('div', options, this.$slots.activator);\n    },\n    genTransition: function genTransition() {\n      if (!this.transition) return this.genContent();\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition\n        }\n      }, [this.genContent()]);\n    },\n    genDirectives: function genDirectives() {\n      var _this = this;\n\n      // Do not add click outside for hover menu\n      var directives = !this.openOnHover ? [{\n        name: 'click-outside',\n        value: {\n          callback: function callback() {\n            return _this.closeOnClick;\n          },\n          include: function include() {\n            return [_this.$el].concat(_toConsumableArray(_this.getOpenDependentElements()));\n          }\n        }\n      }] : [];\n\n      directives.push({\n        name: 'show',\n        value: this.isContentActive\n      });\n\n      return directives;\n    },\n    genContent: function genContent() {\n      var _this2 = this;\n\n      var options = {\n        'class': [('menu__content ' + this.contentClass).trim(), { 'menuable__content__active': this.isActive }],\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            if (e.target.getAttribute('disabled')) return;\n            if (_this2.closeOnContentClick) _this2.isActive = false;\n          }\n        }\n      };\n\n      !this.disabled && this.openOnHover && (options.on.mouseenter = this.mouseEnterHandler);\n      this.openOnHover && (options.on.mouseleave = this.mouseLeaveHandler);\n\n      return this.$createElement('div', options, this.showLazyContent(this.$slots.default));\n    }\n  }\n});\n\n/***/ }),\n/* 120 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Menu keyable\n *\n * @mixin\n *\n * Primarily used to support VSelect\n * Handles opening and closing of VMenu from keystrokes\n * Will conditionally highlight VListTiles for VSelect\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      listIndex: -1,\n      tiles: []\n    };\n  },\n\n  watch: {\n    isActive: function isActive(val) {\n      if (!val) this.listIndex = -1;\n    },\n    listIndex: function listIndex(next, prev) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles();\n\n      if (next in this.tiles) {\n        this.tiles[next].classList.add('list__tile--highlighted');\n        this.$refs.content.scrollTop = next * 48;\n      }\n\n      prev in this.tiles && this.tiles[prev].classList.remove('list__tile--highlighted');\n    }\n  },\n\n  methods: {\n    changeListIndex: function changeListIndex(e) {\n      // Up, Down, Enter, Space\n      if ([40, 38, 13].includes(e.keyCode) || e.keyCode === 32 && !this.isActive) {\n        e.preventDefault();\n      }\n\n      // Esc, Tab\n      if ([27, 9].includes(e.keyCode)) return this.isActive = false;else if (!this.isActive &&\n      // Enter, Space\n      [13, 32].includes(e.keyCode) && this.openOnClick) {\n        return this.isActive = true;\n      }\n\n      // Down\n      if (e.keyCode === 40 && this.listIndex < this.tiles.length - 1) {\n        this.listIndex++;\n        // Up\n      } else if (e.keyCode === 38 && this.listIndex > 0) {\n        this.listIndex--;\n        // Enter\n      } else if (e.keyCode === 13 && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click();\n      }\n    },\n    getTiles: function getTiles() {\n      this.tiles = this.$refs.content.querySelectorAll('.list__tile');\n    }\n  }\n});\n\n/***/ }),\n/* 121 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Menu position\n * \n * @mixin\n *\n * Used for calculating an automatic position (used for VSelect)\n * Will position the VMenu content properly over the VSelect\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    // Revisit this\n    calculateScroll: function calculateScroll() {\n      if (this.selectedIndex === null) return;\n\n      var scrollTop = 0;\n\n      if (this.selectedIndex >= this.stopIndex) {\n        scrollTop = this.$refs.content.scrollHeight;\n      } else if (this.selectedIndex > this.startIndex) {\n        scrollTop = this.selectedIndex * (this.defaultOffset * 6) - this.defaultOffset * 7;\n      }\n\n      this.$refs.content.scrollTop = scrollTop;\n    },\n    calcLeftAuto: function calcLeftAuto() {\n      var a = this.dimensions.activator;\n\n      return parseInt(a.left - this.defaultOffset * 2);\n    },\n    calcTopAuto: function calcTopAuto() {\n      if (!this.hasActivator) return this.calcTop();\n\n      var selectedIndex = Array.from(this.tiles).findIndex(function (n) {\n        return n.classList.contains('list__tile--active');\n      });\n\n      if (selectedIndex === -1) {\n        this.selectedIndex = null;\n\n        return this.calcTop();\n      }\n\n      this.selectedIndex = selectedIndex;\n      var actingIndex = selectedIndex;\n\n      var offsetPadding = -(this.defaultOffset * 2);\n      // #708 Stop index should vary by tile length\n      this.stopIndex = this.tiles.length > 4 ? this.tiles.length - 4 : this.tiles.length;\n\n      if (selectedIndex > this.startIndex && selectedIndex < this.stopIndex) {\n        actingIndex = 2;\n        offsetPadding = this.defaultOffset * 3;\n      } else if (selectedIndex >= this.stopIndex) {\n        offsetPadding = -this.defaultOffset;\n        actingIndex = selectedIndex - this.stopIndex;\n      }\n\n      // Is always off by 1 pixel, send help (┛ಠ_ಠ)┛彡┻━┻\n      offsetPadding--;\n\n      return this.calcTop() + offsetPadding - actingIndex * (this.defaultOffset * 6);\n    }\n  }\n});\n\n/***/ }),\n/* 122 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n\n\n/**\n * Select autocomplete\n *\n * @mixin\n *\n * Handles logic when using the \"autocomplete\" prop\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    filter: {\n      type: Function,\n      default: function _default(item, queryText, itemText) {\n        var hasValue = function hasValue(val) {\n          return val != null ? val : '';\n        };\n\n        var text = hasValue(itemText);\n        var query = hasValue(queryText);\n\n        return text.toString().toLowerCase().indexOf(query.toString().toLowerCase()) > -1;\n      }\n    }\n  },\n\n  methods: {\n    filterSearch: function filterSearch() {\n      var _this = this;\n\n      if (!this.isAutocomplete) return this.computedItems;\n\n      return this.computedItems.filter(function (i) {\n        return _this.filter(i, _this.searchValue, _this.getText(i));\n      });\n    },\n    genFiltered: function genFiltered(text) {\n      text = (text || '').toString();\n\n      if (!this.isAutocomplete || !this.searchValue || this.filteredItems.length < 1) return Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"f\" /* escapeHTML */])(text);\n\n      var _getMaskedCharacters = this.getMaskedCharacters(text),\n          start = _getMaskedCharacters.start,\n          middle = _getMaskedCharacters.middle,\n          end = _getMaskedCharacters.end;\n\n      return '' + Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"f\" /* escapeHTML */])(start) + this.genHighlight(middle) + Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"f\" /* escapeHTML */])(end);\n    },\n    genHighlight: function genHighlight(text) {\n      if (this.isNotFiltering) return Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"f\" /* escapeHTML */])(text);\n\n      return '<span class=\"list__tile__mask\">' + Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"f\" /* escapeHTML */])(text) + '</span>';\n    },\n    getMaskedCharacters: function getMaskedCharacters(text) {\n      var searchValue = (this.searchValue || '').toString().toLowerCase();\n      var index = text.toLowerCase().indexOf(searchValue);\n\n      if (index < 0) return { start: '', middle: text, end: '' };\n\n      var start = text.slice(0, index);\n      var middle = text.slice(index, index + searchValue.length);\n      var end = text.slice(index + searchValue.length);\n      return { start: start, middle: middle, end: end };\n    },\n    getCurrentTag: function getCurrentTag() {\n      return this.isMenuItemSelected() ? this.filteredItems[this.getMenuIndex()] : this.isAnyValueAllowed ? this.searchValue : null;\n    },\n    tabOut: function tabOut() {\n      this.blur();\n\n      // Single (not multiple) autocomplete select with an\n      // empty search value that is not a combobox should\n      // clear the input value\n      if (this.isAutocomplete && !this.isMultiple && !this.searchValue && !this.combobox) {\n        this.inputValue = null;\n      }\n    },\n    onTabDown: function onTabDown(e) {\n      // If tabbing through inputs and\n      // and there is no need for an\n      // update, blur the v-select\n      if (!this.isAutocomplete || !this.getCurrentTag() || this.combobox) return this.tabOut();\n\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.tags && this.searchValue && !this.filteredItems.length) {\n        e.preventDefault();\n\n        return this.updateTags(this.searchValue);\n      }\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (this.menuIsActive) {\n        e.preventDefault();\n        this.selectListTile(this.getMenuIndex());\n      }\n    },\n    onEnterDown: function onEnterDown() {\n      this.updateTags(this.getCurrentTag());\n    },\n    onEscDown: function onEscDown(e) {\n      e.preventDefault();\n      this.menuIsActive = false;\n    },\n    onKeyDown: function onKeyDown(e) {\n      var _this2 = this;\n\n      // If enter, space, up, or down is pressed, open menu\n      if (!this.menuIsActive && [13, 32, 38, 40].includes(e.keyCode)) {\n        e.preventDefault();\n        return this.showMenu();\n      }\n\n      // If escape deactivate the menu\n      if (e.keyCode === 27) return this.onEscDown(e);\n\n      // If tab - select item or close menu\n      if (e.keyCode === 9) return this.onTabDown(e);\n\n      if (!this.isAutocomplete || ![32].includes(e.keyCode) // space\n      ) this.$refs.menu.changeListIndex(e);\n\n      // Up or down\n      if ([38, 40].includes(e.keyCode)) this.selectedIndex = -1;\n\n      if (this.isAutocomplete && !this.hideSelections && !this.searchValue) this.changeSelectedIndex(e.keyCode);\n\n      if (!this.isAnyValueAllowed || !this.searchValue) return;\n\n      // Enter\n      if (e.keyCode === 13) return this.onEnterDown();\n\n      // Left arrow\n      if (e.keyCode === 37 && this.$refs.input.selectionStart === 0 && this.selectedItems.length) {\n        this.updateTags(this.searchValue);\n        this.$nextTick(function () {\n          _this2.selectedIndex = Math.max(_this2.selectedItems.length - 2, 0);\n        });\n      }\n\n      // Right arrow\n      if (e.keyCode === 39 && this.$refs.input.selectionEnd === this.searchValue.length) {\n        this.resetMenuIndex();\n      }\n    },\n    selectListTile: function selectListTile(index) {\n      if (!this.$refs.menu.tiles[index]) return;\n\n      this.$refs.menu.tiles[index].click();\n    },\n    updateTags: function updateTags(content) {\n      var _this3 = this;\n\n      // Avoid direct mutation\n      // for vuex strict mode\n      var selectedItems = this.selectedItems.slice();\n\n      // If a duplicate item\n      // exists, remove it\n      if (selectedItems.includes(content)) {\n        this.$delete(selectedItems, selectedItems.indexOf(content));\n      }\n\n      // When updating tags ensure\n      // that that the search text\n      // is populated if needed\n      var searchValue = null;\n      if (this.combobox) {\n        selectedItems = [content];\n        searchValue = this.chips ? null : content;\n      } else {\n        selectedItems.push(content);\n      }\n\n      this.selectedItems = selectedItems;\n\n      this.$nextTick(function () {\n        _this3.searchValue = searchValue;\n        _this3.$emit('input', _this3.combobox ? content : _this3.selectedItems);\n\n        // Combobox should close its menu when tags are updated\n        _this3.menuIsActive = !_this3.combobox;\n      });\n    }\n  }\n});\n\n/***/ }),\n/* 123 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Select computed properties\n *\n * @mixin\n *\n * Computed properties for\n * the v-select component\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  computed: {\n    classes: function classes() {\n      var classes = {\n        'input-group--text-field input-group--select': true,\n        'input-group--auto': this.auto,\n        'input-group--overflow': this.overflow,\n        'input-group--segmented': this.segmented,\n        'input-group--editable': this.editable,\n        'input-group--autocomplete': this.isAutocomplete,\n        'input-group--single-line': this.singleLine || this.isDropdown,\n        'input-group--multi-line': this.multiLine,\n        'input-group--chips': this.chips,\n        'input-group--solo': this.solo,\n        'input-group--multiple': this.multiple,\n        'input-group--open': this.menuIsVisible\n      };\n\n      if (this.hasError) {\n        classes['error--text'] = true;\n      } else {\n        return this.addTextColorClassChecks(classes);\n      }\n\n      return classes;\n    },\n    computedContentClass: function computedContentClass() {\n      var children = ['menu__content--select', this.auto ? 'menu__content--auto' : '', this.isDropdown ? 'menu__content--dropdown' : '', this.isAutocomplete ? 'menu__content--autocomplete' : '', this.contentClass || ''];\n\n      return children.join(' ');\n    },\n    computedItems: function computedItems() {\n      return this.filterDuplicates(this.cachedItems.concat(this.items));\n    },\n\n    /**\n     * The range of the current input text\n     *\n     * @return {Number}\n     */\n    currentRange: function currentRange() {\n      return this.getText(this.selectedItem || '').length;\n    },\n    filteredItems: function filteredItems() {\n      // If we are not actively filtering\n      // Show all available items\n      var items = this.isNotFiltering ? this.computedItems : this.filterSearch();\n\n      return !this.auto ? items.slice(0, this.lastItem) : items;\n    },\n    hideSelections: function hideSelections() {\n      return this.isAutocomplete && !this.isMultiple && this.isFocused && !this.chips && !this.$scopedSlots.selection;\n    },\n    isNotFiltering: function isNotFiltering() {\n      return this.isAutocomplete && this.isDirty && this.searchValue === this.getText(this.selectedItem);\n    },\n    isHidingSelected: function isHidingSelected() {\n      return this.hideSelected && this.isAutocomplete && this.isMultiple;\n    },\n    isAutocomplete: function isAutocomplete() {\n      return this.autocomplete || this.editable || this.tags || this.combobox;\n    },\n    isDirty: function isDirty() {\n      return this.selectedItems.length > 0 || this.isAutocomplete && this.searchValue;\n    },\n    isDropdown: function isDropdown() {\n      return this.segmented || this.overflow || this.editable || this.solo;\n    },\n    isMultiple: function isMultiple() {\n      return this.multiple || this.tags;\n    },\n    isAnyValueAllowed: function isAnyValueAllowed() {\n      return this.tags || this.combobox;\n    },\n    menuIsVisible: function menuIsVisible() {\n      return this.menuIsActive && this.computedItems.length > 0 && (!this.isAnyValueAllowed || this.filteredItems.length > 0);\n    },\n    menuItems: function menuItems() {\n      var _this = this;\n\n      return this.isHidingSelected ? this.filteredItems.filter(function (o) {\n        return (_this.selectedItems || []).indexOf(o) === -1;\n      }) : this.filteredItems;\n    },\n    nudgeTop: function nudgeTop() {\n      var nudgeTop = -18;\n\n      if (this.solo) nudgeTop = 0;else if (this.shouldOffset) {\n        nudgeTop += 44;\n\n        nudgeTop += this.hideDetails ? -24 : 0;\n        nudgeTop += this.isAutocomplete && !this.isDropdown ? -2 : 0;\n      }\n\n      return nudgeTop;\n    },\n\n    searchValue: {\n      get: function get() {\n        return this.lazySearch;\n      },\n      set: function set(val) {\n        var _this2 = this;\n\n        if (!this.isAutocomplete || this.selectedIndex > -1) return;\n\n        this.lazySearch = val;\n\n        clearTimeout(this.searchTimeout);\n\n        this.searchTimeout = setTimeout(function () {\n          _this2.$emit('update:searchInput', val);\n        }, this.debounceSearch);\n      }\n    },\n    selectedItem: function selectedItem() {\n      var _this3 = this;\n\n      if (this.isMultiple) return null;\n\n      return this.selectedItems.find(function (i) {\n        return _this3.getValue(i) === _this3.getValue(_this3.inputValue);\n      }) || null;\n    },\n    shouldOffset: function shouldOffset() {\n      return this.isAutocomplete || this.isDropdown;\n    }\n  }\n});\n\n/***/ }),\n/* 124 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Select events\n *\n * @mixin\n *\n * Event based methods for\n * the v-select component\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    blur: function blur() {\n      this.deactivateInput();\n      this.menuIsActive = false;\n      this.$emit('blur');\n    },\n    focus: function focus() {\n      this.showMenu();\n\n      this.$emit('focus');\n    },\n    focusInput: function focusInput() {\n      var _this = this;\n\n      if (this.$refs.input && this.isAutocomplete) {\n        this.$refs.input.focus();\n\n        this.$nextTick(function () {\n          _this.$refs.input.select();\n          _this.shouldBreak && (_this.$refs.input.scrollLeft = _this.$refs.input.scrollWidth);\n        });\n      } else {\n        !this.isFocused && this.$el.focus();\n      }\n    },\n    genListeners: function genListeners() {\n      var _this2 = this;\n\n      var listeners = Object.assign({}, this.$listeners);\n      delete listeners.input;\n\n      return _extends({}, listeners, {\n        click: function click() {\n          if (_this2.disabled || _this2.readonly) return;\n\n          if (_this2.isFocused && !_this2.menuIsVisible) {\n            return _this2.showMenuItems();\n          }\n\n          _this2.focus();\n        },\n        focus: function focus(e) {\n          if (_this2.disabled || _this2.readonly || _this2.isFocused) {\n            return;\n          }\n\n          _this2.activateInput();\n          _this2.$nextTick(_this2.focusInput);\n        },\n        keydown: this.onKeyDown // Located in mixins/select-autocomplete.js\n      });\n    }\n  }\n});\n\n/***/ }),\n/* 125 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n/**\n * Select generators\n *\n * @mixin\n *\n * Used for creating the DOM elements for VSelect\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genMenu: function genMenu() {\n      var _this = this;\n\n      var data = {\n        ref: 'menu',\n        props: {\n          activator: this.$el,\n          auto: this.auto,\n          closeOnClick: false,\n          closeOnContentClick: !this.isMultiple,\n          contentClass: this.computedContentClass,\n          disabled: this.disabled,\n          maxHeight: this.maxHeight,\n          nudgeTop: this.nudgeTop,\n          offsetY: this.shouldOffset,\n          offsetOverflow: this.isAutocomplete,\n          openOnClick: false,\n          value: this.menuIsVisible,\n          zIndex: this.menuZIndex\n        },\n        on: {\n          input: function input(val) {\n            if (!val) {\n              _this.menuIsActive = false;\n            }\n          }\n        }\n      };\n\n      if (this.isAutocomplete) data.props.transition = '';\n\n      this.minWidth && (data.props.minWidth = this.minWidth);\n\n      return this.$createElement('v-menu', data, [this.genList()]);\n    },\n    getMenuIndex: function getMenuIndex() {\n      return this.$refs.menu ? this.$refs.menu.listIndex : -1;\n    },\n    setMenuIndex: function setMenuIndex(index) {\n      this.$refs.menu && (this.$refs.menu.listIndex = index);\n    },\n    resetMenuIndex: function resetMenuIndex() {\n      this.setMenuIndex(-1);\n    },\n    isMenuItemSelected: function isMenuItemSelected() {\n      return this.menuIsActive && this.menuItems.length && this.getMenuIndex() > -1;\n    },\n    genSelectionsAndSearch: function genSelectionsAndSearch() {\n      return this.$createElement('div', {\n        'class': 'input-group__selections',\n        style: { 'overflow': 'hidden' },\n        ref: 'activator'\n      }, [].concat(_toConsumableArray(this.genSelections()), [this.genSearch()]));\n    },\n    genSelections: function genSelections() {\n      var _this2 = this;\n\n      if (this.hideSelections) return [];\n\n      var children = [];\n      var chips = this.chips;\n      var slots = this.$scopedSlots.selection;\n      var length = this.selectedItems.length;\n      this.selectedItems.forEach(function (item, i) {\n        if (slots) {\n          children.push(_this2.genSlotSelection(item, i));\n        } else if (chips) {\n          children.push(_this2.genChipSelection(item, i));\n        } else if (_this2.segmented) {\n          children.push(_this2.genSegmentedBtn(item, i));\n        } else {\n          children.push(_this2.genCommaSelection(item, i < length - 1, i));\n        }\n      });\n\n      return children;\n    },\n    genSearch: function genSearch() {\n      var _this3 = this;\n\n      var data = {\n        staticClass: 'input-group--select__autocomplete',\n        'class': {\n          'input-group--select__autocomplete--index': this.selectedIndex > -1\n        },\n        style: {\n          flex: this.shouldBreak ? '1 0 100%' : null\n        },\n        attrs: _extends({}, this.$attrs, {\n          disabled: this.disabled || !this.isAutocomplete,\n          readonly: this.readonly,\n          tabindex: this.disabled || !this.isAutocomplete ? -1 : this.tabindex\n        }),\n        domProps: {\n          value: this.maskText(this.lazySearch || '')\n        },\n        directives: [{\n          name: 'show',\n          value: this.isAutocomplete || this.placeholder && !this.selectedItems.length\n        }],\n        ref: 'input',\n        key: 'input'\n      };\n\n      if (this.isAutocomplete) {\n        data.attrs.role = 'combobox';\n        data.domProps.autocomplete = this.browserAutocomplete;\n\n        data.on = _extends({}, this.genListeners(), {\n          input: function input(e) {\n            _this3.searchValue = _this3.unmaskText(e.target.value);\n          }\n        });\n\n        if (this.combobox) {\n          // When using the combobox\n          // update inputValue and\n          // set the menu status\n          data.on.blur = function (e) {\n            // If user clears input\n            // value will be falsey\n            // but not null\n            if (_this3.lazySearch == null ||\n            // If blur was caused by clicking\n            // a menu list tile, do nothing\n            _this3.content && _this3.content.contains(e.relatedTarget) || _this3.$el && _this3.$el.contains(e.relatedTarget)) return;\n\n            _this3.inputValue = _this3.lazySearch;\n          };\n        }\n\n        data.directives = data.directives.concat(this.genDirectives());\n      }\n\n      if (this.placeholder) data.domProps.placeholder = this.placeholder;\n\n      return this.$createElement('input', data);\n    },\n    genSegmentedBtn: function genSegmentedBtn(item) {\n      if (!item.text || !item.callback) {\n        console.warn('[Vuetify] Warn: When using the v-select component with \\'segmented\\' prop without a selection slot, items must contain both a text and callback property');\n        return null;\n      }\n\n      return this.$createElement('v-btn', {\n        props: {\n          flat: true\n        },\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            item.callback(e);\n          }\n        }\n      }, [item.text]);\n    },\n    genSlotSelection: function genSlotSelection(item, index) {\n      return this.$scopedSlots.selection({\n        parent: this,\n        item: item,\n        index: index,\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly\n      });\n    },\n    genChipSelection: function genChipSelection(item, index) {\n      var _this4 = this;\n\n      var isDisabled = this.disabled || this.readonly;\n      var click = function click(e) {\n        if (isDisabled) return;\n\n        e.stopPropagation();\n        _this4.focusInput();\n        _this4.selectedIndex = index;\n      };\n\n      return this.$createElement('v-chip', {\n        staticClass: 'chip--select-multi',\n        attrs: { tabindex: '-1' },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          dark: this.dark,\n          disabled: isDisabled,\n          selected: index === this.selectedIndex\n        },\n        on: {\n          click: click,\n          focus: click,\n          input: function input() {\n            if (_this4.isMultiple) _this4.selectItem(item);else _this4.inputValue = null;\n          }\n        },\n        key: this.getValue(item)\n      }, this.getText(item));\n    },\n    genCommaSelection: function genCommaSelection(item, comma, index) {\n      return this.$createElement('div', {\n        staticClass: 'input-group__selections__comma',\n        'class': {\n          'input-group__selections__comma--active': index === this.selectedIndex\n        },\n        key: JSON.stringify(this.getValue(item)) // Item may be an object\n      }, '' + this.getText(item) + (comma ? ', ' : ''));\n    },\n    genList: function genList() {\n      var _this5 = this;\n\n      var children = this.menuItems.map(function (o) {\n        if (o.header) return _this5.genHeader(o);\n        if (o.divider) return _this5.genDivider(o);else return _this5.genTile(o);\n      });\n\n      if (!children.length) {\n        var noData = this.$slots['no-data'];\n        if (noData) {\n          children.push(noData);\n        } else {\n          children.push(this.genTile(this.noDataText, true));\n        }\n      }\n\n      return this.$createElement('v-card', [this.$createElement('v-list', {\n        props: {\n          dense: this.dense\n        },\n        ref: 'list'\n      }, children)]);\n    },\n    genHeader: function genHeader(item) {\n      return this.$createElement('v-subheader', {\n        props: item\n      }, item.header);\n    },\n    genDivider: function genDivider(item) {\n      return this.$createElement('v-divider', {\n        props: item\n      });\n    },\n    genLabel: function genLabel() {\n      var singleLine = this.singleLine || this.isDropdown;\n\n      if (singleLine && this.isDirty || singleLine && this.isFocused && this.searchValue) return null;\n\n      var data = {};\n\n      if (this.id) data.attrs = { for: this.id };\n\n      return this.$createElement('label', data, this.$slots.label || this.label);\n    },\n    genTile: function genTile(item, disabled) {\n      var _this6 = this;\n\n      var active = this.selectedItems.indexOf(item) !== -1;\n\n      if (typeof disabled === 'undefined') {\n        disabled = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"g\" /* getObjectValueByPath */])(item, this.itemDisabled);\n      }\n\n      var data = {\n        on: {\n          click: function click(e) {\n            if (disabled) return;\n\n            _this6.selectItem(item);\n          }\n        },\n        props: {\n          avatar: item === Object(item) && this.itemAvatar in item,\n          ripple: true,\n          value: active\n        }\n      };\n\n      if (disabled) {\n        data.props.disabled = disabled;\n      }\n\n      data.props.activeClass = Object.keys(this.addTextColorClassChecks()).join(' ');\n\n      if (this.$scopedSlots.item) {\n        return this.$createElement('v-list-tile', data, [this.$scopedSlots.item({ parent: this, item: item })]);\n      }\n\n      return this.$createElement('v-list-tile', data, [this.genAction(item, active), this.genContent(item)]);\n    },\n    genAction: function genAction(item, active) {\n      var _this7 = this;\n\n      if (!this.isMultiple || this.isHidingSelected) return null;\n\n      var data = {\n        staticClass: 'list__tile__action--select-multi',\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            _this7.selectItem(item);\n          }\n        }\n      };\n\n      return this.$createElement('v-list-tile-action', data, [this.$createElement('v-checkbox', {\n        props: {\n          color: this.computedColor,\n          inputValue: active\n        }\n      })]);\n    },\n    genContent: function genContent(item) {\n      var text = this.getText(item);\n\n      return this.$createElement('v-list-tile-content', [this.$createElement('v-list-tile-title', {\n        domProps: {\n          innerHTML: this.genFiltered(text)\n        }\n      })]);\n    }\n  }\n});\n\n/***/ }),\n/* 126 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n// Helpers\n\n\n/**\n * Select helpers\n *\n * @mixin\n *\n * Helper methods for the\n * v-select component\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    getText: function getText(item) {\n      return this.getPropertyFromItem(item, this.itemText);\n    },\n    getValue: function getValue(item) {\n      return this.getPropertyFromItem(item, this.itemValue);\n    },\n    getPropertyFromItem: function getPropertyFromItem(item, field) {\n      if (item !== Object(item)) return item;\n\n      var value = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"g\" /* getObjectValueByPath */])(item, field);\n\n      return typeof value === 'undefined' ? item : value;\n    },\n    compareObjects: function compareObjects(a, b) {\n      var aProps = Object.keys(a);\n      var bProps = Object.keys(b);\n\n      if (aProps.length !== bProps.length) return false;\n\n      for (var i = 0, length = aProps.length; i < length; i++) {\n        var propName = aProps[i];\n\n        if (a[propName] !== b[propName]) return false;\n      }\n\n      return true;\n    }\n  }\n});\n\n/***/ }),\n/* 127 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Select menu methods\n *\n * @mixin\n *\n * Menu based methods for\n * the v-select component\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    activateInput: function activateInput() {\n      this.isActive = true;\n      this.isFocused = true;\n    },\n    deactivateInput: function deactivateInput() {\n      this.isFocused = false;\n      this.isActive = false;\n      this.selectedIndex = -1;\n    },\n    hideMenu: function hideMenu() {\n      this.menuIsActive = false;\n    },\n    showMenu: function showMenu() {\n      this.activateInput();\n      this.showMenuItems();\n      this.isMultiple && this.resetMenuIndex();\n    },\n    showMenuItems: function showMenuItems() {\n      this.menuIsActive = true;\n    },\n    toggleMenu: function toggleMenu() {\n      if (this.disabled || this.readonly || this.menuIsVisible) return this.hideMenu();\n\n      this.showMenu();\n      this.focusInput();\n    }\n  }\n});\n\n/***/ }),\n/* 128 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    appendIcon: {\n      type: String,\n      default: 'arrow_drop_down'\n    },\n    appendIconCb: Function,\n    auto: Boolean,\n    autocomplete: Boolean,\n    browserAutocomplete: {\n      type: String,\n      default: 'on'\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    combobox: Boolean,\n    contentClass: String,\n    debounceSearch: {\n      type: [Number, String],\n      default: 200\n    },\n    deletableChips: Boolean,\n    dense: Boolean,\n    editable: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    itemAvatar: {\n      type: String,\n      default: 'avatar'\n    },\n    itemDisabled: {\n      type: String,\n      default: 'disabled'\n    },\n    itemText: {\n      type: String,\n      default: 'text'\n    },\n    itemValue: {\n      type: String,\n      default: 'value'\n    },\n    maxHeight: {\n      type: [Number, String],\n      default: 300\n    },\n    minWidth: {\n      type: [Boolean, Number, String],\n      default: false\n    },\n    multiple: Boolean,\n    multiLine: Boolean,\n    openOnClear: Boolean,\n    overflow: Boolean,\n    returnObject: Boolean,\n    searchInput: {\n      default: null\n    },\n    segmented: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    tags: Boolean\n  }\n});\n\n/***/ }),\n/* 129 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Select watchers\n *\n * @mixin\n *\n * Watchers for the\n * v-select component\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  watch: {\n    filteredItems: function filteredItems() {\n      this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n    inputValue: function inputValue(val) {\n      // Populate selected items\n      this.genSelectedItems(val);\n\n      // Only fire an update\n      // if values do not\n      // match\n      val !== this.value && this.$emit('input', val);\n\n      // When inputValue is changed\n      // and combobox is true set\n      // menu property to false\n      if (this.combobox) this.menuIsActive = false;\n    },\n    isActive: function isActive(val) {\n      if (val) {\n        if (!this.chips && !this.$scopedSlots.selection) {\n          this.searchValue = this.getText(this.selectedItem);\n        }\n        return;\n      }\n\n      this.blur();\n\n      if (this.tags && this.searchValue) {\n        this.updateTags(this.searchValue);\n      }\n\n      // Only set search value if\n      // there is a value to set\n      this.searchValue && (this.searchValue = null);\n    },\n    isBooted: function isBooted() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        if (_this.content && _this.content.addEventListener) {\n          _this.content.addEventListener('scroll', _this.onScroll, false);\n        }\n      });\n    },\n    items: function items(val) {\n      var _this2 = this;\n\n      if (this.cacheItems) {\n        this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val));\n      }\n\n      this.resetMenuIndex();\n\n      // Tags and combobox should not\n      // pre-select the first entry\n      if (this.searchValue && !this.isAnyValueAllowed) {\n        this.$nextTick(function () {\n          return _this2.setMenuIndex(0);\n        });\n      }\n\n      this.genSelectedItems();\n    },\n    menuIsActive: function menuIsActive(val) {\n      if (!val) return;\n\n      this.isBooted = true;\n    },\n    isMultiple: function isMultiple(val) {\n      this.inputValue = val ? [] : null;\n    },\n    searchInput: function searchInput(val) {\n      this.searchValue = val;\n    },\n    searchValue: function searchValue(val, prev) {\n      var _this3 = this;\n\n      // Wrap input to next line if overflowing\n      if (this.$refs.input.scrollWidth > this.$refs.input.clientWidth) {\n        this.shouldBreak = true;\n        this.$nextTick(this.$refs.menu.updateDimensions);\n      } else if (val === null) {\n        this.shouldBreak = false;\n      }\n\n      // Activate menu if inactive and searching\n      if (this.isActive && !this.menuIsActive && val !== this.getValue(this.selectedItem)) {\n        this.menuIsActive = true;\n      }\n\n      // Only reset list index\n      // if typing in search\n      val || prev && this.resetMenuIndex();\n\n      this.$nextTick(function () {\n        if (val && !_this3.isAnyValueAllowed) {\n          _this3.setMenuIndex(0);\n        }\n      });\n    },\n    selectedItems: function selectedItems() {\n      clearTimeout(this.searchTimeout);\n\n      if (this.isAutocomplete) {\n        this.$nextTick(this.$refs.menu.updateDimensions);\n      }\n    },\n    value: function value(val) {\n      this.inputValue = val;\n      this.validate();\n    }\n  }\n});\n\n/***/ }),\n/* 130 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genTHead: function genTHead() {\n      var _this = this;\n\n      if (this.hideHeaders) return; // Exit Early since no headers are needed.\n\n      var children = [];\n\n      if (this.$scopedSlots.headers) {\n        var row = this.$scopedSlots.headers({\n          headers: this.headers,\n          indeterminate: this.indeterminate,\n          all: this.all\n        });\n\n        children = [this.needsTR(row) ? this.genTR(row) : row, this.genTProgress()];\n      } else {\n        var _row = this.headers.map(function (o) {\n          return _this.genHeader(o);\n        });\n        var checkbox = this.$createElement('v-checkbox', {\n          props: {\n            dark: this.dark,\n            light: this.light,\n            color: this.selectAll === true ? '' : this.selectAll,\n            hideDetails: true,\n            inputValue: this.all,\n            indeterminate: this.indeterminate\n          },\n          on: { change: this.toggle }\n        });\n\n        this.hasSelectAll && _row.unshift(this.$createElement('th', [checkbox]));\n\n        children = [this.genTR(_row), this.genTProgress()];\n      }\n\n      return this.$createElement('thead', [children]);\n    },\n    genHeader: function genHeader(header) {\n      var array = [this.$scopedSlots.headerCell ? this.$scopedSlots.headerCell({ header: header }) : header[this.headerText]];\n\n      return this.$createElement.apply(this, ['th'].concat(_toConsumableArray(this.genHeaderData(header, array))));\n    },\n    genHeaderData: function genHeaderData(header, children) {\n      var classes = ['column'];\n      var data = {\n        attrs: {\n          role: 'columnheader',\n          scope: 'col',\n          width: header.width || null,\n          'aria-label': header[this.headerText] || '',\n          'aria-sort': 'none'\n        }\n      };\n\n      if ('sortable' in header && header.sortable || !('sortable' in header)) {\n        this.genHeaderSortingData(header, children, data, classes);\n      } else {\n        data.attrs['aria-label'] += ': Not sorted.'; // TODO: Localization\n      }\n\n      classes.push('text-xs-' + (header.align || 'right'));\n      if (Array.isArray(header.class)) {\n        classes.push.apply(classes, _toConsumableArray(header.class));\n      } else if (header.class) {\n        classes.push(header.class);\n      }\n      data.class = classes;\n\n      return [data, children];\n    },\n    genHeaderSortingData: function genHeaderSortingData(header, children, data, classes) {\n      var _this2 = this;\n\n      if (!('value' in header)) {\n        console.warn('Data table headers must have a value property that corresponds to a value in the v-model array');\n      }\n\n      data.attrs.tabIndex = 0;\n      data.on = {\n        click: function click() {\n          _this2.expanded = {};\n          _this2.sort(header.value);\n        },\n        keydown: function keydown(e) {\n          // check for space\n          if (e.keyCode === 32) {\n            e.preventDefault();\n            _this2.sort(header.value);\n          }\n        }\n      };\n\n      classes.push('sortable');\n      var icon = this.$createElement('v-icon', 'arrow_upward');\n      if (header.align && header.align === 'left') {\n        children.push(icon);\n      } else {\n        children.unshift(icon);\n      }\n\n      var pagination = this.computedPagination;\n      var beingSorted = pagination.sortBy === header.value;\n      if (beingSorted) {\n        classes.push('active');\n        if (pagination.descending) {\n          classes.push('desc');\n          data.attrs['aria-sort'] = 'descending';\n          data.attrs['aria-label'] += ': Sorted descending. Activate to remove sorting.'; // TODO: Localization\n        } else {\n          classes.push('asc');\n          data.attrs['aria-sort'] = 'ascending';\n          data.attrs['aria-label'] += ': Sorted ascending. Activate to sort descending.'; // TODO: Localization\n        }\n      } else {\n        data.attrs['aria-label'] += ': Not sorted. Activate to sort ascending.'; // TODO: Localization\n      }\n    }\n  }\n});\n\n/***/ }),\n/* 131 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transitions_expand_transition__ = __webpack_require__(30);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genTBody: function genTBody() {\n      var children = [];\n\n      if (!this.itemsLength && !this.items.length) {\n        var noData = this.$slots['no-data'] || this.noDataText;\n        children.push(this.genEmptyBody(noData));\n      } else if (!this.filteredItems.length) {\n        var noResults = this.$slots['no-results'] || this.noResultsText;\n        children.push(this.genEmptyBody(noResults));\n      } else {\n        children.push(this.genFilteredItems());\n      }\n\n      return this.$createElement('tbody', children);\n    },\n    genExpandedRow: function genExpandedRow(props) {\n      var children = [];\n\n      if (this.isExpanded(props.item)) {\n        var expand = this.$createElement('div', {\n          class: 'datatable__expand-content',\n          key: props.item[this.itemKey]\n        }, this.$scopedSlots.expand(props));\n\n        children.push(expand);\n      }\n\n      var transition = this.$createElement('transition-group', {\n        class: 'datatable__expand-col',\n        attrs: { colspan: '100%' },\n        props: {\n          tag: 'td'\n        },\n        on: Object(__WEBPACK_IMPORTED_MODULE_0__transitions_expand_transition__[\"a\" /* default */])('datatable__expand-col--expanded')\n      }, children);\n\n      return this.genTR([transition], { class: 'datatable__expand-row' });\n    },\n    createProps: function createProps(item, index) {\n      var _this = this;\n\n      var props = { item: item, index: index };\n      var key = this.itemKey;\n\n      Object.defineProperty(props, 'selected', {\n        get: function get() {\n          return _this.selected[item[_this.itemKey]];\n        },\n        set: function set(value) {\n          var selected = _this.value.slice();\n          if (value) selected.push(item);else selected = selected.filter(function (i) {\n            return i[key] !== item[key];\n          });\n          _this.$emit('input', selected);\n        }\n      });\n\n      Object.defineProperty(props, 'expanded', {\n        get: function get() {\n          return _this.expanded[item[_this.itemKey]];\n        },\n        set: function set(value) {\n          if (!_this.expand) {\n            Object.keys(_this.expanded).forEach(function (key) {\n              _this.$set(_this.expanded, key, false);\n            });\n          }\n          _this.$set(_this.expanded, item[_this.itemKey], value);\n        }\n      });\n\n      return props;\n    },\n    genFilteredItems: function genFilteredItems() {\n      var _this2 = this;\n\n      var rows = [];\n      this.filteredItems.forEach(function (item, index) {\n        var props = _this2.createProps(item, index);\n        var row = _this2.$scopedSlots.items ? _this2.$scopedSlots.items(props) : [];\n\n        rows.push(_this2.needsTR(row) ? _this2.genTR(row, {\n          attrs: { active: _this2.isSelected(item) }\n        }) : row);\n\n        if (_this2.$scopedSlots.expand) {\n          var expandRow = _this2.genExpandedRow(props);\n          rows.push(expandRow);\n        }\n      });\n\n      return rows;\n    },\n    genEmptyBody: function genEmptyBody(content) {\n      return this.genTR([this.$createElement('td', {\n        'class': 'text-xs-center',\n        attrs: { colspan: '100%' }\n      }, content)]);\n    }\n  }\n});\n\n/***/ }),\n/* 132 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genPrevIcon: function genPrevIcon() {\n      var _this = this;\n\n      return this.$createElement('v-btn', {\n        props: {\n          disabled: this.computedPagination.page === 1,\n          icon: true,\n          flat: true,\n          dark: this.dark,\n          light: this.light\n        },\n        on: {\n          click: function click() {\n            var page = _this.computedPagination.page;\n            _this.updatePagination({ page: page - 1 });\n          }\n        },\n        attrs: {\n          'aria-label': 'Previous page' // TODO: Localization\n        }\n      }, [this.$createElement('v-icon', 'chevron_left')]);\n    },\n    genNextIcon: function genNextIcon() {\n      var _this2 = this;\n\n      var pagination = this.computedPagination;\n      var disabled = pagination.rowsPerPage < 0 || pagination.page * pagination.rowsPerPage >= this.itemsLength || this.pageStop < 0;\n\n      return this.$createElement('v-btn', {\n        props: {\n          disabled: disabled,\n          icon: true,\n          flat: true,\n          dark: this.dark,\n          light: this.light\n        },\n        on: {\n          click: function click() {\n            var page = _this2.computedPagination.page;\n            _this2.updatePagination({ page: page + 1 });\n          }\n        },\n        attrs: {\n          'aria-label': 'Next page' // TODO: Localization\n        }\n      }, [this.$createElement('v-icon', 'chevron_right')]);\n    },\n    genSelect: function genSelect() {\n      var _this3 = this;\n\n      return this.$createElement('div', {\n        'class': 'datatable__actions__select'\n      }, [this.rowsPerPageText, this.$createElement('v-select', {\n        attrs: {\n          'aria-label': this.rowsPerPageText\n        },\n        props: {\n          items: this.rowsPerPageItems,\n          value: this.computedPagination.rowsPerPage,\n          hideDetails: true,\n          auto: true,\n          minWidth: '75px'\n        },\n        on: {\n          input: function input(val) {\n            _this3.updatePagination({\n              page: 1,\n              rowsPerPage: val\n            });\n          }\n        }\n      })]);\n    },\n    genPagination: function genPagination() {\n      var pagination = '–';\n\n      if (this.itemsLength) {\n        var stop = this.itemsLength < this.pageStop || this.pageStop < 0 ? this.itemsLength : this.pageStop;\n\n        pagination = this.$scopedSlots.pageText ? this.$scopedSlots.pageText({\n          pageStart: this.pageStart + 1,\n          pageStop: stop,\n          itemsLength: this.itemsLength\n        }) : this.pageStart + 1 + '-' + stop + ' of ' + this.itemsLength;\n      }\n\n      return this.$createElement('div', {\n        'class': 'datatable__actions__pagination'\n      }, [pagination]);\n    },\n    genActions: function genActions() {\n      return [this.$createElement('div', {\n        'class': 'datatable__actions'\n      }, [this.rowsPerPageItems.length > 1 ? this.genSelect() : null, this.genPagination(), this.genPrevIcon(), this.genNextIcon()])];\n    },\n    genTFoot: function genTFoot() {\n      var children = [];\n\n      if (this.$slots.footer) {\n        var footer = this.$slots.footer;\n        var row = this.needsTR(footer) ? this.genTR(footer) : footer;\n\n        children.push(row);\n      }\n\n      if (!this.hideActions) {\n        children.push(this.genTR([this.$createElement('td', {\n          attrs: { colspan: '100%' }\n        }, this.genActions())]));\n      }\n\n      if (!children.length) return null;\n      return this.$createElement('tfoot', children);\n    }\n  }\n});\n\n/***/ }),\n/* 133 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genTProgress: function genTProgress() {\n      var col = this.$createElement('th', {\n        staticClass: 'column',\n        attrs: {\n          colspan: '100%'\n        }\n      }, [this.genProgress()]);\n\n      return this.genTR([col], {\n        staticClass: 'datatable__progress'\n      });\n    }\n  }\n});\n\n/***/ }),\n/* 134 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__(135);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-edit-dialog',\n\n  data: function data() {\n    return {\n      isActive: false,\n      isSaving: false\n    };\n  },\n\n\n  props: {\n    cancelText: {\n      default: 'Cancel'\n    },\n    large: Boolean,\n    lazy: Boolean,\n    saveText: {\n      default: 'Save'\n    },\n    transition: {\n      type: String,\n      default: 'slide-x-reverse-transition'\n    }\n  },\n\n  watch: {\n    isActive: function isActive(val) {\n      val && this.$emit('open') && setTimeout(this.focus, 50); // Give DOM time to paint\n\n      if (!val) {\n        !this.isSaving && this.$emit('cancel');\n        this.isSaving && this.$emit('close');\n        this.isSaving = false;\n      }\n    }\n  },\n\n  methods: {\n    cancel: function cancel() {\n      this.isActive = false;\n    },\n    focus: function focus() {\n      var input = this.$refs.content.querySelector('input');\n      input && input.focus();\n    },\n    save: function save() {\n      this.isSaving = true;\n      this.isActive = false;\n      this.$emit('save');\n    },\n    genButton: function genButton(fn, text) {\n      return this.$createElement('v-btn', {\n        props: {\n          flat: true,\n          color: 'primary',\n          light: true\n        },\n        on: { click: fn }\n      }, text);\n    },\n    genActions: function genActions() {\n      return this.$createElement('div', {\n        'class': 'small-dialog__actions'\n      }, [this.genButton(this.cancel, this.cancelText), this.genButton(this.save, this.saveText)]);\n    },\n    genContent: function genContent() {\n      var _this = this;\n\n      return this.$createElement('div', {\n        on: {\n          keydown: function keydown(e) {\n            e.keyCode === 27 && _this.cancel();\n            e.keyCode === 13 && _this.save();\n          }\n        },\n        ref: 'content'\n      }, [this.$slots.input]);\n    }\n  },\n\n  render: function render(h) {\n    var _this2 = this;\n\n    return h('v-menu', {\n      'class': 'small-dialog',\n      props: {\n        contentClass: 'small-dialog__content',\n        transition: this.transition,\n        origin: 'top right',\n        right: true,\n        value: this.isActive,\n        closeOnContentClick: false,\n        lazy: this.lazy\n      },\n      on: {\n        input: function input(val) {\n          return _this2.isActive = val;\n        }\n      }\n    }, [h('a', {\n      slot: 'activator'\n    }, this.$slots.default), this.genContent(), this.large ? this.genActions() : null]);\n  }\n});\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 136 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VDatePicker__ = __webpack_require__(137);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VDatePicker__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VDatePicker__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VDatePicker__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VDatePicker__[\"a\" /* default */]);\n\n/***/ }),\n/* 137 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_date_years__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_date_title__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_date_header__ = __webpack_require__(141);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_date_table__ = __webpack_require__(142);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_month_table__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixins_picker__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__VBtn__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__VCard__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__directives_touch__ = __webpack_require__(7);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n__webpack_require__(44);\n__webpack_require__(138);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar pad = function pad(n) {\n  return n * 1 < 10 ? '0' + n * 1 : '' + n;\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-date-picker',\n\n  components: {\n    VBtn: __WEBPACK_IMPORTED_MODULE_7__VBtn__[\"a\" /* default */],\n    VCard: __WEBPACK_IMPORTED_MODULE_8__VCard__[\"a\" /* default */],\n    VIcon: __WEBPACK_IMPORTED_MODULE_9__VIcon__[\"a\" /* default */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_6__mixins_picker__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_date_years__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_date_title__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_date_header__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_date_table__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_5__mixins_month_table__[\"a\" /* default */]],\n\n  directives: { Touch: __WEBPACK_IMPORTED_MODULE_10__directives_touch__[\"a\" /* default */] },\n\n  data: function data() {\n    var now = new Date();\n    return {\n      activePicker: this.type.toUpperCase(),\n      currentDay: null,\n      currentMonth: null,\n      currentYear: null,\n      isReversing: false,\n      originalDate: this.value,\n      // tableDate is a string in 'YYYY' / 'YYYY-M' format (leading zero for month is not required)\n      tableDate: this.type === 'month' ? '' + now.getFullYear() : now.getFullYear() + '-' + (now.getMonth() + 1)\n    };\n  },\n\n\n  props: {\n    allowedDates: {\n      type: [Array, Object, Function],\n      default: function _default() {\n        return null;\n      }\n    },\n    // Function formatting the day in date picker table\n    dayFormat: {\n      type: Function,\n      default: null\n    },\n    firstDayOfWeek: {\n      type: [String, Number],\n      default: 0\n    },\n    // Function formatting the tableDate in the day/month table header\n    headerDateFormat: {\n      type: Function,\n      default: null\n    },\n    locale: {\n      type: String,\n      default: 'en-us'\n    },\n    // Function formatting month in the months table\n    monthFormat: {\n      type: Function,\n      default: null\n    },\n    // Function formatting currently selected date in the picker title\n    titleDateFormat: {\n      type: Function,\n      default: null\n    },\n    type: {\n      type: String,\n      default: 'date',\n      validator: function validator(type) {\n        return ['date', 'month' /*, 'year'*/].includes(type);\n      }\n    },\n    value: String,\n    // Function formatting the year in table header and pickup title\n    yearFormat: {\n      type: Function,\n      default: null\n    },\n    yearIcon: String\n  },\n\n  computed: {\n    weekDays: function weekDays() {\n      var _this = this;\n\n      var first = parseInt(this.firstDayOfWeek, 10);\n\n      return this.formatters.weekDay ? Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"c\" /* createRange */])(7).map(function (i) {\n        return _this.formatters.weekDay('2017-01-' + (first + i + 15));\n      }) // 2017-01-15 is Sunday\n      : Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"c\" /* createRange */])(7).map(function (i) {\n        return ['S', 'M', 'T', 'W', 'T', 'F', 'S'][(i + first) % 7];\n      });\n    },\n    firstAllowedDate: function firstAllowedDate() {\n      var now = new Date();\n      var year = now.getFullYear();\n      var month = now.getMonth();\n\n      if (this.allowedDates) {\n        for (var date = now.getDate(); date <= 31; date++) {\n          var dateString = year + '-' + (month + 1) + '-' + date;\n          if (isNaN(new Date(dateString).getDate())) break;\n\n          var sanitizedDateString = this.sanitizeDateString(dateString, 'date');\n          if (this.isAllowed(sanitizedDateString)) {\n            return sanitizedDateString;\n          }\n        }\n      }\n\n      return this.sanitizeDateString(year + '-' + (month + 1) + '-' + now.getDate(), 'date');\n    },\n    firstAllowedMonth: function firstAllowedMonth() {\n      var now = new Date();\n      var year = now.getFullYear();\n\n      if (this.allowedDates) {\n        for (var month = now.getMonth(); month < 12; month++) {\n          var dateString = year + '-' + (month + 1);\n          var sanitizedDateString = this.sanitizeDateString(dateString, 'month');\n          if (this.isAllowed(sanitizedDateString)) {\n            return sanitizedDateString;\n          }\n        }\n      }\n\n      return this.sanitizeDateString(year + '-' + (now.getMonth() + 1), 'month');\n    },\n\n    // inputDate MUST be a string in ISO 8601 format (including leading zero for month/day)\n    // YYYY-MM for month picker\n    // YYYY-MM-DD for date picker\n    inputDate: {\n      get: function get() {\n        if (this.value) {\n          return this.sanitizeDateString(this.value, this.type);\n        }\n\n        return this.type === 'month' ? this.firstAllowedMonth : this.firstAllowedDate;\n      },\n      set: function set(value) {\n        var date = value == null ? this.originalDate : this.sanitizeDateString(value, this.type);\n        this.$emit('input', date);\n      }\n    },\n    day: function day() {\n      return this.inputDate.split('-')[2] * 1;\n    },\n    month: function month() {\n      return this.inputDate.split('-')[1] - 1;\n    },\n    year: function year() {\n      return this.inputDate.split('-')[0] * 1;\n    },\n    tableMonth: function tableMonth() {\n      return this.tableDate.split('-')[1] - 1;\n    },\n    tableYear: function tableYear() {\n      return this.tableDate.split('-')[0] * 1;\n    },\n    computedTransition: function computedTransition() {\n      return this.isReversing ? 'tab-reverse-transition' : 'tab-transition';\n    },\n    formatters: function formatters() {\n      return {\n        day: this.dayFormat || this.createNativeLocaleFormatter(this.locale, { day: 'numeric', timeZone: 'UTC' }, { start: 8, length: 2 }),\n        headerDate: this.headerDateFormat || this.createNativeLocaleFormatter(this.locale, { month: 'long', year: 'numeric', timeZone: 'UTC' }, { length: 7 }),\n        month: this.monthFormat || this.createNativeLocaleFormatter(this.locale, { month: 'short', timeZone: 'UTC' }, { start: 5, length: 2 }),\n        year: this.yearFormat || this.createNativeLocaleFormatter(this.locale, { year: 'numeric', timeZone: 'UTC' }, { length: 4 }),\n        weekDay: this.createNativeLocaleFormatter(this.locale, { weekday: 'narrow', timeZone: 'UTC' }),\n        titleDate: this.titleDateFormat || this.defaultTitleDateFormatter\n      };\n    },\n    defaultTitleDateFormatter: function defaultTitleDateFormatter() {\n      var titleFormats = {\n        year: { year: 'numeric', timeZone: 'UTC' },\n        month: { month: 'long', timeZone: 'UTC' },\n        date: { weekday: 'short', month: 'short', day: 'numeric', timeZone: 'UTC' }\n      };\n\n      var titleDateFormatter = this.createNativeLocaleFormatter(this.locale, titleFormats[this.type], {\n        start: 0,\n        length: { date: 10, month: 7, year: 4 }[this.type]\n      });\n\n      var landscapeFormatter = function landscapeFormatter(date) {\n        return titleDateFormatter(date).replace(/([^\\d\\s])([\\d])/g, function (match, nonDigit, digit) {\n          return nonDigit + ' ' + digit;\n        }).replace(', ', ',<br>');\n      };\n\n      return this.landscape ? landscapeFormatter : titleDateFormatter;\n    }\n  },\n\n  watch: {\n    activePicker: function activePicker(val, prev) {\n      var _this2 = this;\n\n      if (val !== 'YEAR') return;\n\n      // That's a quirk, setting timeout stopped working after fixing #1649\n      // It worked but for timeouts significantly longer than the transition duration\n      var interval = setInterval(function () {\n        if (_this2.$refs.years) {\n          _this2.$refs.years.scrollTop = _this2.$refs.years.scrollHeight / 2 - 125;\n          clearInterval(interval);\n        }\n      }, 100);\n    },\n    tableDate: function tableDate(val, prev) {\n      // Make a ISO 8601 strings from val and prev for comparision, otherwise it will incorrectly\n      // compare for example '2000-9' and '2000-10'\n      var sanitizeType = this.type === 'month' ? 'year' : 'month';\n      this.isReversing = this.sanitizeDateString(val, sanitizeType) < this.sanitizeDateString(prev, sanitizeType);\n    },\n    value: function value(val) {\n      if (val) {\n        this.tableDate = this.type === 'month' ? '' + this.year : this.year + '-' + (this.month + 1);\n      }\n    },\n    type: function type(val) {\n      if (val === 'month' && this.activePicker === 'DATE') {\n        this.activePicker = 'MONTH';\n      } else if (val === 'year') {\n        this.activePicker = 'YEAR';\n      }\n    }\n  },\n\n  methods: {\n    save: function save() {\n      if (this.originalDate) {\n        this.originalDate = this.value;\n      } else {\n        this.originalDate = this.inputDate;\n      }\n\n      if (this.$parent && this.$parent.isActive) this.$parent.isActive = false;\n    },\n    cancel: function cancel() {\n      this.inputDate = this.originalDate;\n      if (this.$parent && this.$parent.isActive) this.$parent.isActive = false;\n    },\n    isAllowed: function isAllowed(date) {\n      if (!this.allowedDates) return true;\n\n      // date parameter must be in ISO 8601 format with leading zero\n      // If allowedDates is an array its values must be in ISO 8601 format with leading zero\n      // If allowedDates is on object its min/max properties must be in ISO 8601 with leading zero\n      if (Array.isArray(this.allowedDates)) {\n        return this.allowedDates.indexOf(date) > -1;\n      } else if (this.allowedDates instanceof Function) {\n        return this.allowedDates(date);\n      } else if (this.allowedDates instanceof Object) {\n        var min = this.allowedDates.min;\n        var max = this.allowedDates.max;\n        return (!min || min <= date) && (!max || max >= date);\n      }\n\n      return true;\n    },\n    genTableTouch: function genTableTouch(touchCallback) {\n      return {\n        name: 'touch',\n        value: {\n          left: function left(e) {\n            return e.offsetX < -15 && touchCallback(1);\n          },\n          right: function right(e) {\n            return e.offsetX > 15 && touchCallback(-1);\n          }\n        }\n      };\n    },\n    genTable: function genTable(tableChildren, touchCallback) {\n      var wheel = this.activePicker === 'MONTH' ? this.monthWheelScroll : this.dateWheelScroll;\n      var options = {\n        staticClass: 'picker--date__table',\n        'class': {\n          'picker--month__table': this.activePicker === 'MONTH'\n        },\n        on: this.scrollable ? { wheel: wheel } : undefined,\n        directives: [this.genTableTouch(touchCallback)]\n      };\n\n      var table = this.$createElement('table', {\n        key: this.activePicker === 'MONTH' ? this.tableYear : this.tableMonth\n      }, tableChildren);\n\n      return this.$createElement('div', options, [this.$createElement('transition', {\n        props: { name: this.computedTransition }\n      }, [table])]);\n    },\n    genPickerBody: function genPickerBody(h) {\n      var _this3 = this;\n\n      var pickerBodyChildren = [];\n      if (this.activePicker === 'DATE') {\n        pickerBodyChildren.push(h('div', { staticClass: 'picker--date__header' }, [this.genSelector()]));\n        pickerBodyChildren.push(this.genTable([this.dateGenTHead(), this.dateGenTBody()], function (value) {\n          return _this3.updateTableMonth(_this3.tableMonth + value);\n        }));\n      } else if (this.activePicker === 'MONTH') {\n        pickerBodyChildren.push(h('div', { staticClass: 'picker--date__header' }, [this.genSelector()]));\n        pickerBodyChildren.push(this.genTable([this.monthGenTBody()], function (value) {\n          return _this3.tableDate = '' + (_this3.tableYear + value);\n        }));\n      } else if (this.activePicker === 'YEAR') {\n        pickerBodyChildren.push(this.genYears());\n      }\n\n      return pickerBodyChildren;\n    },\n    createNativeLocaleFormatter: function createNativeLocaleFormatter(locale, options) {\n      var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { start: 0, length: 0 },\n          start = _ref.start,\n          length = _ref.length;\n\n      var makeIsoString = function makeIsoString(dateString) {\n        var _dateString$trim$spli = dateString.trim().split(' ')[0].split('-'),\n            _dateString$trim$spli2 = _slicedToArray(_dateString$trim$spli, 3),\n            year = _dateString$trim$spli2[0],\n            month = _dateString$trim$spli2[1],\n            date = _dateString$trim$spli2[2];\n\n        return [year, pad(month || 1), pad(date || 1)].join('-');\n      };\n\n      try {\n        var intlFormatter = new Intl.DateTimeFormat(locale || undefined, options);\n        return function (dateString) {\n          return intlFormatter.format(new Date(makeIsoString(dateString) + 'T00:00:00+00:00'));\n        };\n      } catch (e) {\n        return start || length ? function (dateString) {\n          return makeIsoString(dateString).substr(start, length);\n        } : null;\n      }\n    },\n\n    // Adds leading zero to month/day if necessary, returns 'YYYY' if type = 'year',\n    // 'YYYY-MM' if 'month' and 'YYYY-MM-DD' if 'date'\n    sanitizeDateString: function sanitizeDateString(dateString, type) {\n      var _dateString$split = dateString.split('-'),\n          _dateString$split2 = _slicedToArray(_dateString$split, 3),\n          year = _dateString$split2[0],\n          month = _dateString$split2[1],\n          date = _dateString$split2[2];\n\n      return (year + '-' + pad(month) + '-' + pad(date)).substr(0, { date: 10, month: 7, year: 4 }[type]);\n    },\n\n    // For month = 12 it sets the tableDate to January next year\n    // For month = -1 it sets the tableDate to December previous year\n    // Otherwise it just changes the table month\n    updateTableMonth: function updateTableMonth(month /* -1..12 */) {\n      if (month === 12) {\n        this.tableDate = this.tableYear + 1 + '-01';\n      } else if (month === -1) {\n        this.tableDate = this.tableYear - 1 + '-12';\n      } else {\n        this.tableDate = this.tableYear + '-' + (month + 1);\n      }\n    }\n  },\n\n  created: function created() {\n    this.tableDate = this.type === 'month' ? '' + this.year : this.year + '-' + (this.month + 1);\n  },\n  mounted: function mounted() {\n    var date = new Date();\n    this.currentDay = date.getDate();\n    this.currentMonth = date.getMonth();\n    this.currentYear = date.getFullYear();\n  },\n  render: function render(h) {\n    var children = [];\n\n    !this.noTitle && children.push(this.genTitle(this.formatters.titleDate(this.inputDate)));\n\n    children.push(h('transition', {\n      props: {\n        origin: 'center center',\n        mode: 'out-in',\n        name: 'scale-transition'\n      }\n    }, [h('div', {\n      staticClass: 'picker__body',\n      key: this.activePicker\n    }, this.genPickerBody(h))]));\n\n    this.$scopedSlots.default && children.push(this.genSlot());\n\n    return h('v-card', {\n      staticClass: 'picker picker--date',\n      'class': _extends({\n        'picker--landscape': this.landscape\n      }, this.themeClasses)\n    }, children);\n  }\n});\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 139 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genYears: function genYears() {\n      return this.$createElement('ul', {\n        staticClass: 'picker--date__years',\n        key: 'year',\n        ref: 'years'\n      }, this.genYearItems());\n    },\n    yearClick: function yearClick(year) {\n      var _this = this;\n\n      if (this.type === 'year') {\n        this.inputDate = '' + year;\n        this.$nextTick(function () {\n          return _this.autosave && _this.save();\n        });\n      } else if (this.type === 'month') {\n        var date = this.sanitizeDateString(year + '-' + (this.month + 1), 'month');\n        if (this.isAllowed(date)) this.inputDate = date;\n        this.tableDate = '' + year;\n        this.activePicker = 'MONTH';\n      } else {\n        var _date = this.sanitizeDateString(year + '-' + (this.tableMonth + 1) + '-' + this.day, 'date');\n        if (this.isAllowed(_date)) this.inputDate = _date;\n        this.tableDate = year + '-' + (this.tableMonth + 1);\n        this.activePicker = 'MONTH';\n      }\n    },\n    genYearItems: function genYearItems() {\n      var _this2 = this;\n\n      var children = [];\n\n      var _loop = function _loop(year, length) {\n        var buttonText = _this2.formatters.year('' + year);\n\n        children.push(_this2.$createElement('li', {\n          'class': _this2.year === year ? _this2.addTextColorClassChecks({ active: true }) : {},\n          on: {\n            click: function click() {\n              return _this2.yearClick(year);\n            }\n          }\n        }, buttonText));\n      };\n\n      for (var year = this.year + 100, length = this.year - 100; year > length; year--) {\n        _loop(year, length);\n      }\n      return children;\n    }\n  }\n});\n\n/***/ }),\n/* 140 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genYearIcon: function genYearIcon() {\n      return this.yearIcon ? this.$createElement('v-icon', {\n        props: {\n          dark: true\n        }\n      }, this.yearIcon) : null;\n    },\n    getYearBtn: function getYearBtn() {\n      var _this = this;\n\n      return this.$createElement('div', {\n        'class': {\n          'picker--date__title-year': true,\n          'active': this.activePicker === 'YEAR'\n        },\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            _this.activePicker = 'YEAR';\n          }\n        }\n      }, [this.formatters.year('' + this.year), this.genYearIcon()]);\n    },\n    genTitleText: function genTitleText(title) {\n      return this.$createElement('transition', {\n        props: {\n          name: 'slide-y-reverse-transition',\n          mode: 'out-in'\n        }\n      }, [this.$createElement('div', {\n        domProps: { innerHTML: title },\n        key: title\n      })]);\n    },\n    genTitleDate: function genTitleDate(title) {\n      var _this2 = this;\n\n      return this.$createElement('div', {\n        staticClass: 'picker--date__title-date',\n        'class': {\n          'active': this.activePicker === this.type.toUpperCase()\n        },\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            _this2.activePicker = _this2.type.toUpperCase();\n          }\n        }\n      }, [this.genTitleText(title)]);\n    },\n    genTitle: function genTitle(title) {\n      return this.genPickerTitle([this.getYearBtn(), this.genTitleDate(title)]);\n    }\n  }\n});\n\n/***/ }),\n/* 141 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genBtn: function genBtn(change, children) {\n      var _this = this;\n\n      return this.$createElement('v-btn', {\n        props: {\n          dark: this.dark,\n          icon: true\n        },\n        nativeOn: {\n          click: function click(e) {\n            e.stopPropagation();\n            if (_this.activePicker === 'DATE') {\n              _this.updateTableMonth(change);\n            } else if (_this.activePicker === 'MONTH') {\n              _this.tableDate = '' + change;\n            }\n          }\n        }\n      }, children);\n    },\n    genHeader: function genHeader(keyValue, selectorText) {\n      var _this2 = this;\n\n      var header = this.$createElement('strong', {\n        'class': this.addTextColorClassChecks(),\n        key: keyValue,\n        on: {\n          click: function click() {\n            return _this2.activePicker = _this2.activePicker === 'DATE' ? 'MONTH' : 'YEAR';\n          }\n        }\n      }, selectorText);\n\n      var transition = this.$createElement('transition', {\n        props: { name: this.computedTransition }\n      }, [header]);\n\n      return this.$createElement('div', {\n        'class': 'picker--date__header-selector-date'\n      }, [transition]);\n    },\n    genSelector: function genSelector() {\n      var keyValue = this.activePicker === 'DATE' ? this.tableMonth : this.tableYear;\n      // Generates the text of the button switching the active picker in the table header.\n      // For date picker it uses headerDateFormat formatting function (defined by dev or\n      // default). For month picker it uses Date::toLocaleDateString to get the year\n      // in the current locale or just a year numeric value if Date::toLocaleDateString\n      // is not supported\n      var selectorText = this.activePicker === 'DATE' ? this.formatters.headerDate(this.tableYear + '-' + (this.tableMonth + 1)) : this.formatters.year('' + this.tableYear);\n\n      return this.$createElement('div', {\n        'class': 'picker--date__header-selector'\n      }, [this.genBtn(keyValue - 1, [this.$createElement('v-icon', 'chevron_left')]), this.genHeader(keyValue, selectorText), this.genBtn(keyValue + 1, [this.$createElement('v-icon', 'chevron_right')])]);\n    }\n  }\n});\n\n/***/ }),\n/* 142 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    dateWheelScroll: function dateWheelScroll(e) {\n      e.preventDefault();\n\n      this.updateTableMonth(e.deltaY < 0 ? this.tableMonth + 1 : this.tableMonth - 1);\n    },\n    dateGenTHead: function dateGenTHead() {\n      var _this = this;\n\n      var days = this.weekDays.map(function (day) {\n        return _this.$createElement('th', day);\n      });\n      return this.$createElement('thead', this.dateGenTR(days));\n    },\n    dateClick: function dateClick(day) {\n      var _this2 = this;\n\n      this.inputDate = this.sanitizeDateString(this.tableYear + '-' + (this.tableMonth + 1) + '-' + day, 'date');\n      this.$nextTick(function () {\n        return _this2.autosave && _this2.save();\n      });\n    },\n    dateGenTD: function dateGenTD(day) {\n      var _this3 = this;\n\n      var date = this.sanitizeDateString(this.tableYear + '-' + (this.tableMonth + 1) + '-' + day, 'date');\n      var buttonText = this.formatters.day(date);\n      var isActive = this.dateIsActive(day);\n      var isCurrent = this.dateIsCurrent(day);\n      var classes = Object.assign({\n        'btn--active': isActive,\n        'btn--outline': isCurrent && !isActive,\n        'btn--disabled': !this.isAllowed(date)\n      }, this.themeClasses);\n\n      var button = this.$createElement('button', {\n        staticClass: 'btn btn--raised btn--icon',\n        'class': isActive || isCurrent ? this.addBackgroundColorClassChecks(classes) : classes,\n        attrs: {\n          type: 'button'\n        },\n        domProps: {\n          innerHTML: '<span class=\"btn__content\">' + buttonText + '</span>'\n        },\n        on: {\n          click: function click() {\n            return _this3.dateClick(day);\n          }\n        }\n      });\n\n      return this.$createElement('td', [button]);\n    },\n\n    // Returns number of the days from the firstDayOfWeek to the first day of the current month\n    weekDaysBeforeFirstDayOfTheMonth: function weekDaysBeforeFirstDayOfTheMonth() {\n      var pad = function pad(n) {\n        return n * 1 < 10 ? '0' + n * 1 : '' + n;\n      };\n      var firstDayOfTheMonth = new Date(this.tableYear + '-' + pad(this.tableMonth + 1) + '-01T00:00:00+00:00');\n      var weekDay = firstDayOfTheMonth.getUTCDay();\n      return (weekDay - parseInt(this.firstDayOfWeek) + 7) % 7;\n    },\n    dateGenTBody: function dateGenTBody() {\n      var children = [];\n      var daysInMonth = new Date(this.tableYear, this.tableMonth + 1, 0).getDate();\n      var rows = [];\n      var day = this.weekDaysBeforeFirstDayOfTheMonth();\n\n      for (var i = 0; i < day; i++) {\n        rows.push(this.$createElement('td'));\n      }\n\n      for (var _i = 1; _i <= daysInMonth; _i++) {\n        rows.push(this.dateGenTD(_i));\n\n        if (rows.length % 7 === 0) {\n          children.push(this.dateGenTR(rows));\n          rows = [];\n        }\n      }\n\n      if (rows.length) {\n        children.push(this.dateGenTR(rows));\n      }\n\n      children.length < 6 && children.push(this.dateGenTR([this.$createElement('td', { domProps: { innerHTML: '&nbsp;' } })]));\n\n      return this.$createElement('tbody', children);\n    },\n    dateGenTR: function dateGenTR() {\n      var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return [this.$createElement('tr', data, children)];\n    },\n    dateIsActive: function dateIsActive(i) {\n      return this.tableYear === this.year && this.tableMonth === this.month && this.day === i;\n    },\n    dateIsCurrent: function dateIsCurrent(i) {\n      return this.currentYear === this.tableYear && this.currentMonth === this.tableMonth && this.currentDay === i;\n    }\n  }\n});\n\n/***/ }),\n/* 143 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    monthWheelScroll: function monthWheelScroll(e) {\n      e.preventDefault();\n\n      var year = this.tableYear;\n\n      if (e.deltaY < 0) year++;else year--;\n\n      this.tableDate = '' + year;\n    },\n    monthClick: function monthClick(month) {\n      var _this = this;\n\n      // Updates inputDate setting 'YYYY-MM' or 'YYYY-MM-DD' format, depending on the picker type\n      if (this.type === 'date') {\n        var date = this.sanitizeDateString(this.tableYear + '-' + (month + 1) + '-' + this.day, 'date');\n        if (this.isAllowed(date)) this.inputDate = date;\n        this.updateTableMonth(month);\n        this.activePicker = 'DATE';\n      } else {\n        this.inputDate = this.sanitizeDateString(this.tableYear + '-' + (month + 1), 'month');\n        this.$nextTick(function () {\n          return _this.autosave && _this.save();\n        });\n      }\n    },\n    monthGenTD: function monthGenTD(month) {\n      var _this2 = this;\n\n      var pad = function pad(n) {\n        return n * 1 < 10 ? '0' + n * 1 : '' + n;\n      };\n      var date = this.tableYear + '-' + pad(month + 1);\n      var monthName = this.formatters.month(date);\n      var isActive = this.monthIsActive(month);\n      var isCurrent = this.monthIsCurrent(month);\n      var classes = Object.assign({\n        'btn--flat': !isActive,\n        'btn--active': isActive,\n        'btn--outline': isCurrent && !isActive,\n        'btn--disabled': this.type === 'month' && !this.isAllowed(date)\n      }, this.themeClasses);\n\n      return this.$createElement('td', [this.$createElement('button', {\n        staticClass: 'btn',\n        'class': isActive || isCurrent ? this.addBackgroundColorClassChecks(classes) : classes,\n        attrs: {\n          type: 'button'\n        },\n        domProps: {\n          innerHTML: '<span class=\"btn__content\">' + monthName + '</span>'\n        },\n        on: {\n          click: function click() {\n            return _this2.monthClick(month);\n          }\n        }\n      })]);\n    },\n    monthGenTBody: function monthGenTBody() {\n      var _this3 = this;\n\n      var children = [];\n      var cols = Array(3).fill(null);\n      var rows = 12 / cols.length;\n\n      var _loop = function _loop(row) {\n        children.push(_this3.$createElement('tr', cols.map(function (_, col) {\n          return _this3.monthGenTD(row * cols.length + col);\n        })));\n      };\n\n      for (var row = 0; row < rows; row++) {\n        _loop(row);\n      }\n\n      return this.$createElement('tbody', children);\n    },\n    monthIsActive: function monthIsActive(i) {\n      return this.tableYear === this.year && (this.type === 'month' ? this.month : this.tableMonth) === i;\n    },\n    monthIsCurrent: function monthIsCurrent(i) {\n      return this.currentYear === this.tableYear && this.currentMonth === i;\n    }\n  }\n});\n\n/***/ }),\n/* 144 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VDialog__ = __webpack_require__(26);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VDialog__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VDialog__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VDialog__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VDialog__[\"a\" /* default */]);\n\n/***/ }),\n/* 145 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VDivider__ = __webpack_require__(146);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VDivider__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VDivider__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VDivider__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VDivider__[\"a\" /* default */]);\n\n/***/ }),\n/* 146 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_themeable__ = __webpack_require__(1);\n__webpack_require__(147);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-divider',\n\n  functional: true,\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_themeable__[\"a\" /* default */]],\n\n  props: {\n    inset: Boolean\n  },\n\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n\n    data.staticClass = ('divider ' + (data.staticClass || '')).trim();\n\n    if (props.inset) data.staticClass += ' divider--inset';\n    if (props.light) data.staticClass += ' theme--light';\n    if (props.dark) data.staticClass += ' theme--dark';\n\n    return h('hr', data);\n  }\n});\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 148 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VExpansionPanel__ = __webpack_require__(149);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VExpansionPanelContent__ = __webpack_require__(151);\n/* unused harmony reexport VExpansionPanel */\n/* unused harmony reexport VExpansionPanelContent */\n\n\n\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VExpansionPanel__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VExpansionPanel__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VExpansionPanel__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VExpansionPanelContent__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VExpansionPanelContent__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VExpansionPanel__[\"a\" /* default */]);\n\n/***/ }),\n/* 149 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_themeable__ = __webpack_require__(1);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n__webpack_require__(150);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-expansion-panel',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_themeable__[\"a\" /* default */]],\n\n  provide: function provide() {\n    return {\n      panelClick: this.panelClick,\n      focusable: this.focusable\n    };\n  },\n\n\n  props: {\n    expand: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean\n  },\n\n  methods: {\n    getChildren: function getChildren() {\n      return this.$children.filter(function (c) {\n        if (!c.$options) return;\n\n        return c.$options.name === 'v-expansion-panel-content';\n      });\n    },\n    panelClick: function panelClick(uid) {\n      if (!this.expand) {\n        return this.getChildren().forEach(function (e) {\n          return e.toggle(uid);\n        });\n      }\n\n      var panel = this.$children.find(function (e) {\n        return e._uid === uid;\n      });\n\n      panel && panel.toggle(uid);\n    }\n  },\n\n  render: function render(h) {\n    return h('ul', {\n      staticClass: 'expansion-panel',\n      'class': _extends({\n        'expansion-panel--focusable': this.focusable,\n        'expansion-panel--popout': this.popout,\n        'expansion-panel--inset': this.inset\n      }, this.themeClasses)\n    }, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 151 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transitions__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_bootable__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_toggleable__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__directives_ripple__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__directives_click_outside__ = __webpack_require__(6);\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-expansion-panel-content',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_bootable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_toggleable__[\"a\" /* default */]],\n\n  components: {\n    VIcon: __WEBPACK_IMPORTED_MODULE_3__VIcon__[\"a\" /* default */]\n  },\n\n  directives: {\n    Ripple: __WEBPACK_IMPORTED_MODULE_4__directives_ripple__[\"a\" /* default */],\n    ClickOutside: __WEBPACK_IMPORTED_MODULE_5__directives_click_outside__[\"a\" /* default */]\n  },\n\n  inject: ['focusable', 'panelClick'],\n\n  data: function data() {\n    return {\n      height: 'auto'\n    };\n  },\n\n\n  props: {\n    hideActions: Boolean,\n    ripple: Boolean\n  },\n\n  methods: {\n    genBody: function genBody() {\n      return this.$createElement('div', {\n        ref: 'body',\n        class: 'expansion-panel__body',\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }]\n      }, this.showLazyContent(this.$slots.default));\n    },\n    genHeader: function genHeader() {\n      var _this = this;\n\n      return this.$createElement('div', {\n        staticClass: 'expansion-panel__header',\n        directives: [{\n          name: 'ripple',\n          value: this.ripple\n        }],\n        on: {\n          click: function click() {\n            return _this.panelClick(_this._uid);\n          }\n        }\n      }, [this.$slots.header, this.genIcon()]);\n    },\n    genIcon: function genIcon(h) {\n      if (this.hideActions) return null;\n\n      var icon = this.$slots.actions || this.$createElement('v-icon', 'keyboard_arrow_down');\n\n      return this.$createElement('div', {\n        staticClass: 'header__icon'\n      }, [icon]);\n    },\n    toggle: function toggle(uid) {\n      var _this2 = this;\n\n      var isActive = this._uid === uid && !this.isActive;\n\n      if (isActive) this.isBooted = true;\n\n      // We treat bootable differently\n      // Needs time to calc height\n      this.$nextTick(function () {\n        return _this2.isActive = isActive;\n      });\n    }\n  },\n\n  render: function render(h) {\n    var _this3 = this;\n\n    var children = [];\n\n    this.$slots.header && children.push(this.genHeader());\n    children.push(h(__WEBPACK_IMPORTED_MODULE_0__transitions__[\"a\" /* VExpandTransition */], [this.genBody()]));\n\n    return h('li', {\n      staticClass: 'expansion-panel__container',\n      'class': {\n        'expansion-panel__container--active': this.isActive\n      },\n      attrs: {\n        tabindex: 0\n      },\n      on: {\n        keydown: function keydown(e) {\n          // Ensure element is focusable and the activeElement\n          if (_this3.focusable && _this3.$el === document.activeElement && e.keyCode === 13) _this3.panelClick(_this3._uid);\n        }\n      }\n    }, children);\n  }\n});\n\n/***/ }),\n/* 152 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VFooter__ = __webpack_require__(153);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VFooter__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VFooter__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VFooter__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VFooter__[\"a\" /* default */]);\n\n/***/ }),\n/* 153 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__ = __webpack_require__(1);\n__webpack_require__(154);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-footer',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__[\"a\" /* default */]],\n\n  props: {\n    absolute: Boolean,\n    fixed: Boolean\n  },\n\n  computed: {\n    paddingLeft: function paddingLeft() {\n      return this.fixed || !this.app ? 0 : this.$vuetify.application.left;\n    },\n    paddingRight: function paddingRight() {\n      return this.fixed || !this.app ? 0 : this.$vuetify.application.right;\n    }\n  },\n\n  destroyed: function destroyed() {\n    if (this.app) this.$vuetify.application.bottom = 0;\n  },\n\n\n  methods: {\n    updateApplication: function updateApplication() {\n      if (!this.app) return;\n\n      this.$vuetify.application.bottom = this.fixed ? this.$el && this.$el.clientHeight : 0;\n    }\n  },\n\n  mounted: function mounted() {\n    this.updateApplication();\n  },\n  render: function render(h) {\n    this.updateApplication();\n\n    var data = {\n      staticClass: 'footer',\n      'class': this.addBackgroundColorClassChecks({\n        'footer--absolute': this.absolute,\n        'footer--fixed': this.fixed,\n        'theme--dark': this.dark,\n        'theme--light': this.light\n      }),\n      style: {\n        paddingLeft: this.paddingLeft + 'px',\n        paddingRight: this.paddingRight + 'px'\n      },\n      ref: 'content'\n    };\n\n    return h('footer', data, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 155 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VForm__ = __webpack_require__(156);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VForm__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VForm__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VForm__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VForm__[\"a\" /* default */]);\n\n/***/ }),\n/* 156 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-form',\n\n  inheritAttrs: false,\n\n  data: function data() {\n    return {\n      inputs: [],\n      errorBag: {}\n    };\n  },\n\n\n  props: {\n    value: Boolean,\n    lazyValidation: Boolean\n  },\n\n  watch: {\n    errorBag: {\n      handler: function handler() {\n        var errors = Object.values(this.errorBag).includes(true);\n\n        this.$emit('input', !errors);\n\n        return !errors;\n      },\n\n      deep: true\n    }\n  },\n\n  methods: {\n    getInputs: function getInputs() {\n      var results = [];\n\n      var search = function search(children) {\n        var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var child = _step.value;\n\n            if (child.errorBucket !== undefined) {\n              results.push(child);\n            } else {\n              search(child.$children, depth + 1);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (depth === 0) return results;\n      };\n\n      return search(this.$children);\n    },\n    watchInputs: function watchInputs() {\n      var inputs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getInputs();\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = inputs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n\n          if (this.inputs.includes(child)) {\n            continue; // We already know about this input\n          }\n\n          this.inputs.push(child);\n          this.watchChild(child);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    watchChild: function watchChild(child) {\n      var _this = this;\n\n      var watcher = function watcher(child) {\n        child.$watch('valid', function (val) {\n          _this.$set(_this.errorBag, child._uid, !val);\n        }, { immediate: true });\n      };\n\n      if (!this.lazyValidation) return watcher(child);\n\n      // Only start watching inputs if we need to\n      child.$watch('shouldValidate', function (val) {\n        if (!val) return;\n\n        // Only watch if we're not already doing it\n        if (_this.errorBag.hasOwnProperty(child._uid)) return;\n\n        watcher(child);\n      });\n    },\n    validate: function validate() {\n      var errors = this.inputs.filter(function (input) {\n        return !input.validate(true);\n      }).length;\n      return !errors;\n    },\n    reset: function reset() {\n      var _this2 = this;\n\n      this.inputs.forEach(function (input) {\n        return input.reset();\n      });\n      if (this.lazyValidation) {\n        Object.keys(this.errorBag).forEach(function (key) {\n          return _this2.$delete(_this2.errorBag, key);\n        });\n      }\n    }\n  },\n\n  mounted: function mounted() {\n    this.watchInputs();\n  },\n  updated: function updated() {\n    var inputs = this.getInputs();\n\n    if (inputs.length < this.inputs.length) {\n      // Something was removed, we don't want it in the errorBag any more\n      var removed = this.inputs.filter(function (i) {\n        return !inputs.includes(i);\n      });\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = removed[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var input = _step3.value;\n\n          this.$delete(this.errorBag, input._uid);\n          this.$delete(this.inputs, this.inputs.indexOf(input));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n\n    this.watchInputs(inputs);\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    return h('form', {\n      attrs: Object.assign({\n        novalidate: true\n      }, this.$attrs),\n      on: {\n        submit: function submit(e) {\n          return _this3.$emit('submit', e);\n        }\n      }\n    }, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 157 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VSpacer */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VContent__ = __webpack_require__(158);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VContainer__ = __webpack_require__(160);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__VFlex__ = __webpack_require__(161);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__VLayout__ = __webpack_require__(162);\n/* unused harmony reexport VContainer */\n/* unused harmony reexport VContent */\n/* unused harmony reexport VFlex */\n/* unused harmony reexport VLayout */\n\n\n\n\n\n\nvar VSpacer = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('spacer');\n\n\n\nvar VGrid = {};\n\n/* istanbul ignore next */\nVGrid.install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VContent__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VContent__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_2__VContainer__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_2__VContainer__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_3__VFlex__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_3__VFlex__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_4__VLayout__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_4__VLayout__[\"a\" /* default */]);\n  Vue.component(VSpacer.name, VSpacer);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VGrid);\n\n/***/ }),\n/* 158 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__(159);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-content',\n\n  props: {\n    tag: {\n      type: String,\n      default: 'main'\n    }\n  },\n\n  computed: {\n    styles: function styles() {\n      var _$vuetify$application = this.$vuetify.application,\n          bar = _$vuetify$application.bar,\n          top = _$vuetify$application.top,\n          right = _$vuetify$application.right,\n          bottom = _$vuetify$application.bottom,\n          left = _$vuetify$application.left;\n\n\n      return {\n        paddingTop: top + bar + 'px',\n        paddingRight: right + 'px',\n        paddingBottom: bottom + 'px',\n        paddingLeft: left + 'px'\n      };\n    }\n  },\n\n  mounted: function mounted() {\n    // TODO: Deprecate\n    if (this.$el.parentElement.tagName === 'MAIN') {\n      console.warn('v-content no longer needs to be wrapped in a <main> tag', this.$el.parentElement);\n    }\n  },\n  render: function render(h) {\n    var data = {\n      staticClass: 'content',\n      style: this.styles,\n      ref: 'content'\n    };\n\n    return h('div', {\n      staticClass: 'content--wrap'\n    }, [h(this.tag, data, this.$slots.default)]);\n  }\n});\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 160 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__grid__ = __webpack_require__(24);\n__webpack_require__(23);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_0__grid__[\"a\" /* default */])('container'));\n\n/***/ }),\n/* 161 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__grid__ = __webpack_require__(24);\n__webpack_require__(23);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_0__grid__[\"a\" /* default */])('flex'));\n\n/***/ }),\n/* 162 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__grid__ = __webpack_require__(24);\n__webpack_require__(23);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_0__grid__[\"a\" /* default */])('layout'));\n\n/***/ }),\n/* 163 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VNavigationDrawer__ = __webpack_require__(164);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VNavigationDrawer__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VNavigationDrawer__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VNavigationDrawer__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VNavigationDrawer__[\"a\" /* default */]);\n\n/***/ }),\n/* 164 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_overlayable__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__directives_click_outside__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__directives_resize__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__directives_touch__ = __webpack_require__(7);\n__webpack_require__(165);\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-navigation-drawer',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_overlayable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__[\"a\" /* default */]],\n\n  directives: {\n    ClickOutside: __WEBPACK_IMPORTED_MODULE_3__directives_click_outside__[\"a\" /* default */],\n    Resize: __WEBPACK_IMPORTED_MODULE_4__directives_resize__[\"a\" /* default */],\n    Touch: __WEBPACK_IMPORTED_MODULE_5__directives_touch__[\"a\" /* default */]\n  },\n\n  data: function data() {\n    return {\n      isActive: false,\n      touchArea: {\n        left: 0,\n        right: 0\n      }\n    };\n  },\n\n\n  props: {\n    absolute: Boolean,\n    clipped: Boolean,\n    disableRouteWatcher: Boolean,\n    disableResizeWatcher: Boolean,\n    height: String,\n    fixed: Boolean,\n    floating: Boolean,\n    miniVariant: Boolean,\n    miniVariantWidth: {\n      type: [Number, String],\n      default: 80\n    },\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 1264\n    },\n    permanent: Boolean,\n    right: Boolean,\n    stateless: Boolean,\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 300\n    },\n    value: { required: false }\n  },\n\n  computed: {\n    calculatedHeight: function calculatedHeight() {\n      return this.height || '100%';\n    },\n    calculatedWidth: function calculatedWidth() {\n      return this.miniVariant ? this.miniVariantWidth : this.width;\n    },\n    classes: function classes() {\n      return {\n        'navigation-drawer': true,\n        'navigation-drawer--absolute': this.absolute,\n        'navigation-drawer--clipped': this.clipped,\n        'navigation-drawer--close': !this.isActive,\n        'navigation-drawer--fixed': this.fixed,\n        'navigation-drawer--floating': this.floating,\n        'navigation-drawer--is-mobile': this.isMobile,\n        'navigation-drawer--mini-variant': this.miniVariant,\n        'navigation-drawer--open': this.isActive,\n        'navigation-drawer--right': this.right,\n        'navigation-drawer--temporary': this.temporary,\n        'theme--dark': this.dark,\n        'theme--light': this.light\n      };\n    },\n    isMobile: function isMobile() {\n      return !this.permanent && !this.temporary && this.$vuetify.breakpoint.width < parseInt(this.mobileBreakPoint, 10);\n    },\n    marginTop: function marginTop() {\n      if (!this.app) return 0;\n      var marginTop = this.$vuetify.application.bar;\n\n      marginTop += this.clipped ? this.$vuetify.application.top : 0;\n\n      return marginTop;\n    },\n    maxHeight: function maxHeight() {\n      if (!this.app) return '100%';\n\n      return this.clipped ? this.$vuetify.application.top + this.$vuetify.application.bottom : this.$vuetify.application.bottom;\n    },\n    reactsToClick: function reactsToClick() {\n      return !this.stateless && !this.permanent && (this.isMobile || this.temporary);\n    },\n    reactsToMobile: function reactsToMobile() {\n      return !this.disableResizeWatcher && !this.stateless && !this.permanent && !this.temporary;\n    },\n    reactsToRoute: function reactsToRoute() {\n      return !this.disableRouteWatcher && !this.stateless && !this.permanent;\n    },\n    resizeIsDisabled: function resizeIsDisabled() {\n      return this.disableResizeWatcher || this.stateless;\n    },\n    showOverlay: function showOverlay() {\n      return this.isActive && (this.temporary || this.isMobile);\n    },\n    styles: function styles() {\n      return {\n        height: this.calculatedHeight,\n        marginTop: this.marginTop + 'px',\n        maxHeight: 'calc(100% - ' + this.maxHeight + 'px)',\n        width: this.calculatedWidth + 'px'\n      };\n    }\n  },\n\n  watch: {\n    $route: function $route() {\n      if (this.reactsToRoute) {\n        this.isActive = !this.closeConditional();\n      }\n    },\n    isActive: function isActive(val) {\n      this.$emit('input', val);\n\n      if (this.temporary || this.isMobile) {\n        this.tryOverlay();\n        this.$el && (this.$el.scrollTop = 0);\n      }\n\n      this.updateApplication();\n    },\n\n    /**\n     * When mobile changes, adjust\n     * the active state only when\n     * there has been a previous\n     * value\n     */\n    isMobile: function isMobile(val, prev) {\n      !val && this.isActive && !this.temporary && this.removeOverlay();\n\n      if (prev == null || this.resizeIsDisabled || !this.reactsToMobile) return;\n\n      this.isActive = !val;\n      this.updateApplication();\n    },\n    miniVariant: function miniVariant() {\n      this.updateApplication();\n    },\n    permanent: function permanent(val) {\n      // If enabling prop\n      // enable the drawer\n      if (val) {\n        this.isActive = true;\n      }\n      this.updateApplication();\n    },\n    right: function right(val, prev) {\n      // When the value changes\n      // reset previous direction\n      if (prev != null) {\n        var dir = val ? 'left' : 'right';\n        this.$vuetify.application[dir] = 0;\n      }\n\n      this.updateApplication();\n    },\n    temporary: function temporary(val) {\n      this.tryOverlay();\n      this.updateApplication();\n    },\n    value: function value(val) {\n      if (this.permanent) return;\n\n      if (val !== this.isActive) this.isActive = val;\n    }\n  },\n\n  created: function created() {\n    if (this.permanent) {\n      this.isActive = true;\n    } else if (this.stateless || this.value != null) {\n      this.isActive = this.value;\n    } else if (!this.temporary) {\n      this.isActive = !this.isMobile;\n    }\n  },\n  destroyed: function destroyed() {\n    if (this.app) {\n      this.$vuetify.application[this.right ? 'right' : 'left'] = 0;\n    }\n  },\n\n\n  methods: {\n    calculateTouchArea: function calculateTouchArea() {\n      if (!this.$el.parentNode) return;\n      var parentRect = this.$el.parentNode.getBoundingClientRect();\n\n      this.touchArea = {\n        left: parentRect.left + 50,\n        right: parentRect.right - 50\n      };\n    },\n    closeConditional: function closeConditional() {\n      return this.reactsToClick;\n    },\n    genDirectives: function genDirectives() {\n      var directives = [{ name: 'click-outside', value: this.closeConditional }];\n\n      !this.touchless && directives.push({\n        name: 'touch',\n        value: {\n          parent: true,\n          left: this.swipeLeft,\n          right: this.swipeRight\n        }\n      });\n\n      return directives;\n    },\n    swipeRight: function swipeRight(e) {\n      if (this.isActive && !this.right) return;\n      this.calculateTouchArea();\n\n      if (Math.abs(e.touchendX - e.touchstartX) < 100) return;else if (!this.right && e.touchstartX <= this.touchArea.left) this.isActive = true;else if (this.right && this.isActive) this.isActive = false;\n    },\n    swipeLeft: function swipeLeft(e) {\n      if (this.isActive && this.right) return;\n      this.calculateTouchArea();\n\n      if (Math.abs(e.touchendX - e.touchstartX) < 100) return;else if (this.right && e.touchstartX >= this.touchArea.right) this.isActive = true;else if (!this.right && this.isActive) this.isActive = false;\n    },\n    tryOverlay: function tryOverlay() {\n      if (!this.permanent && this.showOverlay && this.isActive) {\n        return this.genOverlay();\n      }\n\n      this.removeOverlay();\n    },\n    updateApplication: function updateApplication() {\n      if (!this.app) return;\n\n      var width = !this.isActive || this.temporary || this.isMobile ? 0 : this.calculatedWidth;\n\n      if (this.right) {\n        this.$vuetify.application.right = width;\n      } else {\n        this.$vuetify.application.left = width;\n      }\n    }\n  },\n\n  render: function render(h) {\n    var _this = this;\n\n    var data = {\n      'class': this.classes,\n      style: this.styles,\n      directives: this.genDirectives(),\n      on: {\n        click: function click() {\n          return _this.$emit('update:miniVariant', false);\n        }\n      }\n    };\n\n    return h('aside', data, [this.$slots.default, h('div', { 'class': 'navigation-drawer__border' })]);\n  }\n});\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 166 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VPagination__ = __webpack_require__(167);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VPagination__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VPagination__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VPagination__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VPagination__[\"a\" /* default */]);\n\n/***/ }),\n/* 167 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_resize__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_colorable__ = __webpack_require__(0);\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n__webpack_require__(168);\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-pagination',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_colorable__[\"a\" /* default */]],\n\n  directives: { Resize: __WEBPACK_IMPORTED_MODULE_1__directives_resize__[\"a\" /* default */] },\n\n  data: function data() {\n    return {\n      maxButtons: 0,\n      defaultColor: 'primary'\n    };\n  },\n\n\n  props: {\n    circle: Boolean,\n    disabled: Boolean,\n    length: {\n      type: Number,\n      default: 0,\n      validator: function validator(val) {\n        return val % 1 === 0;\n      }\n    },\n    totalVisible: [Number, String],\n    nextIcon: {\n      type: String,\n      default: 'chevron_right'\n    },\n    prevIcon: {\n      type: String,\n      default: 'chevron_left'\n    },\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'pagination': true,\n        'pagination--circle': this.circle,\n        'pagination--disabled': this.disabled\n      };\n    },\n    items: function items() {\n      var maxLength = this.totalVisible || this.maxButtons;\n      if (this.length <= maxLength) {\n        return this.range(1, this.length);\n      }\n\n      var even = maxLength % 2 === 0 ? 1 : 0;\n      var left = Math.floor(maxLength / 2);\n      var right = this.length - left + 1 + even;\n\n      if (this.value >= left && this.value <= right) {\n        var start = this.value - left + 2;\n        var end = this.value + left - 2 - even;\n\n        return [1, '...'].concat(_toConsumableArray(this.range(start, end)), ['...', this.length]);\n      } else {\n        return [].concat(_toConsumableArray(this.range(1, left)), ['...'], _toConsumableArray(this.range(this.length - left + 1 + even, this.length)));\n      }\n    }\n  },\n\n  watch: {\n    value: function value() {\n      this.init();\n    }\n  },\n\n  mounted: function mounted() {\n    this.init();\n  },\n\n\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.selected = null;\n\n      // TODO: Change this (f75dee3a, cbdf7caa)\n      setTimeout(function () {\n        return _this.selected = _this.value;\n      }, 100);\n    },\n    onResize: function onResize() {\n      var width = this.$el && this.$el.parentNode ? this.$el.parentNode.clientWidth : window.innerWidth;\n\n      this.maxButtons = Math.floor((width - 96) / 42);\n    },\n    next: function next(e) {\n      e.preventDefault();\n      this.$emit('input', this.value + 1);\n      this.$emit('next');\n    },\n    previous: function previous(e) {\n      e.preventDefault();\n      this.$emit('input', this.value - 1);\n      this.$emit('previous');\n    },\n    range: function range(from, to) {\n      var range = [];\n\n      from = from > 0 ? from : 1;\n\n      for (var i = from; i <= to; i++) {\n        range.push(i);\n      }\n\n      return range;\n    },\n    genIcon: function genIcon(h, icon, disabled, fn) {\n      return h('li', [h('button', {\n        staticClass: 'pagination__navigation',\n        class: {\n          'pagination__navigation--disabled': disabled\n        },\n        on: disabled ? {} : { click: fn }\n      }, [h(__WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */], [icon])])]);\n    },\n    genItem: function genItem(h, i) {\n      var _this2 = this;\n\n      return h('button', {\n        staticClass: 'pagination__item',\n        class: i === this.value ? this.addBackgroundColorClassChecks({\n          'pagination__item--active': true\n        }) : {},\n        on: {\n          click: function click() {\n            return _this2.$emit('input', i);\n          }\n        }\n      }, [i]);\n    },\n    genItems: function genItems(h) {\n      var _this3 = this;\n\n      return this.items.map(function (i) {\n        return h('li', [isNaN(i) && h('span', { class: 'pagination__more' }, [i]) || _this3.genItem(h, i)]);\n      });\n    }\n  },\n\n  render: function render(h) {\n    var children = [this.genIcon(h, this.prevIcon, this.value <= 1, this.previous), this.genItems(h), this.genIcon(h, this.nextIcon, this.value >= this.length, this.next)];\n\n    return h('ul', {\n      directives: [{ name: 'resize', value: this.onResize }],\n      class: this.classes\n    }, children);\n  }\n});\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 169 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VParallax__ = __webpack_require__(170);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VParallax__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VParallax__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VParallax__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VParallax__[\"a\" /* default */]);\n\n/***/ }),\n/* 170 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_translatable__ = __webpack_require__(172);\n__webpack_require__(171);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-parallax',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_translatable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      isBooted: false\n    };\n  },\n\n\n  props: {\n    alt: String,\n    height: {\n      type: [String, Number],\n      default: 500\n    },\n    jumbotron: Boolean,\n    src: String\n  },\n\n  computed: {\n    styles: function styles() {\n      return {\n        display: 'block',\n        opacity: this.isBooted ? 1 : 0,\n        transform: 'translate(-50%, ' + (this.jumbotron ? 0 : this.parallax + 'px') + ')'\n      };\n    }\n  },\n\n  watch: {\n    parallax: function parallax() {\n      this.isBooted = true;\n    }\n  },\n\n  mounted: function mounted() {\n    this.init();\n  },\n\n\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      if (!this.$refs.img) return;\n\n      if (this.$refs.img.complete) {\n        this.translate();\n        this.listeners();\n      } else {\n        this.$refs.img.addEventListener('load', function () {\n          _this.translate();\n          _this.listeners();\n        }, false);\n      }\n    },\n    objHeight: function objHeight() {\n      return this.$refs.img.naturalHeight;\n    },\n    elOffsetTop: function elOffsetTop() {\n      return this.$el.offsetTop;\n    }\n  },\n\n  render: function render(h) {\n    var imgData = {\n      staticClass: 'parallax__image',\n      'class': {\n        'parallax__image--jumbotron': this.jumbotron\n      },\n      style: this.styles,\n      attrs: {\n        src: this.src\n      },\n      ref: 'img'\n    };\n\n    if (this.alt) imgData.attrs.alt = this.alt;\n\n    var container = h('div', {\n      staticClass: 'parallax__image-container'\n    }, [h('img', imgData)]);\n\n    var content = h('div', {\n      staticClass: 'parallax__content'\n    }, this.$slots.default);\n\n    return h('div', {\n      staticClass: 'parallax',\n      style: {\n        height: this.jumbotron ? this.normalizedHeight : this.normalizedHeight + 'px'\n      },\n      on: this.$listeners\n    }, [container, content]);\n  }\n});\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 172 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      parallax: null,\n      parallaxDist: null,\n      percentScrolled: null,\n      scrollTop: null,\n      windowHeight: null,\n      windowBottom: null\n    };\n  },\n\n\n  computed: {\n    normalizedHeight: function normalizedHeight() {\n      if (this.jumbotron) {\n        return isNaN(this.height) ? this.height : this.height + 'px';\n      }\n\n      return Number(this.height.toString().replace(/(^[0-9]*$)/, '$1'));\n    },\n    imgHeight: function imgHeight() {\n      return this.objHeight();\n    }\n  },\n\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('scroll', this.translate, false);\n    window.removeEventListener('resize', this.translate, false);\n  },\n\n\n  methods: {\n    listeners: function listeners() {\n      window.addEventListener('scroll', this.translate, false);\n      window.addEventListener('resize', this.translate, false);\n    },\n    translate: function translate() {\n      this.calcDimensions();\n\n      this.percentScrolled = (this.windowBottom - this.elOffsetTop) / (this.normalizedHeight + this.windowHeight);\n\n      this.parallax = Math.round(this.parallaxDist * this.percentScrolled);\n\n      if (this.translated) {\n        this.translated();\n      }\n    },\n    calcDimensions: function calcDimensions() {\n      var offset = this.$el.getBoundingClientRect();\n\n      this.scrollTop = window.pageYOffset;\n      this.parallaxDist = this.imgHeight - this.normalizedHeight;\n      this.elOffsetTop = offset.top + this.scrollTop;\n      this.windowHeight = window.innerHeight;\n      this.windowBottom = this.scrollTop + this.windowHeight;\n    }\n  }\n});\n\n/***/ }),\n/* 173 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VProgressCircular__ = __webpack_require__(174);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VProgressCircular__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VProgressCircular__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VProgressCircular__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VProgressCircular__[\"a\" /* default */]);\n\n/***/ }),\n/* 174 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(0);\n__webpack_require__(175);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-progress-circular',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__[\"a\" /* default */]],\n\n  props: {\n    button: Boolean,\n\n    fill: {\n      type: String,\n      default: function _default() {\n        return this.indeterminate ? 'none' : 'transparent';\n      }\n    },\n\n    indeterminate: Boolean,\n\n    rotate: {\n      type: Number,\n      default: 0\n    },\n\n    size: {\n      type: [Number, String],\n      default: 32\n    },\n\n    width: {\n      type: Number,\n      default: 4\n    },\n\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  computed: {\n    calculatedSize: function calculatedSize() {\n      var size = Number(this.size);\n\n      if (this.button) {\n        size += 8;\n      }\n\n      return size;\n    },\n    circumference: function circumference() {\n      return 2 * Math.PI * this.radius;\n    },\n    classes: function classes() {\n      return this.addTextColorClassChecks({\n        'progress-circular': true,\n        'progress-circular--indeterminate': this.indeterminate,\n        'progress-circular--button': this.button\n      });\n    },\n    cxy: function cxy() {\n      return this.indeterminate && !this.button ? 50 : this.calculatedSize / 2;\n    },\n    normalizedValue: function normalizedValue() {\n      if (this.value < 0) {\n        return 0;\n      }\n\n      if (this.value > 100) {\n        return 100;\n      }\n\n      return this.value;\n    },\n    radius: function radius() {\n      return this.indeterminate && !this.button ? 20 : (this.calculatedSize - this.width) / 2;\n    },\n    strokeDashArray: function strokeDashArray() {\n      return Math.round(this.circumference * 1000) / 1000;\n    },\n    strokeDashOffset: function strokeDashOffset() {\n      return (100 - this.normalizedValue) / 100 * this.circumference + 'px';\n    },\n    styles: function styles() {\n      return {\n        height: this.calculatedSize + 'px',\n        width: this.calculatedSize + 'px'\n      };\n    },\n    svgSize: function svgSize() {\n      return this.indeterminate ? false : this.calculatedSize;\n    },\n    svgStyles: function svgStyles() {\n      return {\n        transform: 'rotate(' + this.rotate + 'deg)'\n      };\n    },\n    viewBox: function viewBox() {\n      return this.indeterminate ? '25 25 50 50' : false;\n    }\n  },\n\n  methods: {\n    genCircle: function genCircle(h, name, offset) {\n      return h('circle', {\n        class: 'progress-circular__' + name,\n        attrs: {\n          fill: 'transparent',\n          cx: this.cxy,\n          cy: this.cxy,\n          r: this.radius,\n          'stroke-width': this.width,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset\n        }\n      });\n    },\n    genSvg: function genSvg(h) {\n      var children = [!this.indeterminate && this.genCircle(h, 'underlay', 0), this.genCircle(h, 'overlay', this.strokeDashOffset)];\n\n      return h('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          height: this.svgSize,\n          width: this.svgSize,\n          viewBox: this.viewBox\n        }\n      }, children);\n    }\n  },\n\n  render: function render(h) {\n    var info = h('div', { class: 'progress-circular__info' }, [this.$slots.default]);\n    var svg = this.genSvg(h);\n\n    return h('div', {\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners\n    }, [svg, info]);\n  }\n});\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 176 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VRadioGroup__ = __webpack_require__(177);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VRadio__ = __webpack_require__(179);\n/* unused harmony reexport VRadioGroup */\n/* unused harmony reexport VRadio */\n\n\n\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VRadioGroup__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VRadioGroup__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VRadioGroup__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VRadio__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VRadio__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VRadioGroup__[\"a\" /* default */]);\n\n/***/ }),\n/* 177 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_input__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_registrable__ = __webpack_require__(18);\n// Styles\n__webpack_require__(14);\n__webpack_require__(21);\n__webpack_require__(178);\n\n// Mixins\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-radio-group',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_input__[\"a\" /* default */], Object(__WEBPACK_IMPORTED_MODULE_1__mixins_registrable__[\"b\" /* provide */])('radio')],\n\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      isMandatory: function isMandatory() {\n        return _this.mandatory;\n      },\n      name: function name() {\n        return _this.name;\n      }\n    };\n  },\n\n\n  data: function data() {\n    return {\n      internalTabIndex: -1,\n      radios: []\n    };\n  },\n\n  props: {\n    column: {\n      type: Boolean,\n      default: true\n    },\n    inputValue: null,\n    mandatory: {\n      type: Boolean,\n      default: true\n    },\n    name: String,\n    row: Boolean\n  },\n\n  watch: {\n    hasError: function hasError(val) {\n      this.radios.forEach(function (radio) {\n        radio.parentError = val;\n      });\n    },\n    inputValue: function inputValue(val) {\n      this.radios.forEach(function (radio) {\n        radio.isActive = val === radio.value;\n      });\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'radio-group': true,\n        'radio-group--column': this.column && !this.row,\n        'radio-group--row': this.row,\n        'error--text': this.hasError\n      };\n    }\n  },\n\n  methods: {\n    toggleRadio: function toggleRadio(value) {\n      var _this2 = this;\n\n      if (this.disabled) {\n        return;\n      }\n\n      this.shouldValidate = true;\n      this.$emit('change', value);\n      this.$nextTick(function () {\n        return _this2.validate();\n      });\n\n      this.radios.filter(function (r) {\n        return r.value !== value;\n      }).forEach(function (r) {\n        return r.isActive = false;\n      });\n    },\n    radioBlur: function radioBlur(e) {\n      if (!e.relatedTarget || !e.relatedTarget.classList.contains('radio')) {\n        this.shouldValidate = true;\n        this.$emit('blur', this.inputValue);\n      }\n    },\n    register: function register(radio) {\n      radio.isActive = this.inputValue === radio.value;\n      radio.$el.tabIndex = radio.$el.tabIndex > 0 ? radio.$el.tabIndex : 0;\n      radio.$on('change', this.toggleRadio);\n      radio.$on('blur', this.radioBlur);\n      radio.$on('focus', this.radioFocus);\n      this.radios.push(radio);\n    },\n    unregister: function unregister(radio) {\n      radio.$off('change', this.toggleRadio);\n      radio.$off('blur', this.radioBlur);\n      radio.$off('focus', this.radioFocus);\n\n      var index = this.radios.findIndex(function (r) {\n        return r === radio;\n      });\n\n      if (index > -1) this.radios.splice(index, 1);\n    }\n  },\n\n  render: function render(h) {\n    var data = {\n      attrs: {\n        role: 'radiogroup'\n      }\n    };\n    return this.genInputGroup(this.$slots.default, data);\n  }\n});\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 179 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transitions__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_rippleable__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_tab_focusable__ = __webpack_require__(180);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_themeable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixins_registrable__ = __webpack_require__(18);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n// Components\n\n\n\n// Mixins\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-radio',\n\n  inheritAttrs: false,\n\n  inject: ['isMandatory', 'name'],\n\n  components: {\n    VFadeTransition: __WEBPACK_IMPORTED_MODULE_0__transitions__[\"b\" /* VFadeTransition */],\n    VIcon: __WEBPACK_IMPORTED_MODULE_1__VIcon__[\"a\" /* default */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_rippleable__[\"a\" /* default */], Object(__WEBPACK_IMPORTED_MODULE_6__mixins_registrable__[\"a\" /* inject */])('radio', 'v-radio', 'v-radio-group'), __WEBPACK_IMPORTED_MODULE_4__mixins_tab_focusable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_5__mixins_themeable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      defaultColor: 'accent',\n      isActive: false,\n      parentError: false\n    };\n  },\n\n  props: {\n    disabled: Boolean,\n    value: null,\n    label: String\n  },\n\n  computed: {\n    classes: function classes() {\n      var classes = {\n        'input-group': true,\n        'input-group--active': this.isActive,\n        'input-group--disabled': this.disabled,\n        'input-group--selection-controls': true,\n        'input-group--tab-focused': this.tabFocused,\n        'radio': true,\n        'theme--dark': this.dark,\n        'theme--light': this.light\n      };\n\n      if (!this.parentError) {\n        return this.addTextColorClassChecks(classes);\n      }\n\n      return classes;\n    },\n    icon: function icon() {\n      return this.isActive ? 'radio_button_checked' : 'radio_button_unchecked';\n    }\n  },\n\n  methods: {\n    genInput: function genInput(radio) {\n      var value = ['string', 'number'].includes(_typeof(this.value)) ? this.value : JSON.stringify(this.value);\n      var input = this.$createElement('input', {\n        ref: 'input',\n        style: {\n          display: 'none'\n        },\n        attrs: Object.assign({\n          name: this.name && this.name(),\n          id: this.id,\n          type: 'radio',\n          value: value\n        }, this.$attrs)\n      }, [value]);\n\n      radio.push(input);\n\n      return this.$createElement('div', {\n        class: 'input-group__input'\n      }, radio);\n    },\n    genWrapper: function genWrapper(radio) {\n      var _this = this;\n\n      var children = [];\n\n      children.push(this.genLabel());\n      children.push(this.genInput(radio));\n\n      return this.$createElement('div', {\n        class: this.classes,\n        attrs: {\n          role: 'radio',\n          'aria-checked': this.isActive && 'true' || 'false',\n          'aria-label': this.label\n        },\n        on: {\n          keydown: function keydown(e) {\n            if ([13, 32].includes(e.keyCode)) {\n              e.preventDefault();\n              _this.toggle();\n            }\n          },\n          blur: function blur(e) {\n            _this.$emit('blur', e);\n            _this.tabFocused = false;\n          }\n        }\n      }, children);\n    },\n    genLabel: function genLabel() {\n      return this.$createElement('label', {\n        on: {\n          click: this.toggle\n        }\n      }, this.$slots.label || this.label);\n    },\n    toggle: function toggle() {\n      var mandatory = this.isMandatory && this.isMandatory() || false;\n\n      if (!this.disabled && (!this.isActive || !mandatory)) {\n        this.$refs.input.checked = true;\n        this.isActive = true;\n        this.$emit('change', this.value);\n      }\n    }\n  },\n\n  mounted: function mounted() {\n    this.radio.register(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.radio.unregister(this);\n  },\n  render: function render(h) {\n    var transition = h('v-fade-transition', {}, [h('v-icon', {\n      staticClass: 'icon--selection-control',\n      'class': {\n        'icon--radio': this.isActive\n      },\n      key: this.icon,\n      on: Object.assign({\n        click: this.toggle\n      }, this.$listeners)\n    }, this.icon)]);\n\n    var ripple = this.ripple ? this.genRipple() : null;\n\n    return this.genWrapper([transition, ripple]);\n  }\n});\n\n/***/ }),\n/* 180 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      tabFocused: false\n    };\n  }\n});\n\n/***/ }),\n/* 181 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VSlider__ = __webpack_require__(182);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VSlider__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VSlider__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VSlider__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VSlider__[\"a\" /* default */]);\n\n/***/ }),\n/* 182 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_input__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__directives_click_outside__ = __webpack_require__(6);\n__webpack_require__(183);\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-slider',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_input__[\"a\" /* default */]],\n\n  directives: { ClickOutside: __WEBPACK_IMPORTED_MODULE_3__directives_click_outside__[\"a\" /* default */] },\n\n  data: function data() {\n    return {\n      app: {},\n      defaultColor: 'primary',\n      isActive: false,\n      keyPressed: 0\n    };\n  },\n\n\n  props: {\n    min: {\n      type: [Number, String],\n      default: 0\n    },\n    max: {\n      type: [Number, String],\n      default: 100\n    },\n    step: {\n      type: [Number, String],\n      default: 1\n    },\n    ticks: Boolean,\n    thumbColor: {\n      type: String,\n      default: null\n    },\n    thumbLabel: Boolean,\n    trackColor: {\n      type: String,\n      default: null\n    },\n    value: [Number, String]\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'input-group--slider': true,\n        'input-group--active': this.isActive,\n        'input-group--dirty': this.inputWidth > 0,\n        'input-group--disabled': this.disabled,\n        'input-group--ticks': !this.disabled && this.stepNumeric && this.ticks\n      };\n    },\n    computedColor: function computedColor() {\n      return this.disabled ? null : this.color || this.defaultColor;\n    },\n    computedTrackColor: function computedTrackColor() {\n      return this.disabled ? null : this.trackColor || null;\n    },\n    computedThumbColor: function computedThumbColor() {\n      return this.disabled || !this.inputWidth ? null : this.thumbColor || this.color || this.defaultColor;\n    },\n    stepNumeric: function stepNumeric() {\n      return this.step > 0 ? parseFloat(this.step) : 0;\n    },\n\n    inputValue: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(val) {\n        var min = this.min,\n            max = this.max;\n\n        val = Math.min(Math.max(val, min), max);\n\n        // Round value to ensure the\n        // entire slider range can\n        // be selected with step\n        var value = this.roundValue(val);\n        this.lazyValue = value;\n\n        if (value !== this.value) {\n          this.$emit('input', value);\n        }\n      }\n    },\n    interval: function interval() {\n      return 100 / (this.max - this.min) * this.stepNumeric;\n    },\n    thumbStyles: function thumbStyles() {\n      return {\n        transition: this.keyPressed >= 2 ? 'none' : '',\n        left: this.inputWidth + '%'\n      };\n    },\n    tickContainerStyles: function tickContainerStyles() {\n      return {\n        transform: 'translate(0, -50%)'\n      };\n    },\n    trackPadding: function trackPadding() {\n      if (this.thumbLabel && this.isActive) return 0;\n\n      return 6 + (this.isActive && !this.disabled ? 3 : 0);\n    },\n    trackStyles: function trackStyles() {\n      return {\n        transition: this.keyPressed >= 2 ? 'none' : '',\n        left: 'calc(' + this.inputWidth + '% + ' + this.trackPadding + 'px)',\n        width: 'calc(' + (100 - this.inputWidth) + '% - ' + this.trackPadding + 'px)'\n      };\n    },\n    trackFillStyles: function trackFillStyles() {\n      return {\n        transition: this.keyPressed >= 2 ? 'none' : '',\n        width: 'calc(' + this.inputWidth + '% - ' + this.trackPadding + 'px)'\n      };\n    },\n    numTicks: function numTicks() {\n      return Math.ceil((this.max - this.min) / this.stepNumeric);\n    },\n    inputWidth: function inputWidth() {\n      return (this.roundValue(this.inputValue) - this.min) / (this.max - this.min) * 100;\n    }\n  },\n\n  watch: {\n    isActive: function isActive(val) {\n      this.isFocused = val;\n    },\n    min: function min(val) {\n      val > this.inputValue && this.$emit('input', parseFloat(val));\n    },\n    max: function max(val) {\n      val < this.inputValue && this.$emit('input', parseFloat(val));\n    },\n    value: function value(val) {\n      this.inputValue = parseFloat(val);\n    }\n  },\n\n  mounted: function mounted() {\n    this.inputValue = this.value;\n\n    // Without a v-app, iOS does not work with body selectors\n    this.app = document.querySelector('[data-app]') || console.warn('The v-slider component requires the presence of v-app or a non-body wrapping element with the [data-app] attribute.');\n  },\n\n\n  methods: {\n    onMouseDown: function onMouseDown(e) {\n      this.keyPressed = 2;\n      var options = { passive: true };\n      this.isActive = true;\n\n      if ('touches' in e) {\n        this.app.addEventListener('touchmove', this.onMouseMove, options);\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"a\" /* addOnceEventListener */])(this.app, 'touchend', this.onMouseUp);\n      } else {\n        this.app.addEventListener('mousemove', this.onMouseMove, options);\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"a\" /* addOnceEventListener */])(this.app, 'mouseup', this.onMouseUp);\n      }\n    },\n    onMouseUp: function onMouseUp() {\n      this.keyPressed = 0;\n      var options = { passive: true };\n      this.isActive = false;\n      this.app.removeEventListener('touchmove', this.onMouseMove, options);\n      this.app.removeEventListener('mousemove', this.onMouseMove, options);\n    },\n    onMouseMove: function onMouseMove(e) {\n      var _$refs$track$getBound = this.$refs.track.getBoundingClientRect(),\n          offsetLeft = _$refs$track$getBound.left,\n          trackWidth = _$refs$track$getBound.width;\n\n      var clientX = 'touches' in e ? e.touches[0].clientX : e.clientX;\n      var left = Math.min(Math.max((clientX - offsetLeft) / trackWidth, 0), 1);\n\n      if (clientX >= offsetLeft - 8 && clientX <= offsetLeft + trackWidth + 8) {\n        this.inputValue = parseFloat(this.min) + left * (this.max - this.min);\n      }\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (this.disabled || ![33, 34, 35, 36, 37, 39].includes(e.keyCode)) return;\n\n      e.preventDefault();\n      var step = this.stepNumeric || 1;\n      var steps = (this.max - this.min) / step;\n      if (e.keyCode === 37 || e.keyCode === 39) {\n        // Left/right\n        this.keyPressed += 1;\n\n        var direction = e.keyCode === 37 ? -1 : 1;\n        var multiplier = e.shiftKey ? 3 : e.ctrlKey ? 2 : 1;\n\n        this.inputValue = this.inputValue + direction * step * multiplier;\n      } else if (e.keyCode === 36) {\n        // Home\n        this.inputValue = parseFloat(this.min);\n      } else if (e.keyCode === 35) {\n        // End\n        this.inputValue = parseFloat(this.max);\n      } else if (e.keyCode === 33 || e.keyCode === 34) {\n        // Page up/down\n        var _direction = e.keyCode === 34 ? -1 : 1;\n        this.inputValue = this.inputValue - _direction * step * (steps > 100 ? steps / 10 : 10);\n      }\n    },\n    onKeyUp: function onKeyUp(e) {\n      this.keyPressed = 0;\n    },\n    sliderMove: function sliderMove(e) {\n      if (!this.isActive) {\n        this.onMouseMove(e);\n      }\n    },\n    genThumbLabel: function genThumbLabel(h) {\n      return h('v-scale-transition', {\n        props: { origin: 'bottom center' }\n      }, [h('div', {\n        staticClass: 'slider__thumb--label__container',\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }]\n      }, [h('div', {\n        staticClass: 'slider__thumb--label',\n        'class': this.addBackgroundColorClassChecks({}, 'computedThumbColor')\n      }, [h('span', {}, this.inputValue)])])]);\n    },\n    roundValue: function roundValue(value) {\n      if (!this.stepNumeric) {\n        return value;\n      }\n\n      // Format input value using the same number\n      // of decimals places as in the step prop\n      var trimmedStep = this.step.toString().trim();\n      var decimals = trimmedStep.indexOf('.') > -1 ? trimmedStep.length - trimmedStep.indexOf('.') - 1 : 0;\n      return 1 * (Math.round(value / this.stepNumeric) * this.stepNumeric).toFixed(decimals);\n    },\n    genThumbContainer: function genThumbContainer(h) {\n      var children = [];\n      children.push(h('div', {\n        staticClass: 'slider__thumb',\n        'class': this.addBackgroundColorClassChecks({}, 'computedThumbColor')\n      }));\n\n      this.thumbLabel && children.push(this.genThumbLabel(h));\n\n      return h('div', {\n        staticClass: 'slider__thumb-container',\n        'class': {\n          'slider__thumb-container--label': this.thumbLabel\n        },\n        style: this.thumbStyles,\n        on: {\n          touchstart: this.onMouseDown,\n          mousedown: this.onMouseDown\n        },\n        ref: 'thumb'\n      }, children);\n    },\n    genSteps: function genSteps(h) {\n      var _this = this;\n\n      var ticks = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"c\" /* createRange */])(this.numTicks + 1).map(function (i) {\n        var span = h('span', {\n          staticClass: 'slider__tick',\n          style: {\n            left: i * (100 / _this.numTicks) + '%'\n          }\n        });\n\n        return span;\n      });\n\n      return h('div', {\n        staticClass: 'slider__ticks-container',\n        style: this.tickContainerStyles\n      }, ticks);\n    },\n    genTrackContainer: function genTrackContainer(h) {\n      var children = [h('div', {\n        staticClass: 'slider__track',\n        'class': this.addBackgroundColorClassChecks({}, 'computedTrackColor'),\n        style: this.trackStyles\n      }), h('div', {\n        staticClass: 'slider__track-fill',\n        'class': this.addBackgroundColorClassChecks(),\n        style: this.trackFillStyles\n      })];\n\n      return h('div', {\n        staticClass: 'slider__track__container',\n        ref: 'track'\n      }, children);\n    }\n  },\n\n  render: function render(h) {\n    var children = [];\n\n    children.push(this.genTrackContainer(h));\n    this.step && this.ticks && children.push(this.genSteps(h));\n    children.push(this.genThumbContainer(h));\n\n    var slider = h('div', {\n      staticClass: 'slider'\n    }, children);\n\n    return this.genInputGroup([slider], {\n      attrs: {\n        role: 'slider',\n        tabindex: this.disabled ? -1 : this.tabindex\n      },\n      on: Object.assign({}, {\n        mouseup: this.sliderMove,\n        keydown: this.onKeyDown,\n        keyup: this.onKeyUp\n      }, this.$listeners),\n      directives: [{\n        name: 'click-outside'\n      }]\n    });\n  }\n});\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 184 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VSnackbar__ = __webpack_require__(185);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VSnackbar__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VSnackbar__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VSnackbar__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VSnackbar__[\"a\" /* default */]);\n\n/***/ }),\n/* 185 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transitions__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_toggleable__ = __webpack_require__(4);\n__webpack_require__(186);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-snackbar',\n\n  components: {\n    VSlideYTransition: __WEBPACK_IMPORTED_MODULE_0__transitions__[\"e\" /* VSlideYTransition */],\n    VSlideYReverseTransition: __WEBPACK_IMPORTED_MODULE_0__transitions__[\"d\" /* VSlideYReverseTransition */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_toggleable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      activeTimeout: {}\n    };\n  },\n\n\n  props: {\n    absolute: Boolean,\n    bottom: Boolean,\n    left: Boolean,\n    multiLine: Boolean,\n    right: Boolean,\n    top: Boolean,\n    // TODO: change this to closeDelay to match other API in delayable.js\n    timeout: {\n      type: Number,\n      default: 6000\n    },\n    vertical: Boolean\n  },\n\n  computed: {\n    classes: function classes() {\n      return this.addBackgroundColorClassChecks({\n        'snack--active': this.isActive,\n        'snack--absolute': this.absolute,\n        'snack--bottom': this.bottom || !this.top,\n        'snack--left': this.left,\n        'snack--multi-line': this.multiLine && !this.vertical,\n        'snack--right': this.right,\n        'snack--top': this.top,\n        'snack--vertical': this.vertical\n      });\n    },\n    computedTransition: function computedTransition() {\n      return this.top ? 'v-slide-y-transition' : 'v-slide-y-reverse-transition';\n    }\n  },\n\n  watch: {\n    isActive: function isActive() {\n      this.setTimeout();\n    }\n  },\n\n  methods: {\n    setTimeout: function (_setTimeout) {\n      function setTimeout() {\n        return _setTimeout.apply(this, arguments);\n      }\n\n      setTimeout.toString = function () {\n        return _setTimeout.toString();\n      };\n\n      return setTimeout;\n    }(function () {\n      var _this = this;\n\n      clearTimeout(this.activeTimeout);\n\n      if (this.isActive && this.timeout) {\n        this.activeTimeout = setTimeout(function () {\n          _this.isActive = false;\n        }, this.timeout);\n      }\n    })\n  },\n\n  mounted: function mounted() {\n    this.setTimeout();\n  },\n  render: function render(h) {\n    var children = [];\n\n    if (this.isActive) {\n      children.push(h('div', {\n        staticClass: 'snack__content'\n      }, this.$slots.default));\n    }\n\n    return h('div', {\n      staticClass: 'snack',\n      'class': this.classes,\n      on: this.$listeners\n    }, [h(this.computedTransition, children)]);\n  }\n});\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 187 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VSpeedDial__ = __webpack_require__(188);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VSpeedDial__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VSpeedDial__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VSpeedDial__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VSpeedDial__[\"a\" /* default */]);\n\n/***/ }),\n/* 188 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_toggleable__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_positionable__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_click_outside__ = __webpack_require__(6);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n__webpack_require__(189);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-speed-dial',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_positionable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_0__mixins_toggleable__[\"a\" /* default */]],\n\n  directives: { ClickOutside: __WEBPACK_IMPORTED_MODULE_2__directives_click_outside__[\"a\" /* default */] },\n\n  props: {\n    direction: {\n      type: String,\n      default: 'top',\n      validator: function validator(val) {\n        return ['top', 'right', 'bottom', 'left'].includes(val);\n      }\n    },\n    hover: Boolean,\n    transition: {\n      type: String,\n      default: 'scale-transition'\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      return _defineProperty({\n        'speed-dial': true,\n        'speed-dial--top': this.top,\n        'speed-dial--right': this.right,\n        'speed-dial--bottom': this.bottom,\n        'speed-dial--left': this.left,\n        'speed-dial--absolute': this.absolute,\n        'speed-dial--fixed': this.fixed\n      }, 'speed-dial--direction-' + this.direction, true);\n    }\n  },\n\n  render: function render(h) {\n    var _this = this;\n\n    var children = [];\n    var data = {\n      'class': this.classes,\n      directives: [{\n        name: 'click-outside'\n      }],\n      on: {\n        click: function click() {\n          return _this.isActive = !_this.isActive;\n        }\n      }\n    };\n\n    if (this.hover) {\n      data.on.mouseenter = function () {\n        return _this.isActive = true;\n      };\n      data.on.mouseleave = function () {\n        return _this.isActive = false;\n      };\n    }\n\n    if (this.isActive) {\n      children = (this.$slots.default || []).map(function (b, i) {\n        b.key = i;\n\n        return b;\n      });\n    }\n\n    var list = h('transition-group', {\n      'class': 'speed-dial__list',\n      props: {\n        name: this.transition,\n        tag: 'div'\n      }\n    }, children);\n\n    return h('div', data, [this.$slots.activator, list]);\n  }\n});\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 190 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VStepperHeader */\n/* unused harmony export VStepperItems */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VStepper__ = __webpack_require__(191);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VStepperStep__ = __webpack_require__(193);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__VStepperContent__ = __webpack_require__(194);\n/* unused harmony reexport VStepper */\n/* unused harmony reexport VStepperContent */\n/* unused harmony reexport VStepperStep */\n\n\n\n\n\nvar VStepperHeader = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('stepper__header');\nvar VStepperItems = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('stepper__items');\n\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_1__VStepper__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VStepper__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VStepper__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_3__VStepperContent__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_3__VStepperContent__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_2__VStepperStep__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_2__VStepperStep__[\"a\" /* default */]);\n  Vue.component(VStepperHeader.name, VStepperHeader);\n  Vue.component(VStepperItems.name, VStepperItems);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_1__VStepper__[\"a\" /* default */]);\n\n/***/ }),\n/* 191 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_themeable__ = __webpack_require__(1);\n__webpack_require__(192);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-stepper',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_themeable__[\"a\" /* default */]],\n\n  provide: function provide() {\n    return {\n      stepClick: this.stepClick\n    };\n  },\n  data: function data() {\n    return {\n      inputValue: null,\n      isBooted: false,\n      steps: [],\n      content: [],\n      isReverse: false\n    };\n  },\n\n\n  props: {\n    nonLinear: Boolean,\n    altLabels: Boolean,\n    vertical: Boolean,\n    value: [Number, String]\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'stepper': true,\n        'stepper--is-booted': this.isBooted,\n        'stepper--vertical': this.vertical,\n        'stepper--alt-labels': this.altLabels,\n        'stepper--non-linear': this.nonLinear,\n        'theme--dark': this.dark,\n        'theme--light': this.light\n      };\n    }\n  },\n\n  watch: {\n    inputValue: function inputValue(val, prev) {\n      var _this = this;\n\n      this.isReverse = Number(val) < Number(prev);\n      this.steps.forEach(function (i) {\n        return i.toggle(_this.inputValue);\n      });\n      this.content.forEach(function (i) {\n        return i.toggle(_this.inputValue, _this.isReverse);\n      });\n\n      this.$emit('input', this.inputValue);\n      prev && (this.isBooted = true);\n    },\n    value: function value() {\n      var _this2 = this;\n\n      this.getSteps();\n      this.$nextTick(function () {\n        return _this2.inputValue = _this2.value;\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    this.getSteps();\n\n    this.inputValue = this.value || this.steps[0].step || 1;\n  },\n\n\n  methods: {\n    getSteps: function getSteps() {\n      var _this3 = this;\n\n      this.steps = [];\n      this.content = [];\n      this.$children.forEach(function (i) {\n        if (i.$options._componentTag === 'v-stepper-step') {\n          _this3.steps.push(i);\n        } else if (i.$options._componentTag === 'v-stepper-content') {\n          i.isVertical = _this3.vertical;\n          _this3.content.push(i);\n        }\n      });\n    },\n    stepClick: function stepClick(step) {\n      var _this4 = this;\n\n      this.getSteps();\n      this.$nextTick(function () {\n        return _this4.inputValue = step;\n      });\n    }\n  },\n\n  render: function render(h) {\n    return h('div', {\n      'class': this.classes\n    }, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 193 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_ripple__ = __webpack_require__(9);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-stepper-step',\n\n  components: { VIcon: __WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */] },\n\n  directives: { Ripple: __WEBPACK_IMPORTED_MODULE_1__directives_ripple__[\"a\" /* default */] },\n\n  inject: ['stepClick'],\n\n  data: function data() {\n    return {\n      isActive: false,\n      isInactive: true\n    };\n  },\n\n\n  props: {\n    complete: Boolean,\n    completeIcon: {\n      type: String,\n      default: 'check'\n    },\n    editIcon: {\n      type: String,\n      default: 'edit'\n    },\n    errorIcon: {\n      type: String,\n      default: 'warning'\n    },\n    editable: Boolean,\n    rules: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    step: [Number, String]\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'stepper__step': true,\n        'stepper__step--active': this.isActive,\n        'stepper__step--editable': this.editable,\n        'stepper__step--inactive': this.isInactive,\n        'stepper__step--error': this.hasError,\n        'stepper__step--complete': this.complete,\n        'error--text': this.hasError\n      };\n    },\n    hasError: function hasError() {\n      return this.rules.some(function (i) {\n        return i() !== true;\n      });\n    }\n  },\n\n  methods: {\n    click: function click(e) {\n      e.stopPropagation();\n\n      if (this.editable) {\n        this.stepClick(this.step);\n      }\n    },\n    toggle: function toggle(step) {\n      this.isActive = step.toString() === this.step.toString();\n      this.isInactive = Number(step) < Number(this.step);\n    }\n  },\n\n  render: function render(h) {\n    var data = {\n      'class': this.classes,\n      directives: [{\n        name: 'ripple',\n        value: this.editable\n      }],\n      on: { click: this.click }\n    };\n    var stepContent = void 0;\n\n    if (this.hasError) {\n      stepContent = [h('v-icon', {}, this.errorIcon)];\n    } else if (this.complete) {\n      if (this.editable) {\n        stepContent = [h('v-icon', {}, this.editIcon)];\n      } else {\n        stepContent = [h('v-icon', {}, this.completeIcon)];\n      }\n    } else {\n      stepContent = this.step;\n    }\n\n    var step = h('span', {\n      staticClass: 'stepper__step__step',\n      'class': {\n        'primary': !this.hasError && (this.complete || this.isActive)\n      }\n    }, stepContent);\n\n    var label = h('div', {\n      staticClass: 'stepper__label'\n    }, this.$slots.default);\n\n    return h('div', data, [step, label]);\n  }\n});\n\n/***/ }),\n/* 194 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transitions__ = __webpack_require__(5);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-stepper-content',\n\n  components: {\n    VTabTransition: __WEBPACK_IMPORTED_MODULE_0__transitions__[\"g\" /* VTabTransition */],\n    VTabReverseTransition: __WEBPACK_IMPORTED_MODULE_0__transitions__[\"f\" /* VTabReverseTransition */]\n  },\n\n  data: function data() {\n    return {\n      height: 0,\n      isActive: false,\n      isReverse: false,\n      isVertical: false\n    };\n  },\n\n\n  props: {\n    step: {\n      type: [Number, String],\n      required: true\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'stepper__content': true\n      };\n    },\n    computedTransition: function computedTransition() {\n      return this.isReverse ? 'v-tab-reverse-transition' : 'v-tab-transition';\n    },\n    styles: function styles() {\n      if (!this.isVertical) return {};\n\n      return {\n        height: !isNaN(this.height) ? this.height + 'px' : this.height\n      };\n    },\n    wrapperClasses: function wrapperClasses() {\n      return {\n        'stepper__wrapper': true\n      };\n    }\n  },\n\n  watch: {\n    isActive: function isActive() {\n      if (!this.isVertical) {\n        return;\n      }\n\n      if (this.isActive) {\n        this.enter();\n      } else {\n        this.leave();\n      }\n    }\n  },\n\n  mounted: function mounted() {\n    this.$refs.wrapper.addEventListener('transitionend', this.onTransition, false);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$refs.wrapper.removeEventListener('transitionend', this.onTransition, false);\n  },\n\n\n  methods: {\n    onTransition: function onTransition() {\n      if (!this.isActive) return;\n\n      this.height = 'auto';\n    },\n    enter: function enter() {\n      var _this = this;\n\n      var scrollHeight = 0;\n\n      // Render bug with height\n      setTimeout(function () {\n        scrollHeight = _this.$refs.wrapper.scrollHeight;\n      }, 0);\n\n      this.height = 0;\n\n      // Give the collapsing element time to collapse\n      setTimeout(function () {\n        return _this.height = scrollHeight || 'auto';\n      }, 450);\n    },\n    leave: function leave() {\n      var _this2 = this;\n\n      this.height = this.$refs.wrapper.clientHeight;\n      setTimeout(function () {\n        return _this2.height = 0;\n      }, 0);\n    },\n    toggle: function toggle(step, reverse) {\n      this.isActive = step.toString() === this.step.toString();\n      this.isReverse = reverse;\n    }\n  },\n\n  render: function render(h) {\n    var contentData = {\n      'class': this.classes\n    };\n    var wrapperData = {\n      'class': this.wrapperClasses,\n      style: this.styles,\n      ref: 'wrapper'\n    };\n\n    if (!this.isVertical) {\n      contentData.directives = [{\n        name: 'show',\n        value: this.isActive\n      }];\n    }\n\n    var wrapper = h('div', wrapperData, [this.$slots.default]);\n    var content = h('div', contentData, [wrapper]);\n\n    return h(this.computedTransition, {\n      on: this.$listeners\n    }, [content]);\n  }\n});\n\n/***/ }),\n/* 195 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VSubheader__ = __webpack_require__(196);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VSubheader__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VSubheader__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VSubheader__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VSubheader__[\"a\" /* default */]);\n\n/***/ }),\n/* 196 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_themeable__ = __webpack_require__(1);\n__webpack_require__(197);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-subheader',\n\n  functional: true,\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_themeable__[\"a\" /* default */]],\n\n  props: {\n    inset: Boolean\n  },\n\n  render: function render(h, _ref) {\n    var data = _ref.data,\n        children = _ref.children,\n        props = _ref.props;\n\n    data.staticClass = ('subheader ' + (data.staticClass || '')).trim();\n\n    if (props.inset) data.staticClass += ' subheader--inset';\n    if (props.light) data.staticClass += ' theme--light';\n    if (props.dark) data.staticClass += ' theme--dark';\n\n    return h('li', data, children);\n  }\n});\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 198 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VSwitch__ = __webpack_require__(199);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VSwitch__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VSwitch__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VSwitch__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VSwitch__[\"a\" /* default */]);\n\n/***/ }),\n/* 199 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_rippleable__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_selectable__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_touch__ = __webpack_require__(7);\n__webpack_require__(14);\n__webpack_require__(21);\n__webpack_require__(200);\n\n// Mixins\n\n\n\n// Directives\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-switch',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_rippleable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_selectable__[\"a\" /* default */]],\n\n  directives: { Touch: __WEBPACK_IMPORTED_MODULE_2__directives_touch__[\"a\" /* default */] },\n\n  computed: {\n    classes: function classes() {\n      var classes = {\n        'input-group--selection-controls switch': true\n      };\n\n      if (this.hasError) {\n        classes['error--text'] = true;\n      } else {\n        return this.addTextColorClassChecks(classes);\n      }\n\n      return classes;\n    },\n    rippleClasses: function rippleClasses() {\n      return {\n        'input-group--selection-controls__ripple': true,\n        'input-group--selection-controls__ripple--active': this.isActive\n      };\n    },\n    containerClasses: function containerClasses() {\n      return {\n        'input-group--selection-controls__container': true,\n        'input-group--selection-controls__container--light': this.light,\n        'input-group--selection-controls__container--disabled': this.disabled\n      };\n    },\n    toggleClasses: function toggleClasses() {\n      return {\n        'input-group--selection-controls__toggle': true,\n        'input-group--selection-controls__toggle--active': this.isActive\n      };\n    }\n  },\n\n  methods: {\n    onSwipeLeft: function onSwipeLeft() {\n      if (this.isActive) this.toggle();\n    },\n    onSwipeRight: function onSwipeRight() {\n      if (!this.isActive) this.toggle();\n    }\n  },\n\n  render: function render(h) {\n    var container = h('div', {\n      'class': this.containerClasses\n    }, [h('div', { 'class': this.toggleClasses }), this.genRipple({\n      directives: [{\n        name: 'touch',\n        value: {\n          left: this.onSwipeLeft,\n          right: this.onSwipeRight\n        }\n      }]\n    })]);\n\n    return this.genInputGroup([container]);\n  }\n});\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 201 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VSystemBar__ = __webpack_require__(202);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VSystemBar__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VSystemBar__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VSystemBar__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VSystemBar__[\"a\" /* default */]);\n\n/***/ }),\n/* 202 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__ = __webpack_require__(1);\n__webpack_require__(203);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-system-bar',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__[\"a\" /* default */]],\n\n  props: {\n    absolute: Boolean,\n    fixed: Boolean,\n    lightsOut: Boolean,\n    status: Boolean,\n    window: Boolean\n  },\n\n  computed: {\n    classes: function classes() {\n      return this.addBackgroundColorClassChecks(Object.assign({\n        'system-bar--lights-out': this.lightsOut,\n        'system-bar--absolute': this.absolute,\n        'system-bar--fixed': this.fixed,\n        'system-bar--status': this.status,\n        'system-bar--window': this.window\n      }, this.themeClasses));\n    },\n    computedHeight: function computedHeight() {\n      return this.window ? 32 : 24;\n    }\n  },\n\n  watch: {\n    window: function window() {\n      this.updateApplication();\n    },\n    fixed: function fixed() {\n      this.updateApplication();\n    },\n    absolute: function absolute() {\n      this.updateApplication();\n    }\n  },\n\n  methods: {\n    updateApplication: function updateApplication() {\n      if (this.app && this.$vuetify) {\n        this.$vuetify.application.bar = this.fixed || this.absolute ? this.computedHeight : 0;\n      }\n    }\n  },\n\n  destroyed: function destroyed() {\n    if (this.app && this.$vuetify) this.$vuetify.application.bar = 0;\n  },\n  render: function render(h) {\n    var data = {\n      staticClass: 'system-bar',\n      'class': this.classes,\n      style: {\n        height: this.computedHeight + 'px'\n      }\n    };\n\n    return h('div', data, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 204 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VTabs__ = __webpack_require__(205);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VTabsBar__ = __webpack_require__(207);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VTabsContent__ = __webpack_require__(208);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__VTabsItem__ = __webpack_require__(209);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__VTabsItems__ = __webpack_require__(210);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__VTabsSlider__ = __webpack_require__(211);\n/* unused harmony reexport VTabs */\n/* unused harmony reexport VTabsBar */\n/* unused harmony reexport VTabsContent */\n/* unused harmony reexport VTabsItem */\n/* unused harmony reexport VTabsItems */\n/* unused harmony reexport VTabsSlider */\n\n\n\n\n\n\n\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VTabs__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VTabs__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VTabs__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VTabsBar__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VTabsBar__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_2__VTabsContent__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_2__VTabsContent__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_3__VTabsItem__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_3__VTabsItem__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_4__VTabsItems__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_4__VTabsItems__[\"a\" /* default */]);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_5__VTabsSlider__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_5__VTabsSlider__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VTabs__[\"a\" /* default */]);\n\n/***/ }),\n/* 205 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_resize__ = __webpack_require__(8);\n__webpack_require__(206);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-tabs',\n\n  directives: {\n    Resize: __WEBPACK_IMPORTED_MODULE_0__directives_resize__[\"a\" /* default */]\n  },\n\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      registerContent: this.registerContent,\n      unregisterContent: this.unregisterContent,\n      registerTabItem: this.registerTabItem,\n      unregisterTabItem: this.unregisterTabItem,\n      next: this.next,\n      prev: this.prev,\n      slider: this.slider,\n      tabClick: this.tabClick,\n      isScrollable: function isScrollable() {\n        return _this.scrollable;\n      },\n      isMobile: function isMobile() {\n        return _this.isMobile;\n      }\n    };\n  },\n  data: function data() {\n    return {\n      activeIndex: null,\n      content: [],\n      isBooted: false,\n      resizeTimeout: null,\n      reverse: false,\n      tabItems: [],\n      tabsContainer: null,\n      tabsSlider: null,\n      target: null,\n      targetEl: null,\n      transitionTime: 300\n    };\n  },\n\n\n  props: {\n    centered: Boolean,\n    fixed: Boolean,\n    grow: Boolean,\n    icons: Boolean,\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 1280\n    },\n    value: String,\n    scrollable: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      return {\n        'tabs': true,\n        'tabs--centered': this.centered,\n        'tabs--fixed': this.fixed,\n        'tabs--grow': this.grow,\n        'tabs--icons': this.icons,\n        'tabs--mobile': this.isMobile,\n        'tabs--scroll-bars': this.scrollable\n      };\n    },\n    isMobile: function isMobile() {\n      return this.$vuetify.breakpoint.width < this.mobileBreakPoint;\n    }\n  },\n\n  watch: {\n    value: function value() {\n      this.tabClick(this.value);\n    },\n    activeIndex: function activeIndex() {\n      var _this2 = this;\n\n      this.updateTabs();\n      this.$nextTick(function () {\n        return _this2.isBooted = true;\n      });\n    },\n    tabItems: function tabItems(newItems, oldItems) {\n      var _this3 = this;\n\n      // Tab item was removed and\n      // there are still more\n      if (oldItems.length > newItems.length && newItems.length > 0) {\n        if (!newItems.find(function (o) {\n          return o.id === _this3.target;\n        })) {\n          var i = oldItems.findIndex(function (o) {\n            return o.id === _this3.target;\n          });\n\n          this.$nextTick(function () {\n            _this3.activeIndex = _this3.tabItems[i > 0 ? i - 1 : 0].id;\n            _this3.target = _this3.activeIndex;\n          });\n        }\n      }\n      this.slider();\n    },\n    '$vuetify.application.left': function $vuetifyApplicationLeft() {\n      this.onContainerResize();\n    },\n    '$vuetify.application.right': function $vuetifyApplicationRight() {\n      this.onContainerResize();\n    }\n  },\n\n  mounted: function mounted() {\n    // This is a workaround to detect if link is active\n    // when being used as a router or nuxt link\n    var i = this.tabItems.findIndex(function (_ref) {\n      var el = _ref.el;\n\n      return el.firstChild.classList.contains('tabs__item--active');\n    });\n\n    var tab = this.value || (this.tabItems[i !== -1 ? i : 0] || {}).id;\n\n    tab && this.tabClick(tab);\n  },\n\n\n  methods: {\n    registerContent: function registerContent(id, toggle) {\n      this.content.push({ id: id, toggle: toggle });\n    },\n    registerTabItem: function registerTabItem(id, toggle, el) {\n      this.tabItems.push({ id: id, toggle: toggle, el: el });\n    },\n    unregisterContent: function unregisterContent(id) {\n      this.content = this.content.filter(function (o) {\n        return o.id !== id;\n      });\n    },\n    unregisterTabItem: function unregisterTabItem(id) {\n      this.tabItems = this.tabItems.filter(function (o) {\n        return o.id !== id;\n      });\n    },\n    next: function next(cycle) {\n      var nextIndex = this.activeIndex + 1;\n\n      if (!this.content[nextIndex]) {\n        if (!cycle) return;\n        nextIndex = 0;\n      }\n\n      this.tabClick(this.tabItems[nextIndex].id);\n    },\n    prev: function prev(cycle) {\n      var prevIndex = this.activeIndex - 1;\n\n      if (!this.content[prevIndex]) {\n        if (!cycle) return;\n        prevIndex = this.content.length - 1;\n      }\n\n      this.tabClick(this.tabItems[prevIndex].id);\n    },\n    onResize: function onResize() {\n      this.slider();\n    },\n\n    /**\n     * When v-navigation-drawer changes the\n     * width of the container, call resize\n     * after the transition is complete\n     *\n     * @return {Void}\n     */\n    onContainerResize: function onContainerResize() {\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = setTimeout(this.onResize, this.transitionTime);\n    },\n    slider: function slider(el) {\n      var _this4 = this;\n\n      this.tabsSlider = this.tabsSlider || !!this.$el && this.$el.querySelector('.tabs__slider');\n\n      this.tabsContainer = this.tabsContainer || !!this.$el && this.$el.querySelector('.tabs__container');\n\n      if (!this.tabsSlider || !this.tabsContainer) return;\n\n      this.targetEl = el || this.targetEl;\n\n      if (!this.targetEl) return;\n\n      // Gives DOM time to paint when\n      // processing slider for\n      // dynamic tabs\n      this.$nextTick(function () {\n        // #684 Calculate width as %\n        var width = _this4.targetEl.scrollWidth / _this4.tabsContainer.clientWidth * 100;\n\n        _this4.tabsSlider.style.width = width + '%';\n        _this4.tabsSlider.style.left = _this4.targetEl.offsetLeft + 'px';\n      });\n    },\n    tabClick: function tabClick(target) {\n      var _this5 = this;\n\n      var setActiveIndex = function setActiveIndex(index) {\n        if (_this5.activeIndex === index) {\n          // #762 update tabs display\n          // In case tabs count got changed but activeIndex didn't\n          _this5.updateTabs();\n        } else {\n          _this5.activeIndex = index;\n        }\n      };\n\n      this.target = target;\n\n      this.$nextTick(function () {\n        var nextIndex = _this5.content.findIndex(function (o) {\n          return o.id === target;\n        });\n        _this5.reverse = nextIndex < _this5.activeIndex;\n        setActiveIndex(nextIndex);\n\n        _this5.$emit('input', _this5.target);\n      });\n    },\n    updateTabs: function updateTabs() {\n      var _this6 = this;\n\n      this.content.forEach(function (_ref2) {\n        var toggle = _ref2.toggle;\n\n        toggle(_this6.target, _this6.reverse, _this6.isBooted);\n      });\n\n      this.tabItems.forEach(function (_ref3) {\n        var toggle = _ref3.toggle;\n\n        toggle(_this6.target);\n      });\n    }\n  },\n\n  render: function render(h) {\n    return h('div', {\n      'class': this.classes,\n      directives: [{\n        name: 'resize',\n        value: this.onResize\n      }]\n    }, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 207 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VIcon__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__directives_resize__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__directives_touch__ = __webpack_require__(7);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Component imports\n\n\n// Mixins\n\n\n\n// Directives\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-tabs-bar',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__[\"a\" /* default */]],\n\n  directives: {\n    Resize: __WEBPACK_IMPORTED_MODULE_3__directives_resize__[\"a\" /* default */],\n    Touch: __WEBPACK_IMPORTED_MODULE_4__directives_touch__[\"a\" /* default */]\n  },\n\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      addTabItem: function addTabItem(action, toggle, el) {\n        _this.registerTabItem(action, toggle, el);\n        _this.onResize();\n      },\n      removeTabItem: function removeTabItem(action) {\n        _this.unregisterTabItem(action);\n        _this.onResize();\n      }\n    };\n  },\n\n\n  inject: ['isScrollable', 'isMobile', 'registerTabItem', 'unregisterTabItem'],\n\n  data: function data() {\n    return {\n      isOverflowing: false,\n      itemOffset: 0,\n      scrollOffset: 0,\n      startX: 0\n    };\n  },\n\n\n  computed: {\n    classes: function classes() {\n      return {\n        'tabs__bar': true,\n        'theme--dark': this.dark,\n        'theme--light': this.light\n      };\n    },\n    containerClasses: function containerClasses() {\n      return {\n        'tabs__container': true\n      };\n    },\n    wrapperClasses: function wrapperClasses() {\n      return {\n        'tabs__wrapper': true,\n        'tabs__wrapper--scrollable': this.isScrollable(),\n        'tabs__wrapper--overflow': this.isOverflowing\n      };\n    },\n    containerStyles: function containerStyles() {\n      return {\n        'transform': 'translateX(' + -this.scrollOffset + 'px)'\n      };\n    },\n    leftIconVisible: function leftIconVisible() {\n      return !this.isMobile() && this.isScrollable() && this.isOverflowing && this.scrollOffset > 0;\n    },\n    rightIconVisible: function rightIconVisible() {\n      if (this.isMobile() || !this.isScrollable() || !this.isOverflowing) return;\n\n      // Check one scroll ahead to know the width of right-most item\n      var container = this.$refs.container;\n      var item = this.newOffsetRight(this.scrollOffset, this.itemOffset);\n      var itemWidth = item && container.children[item.index].clientWidth || 0;\n      var scrollOffset = this.scrollOffset + container.clientWidth;\n\n      return container.scrollWidth - scrollOffset > itemWidth * 0.30;\n    }\n  },\n\n  methods: {\n    genContainer: function genContainer() {\n      return this.$createElement('ul', {\n        'class': this.containerClasses,\n        'style': this.containerStyles,\n        ref: 'container'\n      }, this.$slots.default);\n    },\n    genIcon: function genIcon(direction) {\n      var capitalize = direction.charAt(0).toUpperCase() + direction.slice(1);\n      return this.$createElement(__WEBPACK_IMPORTED_MODULE_0__VIcon__[\"a\" /* default */], {\n        props: _defineProperty({}, '' + direction, true),\n        style: { display: 'inline-flex' },\n        on: {\n          click: this['scroll' + capitalize]\n        }\n      }, 'chevron_' + direction);\n    },\n    genWrapper: function genWrapper() {\n      return this.$createElement('div', {\n        class: this.wrapperClasses,\n        directives: [{\n          name: 'touch',\n          value: {\n            start: this.start,\n            move: this.move,\n            end: this.end\n          }\n        }]\n      }, [this.genContainer()]);\n    },\n    start: function start(e) {\n      this.startX = this.scrollOffset + e.touchstartX;\n      this.$refs.container.style.transition = 'none';\n    },\n    move: function move(e) {\n      var offset = this.startX - e.touchmoveX;\n      this.scrollOffset = offset;\n    },\n    end: function end(e) {\n      this.onResize();\n      var container = this.$refs.container;\n      var scrollWidth = container.scrollWidth - this.$el.clientWidth / 2;\n      container.style.transition = null;\n\n      if (this.scrollOffset < 0 || !this.isOverflowing) {\n        this.scrollOffset = 0;\n      } else if (this.scrollOffset >= scrollWidth) {\n        var lastItem = container.children[container.children.length - 1];\n        this.scrollOffset = scrollWidth - lastItem.clientWidth;\n      }\n    },\n    scrollLeft: function scrollLeft() {\n      var _newOffset = this.newOffset('Left'),\n          offset = _newOffset.offset,\n          index = _newOffset.index;\n\n      this.scrollOffset = offset;\n      this.itemOffset = index;\n    },\n    scrollRight: function scrollRight() {\n      var _newOffset2 = this.newOffset('Right'),\n          offset = _newOffset2.offset,\n          index = _newOffset2.index;\n\n      this.scrollOffset = offset;\n      this.itemOffset = index;\n    },\n    onResize: function onResize() {\n      if (this._isDestroyed) return;\n\n      var container = this.$refs.container;\n      this.isOverflowing = container.clientWidth < container.scrollWidth;\n    },\n    newOffset: function newOffset(direction) {\n      return this['newOffset' + direction](this.scrollOffset, this.itemOffset);\n    },\n    newOffsetLeft: function newOffsetLeft(currentOffset, currentIndex) {\n      var container = this.$refs.container;\n      var items = container.children;\n      var offset = 0;\n\n      for (var index = currentIndex - 1; index >= 0; index--) {\n        if (!items[index].classList.contains('tabs__slider')) {\n          var newOffset = offset + items[index].clientWidth;\n          if (newOffset >= container.clientWidth) {\n            return { offset: currentOffset - offset, index: index + 1 };\n          }\n          offset = newOffset;\n        }\n      }\n\n      return { offset: 0, index: 0 };\n    },\n    newOffsetRight: function newOffsetRight(currentOffset, currentIndex) {\n      var container = this.$refs.container;\n      var items = container.children;\n      var offset = currentOffset;\n\n      for (var index = currentIndex; index < items.length; index++) {\n        if (!items[index].classList.contains('tabs__slider')) {\n          var newOffset = offset + items[index].clientWidth;\n          if (newOffset > currentOffset + container.clientWidth) {\n            return { offset: offset, index: index };\n          }\n          offset = newOffset;\n        }\n      }\n\n      return null;\n    }\n  },\n\n  render: function render(h) {\n    return h('div', {\n      'class': this.addBackgroundColorClassChecks(this.classes),\n      directives: [{\n        name: 'resize',\n        value: this.onResize\n      }]\n    }, [this.genWrapper(), this.leftIconVisible ? this.genIcon('left') : null, this.rightIconVisible ? this.genIcon('right') : null]);\n  }\n});\n\n/***/ }),\n/* 208 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_bootable__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transitions__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_touch__ = __webpack_require__(7);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-tabs-content',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_bootable__[\"a\" /* default */]],\n\n  inject: ['registerContent', 'unregisterContent'],\n\n  components: {\n    VTabTransition: __WEBPACK_IMPORTED_MODULE_1__transitions__[\"g\" /* VTabTransition */],\n    VTabReverseTransition: __WEBPACK_IMPORTED_MODULE_1__transitions__[\"f\" /* VTabReverseTransition */]\n  },\n\n  directives: {\n    Touch: __WEBPACK_IMPORTED_MODULE_2__directives_touch__[\"a\" /* default */]\n  },\n\n  data: function data() {\n    return {\n      isActive: false,\n      reverse: false\n    };\n  },\n\n\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'tab-transition'\n    },\n    reverseTransition: {\n      type: [Boolean, String],\n      default: 'tab-reverse-transition'\n    }\n  },\n\n  computed: {\n    computedTransition: function computedTransition() {\n      return this.reverse ? this.reverseTransition : this.transition;\n    }\n  },\n\n  methods: {\n    toggle: function toggle(target, reverse, showTransition) {\n      this.$el.style.transition = !showTransition ? 'none' : null;\n      this.reverse = reverse;\n      this.isActive = this.id === target;\n    }\n  },\n\n  mounted: function mounted() {\n    this.registerContent(this.id, this.toggle);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unregisterContent(this.id);\n  },\n  render: function render(h) {\n    var data = {\n      staticClass: 'tabs__content',\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }],\n      on: this.$listeners\n    };\n\n    if (this.id) data.domProps = { id: this.id };\n\n    var div = h('div', data, this.showLazyContent(this.$slots.default));\n\n    if (!this.computedTransition) return div;\n\n    return h('transition', {\n      props: { name: this.computedTransition }\n    }, [div]);\n  }\n});\n\n/***/ }),\n/* 209 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_routable__ = __webpack_require__(13);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-tabs-item',\n\n  inject: ['slider', 'tabClick', 'addTabItem', 'removeTabItem'],\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_routable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      isActive: false\n    };\n  },\n\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'tabs__item--active'\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      var classes = {\n        'tabs__item': true,\n        'tabs__item--disabled': this.disabled\n      };\n\n      classes[this.activeClass] = !this.to && this.isActive;\n\n      return classes;\n    },\n    action: function action() {\n      var to = this.to || this.href;\n\n      if (!to || to === Object(to)) return this._uid;\n\n      return to.replace('#', '');\n    }\n  },\n\n  watch: {\n    $route: function $route() {\n      this.to && this.callSlider();\n    }\n  },\n\n  mounted: function mounted() {\n    this.addTabItem(this.action, this.toggle, this.$el);\n    this.callSlider();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.removeTabItem(this.action);\n  },\n\n\n  methods: {\n    callSlider: function callSlider() {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.$el.firstChild.classList.contains('tabs__item--active') && _this.slider(_this.$el);\n      }, 0);\n    },\n    click: function click(e) {\n      e.preventDefault();\n      this.$emit('click', e);\n\n      if (!this.to && !this.href) return;\n\n      if (!this.to) {\n        this.tabClick(this.action);\n      }\n\n      this.callSlider();\n    },\n    toggle: function toggle(action) {\n      var _this2 = this;\n\n      this.isActive = this.action === action;\n\n      this.$nextTick(function () {\n        _this2.isActive && _this2.slider(_this2.$el);\n      });\n    }\n  },\n\n  render: function render(h) {\n    var link = this.generateRouteLink();\n    var data = link.data;\n\n    // If disabled, use div as anchor tags do not support\n    // being disabled\n\n    var tag = this.disabled ? 'div' : link.tag;\n\n    return h('li', {\n      'class': 'tabs__li'\n    }, [h(tag, data, this.$slots.default)]);\n  }\n});\n\n/***/ }),\n/* 210 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_touch__ = __webpack_require__(7);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-tabs-items',\n\n  directives: { Touch: __WEBPACK_IMPORTED_MODULE_0__directives_touch__[\"a\" /* default */] },\n\n  inject: ['next', 'prev'],\n\n  props: {\n    cycle: Boolean,\n    touchless: Boolean\n  },\n\n  methods: {\n    swipeLeft: function swipeLeft() {\n      this.next(this.cycle);\n    },\n    swipeRight: function swipeRight() {\n      this.prev(this.cycle);\n    }\n  },\n\n  render: function render(h) {\n    var data = {\n      staticClass: 'tabs__items',\n      directives: []\n    };\n\n    !this.touchless && data.directives.push({\n      name: 'touch',\n      value: {\n        left: this.swipeLeft,\n        right: this.swipeRight\n      }\n    });\n\n    return h('div', data, this.$slots.default);\n  }\n});\n\n/***/ }),\n/* 211 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(0);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-tabs-slider',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      defaultColor: 'accent'\n    };\n  },\n\n  render: function render(h) {\n    return h('li', {\n      staticClass: 'tabs__slider',\n      class: this.addBackgroundColorClassChecks()\n    });\n  }\n});\n\n/***/ }),\n/* 212 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VTextField__ = __webpack_require__(213);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VTextField__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VTextField__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VTextField__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VTextField__[\"a\" /* default */]);\n\n/***/ }),\n/* 213 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_input__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_maskable__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_mask__ = __webpack_require__(43);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n__webpack_require__(14);\n__webpack_require__(36);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-text-field',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_input__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_maskable__[\"a\" /* default */]],\n\n  inheritAttrs: false,\n\n  data: function data() {\n    return {\n      initialValue: null,\n      inputHeight: null,\n      internalChange: false,\n      badInput: false,\n      lazySelection: 0\n    };\n  },\n\n\n  props: {\n    autofocus: Boolean,\n    autoGrow: Boolean,\n    box: Boolean,\n    clearable: Boolean,\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    counter: [Boolean, Number, String],\n    fullWidth: Boolean,\n    multiLine: Boolean,\n    placeholder: String,\n    prefix: String,\n    rows: {\n      default: 5\n    },\n    singleLine: Boolean,\n    solo: Boolean,\n    suffix: String,\n    textarea: Boolean,\n    type: {\n      type: String,\n      default: 'text'\n    }\n  },\n\n  computed: {\n    classes: function classes() {\n      var classes = {\n        'input-group--text-field': true,\n        'input-group--text-field-box': this.box,\n        'input-group--single-line': this.singleLine || this.solo,\n        'input-group--solo': this.solo,\n        'input-group--multi-line': this.multiLine,\n        'input-group--full-width': this.fullWidth,\n        'input-group--prefix': this.prefix,\n        'input-group--suffix': this.suffix,\n        'input-group--textarea': this.textarea\n      };\n\n      if (this.hasError) {\n        classes['error--text'] = true;\n      } else {\n        return this.addTextColorClassChecks(classes);\n      }\n\n      return classes;\n    },\n    count: function count() {\n      var inputLength = void 0;\n      if (this.inputValue) inputLength = this.inputValue.toString().length;else inputLength = 0;\n\n      return inputLength + ' / ' + this.counterLength;\n    },\n    counterLength: function counterLength() {\n      var parsedLength = parseInt(this.counter, 10);\n      return isNaN(parsedLength) ? 25 : parsedLength;\n    },\n\n    inputValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        if (this.mask) {\n          this.lazyValue = this.unmaskText(this.maskText(this.unmaskText(val)));\n          this.setSelectionRange();\n        } else {\n          this.lazyValue = val;\n          this.$emit('input', this.lazyValue);\n        }\n      }\n    },\n    isDirty: function isDirty() {\n      return this.lazyValue != null && this.lazyValue.toString().length > 0 || this.badInput || ['time', 'date', 'datetime-local', 'week', 'month'].includes(this.type);\n    },\n    shouldAutoGrow: function shouldAutoGrow() {\n      return (this.multiLine || this.textarea) && this.autoGrow;\n    }\n  },\n\n  watch: {\n    isFocused: function isFocused(val) {\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    },\n    value: function value(val) {\n      var _this = this;\n\n      if (this.mask && !this.internalChange) {\n        var masked = this.maskText(this.unmaskText(val));\n        this.lazyValue = this.unmaskText(masked);\n\n        // Emit when the externally set value was modified internally\n        String(val) !== this.lazyValue && this.$nextTick(function () {\n          _this.$refs.input.value = masked;\n          _this.$emit('input', _this.lazyValue);\n        });\n      } else this.lazyValue = val;\n\n      if (this.internalChange) this.internalChange = false;\n\n      !this.validateOnBlur && this.validate();\n      this.shouldAutoGrow && this.calculateInputHeight();\n    }\n  },\n\n  mounted: function mounted() {\n    this.shouldAutoGrow && this.calculateInputHeight();\n    this.autofocus && this.focus();\n  },\n\n\n  methods: {\n    calculateInputHeight: function calculateInputHeight() {\n      var _this2 = this;\n\n      this.inputHeight = null;\n\n      this.$nextTick(function () {\n        var height = _this2.$refs.input ? _this2.$refs.input.scrollHeight : 0;\n        var minHeight = _this2.rows * 24;\n        var inputHeight = height < minHeight ? minHeight : height;\n        _this2.inputHeight = inputHeight + (_this2.textarea ? 4 : 0);\n      });\n    },\n    onInput: function onInput(e) {\n      this.mask && this.resetSelections(e.target);\n      this.inputValue = e.target.value;\n      this.badInput = e.target.validity && e.target.validity.badInput;\n      this.shouldAutoGrow && this.calculateInputHeight();\n    },\n    blur: function blur(e) {\n      var _this3 = this;\n\n      this.isFocused = false;\n      // Reset internalChange state\n      // to allow external change\n      // to persist\n      this.internalChange = false;\n\n      this.$nextTick(function () {\n        _this3.validate();\n      });\n      this.$emit('blur', e);\n    },\n    focus: function focus(e) {\n      if (!this.$refs.input) return;\n\n      this.isFocused = true;\n      if (document.activeElement !== this.$refs.input) {\n        this.$refs.input.focus();\n      }\n      this.$emit('focus', e);\n    },\n    keyDown: function keyDown(e) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.multiLine && this.isFocused && e.keyCode === 13) {\n        e.stopPropagation();\n      }\n\n      this.internalChange = true;\n    },\n    genCounter: function genCounter() {\n      return this.$createElement('div', {\n        'class': {\n          'input-group__counter': true,\n          'input-group__counter--error': this.hasError\n        }\n      }, this.count);\n    },\n    genInput: function genInput() {\n      var tag = this.multiLine || this.textarea ? 'textarea' : 'input';\n      var listeners = Object.assign({}, this.$listeners);\n      delete listeners['change']; // Change should not be bound externally\n\n      var data = {\n        style: {},\n        domProps: {\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          required: this.required,\n          value: this.maskText(this.lazyValue)\n        },\n        attrs: _extends({}, this.$attrs, {\n          readonly: this.readonly,\n          tabindex: this.tabindex,\n          'aria-label': (!this.$attrs || !this.$attrs.id) && this.label // Label `for` will be set if we have an id\n        }),\n        on: Object.assign(listeners, {\n          blur: this.blur,\n          input: this.onInput,\n          focus: this.focus,\n          keydown: this.keyDown\n        }),\n        ref: 'input'\n      };\n\n      if (this.shouldAutoGrow) {\n        data.style.height = this.inputHeight && this.inputHeight + 'px';\n      }\n\n      if (this.placeholder) data.domProps.placeholder = this.placeholder;\n\n      if (!this.textarea && !this.multiLine) {\n        data.domProps.type = this.type;\n      } else {\n        data.domProps.rows = this.rows;\n      }\n\n      if (this.mask) {\n        data.attrs.maxlength = this.masked.length;\n      }\n\n      var children = [this.$createElement(tag, data)];\n\n      this.prefix && children.unshift(this.genFix('prefix'));\n      this.suffix && children.push(this.genFix('suffix'));\n\n      return children;\n    },\n    genFix: function genFix(type) {\n      return this.$createElement('span', {\n        'class': 'input-group--text-field__' + type\n      }, this[type]);\n    },\n    clearableCallback: function clearableCallback() {\n      var _this4 = this;\n\n      this.inputValue = null;\n      this.$nextTick(function () {\n        return _this4.$refs.input.focus();\n      });\n    },\n    resetSelections: function resetSelections(input) {\n      if (!input.selectionEnd) return;\n      this.selection = input.selectionEnd;\n      this.lazySelection = 0;\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = input.value.substr(0, this.selection)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var char = _step.value;\n\n          Object(__WEBPACK_IMPORTED_MODULE_3__util_mask__[\"a\" /* isMaskDelimiter */])(char) || this.lazySelection++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  },\n\n  render: function render() {\n    return this.genInputGroup(this.genInput(), { attrs: { tabindex: false } });\n  }\n});\n\n/***/ }),\n/* 214 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VTimePicker__ = __webpack_require__(215);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VTimePicker__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VTimePicker__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VTimePicker__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VTimePicker__[\"a\" /* default */]);\n\n/***/ }),\n/* 215 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VCard__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_picker__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_time_title__ = __webpack_require__(217);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_time_body__ = __webpack_require__(218);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n__webpack_require__(44);\n__webpack_require__(216);\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-time-picker',\n\n  components: {\n    VCard: __WEBPACK_IMPORTED_MODULE_1__VCard__[\"a\" /* default */]\n  },\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_picker__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_time_body__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_time_title__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      isDragging: false,\n      rotate: 0,\n      originalTime: this.value,\n      period: 'am',\n      selectingHour: true,\n      ranges: {\n        hours: Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"c\" /* createRange */])(24),\n        minutes: Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"c\" /* createRange */])(60)\n      }\n    };\n  },\n\n\n  props: {\n    format: {\n      type: String,\n      default: 'ampm',\n      validator: function validator(val) {\n        return ['ampm', '24hr'].includes(val);\n      }\n    },\n    allowedHours: {\n      type: [Array, Object, Function],\n      default: function _default() {\n        return null;\n      }\n    },\n    allowedMinutes: {\n      type: [Array, Object, Function],\n      default: function _default() {\n        return null;\n      }\n    }\n  },\n\n  computed: {\n    is24hr: function is24hr() {\n      return this.format !== 'ampm';\n    },\n    is24hrAfter12: function is24hrAfter12() {\n      return this.selectingHour && this.is24hr && this.hour >= 12;\n    },\n    divider: function divider() {\n      return this.selectingHour ? 12 : 60;\n    },\n    degrees: function degrees() {\n      return this.degreesPerUnit * Math.PI / 180;\n    },\n    degreesPerUnit: function degreesPerUnit() {\n      return 360 / this.divider;\n    },\n\n    inputTime: {\n      get: function get() {\n        if (this.value && !(this.value instanceof Date)) {\n          if (!this.is24hr) {\n            this.period = this.value.match(/pm/i) ? 'pm' : 'am';\n          }\n\n          return this.value;\n        }\n        var value = new Date();\n\n        if (this.value instanceof Date) {\n          value = this.value;\n        }\n\n        var hour = value.getHours();\n        var minute = value.getMinutes();\n        var period = '';\n\n        if (!this.is24hr) {\n          period = hour >= 12 ? 'pm' : 'am';\n          hour = hour > 12 ? hour - 12 : hour;\n          hour = hour === 0 ? 12 : hour;\n        }\n\n        period && (this.period = period);\n\n        hour = this.firstAllowed('hour', hour);\n        minute = this.firstAllowed('minute', minute);\n\n        minute = minute < 10 ? '0' + minute : minute > 59 ? '00' : minute;\n\n        return hour + ':' + minute + period;\n      },\n      set: function set(val) {\n        return this.$emit('input', val);\n      }\n    },\n    timeArray: function timeArray() {\n      return this.inputTime.replace(/(am|pm)/, '').split(':');\n    },\n\n    hour: {\n      get: function get() {\n        return parseInt(this.timeArray[0]);\n      },\n      set: function set(val) {\n        if (!this.is24hr) {\n          val = val > 12 ? val - 12 : val < 1 ? 12 : val;\n        } else {\n          val = val < 10 ? '0' + val : val > 23 ? '00' : val;\n        }\n\n        this.inputTime = val + ':' + this.minute + (!this.is24hr ? this.period : '');\n      }\n    },\n    minute: {\n      get: function get() {\n        var minute = parseInt(this.timeArray[1]);\n\n        return minute < 10 ? '0' + minute : minute > 59 ? '00' : minute;\n      },\n      set: function set(val) {\n        val = val < 10 ? '0' + parseInt(val) : val > 59 ? '00' : val;\n        var hour = this.hour;\n\n        if (this.is24hr && hour < 10) {\n          hour = '0' + hour;\n        }\n\n        this.inputTime = hour + ':' + val + (!this.is24hr ? this.period : '');\n      }\n    },\n    clockHand: function clockHand() {\n      if (this.selectingHour) return this.degreesPerUnit * this.hour;\n      return this.degreesPerUnit * this.minute;\n    },\n    radius: function radius() {\n      return this.clockSize / 2;\n    },\n\n    clockSize: {\n      get: function get() {\n        return this.size;\n      },\n      set: function set(val) {\n        this.size = val;\n      }\n    },\n    size: function size() {\n      return this.landscape ? 250 : 280;\n    }\n  },\n\n  watch: {\n    period: function period(val) {\n      var hour = !!this.allowedHours && this.selectingHour ? this.firstAllowed('hour', this.hour - 1) : this.hour;\n      this.inputTime = hour + ':' + this.minute + val;\n    },\n    value: function value(val) {\n      if (this.isSaving) {\n        this.originalTime = this.inputTime;\n        this.isSaving = false;\n      }\n    }\n  },\n\n  methods: {\n    save: function save() {\n      var _this = this;\n\n      if (this.originalTime) {\n        this.originalTime = this.value;\n      } else {\n        this.inputTime = this.inputTime;\n        this.originalTime = this.inputTime;\n      }\n\n      if (this.$parent && this.$parent.isActive) this.$parent.isActive = false;\n\n      // Fix for #1818\n      // Wait for data to persist\n      // then set selectingHour\n      this.$nextTick(function () {\n        return _this.selectingHour = true;\n      });\n    },\n    cancel: function cancel() {\n      var _this2 = this;\n\n      this.inputTime = this.originalTime;\n      if (this.$parent && this.$parent.isActive) this.$parent.isActive = false;\n\n      // Fix for #1818\n      // Wait for data to persist\n      // then set selectingHour\n      this.$nextTick(function () {\n        return _this2.selectingHour = true;\n      });\n    },\n    isAllowed: function isAllowed(type, value) {\n      var allowed = this['allowed' + (type.charAt(0).toUpperCase() + type.slice(1)) + 's'];\n      var val = type === 'hour' && !this.is24hr && this.period === 'pm' ? value + 12 : value;\n\n      if (!allowed) return true;\n\n      if (Array.isArray(allowed)) {\n        return !!allowed.some(function (v) {\n          return v === value;\n        });\n      } else if (allowed instanceof Function) {\n        return allowed(val);\n      } else if (allowed === Object(allowed)) {\n        var range = type === 'minute' ? this.ranges.minutes : this.ranges.hours;\n        var mod = type === 'minute' ? 60 : 24;\n\n        if (allowed.min === String(allowed.min)) {\n          allowed.min = this.convert12to24hr(allowed.min);\n        }\n\n        if (allowed.max === String(allowed.max)) {\n          allowed.max = this.convert12to24hr(allowed.max);\n        }\n\n        var steps = allowed.max - allowed.min;\n        value = type === 'hour' && !this.is24hr && this.period === 'pm' ? value + 12 : value;\n\n        for (var i = 0; i <= steps; i++) {\n          var index = (allowed.min + i) % mod;\n          if (range[index] === value) return true;\n        }\n\n        return false;\n      }\n\n      return true;\n    },\n    convert12to24hr: function convert12to24hr(input) {\n      input = input.toLowerCase();\n      var pm = input.indexOf('pm') !== -1;\n      var hour = parseInt(input.slice(0, input.indexOf(pm ? 'pm' : 'am')));\n\n      return pm ? hour + 12 : hour;\n    },\n    generateRange: function generateRange(type, start) {\n      var range = type === 'hour' ? this.ranges.hours : this.ranges.minutes;\n      var offset = 1;\n\n      if (type === 'hour' && !this.is24hr) {\n        range = range.slice(1, 13);\n        offset = 0;\n      }\n\n      return range.slice(start + offset, range.length).concat(range.slice(0, start + offset));\n    },\n    firstAllowed: function firstAllowed(type, value) {\n      var _this3 = this;\n\n      var allowed = this['allowed' + (type.charAt(0).toUpperCase() + type.slice(1)) + 's'];\n\n      if (!allowed) return value;\n\n      var range = this.generateRange(type, value);\n\n      var first = range.find(function (v) {\n        return _this3.isAllowed(type, v);\n      });\n\n      return first || value;\n    }\n  },\n\n  render: function render(h) {\n    var children = [this.genBody()];\n\n    !this.noTitle && children.unshift(this.genTitle());\n    this.$scopedSlots.default && children.push(this.genSlot());\n\n    return h('v-card', {\n      'class': _extends({\n        'picker picker--time': true,\n        'picker--landscape': this.landscape,\n        'picker--time--hours': this.selectingHour\n      }, this.themeClasses)\n    }, children);\n  }\n});\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 217 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  methods: {\n    genTitle: function genTitle() {\n      var children = [this.genTime()];\n\n      if (this.format === 'ampm') {\n        children.push(this.genAMPM());\n      }\n\n      return this.genPickerTitle(children);\n    },\n    genTime: function genTime() {\n      var _this = this;\n\n      var hour = this.hour;\n\n      if (this.is24hr && hour < 10) {\n        hour = '0' + hour;\n      }\n\n      return this.$createElement('div', {\n        'class': 'picker--time__title'\n      }, [this.$createElement('span', {\n        'class': { active: this.selectingHour },\n        on: {\n          click: function click() {\n            return _this.selectingHour = true;\n          }\n        }\n      }, hour), this.$createElement('span', {\n        'class': { active: !this.selectingHour },\n        on: {\n          click: function click() {\n            return _this.selectingHour = false;\n          }\n        }\n      }, ':' + this.minute)]);\n    },\n    genAMPM: function genAMPM() {\n      return this.$createElement('div', [this.genPeriod('am'), this.genPeriod('pm')]);\n    },\n    genPeriod: function genPeriod(period) {\n      var _this2 = this;\n\n      return this.$createElement('span', {\n        'class': { active: this.period === period },\n        on: { click: function click() {\n            return _this2.period = period;\n          } }\n      }, period.toUpperCase());\n    }\n  }\n});\n\n/***/ }),\n/* 218 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      hasChanged: false\n    };\n  },\n\n  methods: {\n    genBody: function genBody() {\n      var _this = this;\n\n      var children = [this.genHand(this.selectingHour ? 'hour' : 'minute')];\n      var data = {\n        'class': 'picker--time__clock',\n        on: {\n          mousedown: this.onMouseDown,\n          mouseup: this.onMouseUp,\n          mouseleave: function mouseleave() {\n            _this.isDragging && _this.onMouseUp();\n          },\n          touchstart: this.onMouseDown,\n          touchend: this.onMouseUp,\n          mousemove: this.onDragMove,\n          touchmove: this.onDragMove\n        },\n        key: this.selectingHour ? 'hour' : 'minute',\n        ref: 'clock'\n      };\n\n      this.selectingHour && children.push(this.genHours()) || children.push(this.genMinutes());\n\n      if (this.scrollable) {\n        data.on.wheel = function (e) {\n          e.preventDefault();\n\n          var diff = e.wheelDelta > 0 ? 1 : -1;\n          var changing = _this.selectingHour ? 'changeHour' : 'changeMinute';\n\n          _this[changing](diff);\n        };\n      }\n\n      return this.$createElement('div', {\n        'class': 'picker__body'\n      }, [this.$createElement('transition', {\n        props: {\n          name: 'fade-transition',\n          mode: 'out-in'\n        }\n      }, [this.$createElement('div', data, children)])]);\n    },\n    genHand: function genHand(type) {\n      var scale = this.is24hrAfter12 ? 'scaleY(0.6)' : '';\n      return [this.$createElement('div', {\n        staticClass: 'picker--time__clock-hand',\n        'class': this.addBackgroundColorClassChecks(_defineProperty({}, type, true)),\n        style: {\n          transform: 'rotate(' + this.clockHand + 'deg) ' + scale\n        }\n      })];\n    },\n    genHours: function genHours() {\n      var hours = this.is24hr ? 24 : 12;\n      var children = [];\n      var start = 0;\n\n      if (hours === 12) {\n        hours++;\n        start = 1;\n      }\n\n      for (var i = start; i < hours; i++) {\n        var classes = {\n          'active': i === this.hour,\n          'disabled': !this.isAllowed('hour', i)\n        };\n        children.push(this.$createElement('span', {\n          'class': this.addBackgroundColorClassChecks(classes, i === this.hour ? 'computedColor' : null),\n          style: this.getTransform(i),\n          domProps: { innerHTML: '<span>' + i + '</span>' }\n        }));\n      }\n\n      return children;\n    },\n    genMinutes: function genMinutes() {\n      var children = [];\n\n      for (var i = 0; i < 60; i = i + 5) {\n        var num = i;\n\n        if (num < 10) num = '0' + num;\n        if (num === 60) num = '00';\n\n        var classes = {\n          'active': num.toString() === this.minute.toString(),\n          'disabled': !this.isAllowed('minute', i)\n        };\n        children.push(this.$createElement('span', {\n          'class': this.addBackgroundColorClassChecks(classes, num.toString() === this.minute.toString() ? 'computedColor' : null),\n          style: this.getTransform(i),\n          domProps: { innerHTML: '<span>' + num + '</span>' }\n        }));\n      }\n\n      return children;\n    },\n    getTransform: function getTransform(i) {\n      var _getPosition = this.getPosition(i),\n          x = _getPosition.x,\n          y = _getPosition.y;\n\n      return { transform: 'translate(' + x + 'px, ' + y + 'px)' };\n    },\n    getPosition: function getPosition(i) {\n      var radiusPercentage = this.selectingHour && this.is24hr && i >= 12 ? 0.5 : 0.8;\n      var r = this.radius * radiusPercentage;\n      i = this.selectingHour && this.is24hr ? i % 12 : i;\n      return {\n        x: Math.round(Math.sin(i * this.degrees) * r),\n        y: Math.round(-Math.cos(i * this.degrees) * r)\n      };\n    },\n    changeHour: function changeHour(time) {\n      var _this2 = this;\n\n      var range = this.generateRange('hour', this.hour);\n\n      time < 0 && (range = range.reverse().slice(1));\n      this.hour = range.find(function (h) {\n        return _this2.allowedHours ? _this2.isAllowed('hour', h) : true;\n      });\n\n      return true;\n    },\n    changeMinute: function changeMinute(time) {\n      var _this3 = this;\n\n      var current = Number(this.minute);\n      var range = this.generateRange('minute', current);\n\n      time < 0 && (range = range.reverse().slice(1));\n      var minute = range.find(function (m) {\n        return _this3.allowedMinutes ? _this3.isAllowed('minute', m) : true;\n      });\n\n      this.minute = minute < 10 ? '0' + minute : minute;\n\n      return true;\n    },\n    onMouseDown: function onMouseDown(e) {\n      e.preventDefault();\n\n      this.isDragging = true;\n      this.onDragMove(e);\n    },\n    onMouseUp: function onMouseUp() {\n      this.isDragging = false;\n      !this.selectingHour && this.autosave && this.save();\n      if (this.hasChanged) {\n        this.selectingHour = false;\n        this.hasChanged = false;\n      }\n    },\n    onDragMove: function onDragMove(e) {\n      e.preventDefault();\n      if (!this.isDragging && e.type !== 'click') return;\n\n      var rect = this.$refs.clock.getBoundingClientRect();\n      var center = { x: rect.width / 2, y: 0 - rect.width / 2 };\n      var clientY = 'touches' in e ? e.touches[0].clientY : e.clientY;\n      var clientX = 'touches' in e ? e.touches[0].clientX : e.clientX;\n      var coords = {\n        y: rect.top - clientY,\n        x: clientX - rect.left\n      };\n\n      var selecting = this.selectingHour ? 'hour' : 'minute';\n      var value = Math.round(this.angle(center, coords) / this.degreesPerUnit);\n\n      if (this.selectingHour && this.is24hr) {\n        var insideClick = this.euclidean(center, coords) / this.radius < 0.65;\n        value = insideClick ? value + 12 : value;\n\n        // Necessary to fix edge case when selecting left part of 0 and 12\n        value = this.angle(center, coords) >= 345 ? (value + 12) % 24 : value;\n      }\n\n      if (this.isAllowed(selecting, value)) {\n        this[selecting] = value;\n        this.hasChanged = true;\n      }\n    },\n    euclidean: function euclidean(p0, p1) {\n      var dx = Math.abs(p1.x - p0.x);\n      var dy = Math.abs(p1.y - p0.y);\n\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n    angle: function angle(center, p1) {\n      var p0 = {\n        x: center.x,\n        y: center.y + Math.sqrt(Math.abs(p1.x - center.x) * Math.abs(p1.x - center.x) + Math.abs(p1.y - center.y) * Math.abs(p1.y - center.y))\n      };\n\n      var value = 2 * Math.atan2(p1.y - p0.y, p1.x - p0.x);\n      return Math.abs(value * 180 / Math.PI);\n    }\n  }\n});\n\n/***/ }),\n/* 219 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VToolbarTitle */\n/* unused harmony export VToolbarItems */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__VToolbar__ = __webpack_require__(220);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__VToolbarSideIcon__ = __webpack_require__(222);\n/* unused harmony reexport VToolbar */\n/* unused harmony reexport VToolbarSideIcon */\n\n\n\n\n\nvar VToolbarTitle = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('toolbar__title');\nvar VToolbarItems = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__[\"d\" /* createSimpleFunctional */])('toolbar__items');\n\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_1__VToolbar__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_1__VToolbar__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_1__VToolbar__[\"a\" /* default */]);\n  Vue.component(VToolbarItems.name, VToolbarItems);\n  Vue.component(VToolbarTitle.name, VToolbarTitle);\n  Vue.component(__WEBPACK_IMPORTED_MODULE_2__VToolbarSideIcon__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_2__VToolbarSideIcon__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_1__VToolbar__[\"a\" /* default */]);\n\n/***/ }),\n/* 220 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__ = __webpack_require__(1);\n__webpack_require__(221);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-toolbar',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_applicationable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_themeable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      heights: {\n        mobileLandscape: 48,\n        mobile: 56,\n        desktop: 64,\n        dense: 48\n      },\n      isExtended: false,\n      isScrollingProxy: false,\n      marginTop: 0,\n      previousScroll: null,\n      target: null\n    };\n  },\n\n  props: {\n    absolute: Boolean,\n    card: Boolean,\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    dense: Boolean,\n    extended: Boolean,\n    fixed: Boolean,\n    flat: Boolean,\n    floating: Boolean,\n    height: [Number, String],\n    manualScroll: {\n      type: Boolean,\n      default: null\n    },\n    prominent: Boolean,\n    scrollOffScreen: Boolean,\n    scrollTarget: String,\n    scrollThreshold: {\n      type: Number,\n      default: 100\n    }\n  },\n\n  computed: {\n    computedHeight: function computedHeight() {\n      if (this.height) return parseInt(this.height);\n      if (this.dense) return this.heights.dense;\n\n      if (this.prominent || this.$vuetify.breakpoint.mdAndUp) return this.heights.desktop;\n\n      if (this.$vuetify.breakpoint.width > this.$vuetify.breakpoint.height) return this.heights.mobileLandscape;\n\n      return this.heights.mobile;\n    },\n    computedMarginTop: function computedMarginTop() {\n      if (!this.app) return this.marginTop;\n\n      return this.marginTop + this.$vuetify.application.bar;\n    },\n    classes: function classes() {\n      return this.addBackgroundColorClassChecks({\n        'toolbar': true,\n        'elevation-0': this.flat,\n        'toolbar--absolute': this.absolute,\n        'toolbar--card': this.card,\n        'toolbar--clipped': this.clippedLeft || this.clippedRight,\n        'toolbar--dense': this.dense,\n        'toolbar--fixed': this.fixed,\n        'toolbar--floating': this.floating,\n        'toolbar--prominent': this.prominent,\n        'toolbar--extended': this.isExtended,\n        'theme--dark': this.dark,\n        'theme--light': this.light\n      });\n    },\n\n    isScrolling: {\n      get: function get() {\n        return this.manualScroll != null ? this.manualScroll : this.isScrollingProxy;\n      },\n      set: function set(val) {\n        this.isScrollingProxy = val;\n      }\n    },\n    paddingLeft: function paddingLeft() {\n      if (!this.app || this.clippedLeft) return 0;\n\n      return this.$vuetify.application.left;\n    },\n    paddingRight: function paddingRight() {\n      if (!this.app || this.clippedRight) return 0;\n\n      return this.$vuetify.application.right;\n    },\n    styles: function styles() {\n      var style = {\n        marginTop: this.computedMarginTop + 'px'\n      };\n\n      if (this.app) {\n        style.paddingRight = this.paddingRight + 'px';\n        style.paddingLeft = this.paddingLeft + 'px';\n      }\n\n      return style;\n    }\n  },\n\n  watch: {\n    clippedLeft: function clippedLeft(val) {\n      this.updateApplication();\n    },\n    clippedRight: function clippedRight(val) {\n      this.updateApplication();\n    },\n    isScrolling: function isScrolling(val) {\n      this.whenScrolled(val);\n    }\n  },\n\n  mounted: function mounted() {\n    this.whenScrolled(this.isScrolling);\n  },\n  destroyed: function destroyed() {\n    if (this.app) this.$vuetify.application.top = 0;\n  },\n\n\n  methods: {\n    onScroll: function onScroll() {\n      if (typeof window === 'undefined') return;\n\n      if (!this.target) {\n        this.target = this.scrollTarget ? document.querySelector(this.scrollTarget) : window;\n      }\n\n      var currentScroll = this.scrollTarget ? this.target.scrollTop : this.target.pageYOffset || document.documentElement.scrollTop;\n\n      if (currentScroll < this.scrollThreshold) return;\n\n      if (this.previousScroll === null) {\n        this.previousScroll = currentScroll;\n      }\n\n      this.isScrollingProxy = this.previousScroll < currentScroll;\n\n      this.previousScroll = currentScroll;\n    },\n    updateApplication: function updateApplication() {\n      if (!this.app) return;\n\n      this.$vuetify.application.top = !this.fixed && !this.absolute ? 0 : this.isExtended && !this.isScrolling ? this.computedHeight * 2 : this.computedHeight;\n    },\n    whenScrolled: function whenScrolled(val) {\n      this.marginTop = val ? -this.$refs.content.clientHeight - 6 : 0;\n\n      this.updateApplication();\n    }\n  },\n\n  render: function render(h) {\n    this.isExtended = this.extended || !!this.$slots.extension;\n    this.updateApplication();\n\n    var children = [];\n    var data = {\n      'class': this.classes,\n      style: this.styles,\n      on: this.$listeners\n    };\n\n    if (this.scrollOffScreen) {\n      data.directives = [{\n        name: 'scroll',\n        value: {\n          callback: this.onScroll,\n          target: this.scrollTarget\n        }\n      }];\n    }\n\n    children.push(h('div', {\n      staticClass: 'toolbar__content',\n      style: { height: this.computedHeight + 'px' },\n      ref: 'content'\n    }, this.$slots.default));\n\n    if (this.isExtended) {\n      children.push(h('div', {\n        staticClass: 'toolbar__extension',\n        style: { height: this.computedHeight + 'px' }\n      }, this.$slots.extension));\n    }\n\n    return h('nav', data, children);\n  }\n});\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 222 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_VBtn__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_VIcon__ = __webpack_require__(3);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-toolbar-side-icon',\n\n  functional: true,\n\n  render: function render(h, _ref) {\n    var slots = _ref.slots,\n        listeners = _ref.listeners,\n        props = _ref.props,\n        data = _ref.data;\n\n    var classes = data.staticClass ? data.staticClass + ' toolbar__side-icon' : 'toolbar__side-icon';\n\n    var d = Object.assign(data, {\n      staticClass: classes,\n      props: Object.assign(props, {\n        icon: true\n      }),\n      on: listeners\n    });\n\n    var defaultSlot = slots().default;\n\n    return h(__WEBPACK_IMPORTED_MODULE_0__components_VBtn__[\"a\" /* default */], d, defaultSlot || [h(__WEBPACK_IMPORTED_MODULE_1__components_VIcon__[\"a\" /* default */], 'menu')]);\n  }\n});\n\n/***/ }),\n/* 223 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VTooltip__ = __webpack_require__(224);\n\n\n/* istanbul ignore next */\n__WEBPACK_IMPORTED_MODULE_0__VTooltip__[\"a\" /* default */].install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__VTooltip__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VTooltip__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__VTooltip__[\"a\" /* default */]);\n\n/***/ }),\n/* 224 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_delayable__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_dependent__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_detachable__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_menuable__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__ = __webpack_require__(4);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n__webpack_require__(225);\n\n// Mixins\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'v-tooltip',\n\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_delayable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_dependent__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_detachable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_menuable__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__[\"a\" /* default */]],\n\n  data: function data() {\n    return {\n      calculatedMinWidth: 0,\n      closeDependents: false\n    };\n  },\n\n  props: {\n    debounce: {\n      type: [Number, String],\n      default: 0\n    },\n    disabled: Boolean,\n    fixed: {\n      type: Boolean,\n      default: true\n    },\n    openDelay: {\n      type: [Number, String],\n      default: 200\n    },\n    tag: {\n      type: String,\n      default: 'span'\n    },\n    transition: String,\n    zIndex: {\n      default: null\n    }\n  },\n\n  computed: {\n    calculatedLeft: function calculatedLeft() {\n      var _dimensions = this.dimensions,\n          activator = _dimensions.activator,\n          content = _dimensions.content;\n\n      var unknown = !this.bottom && !this.left && !this.top && !this.right;\n      var left = 0;\n\n      if (this.top || this.bottom || unknown) {\n        left = activator.left + activator.width / 2 - content.width / 2;\n      } else if (this.left || this.right) {\n        left = activator.left + (this.right ? activator.width : -content.width) + (this.right ? 10 : -10);\n      }\n\n      return this.calcXOverflow(left) + 'px';\n    },\n    calculatedTop: function calculatedTop() {\n      var _dimensions2 = this.dimensions,\n          activator = _dimensions2.activator,\n          content = _dimensions2.content;\n\n      var top = 0;\n\n      if (this.top || this.bottom) {\n        top = activator.top - (this.top ? activator.height : -activator.height) - (this.top ? 0 : -10);\n      } else if (this.left || this.right) {\n        top = activator.top + activator.height / 2 - content.height / 2;\n      }\n\n      return this.calcYOverflow(top + this.pageYOffset) + 'px';\n    },\n    classes: function classes() {\n      return {\n        'tooltip--top': this.top,\n        'tooltip--right': this.right,\n        'tooltip--bottom': this.bottom,\n        'tooltip--left': this.left\n      };\n    },\n    computedTransition: function computedTransition() {\n      if (this.transition) return this.transition;\n      if (this.top) return 'slide-y-reverse-transition';\n      if (this.right) return 'slide-x-transition';\n      if (this.bottom) return 'slide-y-transition';\n      if (this.left) return 'slide-x-reverse-transition';\n    },\n    offsetY: function offsetY() {\n      return this.top || this.bottom;\n    },\n    offsetX: function offsetX() {\n      return this.left || this.right;\n    },\n    styles: function styles() {\n      return {\n        left: this.calculatedLeft,\n        maxWidth: isNaN(this.maxWidth) ? this.maxWidth : this.maxWidth + 'px',\n        opacity: this.isActive ? 0.9 : 0,\n        top: this.calculatedTop,\n        zIndex: this.zIndex || this.activeZIndex\n      };\n    }\n  },\n\n  methods: {\n    activate: function activate() {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions();\n      // Start the transition\n      requestAnimationFrame(this.startTransition);\n    }\n  },\n\n  mounted: function mounted() {\n    this.value && this.callActivate();\n  },\n  render: function render(h) {\n    var _addBackgroundColorCl,\n        _this = this;\n\n    var tooltip = h('div', {\n      staticClass: 'tooltip__content',\n      'class': this.addBackgroundColorClassChecks((_addBackgroundColorCl = {}, _defineProperty(_addBackgroundColorCl, this.contentClass, true), _defineProperty(_addBackgroundColorCl, 'menuable__content__active', this.isActive), _addBackgroundColorCl)),\n      style: this.styles,\n      attrs: this.attrs,\n      directives: [{\n        name: 'show',\n        value: this.isContentActive\n      }],\n      ref: 'content'\n    }, this.$slots.default);\n\n    return h(this.tag, {\n      staticClass: 'tooltip',\n      'class': this.classes\n    }, [h('transition', {\n      props: {\n        name: this.computedTransition\n      }\n    }, [tooltip]), h('span', {\n      on: this.disabled ? {} : {\n        mouseenter: function mouseenter() {\n          _this.runDelay('open', function () {\n            return _this.isActive = true;\n          });\n        },\n        mouseleave: function mouseleave() {\n          _this.runDelay('close', function () {\n            return _this.isActive = false;\n          });\n        }\n      },\n      ref: 'activator'\n    }, this.$slots.activator)]);\n  }\n});\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 226 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"default\"] = install;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__click_outside__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__resize__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ripple__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__scroll__ = __webpack_require__(227);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__touch__ = __webpack_require__(7);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ClickOutside\", function() { return __WEBPACK_IMPORTED_MODULE_0__click_outside__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Ripple\", function() { return __WEBPACK_IMPORTED_MODULE_2__ripple__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Resize\", function() { return __WEBPACK_IMPORTED_MODULE_1__resize__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Scroll\", function() { return __WEBPACK_IMPORTED_MODULE_3__scroll__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Touch\", function() { return __WEBPACK_IMPORTED_MODULE_4__touch__[\"a\"]; });\n\n\n\n\n\n\n\n\nfunction install(Vue) {\n  Vue.directive('click-outside', __WEBPACK_IMPORTED_MODULE_0__click_outside__[\"a\" /* default */]);\n  Vue.directive('ripple', __WEBPACK_IMPORTED_MODULE_2__ripple__[\"a\" /* default */]);\n  Vue.directive('resize', __WEBPACK_IMPORTED_MODULE_1__resize__[\"a\" /* default */]);\n  Vue.directive('scroll', __WEBPACK_IMPORTED_MODULE_3__scroll__[\"a\" /* default */]);\n  Vue.directive('touch', __WEBPACK_IMPORTED_MODULE_4__touch__[\"a\" /* default */]);\n}\n\n/***/ }),\n/* 227 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction inserted(el, binding) {\n  var callback = typeof binding.value === 'function' ? binding.value : binding.value.callback;\n  var options = binding.value.options || { passive: true };\n  var target = binding.value.target || window;\n  if (target === 'undefined') return;\n\n  if (target !== window) {\n    target = document.querySelector(target);\n  }\n\n  target.addEventListener('scroll', callback, options);\n\n  el._onScroll = {\n    callback: callback,\n    options: options,\n    target: target\n  };\n}\n\nfunction unbind(el, binding) {\n  var _el$_onScroll = el._onScroll,\n      callback = _el$_onScroll.callback,\n      options = _el$_onScroll.options,\n      target = _el$_onScroll.target;\n\n\n  target.removeEventListener('scroll', callback, options);\n  delete el._onScroll;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'scroll',\n  inserted: inserted,\n  unbind: unbind\n});\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=vuetify.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVldGlmeS9kaXN0L3Z1ZXRpZnkuanM/ZGM0OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDBCQUEwQixFQUFFO0FBQy9ELHlDQUF5QyxlQUFlO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsK0RBQStEO0FBQzdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0NBQW9DOztBQUVwQztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBLG9DQUFvQzs7QUFFcEM7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELDJCQUEyQixFQUFFLEVBQUUsRUFBRSxlQUFlOztBQUU5UCxrQ0FBa0MsMEJBQTBCLDBDQUEwQyxnQkFBZ0IsT0FBTyxrQkFBa0IsRUFBRSxhQUFhLEVBQUUsT0FBTyx3QkFBd0IsRUFBRTs7QUFFak07QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx5QkFBeUIsZ0NBQWdDLHFCQUFxQixxQkFBcUI7QUFDbkc7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQyxpQ0FBaUM7QUFDakM7QUFDQSwrQkFBK0IsT0FBTztBQUN0QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtEQUFrRCxpQkFBaUI7QUFDbkU7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGFBQWE7QUFDYixZQUFZO0FBQ1osWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQSwyQ0FBMkMsa0JBQWtCLGtDQUFrQyxxRUFBcUUsRUFBRSxFQUFFLE9BQU8sa0JBQWtCLEVBQUUsWUFBWTs7QUFFL007QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSwyQkFBMkI7O0FBRXZDLDZCQUE2QixTQUFTLGtCQUFrQjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTCx1QkFBdUI7QUFDdkI7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJGQUEyRix1QkFBdUIsRUFBRTtBQUNwSCwyRkFBMkYsOEJBQThCLEVBQUU7QUFDM0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRkFBMkYsd0JBQXdCLEVBQUU7QUFDckg7QUFDQSwyRkFBMkYsMEJBQTBCLEVBQUU7QUFDdkg7QUFDQSwyRkFBMkYsMEJBQTBCLEVBQUU7QUFDdkgsMkZBQTJGLGlDQUFpQyxFQUFFO0FBQzlILDJGQUEyRiwwQkFBMEIsRUFBRTtBQUN2SDtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNERBQTRELGdFQUFnRTtBQUM1SDs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FO0FBQ3BFO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxvRUFBb0U7QUFDcEU7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLDJDQUEyQyxrQkFBa0Isa0NBQWtDLHFFQUFxRSxFQUFFLEVBQUUsT0FBTyxrQkFBa0IsRUFBRSxZQUFZOztBQUUvTTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0M7O0FBRWxDO0FBQ0EsSUFBSTs7QUFFSix5RkFBeUY7QUFDekY7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0NBQStDLGdCQUFnQjtBQUMvRDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGFBQWEsUUFBUTtBQUNyQixjQUFjLG9DQUFvQyxVQUFVO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qzs7QUFFN0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtREFBbUQsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELDJCQUEyQixFQUFFLEVBQUUsRUFBRSxlQUFlOzs7O0FBSTlQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQiwwQkFBMEI7QUFDMUM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULHVCQUF1Qix1QkFBdUI7QUFDOUM7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxrQkFBa0Isa0NBQWtDLHFFQUFxRSxFQUFFLEVBQUUsT0FBTyxrQkFBa0IsRUFBRSxZQUFZOzs7Ozs7O0FBTy9NO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLGtDQUFrQywwQkFBMEIsMENBQTBDLGdCQUFnQixPQUFPLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxPQUFPLHdCQUF3QixFQUFFOztBQUVqTTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNERBQTRELGdFQUFnRTtBQUM1SDs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrRkFBa0YsbUVBQW1FO0FBQ3JKOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrRkFBa0YsbUVBQW1FO0FBQ3JKOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxrQkFBa0Isa0NBQWtDLHFFQUFxRSxFQUFFLEVBQUUsT0FBTyxrQkFBa0IsRUFBRSxZQUFZOztBQUUvTTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBLGVBQWUsOEVBQThFOztBQUU3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0Esc0ZBQXNGOztBQUV0RjtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwyREFBMkQ7QUFDM0QsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxrQkFBa0Isa0NBQWtDLHFFQUFxRSxFQUFFLEVBQUUsT0FBTyxrQkFBa0IsRUFBRSxZQUFZOztBQUUvTTs7QUFFQTs7Ozs7OztBQU9BOzs7QUFHQTs7O0FBR0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBLHNCQUFzQjtBQUN0QixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sR0FBRyxxQ0FBcUM7QUFDL0MsV0FBVztBQUNYO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxpQkFBaUIsZUFBZTtBQUNoQyxjQUFjLDRCQUE0QjtBQUMxQztBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxnQ0FBZ0M7QUFDaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0EsZUFBZSxNQUFNO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLGVBQWUsTUFBTTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNERBQTRELGdFQUFnRTtBQUM1SDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsZUFBZSxNQUFNO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0NBQWtDLDBCQUEwQiwwQ0FBMEMsZ0JBQWdCLE9BQU8sa0JBQWtCLEVBQUUsYUFBYSxFQUFFLE9BQU8sd0JBQXdCLEVBQUU7Ozs7QUFJak07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0VBQXNFLGdFQUFnRTtBQUN0STs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwyRkFBMkYseUJBQXlCLEVBQUU7QUFDdEgsMkZBQTJGLHVCQUF1QixFQUFFO0FBQ3BIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZGQUE2RixrREFBa0QsRUFBRTtBQUNqSjtBQUNBLDZGQUE2RixzREFBc0QsRUFBRTtBQUNySiw2RkFBNkYsNERBQTRELEVBQUU7Ozs7Ozs7OztBQVMzSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9HQUFvRyxtQkFBbUIsRUFBRSxtQkFBbUIsOEhBQThIOzs7Ozs7QUFNMVE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EscUZBQXFGLGdFQUFnRTtBQUNySjs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0VBQW9FLG1FQUFtRTtBQUN2STs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0VBQW9FLG1FQUFtRTtBQUN2STs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJGQUEyRix3QkFBd0IsRUFBRTtBQUNySCwyRkFBMkYsaUJBQWlCLEVBQUU7QUFDOUcsMkZBQTJGLG1CQUFtQixFQUFFO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsRUFBRSwyQ0FBMkMsT0FBTzs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkI7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsV0FBVyxhQUFhO0FBQ3hCLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLDRCQUE0QjtBQUM1QixnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RCxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSwwREFBMEQsY0FBYztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELDJCQUEyQixFQUFFLEVBQUUsRUFBRSxlQUFlOztBQUU5UDs7Ozs7O0FBTUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBLCtDQUErQzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Q7QUFDeEQsc0NBQXNDO0FBQ3RDLG9DQUFvQztBQUNwQyxzQ0FBc0M7QUFDdEMsb0NBQW9DO0FBQ3BDLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixxQkFBcUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQixnQkFBZ0I7QUFDakM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnQkFBZ0I7QUFDbkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUJBQWlCLHNCQUFzQjtBQUN2Qzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNEJBQTRCOztBQUU1QixPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNCQUFzQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUNBQXFDOztBQUVyQztBQUNBO0FBQ0E7O0FBRUEsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVOzs7QUFHdEMsT0FBTztBQUNQO0FBQ0E7O0FBRUEsa0JBQWtCLDhDQUE4QyxrREFBa0Qsc0lBQXNJLDhpQ0FBOGlDLDBFQUEwRSxpOERBQWk4RCxrQkFBa0IscUJBQXFCLGVBQWUsWUFBWSxtQ0FBbUMsU0FBUyx1SUFBdUksOEJBQThCLGNBQWMseUtBQXlLOztBQUUzdkgsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSwwREFBMEQsY0FBYztBQUN4RTtBQUNBLG1HQUFtRyxvREFBb0QsRUFBRTtBQUN6SjtBQUNBLGdHQUFnRyxpREFBaUQsRUFBRTtBQUNuSjtBQUNBLGtHQUFrRyxtREFBbUQsRUFBRTtBQUN2SjtBQUNBLG1HQUFtRyxvREFBb0QsRUFBRTtBQUN6SjtBQUNBLGtHQUFrRyxtREFBbUQsRUFBRTtBQUN2SjtBQUNBLHNHQUFzRyx1REFBdUQsRUFBRTtBQUMvSjtBQUNBLHdHQUF3Ryx5REFBeUQsRUFBRTtBQUNuSztBQUNBLHdHQUF3Ryx5REFBeUQsRUFBRTtBQUNuSztBQUNBLGdHQUFnRyxpREFBaUQsRUFBRTtBQUNuSjtBQUNBLHNHQUFzRyx1REFBdUQsRUFBRTtBQUMvSjtBQUNBLGlHQUFpRyxtREFBbUQsRUFBRTtBQUN0SjtBQUNBLHFHQUFxRyx1REFBdUQsRUFBRTtBQUM5SjtBQUNBLHFHQUFxRyx1REFBdUQsRUFBRTtBQUM5SjtBQUNBLGlHQUFpRyxtREFBbUQsRUFBRTtBQUN0SjtBQUNBLHNHQUFzRyx3REFBd0QsRUFBRTtBQUNoSztBQUNBLHVHQUF1Ryx5REFBeUQsRUFBRTtBQUNsSztBQUNBLG1HQUFtRyxxREFBcUQsRUFBRTtBQUMxSjtBQUNBLG9HQUFvRyxzREFBc0QsRUFBRTtBQUM1SjtBQUNBLDJHQUEyRyw2REFBNkQsRUFBRTtBQUMxSztBQUNBLG1HQUFtRyxxREFBcUQsRUFBRTtBQUMxSjtBQUNBLGlHQUFpRyxtREFBbUQsRUFBRTtBQUN0SjtBQUNBLGlHQUFpRyxtREFBbUQsRUFBRTtBQUN0SjtBQUNBLGlHQUFpRyxtREFBbUQsRUFBRTtBQUN0SjtBQUNBLGlHQUFpRyxtREFBbUQsRUFBRTtBQUN0SjtBQUNBLGlHQUFpRyxtREFBbUQsRUFBRTtBQUN0SjtBQUNBLDZHQUE2RywrREFBK0QsRUFBRTtBQUM5SztBQUNBLHVHQUF1Ryx5REFBeUQsRUFBRTtBQUNsSztBQUNBLHFHQUFxRyx1REFBdUQsRUFBRTtBQUM5SjtBQUNBLDZHQUE2RywrREFBK0QsRUFBRTtBQUM5SztBQUNBLDJHQUEyRyw2REFBNkQsRUFBRTtBQUMxSztBQUNBLHVHQUF1Ryx5REFBeUQsRUFBRTtBQUNsSztBQUNBLG1HQUFtRyxxREFBcUQsRUFBRTtBQUMxSjtBQUNBLG1HQUFtRyxxREFBcUQsRUFBRTtBQUMxSjtBQUNBLHFHQUFxRyx1REFBdUQsRUFBRTtBQUM5SjtBQUNBLHNHQUFzRyx3REFBd0QsRUFBRTtBQUNoSztBQUNBLG9HQUFvRyxzREFBc0QsRUFBRTtBQUM1SjtBQUNBLHNHQUFzRyx3REFBd0QsRUFBRTtBQUNoSztBQUNBLG1HQUFtRyxxREFBcUQsRUFBRTtBQUMxSjtBQUNBLHNHQUFzRyx3REFBd0QsRUFBRTtBQUNoSztBQUNBLGlHQUFpRyxtREFBbUQsRUFBRTtBQUN0SjtBQUNBLHNHQUFzRyx3REFBd0QsRUFBRTtBQUNoSztBQUNBLHVHQUF1Ryx5REFBeUQsRUFBRTtBQUNsSztBQUNBLG9HQUFvRyxzREFBc0QsRUFBRTtBQUM1SjtBQUNBLG9HQUFvRyxzREFBc0QsRUFBRTtBQUM1SjtBQUNBLHVHQUF1Ryx5REFBeUQsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQ2xLLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEseUJBQXlCO0FBQ3pCOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsa0JBQWtCLGtDQUFrQyxxRUFBcUUsRUFBRSxFQUFFLE9BQU8sa0JBQWtCLEVBQUUsWUFBWTs7QUFFL007O0FBRUE7Ozs7QUFJQTs7O0FBR0E7OztBQUdBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFtQjtBQUNqQyxpQkFBaUIsY0FBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUEsNEJBQTRCLG1DQUFtQzs7QUFFL0Q7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLHFGQUFxRjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsT0FBTzs7QUFFUDs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDZCQUE2QixzQkFBc0I7QUFDbkQsS0FBSztBQUNMO0FBQ0EsMkJBQTJCLDBDQUEwQyx1Q0FBdUM7QUFDNUcsS0FBSztBQUNMO0FBQ0EsaUNBQWlDLGdDQUFnQztBQUNqRSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQSxHQUFHO0FBQ0g7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBUUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsV0FBVztBQUNYLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLGlJQUFpSTtBQUN0STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEsMkRBQTJEOztBQUUzRDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7QUFJQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7OztBQUtBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtREFBbUQsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELDJCQUEyQixFQUFFLEVBQUUsRUFBRSxlQUFlOztBQUU5UDs7OztBQUlBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMOztBQUVBO0FBQ0Esd0JBQXdCO0FBQ3hCLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHlCQUF5QjtBQUN6Qjs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMkNBQTJDLGtCQUFrQixrQ0FBa0MscUVBQXFFLEVBQUUsRUFBRSxPQUFPLGtCQUFrQixFQUFFLFlBQVk7Ozs7QUFJL007QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0dBQW9HLG1CQUFtQixFQUFFLG1CQUFtQiw4SEFBOEg7O0FBRTFRLG1EQUFtRCxnQkFBZ0Isc0JBQXNCLE9BQU8sMkJBQTJCLDBCQUEwQix5REFBeUQsMkJBQTJCLEVBQUUsRUFBRSxFQUFFLGVBQWU7O0FBRTlQOzs7Ozs7Ozs7QUFTQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0EseUNBQXlDLDBCQUEwQjtBQUNuRSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7O0FBRUEsMENBQTBDLDBCQUEwQjtBQUNwRTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EscUJBQXFCLHNCQUFzQjtBQUMzQztBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OztBQVdBO0FBQ0E7O0FBRUE7O0FBRUEsZUFBZSw0RUFBNEU7O0FBRTNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxhQUFhO0FBQ2IsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxlQUFlO0FBQ2YsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsdUJBQXVCLHVCQUF1QjtBQUM5QyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSzs7QUFFTCw0QkFBNEIsU0FBUyxnQ0FBZ0MsRUFBRTtBQUN2RTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0Esb0dBQW9HLG1CQUFtQixFQUFFLG1CQUFtQiw4SEFBOEg7O0FBRTFRO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPOztBQUVQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1DQUFtQztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsaUNBQWlDLGVBQWUsZUFBZSxnQkFBZ0Isb0JBQW9CLE1BQU0sMENBQTBDLCtCQUErQixhQUFhLHFCQUFxQixtQ0FBbUMsRUFBRSxFQUFFLGNBQWMsV0FBVyxVQUFVLEVBQUUsVUFBVSxNQUFNLHlDQUF5QyxFQUFFLFVBQVUsa0JBQWtCLEVBQUUsRUFBRSxhQUFhLEVBQUUsMkJBQTJCLDBCQUEwQixZQUFZLEVBQUUsMkNBQTJDLDhCQUE4QixFQUFFLE9BQU8sNkVBQTZFLEVBQUUsR0FBRyxFQUFFOztBQUVycEIsb0dBQW9HLG1CQUFtQixFQUFFLG1CQUFtQiw4SEFBOEg7O0FBRTFRO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHlCQUF5QjtBQUNyRDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXOztBQUVYOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7O0FBR0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDZCQUE2Qix3Q0FBd0M7QUFDckUsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwrQkFBK0IsbUNBQW1DO0FBQ2xFLE9BQU87QUFDUCwrQkFBK0IsbUJBQW1CO0FBQ2xELE9BQU87QUFDUCwrQkFBK0IsbUNBQW1DO0FBQ2xFLE9BQU87QUFDUCwrQkFBK0IsaUNBQWlDO0FBQ2hFLE9BQU87QUFDUCwrQkFBK0IsbUNBQW1DO0FBQ2xFO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQSwwQ0FBMEM7QUFDMUMsR0FBRztBQUNIO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsa0JBQWtCLGtDQUFrQyxxRUFBcUUsRUFBRSxFQUFFLE9BQU8sa0JBQWtCLEVBQUUsWUFBWTs7QUFFL007Ozs7OztBQU1BO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FO0FBQ3BFLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxnQkFBZ0Isc0JBQXNCLE9BQU8sMkJBQTJCLDBCQUEwQix5REFBeUQsMkJBQTJCLEVBQUUsRUFBRSxFQUFFLGVBQWU7O0FBRTlQO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7QUFRQTs7Ozs7OztBQU9BOzs7Ozs7Ozs7O0FBVUE7OztBQUdBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSwwQkFBMEIsR0FBRyxvQkFBb0I7QUFDakQ7QUFDQSxLQUFLOztBQUVMOztBQUVBLG9CQUFvQixvQ0FBb0M7QUFDeEQ7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGdCQUFnQixzQkFBc0IsT0FBTywyQkFBMkIsMEJBQTBCLHlEQUF5RCwyQkFBMkIsRUFBRSxFQUFFLEVBQUUsZUFBZTs7QUFFOVAsMkNBQTJDLGtCQUFrQixrQ0FBa0MscUVBQXFFLEVBQUUsRUFBRSxPQUFPLGtCQUFrQixFQUFFLFlBQVk7Ozs7OztBQU0vTTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUEsaUNBQWlDOztBQUVqQztBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AscUJBQXFCO0FBQ3JCLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7O0FBT0E7Ozs7OztBQU1BOzs7O0FBSUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxnQkFBZ0Isa0JBQWtCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0MsMEJBQTBCLDBDQUEwQyxnQkFBZ0IsT0FBTyxrQkFBa0IsRUFBRSxhQUFhLEVBQUUsT0FBTyx3QkFBd0IsRUFBRTs7QUFFak07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLGtFQUFrRSw2Q0FBNkM7QUFDL0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0VBQW9FO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBLDZCQUE2Qjs7QUFFN0I7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQSxrQ0FBa0M7QUFDbEM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0EsbURBQW1ELGdCQUFnQixzQkFBc0IsT0FBTywyQkFBMkIsMEJBQTBCLHlEQUF5RCwyQkFBMkIsRUFBRSxFQUFFLEVBQUUsZUFBZTs7QUFFOVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSxzQ0FBc0M7QUFDdEM7O0FBRUEsd0JBQXdCO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1EQUFtRCxnQkFBZ0Isc0JBQXNCLE9BQU8sMkJBQTJCLDBCQUEwQix5REFBeUQsMkJBQTJCLEVBQUUsRUFBRSxFQUFFLGVBQWU7O0FBRTlQLGtDQUFrQywwQkFBMEIsMENBQTBDLGdCQUFnQixPQUFPLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxPQUFPLHdCQUF3QixFQUFFOzs7O0FBSWpNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1QkFBdUI7QUFDdkM7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNULDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQixpQkFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25ELE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsaUNBQWlDOztBQUVqQztBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxpRkFBaUYsMkJBQTJCO0FBQzVHOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSw2Q0FBNkMsWUFBWTtBQUN6RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0Esa0NBQWtDLDBCQUEwQiwwQ0FBMEMsZ0JBQWdCLE9BQU8sa0JBQWtCLEVBQUUsYUFBYSxFQUFFLE9BQU8sd0JBQXdCLEVBQUU7O0FBRWpNO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1DQUFtQzs7QUFFbkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLGVBQWU7QUFDZixTQUFTOztBQUVUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQSxnRkFBZ0YsaUJBQWlCOztBQUVqRztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1Asb0RBQW9EO0FBQ3BEOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RkFBeUY7QUFDekYsU0FBUztBQUNUO0FBQ0E7QUFDQSx5RkFBeUY7QUFDekY7QUFDQSxPQUFPO0FBQ1AsZ0ZBQWdGO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0Isa0JBQWtCO0FBQ2xDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPOztBQUVQLHVDQUF1QyxpQ0FBaUM7QUFDeEUsS0FBSztBQUNMO0FBQ0E7O0FBRUEsbUJBQW1CO0FBQ25COztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0I7QUFDbEIsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLE9BQU87QUFDUDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxpQkFBaUI7QUFDckQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGlCQUFpQjtBQUN0RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLDhEQUE4RDs7QUFFOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxhQUFhO0FBQ2IsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxnQkFBZ0Isc0JBQXNCLE9BQU8sMkJBQTJCLDBCQUEwQix5REFBeUQsMkJBQTJCLEVBQUUsRUFBRSxFQUFFLGVBQWU7O0FBRTlQLGtDQUFrQyxpQ0FBaUMsZUFBZSxlQUFlLGdCQUFnQixvQkFBb0IsTUFBTSwwQ0FBMEMsK0JBQStCLGFBQWEscUJBQXFCLG1DQUFtQyxFQUFFLEVBQUUsY0FBYyxXQUFXLFVBQVUsRUFBRSxVQUFVLE1BQU0seUNBQXlDLEVBQUUsVUFBVSxrQkFBa0IsRUFBRSxFQUFFLGFBQWEsRUFBRSwyQkFBMkIsMEJBQTBCLFlBQVksRUFBRSwyQ0FBMkMsOEJBQThCLEVBQUUsT0FBTyw2RUFBNkUsRUFBRSxHQUFHLEVBQUU7O0FBRXJwQjtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQSxlQUFlLDZFQUE2RTs7QUFFNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0NBQXNDLFlBQVk7QUFDbEQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0NBQXdDLFlBQVk7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDhFQUE4RSxrQ0FBa0MsR0FBRyxzQkFBc0I7QUFDekksNEZBQTRGLGtEQUFrRCxHQUFHLFlBQVk7QUFDN0osa0ZBQWtGLGtDQUFrQyxHQUFHLHNCQUFzQjtBQUM3SSxnRkFBZ0YsbUNBQW1DLEdBQUcsWUFBWTtBQUNsSSxnRUFBZ0UscUNBQXFDO0FBQ3JHO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGVBQWUsbUNBQW1DO0FBQ2xELGdCQUFnQixpQ0FBaUM7QUFDakQsZUFBZTtBQUNmOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsOEJBQThCO0FBQy9DLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULCtCQUErQixlQUFlO0FBQzlDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQSxnQkFBZ0I7QUFDaEIsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSwwQ0FBMEMsc0NBQXNDO0FBQ2hGO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLDBDQUEwQyxzQ0FBc0M7QUFDaEY7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHNGQUFzRixzQkFBc0I7QUFDNUc7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0VBQW9FLDhCQUE4QjtBQUNsRyxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsMEVBQTBFLGVBQWUsTUFBTTtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBLGdFQUFnRSxlQUFlO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLG1CQUFtQixtQkFBbUI7QUFDdEM7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0EsZ0JBQWdCO0FBQ2hCLE9BQU87O0FBRVA7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0E7O0FBRUEsc0JBQXNCLG1CQUFtQjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxzRkFBc0YsWUFBWSxtQkFBbUIsR0FBRyxFQUFFOztBQUUxSDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSwrQkFBK0I7O0FBRS9CO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQSx1QkFBdUIsWUFBWTtBQUNuQztBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1EQUFtRCxnQkFBZ0Isc0JBQXNCLE9BQU8sMkJBQTJCLDBCQUEwQix5REFBeUQsMkJBQTJCLEVBQUUsRUFBRSxFQUFFLGVBQWU7O0FBRTlQOzs7O0FBSUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7O0FBV0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtFQUFrRSxnRUFBZ0U7QUFDbEk7O0FBRUE7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdFQUFnRSxtRUFBbUU7QUFDbkk7O0FBRUE7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsR0FBRyxrQkFBa0I7QUFDOUI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUVBQWlFLG1FQUFtRTtBQUNwSTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BOzs7O0FBSUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7OztBQUlBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7OztBQUlBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7OztBQUlBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFVQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EseUJBQXlCLHNEQUFzRDs7QUFFL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQSw4REFBOEQsbUZBQW1GO0FBQ2pKLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUEsOERBQThELG1GQUFtRjtBQUNqSixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw0REFBNEQsdUNBQXVDO0FBQ25HO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywwQkFBMEIsMENBQTBDLGdCQUFnQixPQUFPLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxPQUFPLHdCQUF3QixFQUFFOztBQUVqTTs7Ozs7Ozs7QUFRQTtBQUNBOztBQUVBOztBQUVBLGVBQWUsOEVBQThFOztBQUU3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUEsd0JBQXdCLFNBQVM7QUFDakM7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULHlCQUF5QixJQUFJO0FBQzdCLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsTUFBTTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSwrQ0FBK0MsNEJBQTRCO0FBQzNFLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQix1Q0FBdUM7QUFDM0Q7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQSx5QkFBeUIsbUNBQW1DO0FBQzVEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7O0FBSUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvR0FBb0csbUJBQW1CLEVBQUUsbUJBQW1CLDhIQUE4SDs7QUFFMVE7Ozs7QUFJQTs7Ozs7OztBQU9BO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPOztBQUVQOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQVNBO0FBQ0E7O0FBRUE7O0FBRUEsZUFBZSwyRkFBMkY7O0FBRTFHO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQSxzREFBc0Q7QUFDdEQsT0FBTyxlQUFlO0FBQ3RCLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEO0FBQ3RELE9BQU87O0FBRVA7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxzREFBc0Q7QUFDdEQ7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxrQkFBa0Isa0NBQWtDLHFFQUFxRSxFQUFFLEVBQUUsT0FBTyxrQkFBa0IsRUFBRSxZQUFZOztBQUUvTTs7Ozs7OztBQU9BO0FBQ0E7O0FBRUE7O0FBRUEsZUFBZSwyRkFBMkY7O0FBRTFHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBOztBQUVBLGVBQWUsaUVBQWlFOztBQUVoRixlQUFlLDhFQUE4RTs7QUFFN0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsV0FBVztBQUNYO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUM7QUFDbkMsS0FBSztBQUNMO0FBQ0EscUNBQXFDO0FBQ3JDLE9BQU87QUFDUCxxQ0FBcUM7QUFDckM7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7QUFJQTs7O0FBR0E7QUFDQTs7QUFFQTs7QUFFQSxlQUFlLDRFQUE0RTs7QUFFM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLLGFBQWEsOEJBQThCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMLGtFQUFrRTs7QUFFbEU7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0EseUJBQXlCLHlCQUF5QjtBQUNsRCxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIsaUNBQWlDO0FBQzNELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsa0JBQWtCLGtDQUFrQyxxRUFBcUUsRUFBRSxFQUFFLE9BQU8sa0JBQWtCLEVBQUUsWUFBWTs7QUFFL007OztBQUdBOzs7O0FBSUE7Ozs7QUFJQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsZ0JBQWdCLHlCQUF5QjtBQUN6QztBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3Q0FBd0MsWUFBWTtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQ0FBb0Msc0JBQXNCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUEsa0NBQWtDOztBQUVsQzs7QUFFQTs7QUFFQTtBQUNBLGNBQWM7QUFDZCxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUEsZUFBZSw0RUFBNEU7O0FBRTNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGdCQUFnQixzQkFBc0IsT0FBTywyQkFBMkIsMEJBQTBCLHlEQUF5RCwyQkFBMkIsRUFBRSxFQUFFLEVBQUUsZUFBZTs7QUFFOVA7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSwyRUFBMkU7O0FBRTNFO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87O0FBRVA7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDLGlDQUFpQzs7QUFFakM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZGQUE2RixnRUFBZ0U7QUFDN0o7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxnREFBZ0QsU0FBUyxrQkFBa0IsRUFBRTtBQUM3RTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGdCQUFnQixzQkFBc0IsT0FBTywyQkFBMkIsMEJBQTBCLHlEQUF5RCwyQkFBMkIsRUFBRSxFQUFFLEVBQUUsZUFBZTs7QUFFOVA7QUFDQTs7Ozs7Ozs7OztBQVVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVCQUF1QixZQUFZO0FBQ25DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCxrQkFBa0IsNkJBQTZCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1Asa0JBQWtCLDhCQUE4QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsaUNBQWlDO0FBQ25ELGFBQWE7QUFDYjtBQUNBLFdBQVc7QUFDWCxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsa0JBQWtCLGtDQUFrQyxxRUFBcUUsRUFBRSxFQUFFLE9BQU8sa0JBQWtCLEVBQUUsWUFBWTs7QUFFL007QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRTtBQUN0RTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5QixXQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLFNBQVM7QUFDVDs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLHFCQUFxQixRQUFRO0FBQzdCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsU0FBUztBQUNUOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWM7QUFDZCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLGNBQWMscUNBQXFDO0FBQ25EO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsa0JBQWtCLGtDQUFrQyxxRUFBcUUsRUFBRSxFQUFFLE9BQU8sa0JBQWtCLEVBQUUsWUFBWTs7QUFFL007O0FBRUE7Ozs7Ozs7O0FBUUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZFQUE2RTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSwwREFBMEQsY0FBYztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3R0FBd0csMERBQTBELEVBQUU7QUFDcEssa0dBQWtHLG1EQUFtRCxFQUFFO0FBQ3ZKLGtHQUFrRyxtREFBbUQsRUFBRTtBQUN2SixrR0FBa0csbURBQW1ELEVBQUU7QUFDdkosaUdBQWlHLGtEQUFrRCxFQUFFOzs7Ozs7Ozs7QUFTcko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELE9BQU87QUFDUDtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIyNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcIlZ1ZXRpZnlcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wiVnVldGlmeVwiXSA9IGZhY3RvcnkoKTtcbn0pKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuIC8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuLyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0aTogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9XG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbi8qKioqKiovIFx0XHRtb2R1bGUubCA9IHRydWU7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4vKioqKioqLyBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbi8qKioqKiovIFx0XHRcdFx0Y29uZmlndXJhYmxlOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbi8qKioqKiovIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbi8qKioqKiovIFx0XHRcdH0pO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuLyoqKioqKi8gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuLyoqKioqKi8gXHRcdHJldHVybiBnZXR0ZXI7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvZGlzdC9cIjtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLyoqKioqKi8gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA0Nik7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovIChbXG4vKiAwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIHByb3BzOiB7XG4gICAgY29sb3I6IFN0cmluZ1xuICB9LFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRlZmF1bHRDb2xvcjogbnVsbFxuICAgIH07XG4gIH0sXG5cblxuICBjb21wdXRlZDoge1xuICAgIGNvbXB1dGVkQ29sb3I6IGZ1bmN0aW9uIGNvbXB1dGVkQ29sb3IoKSB7XG4gICAgICByZXR1cm4gdGhpcy5jb2xvciB8fCB0aGlzLmRlZmF1bHRDb2xvcjtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzOiBmdW5jdGlvbiBhZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcygpIHtcbiAgICAgIHZhciBvYmogPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICAgICAgdmFyIHByb3AgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICdjb21wdXRlZENvbG9yJztcblxuICAgICAgdmFyIGNsYXNzZXMgPSBPYmplY3QuYXNzaWduKHt9LCBvYmopO1xuXG4gICAgICBpZiAocHJvcCAmJiB0aGlzW3Byb3BdKSB7XG4gICAgICAgIGNsYXNzZXNbdGhpc1twcm9wXV0gPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY2xhc3NlcztcbiAgICB9LFxuICAgIGFkZFRleHRDb2xvckNsYXNzQ2hlY2tzOiBmdW5jdGlvbiBhZGRUZXh0Q29sb3JDbGFzc0NoZWNrcygpIHtcbiAgICAgIHZhciBvYmogPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICAgICAgdmFyIHByb3AgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICdjb21wdXRlZENvbG9yJztcblxuICAgICAgdmFyIGNsYXNzZXMgPSBPYmplY3QuYXNzaWduKHt9LCBvYmopO1xuXG4gICAgICBpZiAocHJvcCAmJiB0aGlzW3Byb3BdKSB7XG4gICAgICAgIHZhciBwYXJ0cyA9IHRoaXNbcHJvcF0udHJpbSgpLnNwbGl0KCcgJyk7XG5cbiAgICAgICAgdmFyIGNvbG9yID0gcGFydHNbMF0gKyAnLS10ZXh0JztcblxuICAgICAgICBpZiAocGFydHMubGVuZ3RoID4gMSkgY29sb3IgKz0gJyB0ZXh0LS0nICsgcGFydHNbMV07XG5cbiAgICAgICAgY2xhc3Nlc1tjb2xvcl0gPSAhIXRoaXNbcHJvcF07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjbGFzc2VzO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBwcm9wczoge1xuICAgIGRhcms6IEJvb2xlYW4sXG4gICAgbGlnaHQ6IEJvb2xlYW5cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIHRoZW1lQ2xhc3NlczogZnVuY3Rpb24gdGhlbWVDbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ3RoZW1lLS1saWdodCc6IHRoaXMubGlnaHQsXG4gICAgICAgICd0aGVtZS0tZGFyayc6IHRoaXMuZGFya1xuICAgICAgfTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGV4cG9ydCAoaW1tdXRhYmxlKSAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZFwiXSA9IGNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWw7XG4vKiBoYXJtb255IGV4cG9ydCAoaW1tdXRhYmxlKSAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZVwiXSA9IGNyZWF0ZVNpbXBsZVRyYW5zaXRpb247XG4vKiBoYXJtb255IGV4cG9ydCAoaW1tdXRhYmxlKSAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYlwiXSA9IGNyZWF0ZUphdmFTY3JpcHRUcmFuc2l0aW9uO1xuLyogdW51c2VkIGhhcm1vbnkgZXhwb3J0IGRpcmVjdGl2ZUNvbmZpZyAqL1xuLyogaGFybW9ueSBleHBvcnQgKGltbXV0YWJsZSkgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSBhZGRPbmNlRXZlbnRMaXN0ZW5lcjtcbi8qIGhhcm1vbnkgZXhwb3J0IChpbW11dGFibGUpICovIF9fd2VicGFja19leHBvcnRzX19bXCJnXCJdID0gZ2V0T2JqZWN0VmFsdWVCeVBhdGg7XG4vKiBoYXJtb255IGV4cG9ydCAoaW1tdXRhYmxlKSAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiY1wiXSA9IGNyZWF0ZVJhbmdlO1xuLyogaGFybW9ueSBleHBvcnQgKGltbXV0YWJsZSkgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImhcIl0gPSBnZXRaSW5kZXg7XG4vKiBoYXJtb255IGV4cG9ydCAoaW1tdXRhYmxlKSAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZlwiXSA9IGVzY2FwZUhUTUw7XG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9IGVsc2UgeyByZXR1cm4gQXJyYXkuZnJvbShhcnIpOyB9IH1cblxuZnVuY3Rpb24gY3JlYXRlU2ltcGxlRnVuY3Rpb25hbChjKSB7XG4gIHZhciBlbCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJ2Rpdic7XG4gIHZhciBuYW1lID0gYXJndW1lbnRzWzJdO1xuXG4gIG5hbWUgPSBuYW1lIHx8IGMucmVwbGFjZSgvX18vZywgJy0nKTtcblxuICByZXR1cm4ge1xuICAgIG5hbWU6ICd2LScgKyBuYW1lLFxuICAgIGZ1bmN0aW9uYWw6IHRydWUsXG5cbiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBfcmVmKSB7XG4gICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YSxcbiAgICAgICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW47XG5cbiAgICAgIGRhdGEuc3RhdGljQ2xhc3MgPSAoYyArICcgJyArIChkYXRhLnN0YXRpY0NsYXNzIHx8ICcnKSkudHJpbSgpO1xuXG4gICAgICByZXR1cm4gaChlbCwgZGF0YSwgY2hpbGRyZW4pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlU2ltcGxlVHJhbnNpdGlvbihuYW1lKSB7XG4gIHZhciBvcmlnaW4gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICd0b3AgY2VudGVyIDAnO1xuICB2YXIgbW9kZSA9IGFyZ3VtZW50c1syXTtcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG5cbiAgICBmdW5jdGlvbmFsOiB0cnVlLFxuXG4gICAgcHJvcHM6IHtcbiAgICAgIG9yaWdpbjoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6IG9yaWdpblxuICAgICAgfVxuICAgIH0sXG5cbiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBjb250ZXh0KSB7XG4gICAgICBjb250ZXh0LmRhdGEgPSBjb250ZXh0LmRhdGEgfHwge307XG4gICAgICBjb250ZXh0LmRhdGEucHJvcHMgPSB7IG5hbWU6IG5hbWUgfTtcbiAgICAgIGNvbnRleHQuZGF0YS5vbiA9IGNvbnRleHQuZGF0YS5vbiB8fCB7fTtcbiAgICAgIGlmICghT2JqZWN0LmlzRXh0ZW5zaWJsZShjb250ZXh0LmRhdGEub24pKSB7XG4gICAgICAgIGNvbnRleHQuZGF0YS5vbiA9IF9leHRlbmRzKHt9LCBjb250ZXh0LmRhdGEub24pO1xuICAgICAgfVxuXG4gICAgICBpZiAobW9kZSkgY29udGV4dC5kYXRhLnByb3BzLm1vZGUgPSBtb2RlO1xuXG4gICAgICBjb250ZXh0LmRhdGEub24uYmVmb3JlRW50ZXIgPSBmdW5jdGlvbiAoZWwpIHtcbiAgICAgICAgZWwuc3R5bGUudHJhbnNmb3JtT3JpZ2luID0gY29udGV4dC5wcm9wcy5vcmlnaW47XG4gICAgICAgIGVsLnN0eWxlLndlYmtpdFRyYW5zZm9ybU9yaWdpbiA9IGNvbnRleHQucHJvcHMub3JpZ2luO1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIGgoJ3RyYW5zaXRpb24nLCBjb250ZXh0LmRhdGEsIGNvbnRleHQuY2hpbGRyZW4pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSmF2YVNjcmlwdFRyYW5zaXRpb24obmFtZSwgZnVuY3Rpb25zKSB7XG4gIHZhciBjc3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHRydWU7XG4gIHZhciBtb2RlID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAnaW4tb3V0JztcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG5cbiAgICBmdW5jdGlvbmFsOiB0cnVlLFxuXG4gICAgcHJvcHM6IHtcbiAgICAgIGNzczoge1xuICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICBkZWZhdWx0OiBjc3NcbiAgICAgIH0sXG4gICAgICBtb2RlOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogbW9kZVxuICAgICAgfVxuICAgIH0sXG5cbiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBjb250ZXh0KSB7XG4gICAgICB2YXIgZGF0YSA9IHtcbiAgICAgICAgcHJvcHM6IF9leHRlbmRzKHt9LCBjb250ZXh0LnByb3BzLCB7XG4gICAgICAgICAgbmFtZTogbmFtZVxuICAgICAgICB9KSxcbiAgICAgICAgb246IGZ1bmN0aW9uc1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIGgoJ3RyYW5zaXRpb24nLCBkYXRhLCBjb250ZXh0LmNoaWxkcmVuKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGRpcmVjdGl2ZUNvbmZpZyhiaW5kaW5nKSB7XG4gIHZhciBkZWZhdWx0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRzLCBiaW5kaW5nLm1vZGlmaWVycywgeyB2YWx1ZTogYmluZGluZy5hcmcgfSwgYmluZGluZy52YWx1ZSB8fCB7fSk7XG59XG5cbmZ1bmN0aW9uIGFkZE9uY2VFdmVudExpc3RlbmVyKGVsLCBldmVudCwgY2IpIHtcbiAgdmFyIG9uY2UgPSBmdW5jdGlvbiBvbmNlKCkge1xuICAgIGNiKCk7XG4gICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgb25jZSwgZmFsc2UpO1xuICB9O1xuXG4gIGVsLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIG9uY2UsIGZhbHNlKTtcbn1cblxuZnVuY3Rpb24gZ2V0T2JqZWN0VmFsdWVCeVBhdGgob2JqLCBwYXRoKSB7XG4gIC8vIGNyZWRpdDogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy82NDkxNDYzL2FjY2Vzc2luZy1uZXN0ZWQtamF2YXNjcmlwdC1vYmplY3RzLXdpdGgtc3RyaW5nLWtleSNjb21tZW50NTUyNzg0MTNfNjQ5MTYyMVxuICBpZiAoIXBhdGggfHwgcGF0aC5jb25zdHJ1Y3RvciAhPT0gU3RyaW5nKSByZXR1cm47XG4gIHBhdGggPSBwYXRoLnJlcGxhY2UoL1xcWyhcXHcrKVxcXS9nLCAnLiQxJyk7IC8vIGNvbnZlcnQgaW5kZXhlcyB0byBwcm9wZXJ0aWVzXG4gIHBhdGggPSBwYXRoLnJlcGxhY2UoL15cXC4vLCAnJyk7IC8vIHN0cmlwIGEgbGVhZGluZyBkb3RcbiAgdmFyIGEgPSBwYXRoLnNwbGl0KCcuJyk7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gYS5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICB2YXIgayA9IGFbaV07XG4gICAgaWYgKG9iaiBpbnN0YW5jZW9mIE9iamVjdCAmJiBrIGluIG9iaikge1xuICAgICAgb2JqID0gb2JqW2tdO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJhbmdlKGxlbmd0aCkge1xuICByZXR1cm4gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShBcnJheS5mcm9tKHsgbGVuZ3RoOiBsZW5ndGggfSwgZnVuY3Rpb24gKHYsIGspIHtcbiAgICByZXR1cm4gaztcbiAgfSkpKTtcbn1cblxuZnVuY3Rpb24gZ2V0WkluZGV4KGVsKSB7XG4gIGlmICghZWwgfHwgZWwubm9kZVR5cGUgIT09IE5vZGUuRUxFTUVOVF9OT0RFKSByZXR1cm4gMDtcbiAgdmFyIHppID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShlbCkuZ2V0UHJvcGVydHlWYWx1ZSgnei1pbmRleCcpO1xuICBpZiAoaXNOYU4oemkpKSByZXR1cm4gZ2V0WkluZGV4KGVsLnBhcmVudE5vZGUpO1xuXG4gIHJldHVybiB6aTtcbn1cblxudmFyIHRhZ3NUb1JlcGxhY2UgPSB7XG4gICcmJzogJyZhbXA7JyxcbiAgJzwnOiAnJmx0OycsXG4gICc+JzogJyZndDsnXG59O1xuZnVuY3Rpb24gZXNjYXBlSFRNTChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bJjw+XS9nLCBmdW5jdGlvbiAodGFnKSB7XG4gICAgcmV0dXJuIHRhZ3NUb1JlcGxhY2VbdGFnXSB8fCB0YWc7XG4gIH0pO1xufVxuXG4vKioqLyB9KSxcbi8qIDMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2NCk7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkljb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZJY29uX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiA0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBleHBvcnQgKGltbXV0YWJsZSkgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImJcIl0gPSBmYWN0b3J5O1xuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gZmFjdG9yeSgpIHtcbiAgdmFyIF93YXRjaDtcblxuICB2YXIgcHJvcCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogJ3ZhbHVlJztcbiAgdmFyIGV2ZW50ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnaW5wdXQnO1xuXG4gIHJldHVybiB7XG4gICAgbW9kZWw6IHsgcHJvcDogcHJvcCwgZXZlbnQ6IGV2ZW50IH0sXG5cbiAgICBwcm9wczogX2RlZmluZVByb3BlcnR5KHt9LCBwcm9wLCB7IHJlcXVpcmVkOiBmYWxzZSB9KSxcblxuICAgIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpc0FjdGl2ZTogISF0aGlzW3Byb3BdXG4gICAgICB9O1xuICAgIH0sXG5cblxuICAgIHdhdGNoOiAoX3dhdGNoID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfd2F0Y2gsIHByb3AsIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHRoaXMuaXNBY3RpdmUgPSAhIXZhbDtcbiAgICB9KSwgX2RlZmluZVByb3BlcnR5KF93YXRjaCwgJ2lzQWN0aXZlJywgZnVuY3Rpb24gaXNBY3RpdmUodmFsKSB7XG4gICAgICAhIXZhbCAhPT0gdGhpc1twcm9wXSAmJiB0aGlzLiRlbWl0KGV2ZW50LCB2YWwpO1xuICAgIH0pLCBfd2F0Y2gpXG4gIH07XG59XG5cbnZhciBUb2dnbGVhYmxlID0gZmFjdG9yeSgpO1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKFRvZ2dsZWFibGUpO1xuXG4vKioqLyB9KSxcbi8qIDUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiB1bnVzZWQgaGFybW9ueSBleHBvcnQgVkJvdHRvbVNoZWV0VHJhbnN0aW9uICovXG4vKiB1bnVzZWQgaGFybW9ueSBleHBvcnQgVkNhcm91c2VsVHJhbnNpdGlvbiAqL1xuLyogdW51c2VkIGhhcm1vbnkgZXhwb3J0IFZDYXJvdXNlbFJldmVyc2VUcmFuc2l0aW9uICovXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiZ1wiLCBmdW5jdGlvbigpIHsgcmV0dXJuIFZUYWJUcmFuc2l0aW9uOyB9KTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJmXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gVlRhYlJldmVyc2VUcmFuc2l0aW9uOyB9KTtcbi8qIHVudXNlZCBoYXJtb255IGV4cG9ydCBWTWVudVRyYW5zaXRpb24gKi9cbi8qIHVudXNlZCBoYXJtb255IGV4cG9ydCBWRmFiVHJhbnNpdGlvbiAqL1xuLyogdW51c2VkIGhhcm1vbnkgZXhwb3J0IFZEaWFsb2dUcmFuc2l0aW9uICovXG4vKiB1bnVzZWQgaGFybW9ueSBleHBvcnQgVkRpYWxvZ0JvdHRvbVRyYW5zaXRpb24gKi9cbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJiXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gVkZhZGVUcmFuc2l0aW9uOyB9KTtcbi8qIHVudXNlZCBoYXJtb255IGV4cG9ydCBWU2NhbGVUcmFuc2l0aW9uICovXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiY1wiLCBmdW5jdGlvbigpIHsgcmV0dXJuIFZTbGlkZVhUcmFuc2l0aW9uOyB9KTtcbi8qIHVudXNlZCBoYXJtb255IGV4cG9ydCBWU2xpZGVYUmV2ZXJzZVRyYW5zaXRpb24gKi9cbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJlXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gVlNsaWRlWVRyYW5zaXRpb247IH0pO1xuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcImRcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBWU2xpZGVZUmV2ZXJzZVRyYW5zaXRpb247IH0pO1xuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcImFcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBWRXhwYW5kVHJhbnNpdGlvbjsgfSk7XG4vKiB1bnVzZWQgaGFybW9ueSBleHBvcnQgVlJvd0V4cGFuZFRyYW5zaXRpb24gKi9cbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX2V4cGFuZF90cmFuc2l0aW9uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMwKTtcblxuXG5cblxuLy8gQ29tcG9uZW50IHNwZWNpZmljIHRyYW5zaXRpb25zXG52YXIgVkJvdHRvbVNoZWV0VHJhbnN0aW9uID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJlXCIgLyogY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiAqL10pKCdib3R0b20tc2hlZXQtdHJhbnNpdGlvbicpO1xudmFyIFZDYXJvdXNlbFRyYW5zaXRpb24gPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImVcIiAvKiBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uICovXSkoJ2Nhcm91c2VsLXRyYW5zaXRpb24nKTtcbnZhciBWQ2Fyb3VzZWxSZXZlcnNlVHJhbnNpdGlvbiA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZVwiIC8qIGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24gKi9dKSgnY2Fyb3VzZWwtcmV2ZXJzZS10cmFuc2l0aW9uJyk7XG52YXIgVlRhYlRyYW5zaXRpb24gPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImVcIiAvKiBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uICovXSkoJ3RhYi10cmFuc2l0aW9uJyk7XG52YXIgVlRhYlJldmVyc2VUcmFuc2l0aW9uID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJlXCIgLyogY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiAqL10pKCd0YWItcmV2ZXJzZS10cmFuc2l0aW9uJyk7XG52YXIgVk1lbnVUcmFuc2l0aW9uID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJlXCIgLyogY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiAqL10pKCdtZW51LXRyYW5zaXRpb24nKTtcbnZhciBWRmFiVHJhbnNpdGlvbiA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZVwiIC8qIGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24gKi9dKSgnZmFiLXRyYW5zaXRpb24nLCAnY2VudGVyIGNlbnRlcicsICdvdXQtaW4nKTtcblxuLy8gR2VuZXJpYyB0cmFuc2l0aW9uc1xudmFyIFZEaWFsb2dUcmFuc2l0aW9uID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJlXCIgLyogY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiAqL10pKCdkaWFsb2ctdHJhbnNpdGlvbicpO1xudmFyIFZEaWFsb2dCb3R0b21UcmFuc2l0aW9uID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJlXCIgLyogY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiAqL10pKCdkaWFsb2ctYm90dG9tLXRyYW5zaXRpb24nKTtcbnZhciBWRmFkZVRyYW5zaXRpb24gPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImVcIiAvKiBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uICovXSkoJ2ZhZGUtdHJhbnNpdGlvbicpO1xudmFyIFZTY2FsZVRyYW5zaXRpb24gPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImVcIiAvKiBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uICovXSkoJ3NjYWxlLXRyYW5zaXRpb24nKTtcbnZhciBWU2xpZGVYVHJhbnNpdGlvbiA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZVwiIC8qIGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24gKi9dKSgnc2xpZGUteC10cmFuc2l0aW9uJyk7XG52YXIgVlNsaWRlWFJldmVyc2VUcmFuc2l0aW9uID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJlXCIgLyogY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiAqL10pKCdzbGlkZS14LXJldmVyc2UtdHJhbnNpdGlvbicpO1xudmFyIFZTbGlkZVlUcmFuc2l0aW9uID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJlXCIgLyogY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiAqL10pKCdzbGlkZS15LXRyYW5zaXRpb24nKTtcbnZhciBWU2xpZGVZUmV2ZXJzZVRyYW5zaXRpb24gPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImVcIiAvKiBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uICovXSkoJ3NsaWRlLXktcmV2ZXJzZS10cmFuc2l0aW9uJyk7XG5cbi8vIEphdmFTY3JpcHQgdHJhbnNpdGlvbnNcbnZhciBWRXhwYW5kVHJhbnNpdGlvbiA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiYlwiIC8qIGNyZWF0ZUphdmFTY3JpcHRUcmFuc2l0aW9uICovXSkoJ2V4cGFuZC10cmFuc2l0aW9uJywgT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fZXhwYW5kX3RyYW5zaXRpb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXSkoKSk7XG52YXIgVlJvd0V4cGFuZFRyYW5zaXRpb24gPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImJcIiAvKiBjcmVhdGVKYXZhU2NyaXB0VHJhbnNpdGlvbiAqL10pKCdyb3ctZXhwYW5kLXRyYW5zaXRpb24nLCBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19leHBhbmRfdHJhbnNpdGlvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKSgnZGF0YXRhYmxlX19leHBhbmQtY29sLS1leHBhbmRlZCcpKTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiaFwiXSA9IChpbnN0YWxsKTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5mdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KCd2LWJvdHRvbS1zaGVldC10cmFuc2l0aW9uJywgVkJvdHRvbVNoZWV0VHJhbnN0aW9uKTtcbiAgVnVlLmNvbXBvbmVudCgndi1jYXJvdXNlbC10cmFuc2l0aW9uJywgVkNhcm91c2VsVHJhbnNpdGlvbik7XG4gIFZ1ZS5jb21wb25lbnQoJ3YtY2Fyb3VzZWwtcmV2ZXJzZS10cmFuc2l0aW9uJywgVkNhcm91c2VsUmV2ZXJzZVRyYW5zaXRpb24pO1xuICBWdWUuY29tcG9uZW50KCd2LWRpYWxvZy10cmFuc2l0aW9uJywgVkRpYWxvZ1RyYW5zaXRpb24pO1xuICBWdWUuY29tcG9uZW50KCd2LWRpYWxvZy1ib3R0b20tdHJhbnNpdGlvbicsIFZEaWFsb2dCb3R0b21UcmFuc2l0aW9uKTtcbiAgVnVlLmNvbXBvbmVudCgndi1mYWItdHJhbnNpdGlvbicsIFZGYWJUcmFuc2l0aW9uKTtcbiAgVnVlLmNvbXBvbmVudCgndi1mYWRlLXRyYW5zaXRpb24nLCBWRmFkZVRyYW5zaXRpb24pO1xuICBWdWUuY29tcG9uZW50KCd2LW1lbnUtdHJhbnNpdGlvbicsIFZNZW51VHJhbnNpdGlvbik7XG4gIFZ1ZS5jb21wb25lbnQoJ3Ytc2NhbGUtdHJhbnNpdGlvbicsIFZTY2FsZVRyYW5zaXRpb24pO1xuICBWdWUuY29tcG9uZW50KCd2LXNsaWRlLXgtdHJhbnNpdGlvbicsIFZTbGlkZVhUcmFuc2l0aW9uKTtcbiAgVnVlLmNvbXBvbmVudCgndi1zbGlkZS14LXJldmVyc2UtdHJhbnNpdGlvbicsIFZTbGlkZVhSZXZlcnNlVHJhbnNpdGlvbik7XG4gIFZ1ZS5jb21wb25lbnQoJ3Ytc2xpZGUteS10cmFuc2l0aW9uJywgVlNsaWRlWVRyYW5zaXRpb24pO1xuICBWdWUuY29tcG9uZW50KCd2LXNsaWRlLXktcmV2ZXJzZS10cmFuc2l0aW9uJywgVlNsaWRlWVJldmVyc2VUcmFuc2l0aW9uKTtcbiAgVnVlLmNvbXBvbmVudCgndi10YWItcmV2ZXJzZS10cmFuc2l0aW9uJywgVlRhYlJldmVyc2VUcmFuc2l0aW9uKTtcbiAgVnVlLmNvbXBvbmVudCgndi10YWItdHJhbnNpdGlvbicsIFZUYWJUcmFuc2l0aW9uKTtcbiAgVnVlLmNvbXBvbmVudCgndi1leHBhbmQtdHJhbnNpdGlvbicsIFZFeHBhbmRUcmFuc2l0aW9uKTtcbiAgVnVlLmNvbXBvbmVudCgndi1yb3ctZXhwYW5kLXRyYW5zaXRpb24nLCBWUm93RXhwYW5kVHJhbnNpdGlvbik7XG59XG5cbi8qKiovIH0pLFxuLyogNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIGRpcmVjdGl2ZShlLCBlbCwgYmluZGluZywgdikge1xuICAvLyBUaGUgaW5jbHVkZSBlbGVtZW50IGNhbGxiYWNrcyBiZWxvdyBjYW4gYmUgZXhwZW5zaXZlXG4gIC8vIHNvIHdlIHNob3VsZCBhdm9pZCBjYWxsaW5nIHRoZW0gd2hlbiB3ZSdyZSBub3QgYWN0aXZlLlxuICAvLyBFeHBsaWNpdGx5IGNoZWNrIGZvciBmYWxzZSB0byBhbGxvdyBmYWxsYmFjayBjb21wYXRpYmlsaXR5XG4gIC8vIHdpdGggbm9uLXRvZ2dsZWFibGUgY29tcG9uZW50c1xuICBpZiAoIWUgfHwgdi5jb250ZXh0LmlzQWN0aXZlID09PSBmYWxzZSkgcmV0dXJuO1xuXG4gIC8vIElmIGNsaWNrIHdhcyB0cmlnZ2VyZWQgcHJvZ3JhbW1hdGljYWx5IChkb21FbC5jbGljaygpKSB0aGVuXG4gIC8vIGl0IHNob3VsZG4ndCBiZSB0cmVhdGVkIGFzIGNsaWNrLW91dHNpZGVcbiAgLy8gQ2hyb21lL0ZpcmVmb3ggc3VwcG9ydCBpc1RydXN0ZWQgcHJvcGVydHlcbiAgLy8gSUUvRWRnZSBzdXBwb3J0IHBvaW50ZXJUeXBlIHByb3BlcnR5IChlbXB0eSBpZiBub3QgdHJpZ2dlcmVkXG4gIC8vIGJ5IHBvaW50aW5nIGRldmljZSlcbiAgaWYgKCdpc1RydXN0ZWQnIGluIGUgJiYgIWUuaXNUcnVzdGVkIHx8ICdwb2ludGVyVHlwZScgaW4gZSAmJiAhZS5wb2ludGVyVHlwZSkgcmV0dXJuO1xuXG4gIC8vIEdldCB2YWx1ZSBwYXNzZWQgdG8gZGlyZWN0aXZlXG4gIHZhciB2YWwgPSBiaW5kaW5nLnZhbHVlIHx8IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcbiAgLy8gQ2hlY2sgaWYgY2FsbGJhY2sgd2FzIHBhc3NlZCBpbiBvYmplY3Qgb3IgYXMgdGhlIHZhbHVlXG4gIHZhciBjYiA9IHZhbC5jYWxsYmFjayB8fCB2YWw7XG4gIC8vIENoZWNrIGlmIGFkZGl0aW9uYWwgZWxlbWVudHMgd2VyZSBwYXNzZWQgdG8gYmUgaW5jbHVkZWQgaW4gY2hlY2tcbiAgLy8gKGNsaWNrIG11c3QgYmUgb3V0c2lkZSBhbGwgaW5jbHVkZWQgZWxlbWVudHMsIGlmIGFueSlcbiAgdmFyIGVsZW1lbnRzID0gKHZhbC5pbmNsdWRlIHx8IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gW107XG4gIH0pKCk7XG4gIC8vIEFkZCB0aGUgcm9vdCBlbGVtZW50IGZvciB0aGUgY29tcG9uZW50IHRoaXMgZGlyZWN0aXZlIHdhcyBkZWZpbmVkIG9uXG4gIGVsZW1lbnRzLnB1c2goZWwpO1xuXG4gIC8vIENoZWNrIGlmIGl0J3MgYSBjbGljayBvdXRzaWRlIG91ciBlbGVtZW50cywgYW5kIHRoZW4gaWYgb3VyIGNhbGxiYWNrIHJldHVybnMgdHJ1ZS5cbiAgLy8gTm9uLXRvZ2dsZWFibGUgY29tcG9uZW50cyBzaG91bGQgdGFrZSBhY3Rpb24gaW4gdGhlaXIgY2FsbGJhY2sgYW5kIHJldHVybiBmYWxzeS5cbiAgLy8gVG9nZ2xlYWJsZSBjYW4gcmV0dXJuIHRydWUgaWYgaXQgd2FudHMgdG8gZGVhY3RpdmF0ZS5cbiAgLy8gTm90ZSB0aGF0LCBiZWNhdXNlIHdlJ3JlIGluIHRoZSBjYXB0dXJlIHBoYXNlLCB0aGlzIGNhbGxiYWNrIHdpbGwgb2NjdXJlIGJlZm9yZVxuICAvLyB0aGUgYnViYmxpbmcgY2xpY2sgZXZlbnQgb24gYW55IG91dHNpZGUgZWxlbWVudHMuXG4gIGlmICghY2xpY2tlZEluRWxzKGUsIGVsZW1lbnRzKSAmJiBjYihlKSkge1xuICAgIC8vIERlbGF5IHNldHRpbmcgdG9nZ2xlYWJsZSBpbmFjdGl2ZSB0byBhdm9pZCBjb25mbGljdGluZ1xuICAgIC8vIHdpdGggYW4gb3V0c2lkZSBjbGljayBvbiBhbnkgYWN0aXZhdG9yIHRvZ2dsaW5nIG91ciBzdGF0ZS5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB2LmNvbnRleHQuaXNBY3RpdmUgPSBmYWxzZTtcbiAgICB9LCAwKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjbGlja2VkSW5FbHMoZSwgZWxlbWVudHMpIHtcbiAgLy8gR2V0IHBvc2l0aW9uIG9mIGNsaWNrXG4gIHZhciB4ID0gZS5jbGllbnRYLFxuICAgICAgeSA9IGUuY2xpZW50WTtcbiAgLy8gTG9vcCBvdmVyIGFsbCBpbmNsdWRlZCBlbGVtZW50cyB0byBzZWUgaWYgY2xpY2sgd2FzIGluIGFueSBvZiB0aGVtXG5cbiAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlO1xuICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcbiAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gZWxlbWVudHNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICB2YXIgZWwgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgaWYgKGNsaWNrZWRJbkVsKGVsLCB4LCB5KSkgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7XG4gICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7XG4gICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gY2xpY2tlZEluRWwoZWwsIHgsIHkpIHtcbiAgLy8gR2V0IGJvdW5kaW5nIHJlY3QgZm9yIGVsZW1lbnRcbiAgLy8gKHdlJ3JlIGluIGNhcHR1cmluZyBldmVudCBhbmQgd2Ugd2FudCB0byBjaGVjayBmb3IgbXVsdGlwbGUgZWxlbWVudHMsXG4gIC8vICBzbyBjYW4ndCB1c2UgdGFyZ2V0LilcbiAgdmFyIGIgPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgLy8gQ2hlY2sgaWYgdGhlIGNsaWNrIHdhcyBpbiB0aGUgZWxlbWVudCdzIGJvdW5kaW5nIHJlY3RcblxuICByZXR1cm4geCA+PSBiLmxlZnQgJiYgeCA8PSBiLnJpZ2h0ICYmIHkgPj0gYi50b3AgJiYgeSA8PSBiLmJvdHRvbTtcbn1cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICdjbGljay1vdXRzaWRlJyxcblxuICAvLyBbZGF0YS1hcHBdIG1heSBub3QgYmUgZm91bmRcbiAgLy8gaWYgdXNpbmcgYmluZCwgaW5zZXJ0ZWQgbWFrZXNcbiAgLy8gc3VyZSB0aGF0IHRoZSByb290IGVsZW1lbnQgaXNcbiAgLy8gYXZhaWxhYmxlLCBpT1MgZG9lcyBub3Qgc3VwcG9ydFxuICAvLyBjbGlja3Mgb24gYm9keVxuICBpbnNlcnRlZDogZnVuY3Rpb24gaW5zZXJ0ZWQoZWwsIGJpbmRpbmcsIHYpIHtcbiAgICB2YXIgb25DbGljayA9IGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICAgICAgcmV0dXJuIGRpcmVjdGl2ZShlLCBlbCwgYmluZGluZywgdik7XG4gICAgfTtcbiAgICAvLyBpT1MgZG9lcyBub3QgcmVjb2duaXplIGNsaWNrIGV2ZW50cyBvbiBkb2N1bWVudFxuICAgIC8vIG9yIGJvZHksIHRoaXMgaXMgdGhlIGVudGlyZSBwdXJwb3NlIG9mIHRoZSB2LWFwcFxuICAgIC8vIGNvbXBvbmVudCBhbmQgW2RhdGEtYXBwXSwgc3RvcCByZW1vdmluZyB0aGlzXG4gICAgdmFyIGFwcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFwcF0nKSB8fCBkb2N1bWVudC5ib2R5OyAvLyBUaGlzIGlzIG9ubHkgZm9yIHVuaXQgdGVzdHNcbiAgICBhcHAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbkNsaWNrLCB0cnVlKTtcbiAgICBlbC5fY2xpY2tPdXRzaWRlID0gb25DbGljaztcbiAgfSxcbiAgdW5iaW5kOiBmdW5jdGlvbiB1bmJpbmQoZWwpIHtcbiAgICB2YXIgYXBwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtYXBwXScpIHx8IGRvY3VtZW50LmJvZHk7IC8vIFRoaXMgaXMgb25seSBmb3IgdW5pdCB0ZXN0c1xuICAgIGFwcCAmJiBhcHAucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbC5fY2xpY2tPdXRzaWRlLCB0cnVlKTtcbiAgICBkZWxldGUgZWwuX2NsaWNrT3V0c2lkZTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBfdG91Y2hzdGFydCA9IGZ1bmN0aW9uIF90b3VjaHN0YXJ0KGV2ZW50LCB3cmFwcGVyKSB7XG4gIHZhciB0b3VjaCA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdO1xuICB3cmFwcGVyLnRvdWNoc3RhcnRYID0gdG91Y2guY2xpZW50WDtcbiAgd3JhcHBlci50b3VjaHN0YXJ0WSA9IHRvdWNoLmNsaWVudFk7XG5cbiAgd3JhcHBlci5zdGFydCAmJiB3cmFwcGVyLnN0YXJ0KE9iamVjdC5hc3NpZ24oZXZlbnQsIHdyYXBwZXIpKTtcbn07XG5cbnZhciBfdG91Y2hlbmQgPSBmdW5jdGlvbiBfdG91Y2hlbmQoZXZlbnQsIHdyYXBwZXIpIHtcbiAgdmFyIHRvdWNoID0gZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF07XG4gIHdyYXBwZXIudG91Y2hlbmRYID0gdG91Y2guY2xpZW50WDtcbiAgd3JhcHBlci50b3VjaGVuZFkgPSB0b3VjaC5jbGllbnRZO1xuXG4gIHdyYXBwZXIuZW5kICYmIHdyYXBwZXIuZW5kKE9iamVjdC5hc3NpZ24oZXZlbnQsIHdyYXBwZXIpKTtcblxuICBoYW5kbGVHZXN0dXJlKHdyYXBwZXIpO1xufTtcblxudmFyIF90b3VjaG1vdmUgPSBmdW5jdGlvbiBfdG91Y2htb3ZlKGV2ZW50LCB3cmFwcGVyKSB7XG4gIHZhciB0b3VjaCA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdO1xuICB3cmFwcGVyLnRvdWNobW92ZVggPSB0b3VjaC5jbGllbnRYO1xuICB3cmFwcGVyLnRvdWNobW92ZVkgPSB0b3VjaC5jbGllbnRZO1xuXG4gIHdyYXBwZXIubW92ZSAmJiB3cmFwcGVyLm1vdmUoT2JqZWN0LmFzc2lnbihldmVudCwgd3JhcHBlcikpO1xufTtcblxudmFyIGhhbmRsZUdlc3R1cmUgPSBmdW5jdGlvbiBoYW5kbGVHZXN0dXJlKHdyYXBwZXIpIHtcbiAgdmFyIHRvdWNoc3RhcnRYID0gd3JhcHBlci50b3VjaHN0YXJ0WCxcbiAgICAgIHRvdWNoZW5kWCA9IHdyYXBwZXIudG91Y2hlbmRYLFxuICAgICAgdG91Y2hzdGFydFkgPSB3cmFwcGVyLnRvdWNoc3RhcnRZLFxuICAgICAgdG91Y2hlbmRZID0gd3JhcHBlci50b3VjaGVuZFk7XG5cbiAgdmFyIGRpclJhdGlvID0gMC41O1xuICB2YXIgbWluRGlzdGFuY2UgPSAxNjtcbiAgd3JhcHBlci5vZmZzZXRYID0gdG91Y2hlbmRYIC0gdG91Y2hzdGFydFg7XG4gIHdyYXBwZXIub2Zmc2V0WSA9IHRvdWNoZW5kWSAtIHRvdWNoc3RhcnRZO1xuXG4gIGlmIChNYXRoLmFicyh3cmFwcGVyLm9mZnNldFkpIDwgZGlyUmF0aW8gKiBNYXRoLmFicyh3cmFwcGVyLm9mZnNldFgpKSB7XG4gICAgd3JhcHBlci5sZWZ0ICYmIHRvdWNoZW5kWCA8IHRvdWNoc3RhcnRYIC0gbWluRGlzdGFuY2UgJiYgd3JhcHBlci5sZWZ0KHdyYXBwZXIpO1xuICAgIHdyYXBwZXIucmlnaHQgJiYgdG91Y2hlbmRYID4gdG91Y2hzdGFydFggKyBtaW5EaXN0YW5jZSAmJiB3cmFwcGVyLnJpZ2h0KHdyYXBwZXIpO1xuICB9XG5cbiAgaWYgKE1hdGguYWJzKHdyYXBwZXIub2Zmc2V0WCkgPCBkaXJSYXRpbyAqIE1hdGguYWJzKHdyYXBwZXIub2Zmc2V0WSkpIHtcbiAgICB3cmFwcGVyLnVwICYmIHRvdWNoZW5kWSA8IHRvdWNoc3RhcnRZIC0gbWluRGlzdGFuY2UgJiYgd3JhcHBlci51cCh3cmFwcGVyKTtcbiAgICB3cmFwcGVyLmRvd24gJiYgdG91Y2hlbmRZID4gdG91Y2hzdGFydFkgKyBtaW5EaXN0YW5jZSAmJiB3cmFwcGVyLmRvd24od3JhcHBlcik7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGluc2VydGVkKGVsLCBfcmVmLCBfcmVmMikge1xuICB2YXIgdmFsdWUgPSBfcmVmLnZhbHVlO1xuICB2YXIgY29udGV4dCA9IF9yZWYyLmNvbnRleHQ7XG5cbiAgdmFyIHdyYXBwZXIgPSB7XG4gICAgdG91Y2hzdGFydFg6IDAsXG4gICAgdG91Y2hzdGFydFk6IDAsXG4gICAgdG91Y2hlbmRYOiAwLFxuICAgIHRvdWNoZW5kWTogMCxcbiAgICB0b3VjaG1vdmVYOiAwLFxuICAgIHRvdWNobW92ZVk6IDAsXG4gICAgb2Zmc2V0WDogMCxcbiAgICBvZmZzZXRZOiAwLFxuICAgIGxlZnQ6IHZhbHVlLmxlZnQsXG4gICAgcmlnaHQ6IHZhbHVlLnJpZ2h0LFxuICAgIHVwOiB2YWx1ZS51cCxcbiAgICBkb3duOiB2YWx1ZS5kb3duLFxuICAgIHN0YXJ0OiB2YWx1ZS5zdGFydCxcbiAgICBtb3ZlOiB2YWx1ZS5tb3ZlLFxuICAgIGVuZDogdmFsdWUuZW5kXG4gIH07XG5cbiAgdmFyIHRhcmdldCA9IHZhbHVlLnBhcmVudCA/IGVsLnBhcmVudE5vZGUgOiBlbDtcbiAgdmFyIG9wdGlvbnMgPSB2YWx1ZS5vcHRpb25zIHx8IHsgcGFzc2l2ZTogdHJ1ZVxuXG4gICAgLy8gTmVlZGVkIHRvIHBhc3MgdW5pdCB0ZXN0c1xuICB9O2lmICghdGFyZ2V0KSByZXR1cm47XG5cbiAgdGFyZ2V0Ll90b3VjaEhhbmRsZXJzID0gT2JqZWN0LmFzc2lnbihPYmplY3QodGFyZ2V0Ll90b3VjaEhhbmRsZXJzKSwgX2RlZmluZVByb3BlcnR5KHt9LCBjb250ZXh0Ll91aWQsIHtcbiAgICB0b3VjaHN0YXJ0OiBmdW5jdGlvbiB0b3VjaHN0YXJ0KGUpIHtcbiAgICAgIHJldHVybiBfdG91Y2hzdGFydChlLCB3cmFwcGVyKTtcbiAgICB9LFxuICAgIHRvdWNoZW5kOiBmdW5jdGlvbiB0b3VjaGVuZChlKSB7XG4gICAgICByZXR1cm4gX3RvdWNoZW5kKGUsIHdyYXBwZXIpO1xuICAgIH0sXG4gICAgdG91Y2htb3ZlOiBmdW5jdGlvbiB0b3VjaG1vdmUoZSkge1xuICAgICAgcmV0dXJuIF90b3VjaG1vdmUoZSwgd3JhcHBlcik7XG4gICAgfVxuICB9KSk7XG4gIE9iamVjdC5rZXlzKHRhcmdldC5fdG91Y2hIYW5kbGVyc1tjb250ZXh0Ll91aWRdKS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIHRhcmdldC5fdG91Y2hIYW5kbGVyc1tjb250ZXh0Ll91aWRdW2V2ZW50TmFtZV0sIG9wdGlvbnMpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gdW5iaW5kKGVsLCBfcmVmMywgX3JlZjQpIHtcbiAgdmFyIHZhbHVlID0gX3JlZjMudmFsdWU7XG4gIHZhciBjb250ZXh0ID0gX3JlZjQuY29udGV4dDtcblxuICB2YXIgdGFyZ2V0ID0gdmFsdWUucGFyZW50ID8gZWwucGFyZW50Tm9kZSA6IGVsO1xuXG4gIGlmICghdGFyZ2V0KSByZXR1cm47XG5cbiAgdmFyIGhhbmRsZXJzID0gdGFyZ2V0Ll90b3VjaEhhbmRsZXJzW2NvbnRleHQuX3VpZF07XG4gIE9iamVjdC5rZXlzKGhhbmRsZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgICByZXR1cm4gdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoYW5kbGVyc1tldmVudE5hbWVdKTtcbiAgfSk7XG4gIGRlbGV0ZSB0YXJnZXQuX3RvdWNoSGFuZGxlcnNbY29udGV4dC5fdWlkXTtcbn1cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd0b3VjaCcsXG4gIGluc2VydGVkOiBpbnNlcnRlZCxcbiAgdW5iaW5kOiB1bmJpbmRcbn0pO1xuXG4vKioqLyB9KSxcbi8qIDggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBpbnNlcnRlZChlbCwgYmluZGluZykge1xuICB2YXIgY2IgPSBiaW5kaW5nLnZhbHVlO1xuICB2YXIgZGVib3VuY2UgPSAyMDA7XG4gIHZhciBjYWxsT25Mb2FkID0gdHJ1ZTtcblxuICBpZiAodHlwZW9mIGJpbmRpbmcudmFsdWUgIT09ICdmdW5jdGlvbicpIHtcbiAgICBjYiA9IGJpbmRpbmcudmFsdWUudmFsdWU7XG4gICAgZGVib3VuY2UgPSBiaW5kaW5nLnZhbHVlLmRlYm91bmNlIHx8IGRlYm91bmNlO1xuICAgIGNhbGxPbkxvYWQgPSBiaW5kaW5nLnZhbHVlLnF1aWV0ICE9IG51bGwgPyBmYWxzZSA6IGNhbGxPbkxvYWQ7XG4gIH1cblxuICB2YXIgZGVib3VuY2VUaW1lb3V0ID0gbnVsbDtcbiAgdmFyIG9uUmVzaXplID0gZnVuY3Rpb24gb25SZXNpemUoKSB7XG4gICAgY2xlYXJUaW1lb3V0KGRlYm91bmNlVGltZW91dCk7XG4gICAgZGVib3VuY2VUaW1lb3V0ID0gc2V0VGltZW91dChjYiwgZGVib3VuY2UpO1xuICB9O1xuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBvblJlc2l6ZSwgeyBwYXNzaXZlOiB0cnVlIH0pO1xuICBlbC5fb25SZXNpemUgPSBvblJlc2l6ZTtcblxuICBjYWxsT25Mb2FkICYmIG9uUmVzaXplKCk7XG59XG5cbmZ1bmN0aW9uIHVuYmluZChlbCwgYmluZGluZykge1xuICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZWwuX29uUmVzaXplKTtcbiAgZGVsZXRlIGVsLl9vblJlc2l6ZTtcbn1cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICdyZXNpemUnLFxuICBpbnNlcnRlZDogaW5zZXJ0ZWQsXG4gIHVuYmluZDogdW5iaW5kXG59KTtcblxuLyoqKi8gfSksXG4vKiA5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gc3R5bGUoZWwsIHZhbHVlKSB7XG4gIFsndHJhbnNmb3JtJywgJ3dlYmtpdFRyYW5zZm9ybSddLmZvckVhY2goZnVuY3Rpb24gKGkpIHtcbiAgICBlbC5zdHlsZVtpXSA9IHZhbHVlO1xuICB9KTtcbn1cblxudmFyIFJpcHBsZURhdGFBdHRyaWJ1dGUgPSAnZGF0YS1yaXBwbGUnO1xuXG52YXIgcmlwcGxlID0ge1xuICAvKipcbiAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsXG4gICAqIEBwYXJhbSB7eyBjbGFzcz86IHN0cmluZywgY2VudGVyPzogYm9vbGVhbiB9fSBbdmFsdWU9e31dXG4gICAqL1xuICBzaG93OiBmdW5jdGlvbiBzaG93KGUsIGVsLCBfcmVmKSB7XG4gICAgdmFyIF9yZWYkdmFsdWUgPSBfcmVmLnZhbHVlLFxuICAgICAgICB2YWx1ZSA9IF9yZWYkdmFsdWUgPT09IHVuZGVmaW5lZCA/IHt9IDogX3JlZiR2YWx1ZTtcblxuICAgIGlmIChlbC5nZXRBdHRyaWJ1dGUoUmlwcGxlRGF0YUF0dHJpYnV0ZSkgIT09ICd0cnVlJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgdmFyIGFuaW1hdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblxuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChhbmltYXRpb24pO1xuICAgIGNvbnRhaW5lci5jbGFzc05hbWUgPSAncmlwcGxlX19jb250YWluZXInO1xuXG4gICAgaWYgKHZhbHVlLmNsYXNzKSB7XG4gICAgICBjb250YWluZXIuY2xhc3NOYW1lICs9ICcgJyArIHZhbHVlLmNsYXNzO1xuICAgIH1cblxuICAgIHZhciBzaXplID0gZWwuY2xpZW50V2lkdGggPiBlbC5jbGllbnRIZWlnaHQgPyBlbC5jbGllbnRXaWR0aCA6IGVsLmNsaWVudEhlaWdodDtcbiAgICBhbmltYXRpb24uY2xhc3NOYW1lID0gJ3JpcHBsZV9fYW5pbWF0aW9uJztcbiAgICBhbmltYXRpb24uc3R5bGUud2lkdGggPSBzaXplICogKHZhbHVlLmNlbnRlciA/IDEgOiAyKSArICdweCc7XG4gICAgYW5pbWF0aW9uLnN0eWxlLmhlaWdodCA9IGFuaW1hdGlvbi5zdHlsZS53aWR0aDtcblxuICAgIGVsLmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gICAgdmFyIGNvbXB1dGVkID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWwpO1xuICAgIGlmIChjb21wdXRlZC5wb3NpdGlvbiAhPT0gJ2Fic29sdXRlJyAmJiBjb21wdXRlZC5wb3NpdGlvbiAhPT0gJ2ZpeGVkJykgZWwuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuXG4gICAgdmFyIG9mZnNldCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHZhciB4ID0gdmFsdWUuY2VudGVyID8gJzUwJScgOiBlLmNsaWVudFggLSBvZmZzZXQubGVmdCArICdweCc7XG4gICAgdmFyIHkgPSB2YWx1ZS5jZW50ZXIgPyAnNTAlJyA6IGUuY2xpZW50WSAtIG9mZnNldC50b3AgKyAncHgnO1xuXG4gICAgYW5pbWF0aW9uLmNsYXNzTGlzdC5hZGQoJ3JpcHBsZV9fYW5pbWF0aW9uLS1lbnRlcicpO1xuICAgIGFuaW1hdGlvbi5jbGFzc0xpc3QuYWRkKCdyaXBwbGVfX2FuaW1hdGlvbi0tdmlzaWJsZScpO1xuICAgIHN0eWxlKGFuaW1hdGlvbiwgJ3RyYW5zbGF0ZSgtNTAlLCAtNTAlKSB0cmFuc2xhdGUoJyArIHggKyAnLCAnICsgeSArICcpIHNjYWxlM2QoMC4wMSwwLjAxLDAuMDEpJyk7XG4gICAgYW5pbWF0aW9uLmRhdGFzZXQuYWN0aXZhdGVkID0gRGF0ZS5ub3coKTtcblxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgYW5pbWF0aW9uLmNsYXNzTGlzdC5yZW1vdmUoJ3JpcHBsZV9fYW5pbWF0aW9uLS1lbnRlcicpO1xuICAgICAgc3R5bGUoYW5pbWF0aW9uLCAndHJhbnNsYXRlKC01MCUsIC01MCUpIHRyYW5zbGF0ZSgnICsgeCArICcsICcgKyB5ICsgJykgIHNjYWxlM2QoMC45OSwwLjk5LDAuOTkpJyk7XG4gICAgfSwgMCk7XG4gIH0sXG5cbiAgaGlkZTogZnVuY3Rpb24gaGlkZShlbCkge1xuICAgIGlmIChlbC5nZXRBdHRyaWJ1dGUoUmlwcGxlRGF0YUF0dHJpYnV0ZSkgIT09ICd0cnVlJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciByaXBwbGVzID0gZWwuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncmlwcGxlX19hbmltYXRpb24nKTtcblxuICAgIGlmIChyaXBwbGVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIHZhciBhbmltYXRpb24gPSByaXBwbGVzW3JpcHBsZXMubGVuZ3RoIC0gMV07XG4gICAgdmFyIGRpZmYgPSBEYXRlLm5vdygpIC0gTnVtYmVyKGFuaW1hdGlvbi5kYXRhc2V0LmFjdGl2YXRlZCk7XG4gICAgdmFyIGRlbGF5ID0gNDAwIC0gZGlmZjtcblxuICAgIGRlbGF5ID0gZGVsYXkgPCAwID8gMCA6IGRlbGF5O1xuXG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBhbmltYXRpb24uY2xhc3NMaXN0LnJlbW92ZSgncmlwcGxlX19hbmltYXRpb24tLXZpc2libGUnKTtcblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIE5lZWQgdG8gZmlndXJlIG91dCBhIG5ldyB3YXkgdG8gZG8gdGhpc1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmIChyaXBwbGVzLmxlbmd0aCA8IDEpIGVsLnN0eWxlLnBvc2l0aW9uID0gbnVsbDtcbiAgICAgICAgICBhbmltYXRpb24ucGFyZW50Tm9kZSAmJiBlbC5yZW1vdmVDaGlsZChhbmltYXRpb24ucGFyZW50Tm9kZSk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICB9LCAzMDApO1xuICAgIH0sIGRlbGF5KTtcbiAgfVxufTtcblxuZnVuY3Rpb24gaXNSaXBwbGVFbmFibGVkKGJpbmRpbmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBiaW5kaW5nLnZhbHVlID09PSAndW5kZWZpbmVkJyB8fCAhIWJpbmRpbmcudmFsdWU7XG59XG5cbmZ1bmN0aW9uIGRpcmVjdGl2ZShlbCwgYmluZGluZykge1xuICBlbC5zZXRBdHRyaWJ1dGUoUmlwcGxlRGF0YUF0dHJpYnV0ZSwgaXNSaXBwbGVFbmFibGVkKGJpbmRpbmcpKTtcblxuICBpZiAoJ29udG91Y2hzdGFydCcgaW4gd2luZG93KSB7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gcmlwcGxlLmhpZGUoZWwpO1xuICAgIH0sIGZhbHNlKTtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGNhbmNlbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiByaXBwbGUuaGlkZShlbCk7XG4gICAgfSwgZmFsc2UpO1xuICB9XG5cbiAgZWwuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZnVuY3Rpb24gKGUpIHtcbiAgICByZXR1cm4gcmlwcGxlLnNob3coZSwgZWwsIGJpbmRpbmcpO1xuICB9LCBmYWxzZSk7XG4gIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHJpcHBsZS5oaWRlKGVsKTtcbiAgfSwgZmFsc2UpO1xuICBlbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiByaXBwbGUuaGlkZShlbCk7XG4gIH0sIGZhbHNlKTtcbiAgLy8gQW5jaG9yIHRhZ3MgY2FuIGJlIGRyYWdnZWQsIGNhdXNlcyBvdGhlciBoaWRlcyB0byBmYWlsIC0gIzE1MzdcbiAgZWwuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ3N0YXJ0JywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiByaXBwbGUuaGlkZShlbCk7XG4gIH0sIGZhbHNlKTtcbn1cblxuZnVuY3Rpb24gdW5iaW5kKGVsLCBiaW5kaW5nKSB7XG4gIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBmdW5jdGlvbiAoZSkge1xuICAgIHJldHVybiByaXBwbGUuc2hvdyhlLCBlbCwgYmluZGluZyk7XG4gIH0sIGZhbHNlKTtcbiAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZnVuY3Rpb24gKGUpIHtcbiAgICByZXR1cm4gcmlwcGxlLnNob3coZSwgZWwsIGJpbmRpbmcpO1xuICB9LCBmYWxzZSk7XG4gIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiByaXBwbGUuaGlkZShlbCk7XG4gIH0sIGZhbHNlKTtcbiAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hjYW5jZWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHJpcHBsZS5oaWRlKGVsKTtcbiAgfSwgZmFsc2UpO1xuICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiByaXBwbGUuaGlkZShlbCk7XG4gIH0sIGZhbHNlKTtcbiAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gcmlwcGxlLmhpZGUoZWwpO1xuICB9LCBmYWxzZSk7XG4gIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gcmlwcGxlLmhpZGUoZWwpO1xuICB9LCBmYWxzZSk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZShlbCwgYmluZGluZykge1xuICBpZiAoYmluZGluZy52YWx1ZSA9PT0gYmluZGluZy5vbGRWYWx1ZSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGVsLnNldEF0dHJpYnV0ZShSaXBwbGVEYXRhQXR0cmlidXRlLCBpc1JpcHBsZUVuYWJsZWQoYmluZGluZykpO1xufVxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3JpcHBsZScsXG4gIGJpbmQ6IGRpcmVjdGl2ZSxcbiAgdW5iaW5kOiB1bmJpbmQsXG4gIHVwZGF0ZTogdXBkYXRlXG59KTtcblxuLyoqKi8gfSksXG4vKiAxMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5fXyA9IF9fd2VicGFja19yZXF1aXJlX18oODUpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5fX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5fX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5fX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJ0bl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAxMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBwcm9wczoge1xuICAgIGFwcDogQm9vbGVhblxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgYXBwOiBmdW5jdGlvbiBhcHAoKSB7XG4gICAgICB0aGlzLnVwZGF0ZUFwcGxpY2F0aW9uKCk7XG4gICAgfVxuICB9LFxuXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy51cGRhdGVBcHBsaWNhdGlvbigpO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQm9vdGFibGVcbiAqIEBtaXhpblxuICpcbiAqIFVzZWQgdG8gYWRkIGxhenkgY29udGVudCBmdW5jdGlvbmFsaXR5IHRvIGNvbXBvbmVudHNcbiAqIExvb2tzIGZvciBjaGFuZ2UgaW4gXCJpc0FjdGl2ZVwiIHRvIGF1dG9tYXRpY2FsbHkgYm9vdFxuICogT3RoZXJ3aXNlIGNhbiBiZSBzZXQgbWFudWFsbHlcbiAqL1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzQm9vdGVkOiBmYWxzZVxuICAgIH07XG4gIH0sXG5cbiAgcHJvcHM6IHtcbiAgICBsYXp5OiBCb29sZWFuXG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUoKSB7XG4gICAgICB0aGlzLmlzQm9vdGVkID0gdHJ1ZTtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIHNob3dMYXp5Q29udGVudDogZnVuY3Rpb24gc2hvd0xhenlDb250ZW50KGNvbnRlbnQpIHtcbiAgICAgIHJldHVybiB0aGlzLmlzQm9vdGVkIHx8ICF0aGlzLmxhenkgPyBjb250ZW50IDogbnVsbDtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fZGlyZWN0aXZlc19yaXBwbGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOSk7XG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGRpcmVjdGl2ZXM6IHtcbiAgICBSaXBwbGU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fZGlyZWN0aXZlc19yaXBwbGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXVxuICB9LFxuXG4gIHByb3BzOiB7XG4gICAgYWN0aXZlQ2xhc3M6IFN0cmluZyxcbiAgICBhcHBlbmQ6IEJvb2xlYW4sXG4gICAgZGlzYWJsZWQ6IEJvb2xlYW4sXG4gICAgZXhhY3Q6IEJvb2xlYW4sXG4gICAgZXhhY3RBY3RpdmVDbGFzczogU3RyaW5nLFxuICAgIGhyZWY6IFtTdHJpbmcsIE9iamVjdF0sXG4gICAgdG86IFtTdHJpbmcsIE9iamVjdF0sXG4gICAgbnV4dDogQm9vbGVhbixcbiAgICByZXBsYWNlOiBCb29sZWFuLFxuICAgIHJpcHBsZTogQm9vbGVhbixcbiAgICB0YWc6IFN0cmluZyxcbiAgICB0YXJnZXQ6IFN0cmluZ1xuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBjbGljazogZnVuY3Rpb24gY2xpY2soKSB7fSxcbiAgICBnZW5lcmF0ZVJvdXRlTGluazogZnVuY3Rpb24gZ2VuZXJhdGVSb3V0ZUxpbmsoKSB7XG4gICAgICB2YXIgZXhhY3QgPSB0aGlzLmV4YWN0O1xuICAgICAgdmFyIHRhZyA9IHZvaWQgMDtcblxuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIGF0dHJzOiB7IGRpc2FibGVkOiB0aGlzLmRpc2FibGVkIH0sXG4gICAgICAgIGNsYXNzOiB0aGlzLmNsYXNzZXMsXG4gICAgICAgIHByb3BzOiB7fSxcbiAgICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgICBuYW1lOiAncmlwcGxlJyxcbiAgICAgICAgICB2YWx1ZTogdGhpcy5yaXBwbGUgfHwgZmFsc2VcbiAgICAgICAgfV0sXG4gICAgICAgIG9uOiBfZXh0ZW5kcyh7fSwgdGhpcy4kbGlzdGVuZXJzIHx8IHt9LCB7XG4gICAgICAgICAgY2xpY2s6IHRoaXMuY2xpY2tcbiAgICAgICAgfSlcbiAgICAgIH07XG5cbiAgICAgIGlmICh0eXBlb2YgdGhpcy5leGFjdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgZXhhY3QgPSB0aGlzLnRvID09PSAnLycgfHwgdGhpcy50byA9PT0gT2JqZWN0KHRoaXMudG8pICYmIHRoaXMudG8ucGF0aCA9PT0gJy8nO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy50bykge1xuICAgICAgICAvLyBBZGQgYSBzcGVjaWFsIGFjdGl2ZUNsYXNzIGhvb2tcbiAgICAgICAgLy8gZm9yIGNvbXBvbmVudCBsZXZlbCBzdHlsZXNcbiAgICAgICAgdmFyIGFjdGl2ZUNsYXNzID0gdGhpcy5hY3RpdmVDbGFzcztcbiAgICAgICAgdmFyIGV4YWN0QWN0aXZlQ2xhc3MgPSB0aGlzLmV4YWN0QWN0aXZlQ2xhc3MgfHwgYWN0aXZlQ2xhc3M7XG5cbiAgICAgICAgaWYgKHRoaXMucHJveHlDbGFzcykge1xuICAgICAgICAgIGFjdGl2ZUNsYXNzICs9ICcgJyArIHRoaXMucHJveHlDbGFzcztcbiAgICAgICAgICBleGFjdEFjdGl2ZUNsYXNzICs9ICcgJyArIHRoaXMucHJveHlDbGFzcztcbiAgICAgICAgfVxuXG4gICAgICAgIHRhZyA9IHRoaXMubnV4dCA/ICdudXh0LWxpbmsnIDogJ3JvdXRlci1saW5rJztcbiAgICAgICAgT2JqZWN0LmFzc2lnbihkYXRhLnByb3BzLCB7XG4gICAgICAgICAgdG86IHRoaXMudG8sXG4gICAgICAgICAgZXhhY3Q6IGV4YWN0LFxuICAgICAgICAgIGFjdGl2ZUNsYXNzOiBhY3RpdmVDbGFzcyxcbiAgICAgICAgICBleGFjdEFjdGl2ZUNsYXNzOiBleGFjdEFjdGl2ZUNsYXNzLFxuICAgICAgICAgIGFwcGVuZDogdGhpcy5hcHBlbmQsXG4gICAgICAgICAgcmVwbGFjZTogdGhpcy5yZXBsYWNlXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFnID0gdGhpcy5ocmVmICYmICdhJyB8fCB0aGlzLnRhZyB8fCAnYSc7XG5cbiAgICAgICAgaWYgKHRhZyA9PT0gJ2EnKSB7XG4gICAgICAgICAgaWYgKHRoaXMuaHJlZikgZGF0YS5hdHRycy5ocmVmID0gdGhpcy5ocmVmO1xuICAgICAgICAgIGlmICh0aGlzLnRhcmdldCkgZGF0YS5hdHRycy50YXJnZXQgPSB0aGlzLnRhcmdldDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4geyB0YWc6IHRhZywgZGF0YTogZGF0YSB9O1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAxNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2xvYWRhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3RoZW1lYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3ZhbGlkYXRhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19jb21wb25lbnRzX1ZJY29uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBjb21wb25lbnRzOiB7XG4gICAgVkljb246IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fY29tcG9uZW50c19WSWNvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXG4gIH0sXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19sb2FkYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3RoZW1lYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3ZhbGlkYXRhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzRm9jdXNlZDogZmFsc2UsXG4gICAgICB0YWJGb2N1c2VkOiBmYWxzZSxcbiAgICAgIGludGVybmFsVGFiSW5kZXg6IG51bGwsXG4gICAgICBsYXp5VmFsdWU6IHRoaXMudmFsdWVcbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICBhcHBlbmRJY29uOiBTdHJpbmcsXG4gICAgYXBwZW5kSWNvbkNiOiBGdW5jdGlvbixcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICBoaW50OiBTdHJpbmcsXG4gICAgaGlkZURldGFpbHM6IEJvb2xlYW4sXG4gICAgbGFiZWw6IFN0cmluZyxcbiAgICBwZXJzaXN0ZW50SGludDogQm9vbGVhbixcbiAgICBwbGFjZWhvbGRlcjogU3RyaW5nLFxuICAgIHByZXBlbmRJY29uOiBTdHJpbmcsXG4gICAgcHJlcGVuZEljb25DYjogRnVuY3Rpb24sXG4gICAgcmVhZG9ubHk6IEJvb2xlYW4sXG4gICAgcmVxdWlyZWQ6IEJvb2xlYW4sXG4gICAgdGFiaW5kZXg6IHtcbiAgICAgIGRlZmF1bHQ6IDBcbiAgICB9LFxuICAgIHRvZ2dsZUtleXM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiBbMTMsIDMyXTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHZhbHVlOiB7XG4gICAgICByZXF1aXJlZDogZmFsc2VcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBpbnB1dEdyb3VwQ2xhc3NlczogZnVuY3Rpb24gaW5wdXRHcm91cENsYXNzZXMoKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7XG4gICAgICAgICdpbnB1dC1ncm91cCc6IHRydWUsXG4gICAgICAgICdpbnB1dC1ncm91cC0tYXN5bmMtbG9hZGluZyc6IHRoaXMubG9hZGluZyAhPT0gZmFsc2UsXG4gICAgICAgICdpbnB1dC1ncm91cC0tZm9jdXNlZCc6IHRoaXMuaXNGb2N1c2VkLFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLWRpcnR5JzogdGhpcy5pc0RpcnR5LFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLXRhYi1mb2N1c2VkJzogdGhpcy50YWJGb2N1c2VkLFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLWRpc2FibGVkJzogdGhpcy5kaXNhYmxlZCxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1lcnJvcic6IHRoaXMuaGFzRXJyb3IsXG4gICAgICAgICdpbnB1dC1ncm91cC0tYXBwZW5kLWljb24nOiB0aGlzLmFwcGVuZEljb24sXG4gICAgICAgICdpbnB1dC1ncm91cC0tcHJlcGVuZC1pY29uJzogdGhpcy5wcmVwZW5kSWNvbixcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1yZXF1aXJlZCc6IHRoaXMucmVxdWlyZWQsXG4gICAgICAgICdpbnB1dC1ncm91cC0taGlkZS1kZXRhaWxzJzogdGhpcy5oaWRlRGV0YWlscyxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1wbGFjZWhvbGRlcic6ICEhdGhpcy5wbGFjZWhvbGRlcixcbiAgICAgICAgJ3RoZW1lLS1kYXJrJzogdGhpcy5kYXJrLFxuICAgICAgICAndGhlbWUtLWxpZ2h0JzogdGhpcy5saWdodFxuICAgICAgfSwgdGhpcy5jbGFzc2VzKTtcbiAgICB9LFxuICAgIGlzRGlydHk6IGZ1bmN0aW9uIGlzRGlydHkoKSB7XG4gICAgICByZXR1cm4gISF0aGlzLmlucHV0VmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBncm91cEZvY3VzOiBmdW5jdGlvbiBncm91cEZvY3VzKGUpIHt9LFxuICAgIGdyb3VwQmx1cjogZnVuY3Rpb24gZ3JvdXBCbHVyKGUpIHtcbiAgICAgIHRoaXMudGFiRm9jdXNlZCA9IGZhbHNlO1xuICAgIH0sXG4gICAgZ2VuTGFiZWw6IGZ1bmN0aW9uIGdlbkxhYmVsKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2xhYmVsJywge1xuICAgICAgICBhdHRyczoge1xuICAgICAgICAgIGZvcjogdGhpcy4kYXR0cnMuaWRcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcy4kc2xvdHMubGFiZWwgfHwgdGhpcy5sYWJlbCk7XG4gICAgfSxcbiAgICBnZW5NZXNzYWdlczogZnVuY3Rpb24gZ2VuTWVzc2FnZXMoKSB7XG4gICAgICB2YXIgbWVzc2FnZXMgPSBbXTtcblxuICAgICAgaWYgKCh0aGlzLmhpbnQgJiYgdGhpcy5pc0ZvY3VzZWQgfHwgdGhpcy5oaW50ICYmIHRoaXMucGVyc2lzdGVudEhpbnQpICYmIHRoaXMudmFsaWRhdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIG1lc3NhZ2VzID0gW3RoaXMuZ2VuSGludCgpXTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy52YWxpZGF0aW9ucy5sZW5ndGgpIHtcbiAgICAgICAgbWVzc2FnZXMgPSBbdGhpcy5nZW5FcnJvcih0aGlzLnZhbGlkYXRpb25zWzBdKV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0cmFuc2l0aW9uLWdyb3VwJywge1xuICAgICAgICAnY2xhc3MnOiAnaW5wdXQtZ3JvdXBfX21lc3NhZ2VzJyxcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICB0YWc6ICdkaXYnLFxuICAgICAgICAgIG5hbWU6ICdzbGlkZS15LXRyYW5zaXRpb24nXG4gICAgICAgIH1cbiAgICAgIH0sIG1lc3NhZ2VzKTtcbiAgICB9LFxuICAgIGdlbkhpbnQ6IGZ1bmN0aW9uIGdlbkhpbnQoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgICAgICAnY2xhc3MnOiAnaW5wdXQtZ3JvdXBfX2hpbnQnLFxuICAgICAgICBrZXk6IHRoaXMuaGludCxcbiAgICAgICAgZG9tUHJvcHM6IHsgaW5uZXJIVE1MOiB0aGlzLmhpbnQgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZW5FcnJvcjogZnVuY3Rpb24gZ2VuRXJyb3IoZXJyb3IpIHtcbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgICdjbGFzcyc6ICdpbnB1dC1ncm91cF9fZXJyb3InLFxuICAgICAgICBrZXk6IGVycm9yXG4gICAgICB9LCBlcnJvcik7XG4gICAgfSxcbiAgICBnZW5JY29uOiBmdW5jdGlvbiBnZW5JY29uKHR5cGUpIHtcbiAgICAgIHZhciBfY2xhc3M7XG5cbiAgICAgIHZhciBkZWZhdWx0Q2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IG51bGw7XG5cbiAgICAgIHZhciBzaG91bGRDbGVhciA9IHR5cGUgPT09ICdhcHBlbmQnICYmIHRoaXMuY2xlYXJhYmxlICYmIHRoaXMuaXNEaXJ0eTtcbiAgICAgIHZhciBpY29uID0gc2hvdWxkQ2xlYXIgPyAnY2xlYXInIDogdGhpc1t0eXBlICsgJ0ljb24nXTtcbiAgICAgIHZhciBjYWxsYmFjayA9IHNob3VsZENsZWFyID8gdGhpcy5jbGVhcmFibGVDYWxsYmFjayA6IHRoaXNbdHlwZSArICdJY29uQ2InXSB8fCBkZWZhdWx0Q2FsbGJhY2s7XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWljb24nLCB7XG4gICAgICAgICdjbGFzcyc6IChfY2xhc3MgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9jbGFzcywgJ2lucHV0LWdyb3VwX18nICsgdHlwZSArICctaWNvbicsIHRydWUpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzLCAnaW5wdXQtZ3JvdXBfX2ljb24tY2InLCAhIWNhbGxiYWNrKSwgX2RlZmluZVByb3BlcnR5KF9jbGFzcywgJ2lucHV0LWdyb3VwX19pY29uLWNsZWFyYWJsZScsIHNob3VsZENsZWFyKSwgX2NsYXNzKSxcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICBkaXNhYmxlZDogdGhpcy5kaXNhYmxlZFxuICAgICAgICB9LFxuICAgICAgICBvbjoge1xuICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7XG4gICAgICAgICAgICBpZiAoIWNhbGxiYWNrKSByZXR1cm47XG5cbiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgaWNvbik7XG4gICAgfSxcbiAgICBnZW5JbnB1dEdyb3VwOiBmdW5jdGlvbiBnZW5JbnB1dEdyb3VwKGlucHV0KSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgZGF0YSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gICAgICB2YXIgZGVmYXVsdEFwcGVuZENhbGxiYWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBudWxsO1xuXG4gICAgICB2YXIgY2hpbGRyZW4gPSBbXTtcbiAgICAgIHZhciB3cmFwcGVyQ2hpbGRyZW4gPSBbXTtcbiAgICAgIHZhciBkZXRhaWxzQ2hpbGRyZW4gPSBbXTtcblxuICAgICAgZGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIHtcbiAgICAgICAgJ2NsYXNzJzogdGhpcy5pbnB1dEdyb3VwQ2xhc3NlcyxcbiAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICB0YWJpbmRleDogdGhpcy5kaXNhYmxlZCA/IC0xIDogdGhpcy5pbnRlcm5hbFRhYkluZGV4IHx8IHRoaXMudGFiaW5kZXhcbiAgICAgICAgfSxcbiAgICAgICAgb246IHtcbiAgICAgICAgICBmb2N1czogdGhpcy5ncm91cEZvY3VzLFxuICAgICAgICAgIGJsdXI6IHRoaXMuZ3JvdXBCbHVyLFxuICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy50YWJGb2N1c2VkID0gZmFsc2U7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBrZXl1cDogZnVuY3Rpb24ga2V5dXAoZSkge1xuICAgICAgICAgICAgaWYgKFs5LCAxNl0uaW5jbHVkZXMoZS5rZXlDb2RlKSkge1xuICAgICAgICAgICAgICBfdGhpcy50YWJGb2N1c2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGtleWRvd246IGZ1bmN0aW9uIGtleWRvd24oZSkge1xuICAgICAgICAgICAgaWYgKCFfdGhpcy50b2dnbGUpIHJldHVybjtcblxuICAgICAgICAgICAgaWYgKF90aGlzLnRvZ2dsZUtleXMuaW5jbHVkZXMoZS5rZXlDb2RlKSkge1xuICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgIF90aGlzLnRvZ2dsZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgZGF0YSk7XG5cbiAgICAgIGlmICh0aGlzLiRzbG90cy5sYWJlbCB8fCB0aGlzLmxhYmVsKSB7XG4gICAgICAgIGNoaWxkcmVuLnB1c2godGhpcy5nZW5MYWJlbCgpKTtcbiAgICAgIH1cblxuICAgICAgd3JhcHBlckNoaWxkcmVuLnB1c2goaW5wdXQpO1xuXG4gICAgICBpZiAodGhpcy5wcmVwZW5kSWNvbikge1xuICAgICAgICB3cmFwcGVyQ2hpbGRyZW4udW5zaGlmdCh0aGlzLmdlbkljb24oJ3ByZXBlbmQnKSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmFwcGVuZEljb24gfHwgdGhpcy5jbGVhcmFibGUpIHtcbiAgICAgICAgd3JhcHBlckNoaWxkcmVuLnB1c2godGhpcy5nZW5JY29uKCdhcHBlbmQnLCBkZWZhdWx0QXBwZW5kQ2FsbGJhY2spKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByb2dyZXNzID0gdGhpcy5nZW5Qcm9ncmVzcygpO1xuICAgICAgcHJvZ3Jlc3MgJiYgZGV0YWlsc0NoaWxkcmVuLnB1c2gocHJvZ3Jlc3MpO1xuXG4gICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgJ2NsYXNzJzogJ2lucHV0LWdyb3VwX19pbnB1dCdcbiAgICAgIH0sIHdyYXBwZXJDaGlsZHJlbikpO1xuXG4gICAgICAhdGhpcy5oaWRlRGV0YWlscyAmJiBkZXRhaWxzQ2hpbGRyZW4ucHVzaCh0aGlzLmdlbk1lc3NhZ2VzKCkpO1xuXG4gICAgICBpZiAodGhpcy5jb3VudGVyKSB7XG4gICAgICAgIGRldGFpbHNDaGlsZHJlbi5wdXNoKHRoaXMuZ2VuQ291bnRlcigpKTtcbiAgICAgIH1cblxuICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgICdjbGFzcyc6ICdpbnB1dC1ncm91cF9fZGV0YWlscydcbiAgICAgIH0sIGRldGFpbHNDaGlsZHJlbikpO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JywgZGF0YSwgY2hpbGRyZW4pO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9IGVsc2UgeyByZXR1cm4gQXJyYXkuZnJvbShhcnIpOyB9IH1cblxuZnVuY3Rpb24gc2VhcmNoQ2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlO1xuICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcbiAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gY2hpbGRyZW5bU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICB2YXIgY2hpbGQgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgaWYgKGNoaWxkLmlzQWN0aXZlICYmIGNoaWxkLmlzRGVwZW5kZW50KSB7XG4gICAgICAgIHJlc3VsdHMucHVzaChjaGlsZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHRzLnB1c2guYXBwbHkocmVzdWx0cywgX3RvQ29uc3VtYWJsZUFycmF5KHNlYXJjaENoaWxkcmVuKGNoaWxkLiRjaGlsZHJlbikpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICBfaXRlcmF0b3JFcnJvciA9IGVycjtcbiAgfSBmaW5hbGx5IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHtcbiAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdHM7XG59XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbG9zZURlcGVuZGVudHM6IHRydWUsXG4gICAgICBpc0RlcGVuZGVudDogdHJ1ZVxuICAgIH07XG4gIH0sXG5cblxuICBtZXRob2RzOiB7XG4gICAgZ2V0T3BlbkRlcGVuZGVudHM6IGZ1bmN0aW9uIGdldE9wZW5EZXBlbmRlbnRzKCkge1xuICAgICAgaWYgKHRoaXMuY2xvc2VEZXBlbmRlbnRzKSByZXR1cm4gc2VhcmNoQ2hpbGRyZW4odGhpcy4kY2hpbGRyZW4pO1xuXG4gICAgICByZXR1cm4gW107XG4gICAgfSxcbiAgICBnZXRPcGVuRGVwZW5kZW50RWxlbWVudHM6IGZ1bmN0aW9uIGdldE9wZW5EZXBlbmRlbnRFbGVtZW50cygpIHtcbiAgICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZTtcbiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjIgPSBmYWxzZTtcbiAgICAgIHZhciBfaXRlcmF0b3JFcnJvcjIgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjIgPSB0aGlzLmdldE9wZW5EZXBlbmRlbnRzKClbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDI7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSAoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWUpIHtcbiAgICAgICAgICB2YXIgZGVwZW5kZW50ID0gX3N0ZXAyLnZhbHVlO1xuXG4gICAgICAgICAgcmVzdWx0LnB1c2guYXBwbHkocmVzdWx0LCBfdG9Db25zdW1hYmxlQXJyYXkoZGVwZW5kZW50LmdldENsaWNrYWJsZURlcGVuZGVudEVsZW1lbnRzKCkpKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9kaWRJdGVyYXRvckVycm9yMiA9IHRydWU7XG4gICAgICAgIF9pdGVyYXRvckVycm9yMiA9IGVycjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiAmJiBfaXRlcmF0b3IyLnJldHVybikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yMi5yZXR1cm4oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMikge1xuICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3IyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gICAgZ2V0Q2xpY2thYmxlRGVwZW5kZW50RWxlbWVudHM6IGZ1bmN0aW9uIGdldENsaWNrYWJsZURlcGVuZGVudEVsZW1lbnRzKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IFt0aGlzLiRlbF07XG4gICAgICBpZiAodGhpcy4kcmVmcy5jb250ZW50KSByZXN1bHQucHVzaCh0aGlzLiRyZWZzLmNvbnRlbnQpO1xuICAgICAgcmVzdWx0LnB1c2guYXBwbHkocmVzdWx0LCBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5nZXRPcGVuRGVwZW5kZW50RWxlbWVudHMoKSkpO1xuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIGlzQWN0aXZlOiBmdW5jdGlvbiBpc0FjdGl2ZSh2YWwpIHtcbiAgICAgIGlmICh2YWwpIHJldHVybjtcblxuICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zID0gdHJ1ZTtcbiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjMgPSBmYWxzZTtcbiAgICAgIHZhciBfaXRlcmF0b3JFcnJvcjMgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjMgPSB0aGlzLmdldE9wZW5EZXBlbmRlbnRzKClbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDM7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgPSAoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IHRydWUpIHtcbiAgICAgICAgICB2YXIgZGVwZW5kZW50ID0gX3N0ZXAzLnZhbHVlO1xuXG4gICAgICAgICAgZGVwZW5kZW50LmlzQWN0aXZlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfZGlkSXRlcmF0b3JFcnJvcjMgPSB0cnVlO1xuICAgICAgICBfaXRlcmF0b3JFcnJvcjMgPSBlcnI7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgJiYgX2l0ZXJhdG9yMy5yZXR1cm4pIHtcbiAgICAgICAgICAgIF9pdGVyYXRvcjMucmV0dXJuKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjMpIHtcbiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yMztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogdW51c2VkIGhhcm1vbnkgZXhwb3J0IFZDYXJkQWN0aW9ucyAqL1xuLyogdW51c2VkIGhhcm1vbnkgZXhwb3J0IFZDYXJkVGV4dCAqL1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkNhcmRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOTEpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fVkNhcmRNZWRpYV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5Myk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19WQ2FyZFRpdGxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDk0KTtcbi8qIHVudXNlZCBoYXJtb255IHJlZXhwb3J0IFZDYXJkICovXG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWQ2FyZE1lZGlhICovXG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWQ2FyZFRpdGxlICovXG5cblxuXG5cblxudmFyIFZDYXJkQWN0aW9ucyA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZFwiIC8qIGNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwgKi9dKSgnY2FyZF9fYWN0aW9ucycpO1xudmFyIFZDYXJkVGV4dCA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZFwiIC8qIGNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwgKi9dKSgnY2FyZF9fdGV4dCcpO1xuXG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkNhcmRfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZDYXJkX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WQ2FyZF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZDYXJkTWVkaWFfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZDYXJkTWVkaWFfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19WQ2FyZFRpdGxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19WQ2FyZFRpdGxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuY29tcG9uZW50KFZDYXJkQWN0aW9ucy5uYW1lLCBWQ2FyZEFjdGlvbnMpO1xuICBWdWUuY29tcG9uZW50KFZDYXJkVGV4dC5uYW1lLCBWQ2FyZFRleHQpO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZDYXJkX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDE4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBleHBvcnQgKGltbXV0YWJsZSkgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSBpbmplY3Q7XG4vKiBoYXJtb255IGV4cG9ydCAoaW1tdXRhYmxlKSAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYlwiXSA9IHByb3ZpZGU7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVdhcm5pbmcoY2hpbGQsIHBhcmVudCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBjb25zb2xlLndhcm4oXCJbVnVldGlmeV0gV2FybjogVGhlIFwiICsgY2hpbGQgKyBcIiBjb21wb25lbnQgbXVzdCBiZSB1c2VkIGluc2lkZSBhIFwiICsgcGFyZW50ICsgXCIuXCIpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBpbmplY3QobmFtZXNwYWNlLCBjaGlsZCwgcGFyZW50KSB7XG4gIHJldHVybiB7XG4gICAgaW5qZWN0OiBfZGVmaW5lUHJvcGVydHkoe30sIG5hbWVzcGFjZSwge1xuICAgICAgZGVmYXVsdDoge1xuICAgICAgICByZWdpc3RlcjogZ2VuZXJhdGVXYXJuaW5nKGNoaWxkLCBwYXJlbnQpLFxuICAgICAgICB1bnJlZ2lzdGVyOiBnZW5lcmF0ZVdhcm5pbmcoY2hpbGQsIHBhcmVudClcbiAgICAgIH1cbiAgICB9KVxuICB9O1xufVxuXG5mdW5jdGlvbiBwcm92aWRlKG5hbWVzcGFjZSkge1xuICByZXR1cm4ge1xuICAgIG1ldGhvZHM6IHtcbiAgICAgIHJlZ2lzdGVyOiBudWxsLFxuICAgICAgdW5yZWdpc3RlcjogbnVsbFxuICAgIH0sXG4gICAgcHJvdmlkZTogZnVuY3Rpb24gcHJvdmlkZSgpIHtcbiAgICAgIHJldHVybiBfZGVmaW5lUHJvcGVydHkoe30sIG5hbWVzcGFjZSwge1xuICAgICAgICByZWdpc3RlcjogdGhpcy5yZWdpc3RlcixcbiAgICAgICAgdW5yZWdpc3RlcjogdGhpcy51bnJlZ2lzdGVyXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbi8qKiovIH0pLFxuLyogMTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19ib290YWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMik7XG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fYm9vdGFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgcHJvcHM6IHtcbiAgICBjb250ZW50Q2xhc3M6IHtcbiAgICAgIGRlZmF1bHQ6ICcnXG4gICAgfVxuICB9LFxuXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5pbml0RGV0YWNoKCk7XG4gIH0sXG4gIGRlYWN0aXZhdGVkOiBmdW5jdGlvbiBkZWFjdGl2YXRlZCgpIHtcbiAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgaWYgKCF0aGlzLiRyZWZzLmNvbnRlbnQpIHJldHVybjtcblxuICAgIC8vIElFMTEgRml4XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuJHJlZnMuY29udGVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuJHJlZnMuY29udGVudCk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfSxcblxuXG4gIG1ldGhvZHM6IHtcbiAgICBpbml0RGV0YWNoOiBmdW5jdGlvbiBpbml0RGV0YWNoKCkge1xuICAgICAgaWYgKHRoaXMuX2lzRGVzdHJveWVkKSByZXR1cm47XG5cbiAgICAgIHZhciBhcHAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1hcHBdJyk7XG5cbiAgICAgIGlmICghYXBwKSB7XG4gICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oJ0FwcGxpY2F0aW9uIGlzIG1pc3NpbmcgPHYtYXBwPiBjb21wb25lbnQuJyk7XG4gICAgICB9XG5cbiAgICAgIC8vIElmIGNoaWxkIGhhcyBhbHJlYWR5IGJlZW4gcmVtb3ZlZCwgYmFpbFxuICAgICAgaWYgKCF0aGlzLiRyZWZzLmNvbnRlbnQpIHJldHVybjtcblxuICAgICAgYXBwLmluc2VydEJlZm9yZSh0aGlzLiRyZWZzLmNvbnRlbnQsIGFwcC5maXJzdENoaWxkKTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDIwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIHByb3BzOiB7XG4gICAgYWJzb2x1dGU6IEJvb2xlYW4sXG4gICAgYm90dG9tOiBCb29sZWFuLFxuICAgIGZpeGVkOiBCb29sZWFuLFxuICAgIGxlZnQ6IEJvb2xlYW4sXG4gICAgcmlnaHQ6IEJvb2xlYW4sXG4gICAgdG9wOiBCb29sZWFuXG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDIxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogMjIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19kaXJlY3RpdmVzX3JpcHBsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KTtcblxuXG4vKiogQG1peGluICovXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgZGlyZWN0aXZlczogeyBSaXBwbGU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fZGlyZWN0aXZlc19yaXBwbGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSB9LFxuXG4gIHByb3BzOiB7XG4gICAgcmlwcGxlOiB7XG4gICAgICB0eXBlOiBbQm9vbGVhbiwgT2JqZWN0XSxcbiAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGdlblJpcHBsZTogZnVuY3Rpb24gZ2VuUmlwcGxlKCkge1xuICAgICAgdmFyIGRhdGEgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHsgZGlyZWN0aXZlczogW10gfTtcblxuICAgICAgZGF0YS5jbGFzcyA9IHRoaXMucmlwcGxlQ2xhc3NlcyB8fCAnaW5wdXQtZ3JvdXAtLXNlbGVjdGlvbi1jb250cm9sc19fcmlwcGxlJztcbiAgICAgIGRhdGEuZGlyZWN0aXZlcy5wdXNoKHtcbiAgICAgICAgbmFtZTogJ3JpcHBsZScsXG4gICAgICAgIHZhbHVlOiB0aGlzLnJpcHBsZSAmJiAhdGhpcy5kaXNhYmxlZCAmJiB7IGNlbnRlcjogdHJ1ZSB9XG4gICAgICB9KTtcbiAgICAgIGRhdGEub24gPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgY2xpY2s6IHRoaXMudG9nZ2xlXG4gICAgICB9LCB0aGlzLiRsaXN0ZW5lcnMpO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JywgZGF0YSk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDI0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBleHBvcnQgKGltbXV0YWJsZSkgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSBHcmlkO1xuZnVuY3Rpb24gR3JpZChuYW1lKSB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogJ3YtJyArIG5hbWUsXG5cbiAgICBmdW5jdGlvbmFsOiB0cnVlLFxuXG4gICAgcHJvcHM6IHtcbiAgICAgIGlkOiBTdHJpbmcsXG4gICAgICB0YWc6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICBkZWZhdWx0OiAnZGl2J1xuICAgICAgfVxuICAgIH0sXG5cbiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBfcmVmKSB7XG4gICAgICB2YXIgcHJvcHMgPSBfcmVmLnByb3BzLFxuICAgICAgICAgIGRhdGEgPSBfcmVmLmRhdGEsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuO1xuXG4gICAgICBkYXRhLnN0YXRpY0NsYXNzID0gKG5hbWUgKyAnICcgKyAoZGF0YS5zdGF0aWNDbGFzcyB8fCAnJykpLnRyaW0oKTtcblxuICAgICAgaWYgKGRhdGEuYXR0cnMpIHtcbiAgICAgICAgdmFyIGNsYXNzZXMgPSBbXTtcblxuICAgICAgICBPYmplY3Qua2V5cyhkYXRhLmF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICB2YXIgdmFsdWUgPSBkYXRhLmF0dHJzW2tleV07XG5cbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykgY2xhc3Nlcy5wdXNoKGtleSk7ZWxzZSBpZiAodmFsdWUpIGNsYXNzZXMucHVzaChrZXkpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoY2xhc3Nlcy5sZW5ndGgpIGRhdGEuc3RhdGljQ2xhc3MgKz0gJyAnICsgY2xhc3Nlcy5qb2luKCcgJyk7XG4gICAgICAgIGRlbGV0ZSBkYXRhLmF0dHJzO1xuICAgICAgfVxuXG4gICAgICBpZiAocHJvcHMuaWQpIHtcbiAgICAgICAgZGF0YS5kb21Qcm9wcyA9IGRhdGEuZG9tUHJvcHMgfHwge307XG4gICAgICAgIGRhdGEuZG9tUHJvcHMuaWQgPSBwcm9wcy5pZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGgocHJvcHMudGFnLCBkYXRhLCBjaGlsZHJlbik7XG4gICAgfVxuICB9O1xufVxuXG4vKioqLyB9KSxcbi8qIDI1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGJ1dHRvbnM6IFtdLFxuICAgICAgbGlzdGVuZXJzOiBbXVxuICAgIH07XG4gIH0sXG5cblxuICBtZXRob2RzOiB7XG4gICAgZ2V0VmFsdWU6IGZ1bmN0aW9uIGdldFZhbHVlKGkpIHtcbiAgICAgIGlmICh0aGlzLmJ1dHRvbnNbaV0udmFsdWUgIT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdGhpcy5idXR0b25zW2ldLnZhbHVlO1xuICAgICAgfVxuXG4gICAgICAvLyBGaXggZm9yIHRlc3RpbmcsIHRoaXMgc2hvdWxkIGFsd2F5cyBiZSBmYWxzZSBpbiB0aGUgYnJvd3NlclxuICAgICAgaWYgKHRoaXMuYnV0dG9uc1tpXS4kZWwudmFsdWUgIT0gbnVsbCAmJiB0aGlzLmJ1dHRvbnNbaV0uJGVsLnZhbHVlICE9PSAnJykge1xuICAgICAgICByZXR1cm4gdGhpcy5idXR0b25zW2ldLiRlbC52YWx1ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGk7XG4gICAgfSxcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBzZWxlY3RlZCA9IFtdO1xuXG4gICAgICB0aGlzLmJ1dHRvbnMuZm9yRWFjaChmdW5jdGlvbiAoYnV0dG9uLCBpKSB7XG4gICAgICAgIHZhciBlbG0gPSBidXR0b24uJGVsO1xuXG4gICAgICAgIC8vIEZpeCBmb3IgdGVzdGluZywgZGF0YXNldCBkb2VzIG5vdCBleGlzdCBvbiBlbG0/XG4gICAgICAgIGlmICghZWxtLmRhdGFzZXQpIGVsbS5kYXRhc2V0ID0ge307XG5cbiAgICAgICAgZWxtLnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1vbmx5LWNoaWxkJyk7XG5cbiAgICAgICAgaWYgKF90aGlzLmlzU2VsZWN0ZWQoaSkpIHtcbiAgICAgICAgICBlbG0uc2V0QXR0cmlidXRlKCdkYXRhLXNlbGVjdGVkJywgdHJ1ZSk7XG5cbiAgICAgICAgICBpZiAoIWVsbS5jbGFzc0xpc3QuY29udGFpbnMoJ2J0bi0tcm91dGVyJykpIHtcbiAgICAgICAgICAgIGVsbS5jbGFzc0xpc3QuYWRkKCdidG4tLWFjdGl2ZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHNlbGVjdGVkLnB1c2goaSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZWxtLnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1zZWxlY3RlZCcpO1xuXG4gICAgICAgICAgaWYgKCFlbG0uY2xhc3NMaXN0LmNvbnRhaW5zKCdidG4tLXJvdXRlcicpKSB7XG4gICAgICAgICAgICBlbG0uY2xhc3NMaXN0LnJlbW92ZSgnYnRuLS1hY3RpdmUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBlbG0uZGF0YXNldC5pbmRleCA9IGk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHNlbGVjdGVkLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB0aGlzLmJ1dHRvbnNbc2VsZWN0ZWRbMF1dLiRlbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtb25seS1jaGlsZCcsIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdGhpcy5idXR0b25zID0gdGhpcy4kY2hpbGRyZW47XG5cbiAgICB0aGlzLmJ1dHRvbnMuZm9yRWFjaChmdW5jdGlvbiAoYnV0dG9uLCBpKSB7XG4gICAgICBfdGhpczIubGlzdGVuZXJzLnB1c2goX3RoaXMyLnVwZGF0ZVZhbHVlLmJpbmQoX3RoaXMyLCBpKSk7XG4gICAgICBidXR0b24uJG9uKCdjbGljaycsIF90aGlzMi5saXN0ZW5lcnNbaV0pO1xuICAgIH0pO1xuXG4gICAgdGhpcy51cGRhdGUoKTtcbiAgfSxcbiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHtcbiAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgIHRoaXMuYnV0dG9ucy5mb3JFYWNoKGZ1bmN0aW9uIChidXR0b24sIGkpIHtcbiAgICAgIGJ1dHRvbi4kb2ZmKCdjbGljaycsIF90aGlzMy5saXN0ZW5lcnNbaV0pO1xuICAgIH0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19kZXBlbmRlbnRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTYpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2RldGFjaGFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTkpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX292ZXJsYXlhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI3KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc19zdGFja2FibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjgpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fbWl4aW5zX3RvZ2dsZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X191dGlsX2hlbHBlcnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDc5KTtcblxuLy8gTWl4aW5zXG5cblxuXG5cblxuXG4vLyBEaXJlY3RpdmVzXG5cblxuLy8gSGVscGVyc1xuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1kaWFsb2cnLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2RlcGVuZGVudF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19kZXRhY2hhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX292ZXJsYXlhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fbWl4aW5zX3N0YWNrYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX21peGluc190b2dnbGVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRpcmVjdGl2ZXM6IHtcbiAgICBDbGlja091dHNpZGU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fZGlyZWN0aXZlc19jbGlja19vdXRzaWRlX19bXCJhXCIgLyogZGVmYXVsdCAqL11cbiAgfSxcblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc0RlcGVuZGVudDogZmFsc2UsXG4gICAgICBzdGFja0NsYXNzOiAnZGlhbG9nX19jb250ZW50X19hY3RpdmUnLFxuICAgICAgc3RhY2tNaW5aSW5kZXg6IDIwMFxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGRpc2FibGVkOiBCb29sZWFuLFxuICAgIHBlcnNpc3RlbnQ6IEJvb2xlYW4sXG4gICAgZnVsbHNjcmVlbjogQm9vbGVhbixcbiAgICBmdWxsV2lkdGg6IEJvb2xlYW4sXG4gICAgbWF4V2lkdGg6IHtcbiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sXG4gICAgICBkZWZhdWx0OiAnbm9uZSdcbiAgICB9LFxuICAgIG9yaWdpbjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2NlbnRlciBjZW50ZXInXG4gICAgfSxcbiAgICB3aWR0aDoge1xuICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSxcbiAgICAgIGRlZmF1bHQ6ICdhdXRvJ1xuICAgIH0sXG4gICAgc2Nyb2xsYWJsZTogQm9vbGVhbixcbiAgICB0cmFuc2l0aW9uOiB7XG4gICAgICB0eXBlOiBbU3RyaW5nLCBCb29sZWFuXSxcbiAgICAgIGRlZmF1bHQ6ICdkaWFsb2ctdHJhbnNpdGlvbidcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfcmVmLCAoJ2RpYWxvZyAnICsgdGhpcy5jb250ZW50Q2xhc3MpLnRyaW0oKSwgdHJ1ZSksIF9kZWZpbmVQcm9wZXJ0eShfcmVmLCAnZGlhbG9nLS1hY3RpdmUnLCB0aGlzLmlzQWN0aXZlKSwgX2RlZmluZVByb3BlcnR5KF9yZWYsICdkaWFsb2ctLXBlcnNpc3RlbnQnLCB0aGlzLnBlcnNpc3RlbnQpLCBfZGVmaW5lUHJvcGVydHkoX3JlZiwgJ2RpYWxvZy0tZnVsbHNjcmVlbicsIHRoaXMuZnVsbHNjcmVlbiksIF9kZWZpbmVQcm9wZXJ0eShfcmVmLCAnZGlhbG9nLS1zdGFja2VkLWFjdGlvbnMnLCB0aGlzLnN0YWNrZWRBY3Rpb25zICYmICF0aGlzLmZ1bGxzY3JlZW4pLCBfZGVmaW5lUHJvcGVydHkoX3JlZiwgJ2RpYWxvZy0tc2Nyb2xsYWJsZScsIHRoaXMuc2Nyb2xsYWJsZSksIF9yZWY7XG4gICAgfSxcbiAgICBjb250ZW50Q2xhc3NlczogZnVuY3Rpb24gY29udGVudENsYXNzZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAnZGlhbG9nX19jb250ZW50JzogdHJ1ZSxcbiAgICAgICAgJ2RpYWxvZ19fY29udGVudF9fYWN0aXZlJzogdGhpcy5pc0FjdGl2ZVxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUodmFsKSB7XG4gICAgICBpZiAodmFsKSB7XG4gICAgICAgIHRoaXMuc2hvdygpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5yZW1vdmVPdmVybGF5KCk7XG4gICAgICAgIHRoaXMudW5iaW5kKCk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5pc0Jvb3RlZCA9IHRoaXMuaXNBY3RpdmU7XG4gICAgdGhpcy5pc0FjdGl2ZSAmJiB0aGlzLnNob3coKTtcbiAgfSxcbiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHRoaXMudW5iaW5kKCk7XG4gIH0sXG5cblxuICBtZXRob2RzOiB7XG4gICAgY2xvc2VDb25kaXRpb25hbDogZnVuY3Rpb24gY2xvc2VDb25kaXRpb25hbChlKSB7XG4gICAgICAvLyBjbG9zZSBkaWFsb2cgaWYgIXBlcnNpc3RlbnQsIGNsaWNrZWQgb3V0c2lkZSBhbmQgd2UncmUgdGhlIHRvcG1vc3QgZGlhbG9nLlxuICAgICAgLy8gU2luY2UgdGhpcyBzaG91bGQgb25seSBiZSBjYWxsZWQgaW4gYSBjYXB0dXJlIGV2ZW50IChib3R0b20gdXApLCB3ZSBzaG91bGRuJ3QgbmVlZCB0byBzdG9wIHByb3BhZ2F0aW9uXG4gICAgICByZXR1cm4gIXRoaXMucGVyc2lzdGVudCAmJiBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X191dGlsX2hlbHBlcnNfX1tcImhcIiAvKiBnZXRaSW5kZXggKi9dKSh0aGlzLiRyZWZzLmNvbnRlbnQpID49IHRoaXMuZ2V0TWF4WkluZGV4KCkgJiYgIXRoaXMuJHJlZnMuY29udGVudC5jb250YWlucyhlLnRhcmdldCk7XG4gICAgfSxcbiAgICBzaG93OiBmdW5jdGlvbiBzaG93KCkge1xuICAgICAgIXRoaXMuZnVsbHNjcmVlbiAmJiAhdGhpcy5oaWRlT3ZlcmxheSAmJiB0aGlzLmdlbk92ZXJsYXkoKTtcbiAgICAgIHRoaXMuZnVsbHNjcmVlbiAmJiB0aGlzLmhpZGVTY3JvbGwoKTtcbiAgICAgIHRoaXMuJHJlZnMuY29udGVudC5mb2N1cygpO1xuICAgICAgdGhpcy4kbGlzdGVuZXJzLmtleWRvd24gJiYgdGhpcy5iaW5kKCk7XG4gICAgfSxcbiAgICBiaW5kOiBmdW5jdGlvbiBiaW5kKCkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLm9uS2V5ZG93bik7XG4gICAgfSxcbiAgICB1bmJpbmQ6IGZ1bmN0aW9uIHVuYmluZCgpIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5vbktleWRvd24pO1xuICAgIH0sXG4gICAgb25LZXlkb3duOiBmdW5jdGlvbiBvbktleWRvd24oZSkge1xuICAgICAgdGhpcy4kZW1pdCgna2V5ZG93bicsIGUpO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgJ2NsYXNzJzogdGhpcy5jbGFzc2VzLFxuICAgICAgcmVmOiAnZGlhbG9nJyxcbiAgICAgIGRpcmVjdGl2ZXM6IFt7XG4gICAgICAgIG5hbWU6ICdjbGljay1vdXRzaWRlJyxcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICBjYWxsYmFjazogdGhpcy5jbG9zZUNvbmRpdGlvbmFsLFxuICAgICAgICAgIGluY2x1ZGU6IHRoaXMuZ2V0T3BlbkRlcGVuZGVudEVsZW1lbnRzXG4gICAgICAgIH1cbiAgICAgIH0sIHsgbmFtZTogJ3Nob3cnLCB2YWx1ZTogdGhpcy5pc0FjdGl2ZSB9XSxcbiAgICAgIG9uOiB7IGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7XG4gICAgICAgICAgcmV0dXJuIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH0gfVxuICAgIH07XG5cbiAgICBpZiAoIXRoaXMuZnVsbHNjcmVlbikge1xuICAgICAgZGF0YS5zdHlsZSA9IHtcbiAgICAgICAgbWF4V2lkdGg6IHRoaXMubWF4V2lkdGggPT09ICdub25lJyA/IHVuZGVmaW5lZCA6IGlzTmFOKHRoaXMubWF4V2lkdGgpID8gdGhpcy5tYXhXaWR0aCA6IHRoaXMubWF4V2lkdGggKyAncHgnLFxuICAgICAgICB3aWR0aDogdGhpcy53aWR0aCA9PT0gJ2F1dG8nID8gdW5kZWZpbmVkIDogaXNOYU4odGhpcy53aWR0aCkgPyB0aGlzLndpZHRoIDogdGhpcy53aWR0aCArICdweCdcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuJHNsb3RzLmFjdGl2YXRvcikge1xuICAgICAgY2hpbGRyZW4ucHVzaChoKCdkaXYnLCB7XG4gICAgICAgICdjbGFzcyc6ICdkaWFsb2dfX2FjdGl2YXRvcicsXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKGUpIHtcbiAgICAgICAgICAgIGlmICghX3RoaXMuZGlzYWJsZWQpIF90aGlzLmlzQWN0aXZlID0gIV90aGlzLmlzQWN0aXZlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgW3RoaXMuJHNsb3RzLmFjdGl2YXRvcl0pKTtcbiAgICB9XG5cbiAgICB2YXIgZGlhbG9nID0gaCgndHJhbnNpdGlvbicsIHtcbiAgICAgIHByb3BzOiB7XG4gICAgICAgIG5hbWU6IHRoaXMudHJhbnNpdGlvbiB8fCAnJywgLy8gSWYgZmFsc2UsIHNob3cgbm90aGluZ1xuICAgICAgICBvcmlnaW46IHRoaXMub3JpZ2luXG4gICAgICB9XG4gICAgfSwgW2goJ2RpdicsIGRhdGEsIHRoaXMuc2hvd0xhenlDb250ZW50KHRoaXMuJHNsb3RzLmRlZmF1bHQpKV0pO1xuXG4gICAgY2hpbGRyZW4ucHVzaChoKCdkaXYnLCB7XG4gICAgICAnY2xhc3MnOiB0aGlzLmNvbnRlbnRDbGFzc2VzLFxuICAgICAgZG9tUHJvcHM6IHsgdGFiSW5kZXg6IC0xIH0sXG4gICAgICBzdHlsZTogeyB6SW5kZXg6IHRoaXMuYWN0aXZlWkluZGV4IH0sXG4gICAgICByZWY6ICdjb250ZW50J1xuICAgIH0sIFtkaWFsb2ddKSk7XG5cbiAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgJ2NsYXNzJzogJ2RpYWxvZ19fY29udGFpbmVyJyxcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGRpc3BsYXk6ICF0aGlzLiRzbG90cy5hY3RpdmF0b3IgJiYgJ25vbmUnIHx8IHRoaXMuZnVsbFdpZHRoID8gJ2Jsb2NrJyA6ICdpbmxpbmUtYmxvY2snXG4gICAgICB9XG4gICAgfSwgY2hpbGRyZW4pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18oODApO1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgb3ZlcmxheTogbnVsbCxcbiAgICAgIG92ZXJsYXlPZmZzZXQ6IDAsXG4gICAgICBvdmVybGF5VGltZW91dDogbnVsbCxcbiAgICAgIG92ZXJsYXlUcmFuc2l0aW9uRHVyYXRpb246IDUwMCArIDE1MCAvLyB0cmFuc2l0aW9uICsgZGVsYXlcbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICBoaWRlT3ZlcmxheTogQm9vbGVhblxuICB9LFxuXG4gIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgdGhpcy5yZW1vdmVPdmVybGF5KCk7XG4gIH0sXG5cblxuICBtZXRob2RzOiB7XG4gICAgZ2VuT3ZlcmxheTogZnVuY3Rpb24gZ2VuT3ZlcmxheSgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIC8vIElmIGZuIGlzIGNhbGxlZCBhbmQgdGltZW91dCBpcyBhY3RpdmVcbiAgICAgIC8vIG9yIG92ZXJsYXkgYWxyZWFkeSBleGlzdHNcbiAgICAgIC8vIGNhbmNlbCByZW1vdmFsIG9mIG92ZXJsYXkgYW5kIHJlLWFkZCBhY3RpdmVcbiAgICAgIGlmICghdGhpcy5pc0FjdGl2ZSB8fCB0aGlzLmhpZGVPdmVybGF5IHx8IHRoaXMuaXNBY3RpdmUgJiYgdGhpcy5vdmVybGF5VGltZW91dCB8fCB0aGlzLm92ZXJsYXkpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMub3ZlcmxheVRpbWVvdXQpO1xuXG4gICAgICAgIHJldHVybiB0aGlzLm92ZXJsYXkgJiYgdGhpcy5vdmVybGF5LmNsYXNzTGlzdC5hZGQoJ292ZXJsYXktLWFjdGl2ZScpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLm92ZXJsYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHRoaXMub3ZlcmxheS5jbGFzc05hbWUgPSAnb3ZlcmxheSc7XG5cbiAgICAgIGlmICh0aGlzLmFic29sdXRlKSB0aGlzLm92ZXJsYXkuY2xhc3NOYW1lICs9ICcgb3ZlcmxheS0tYWJzb2x1dGUnO1xuXG4gICAgICB0aGlzLmhpZGVTY3JvbGwoKTtcblxuICAgICAgdmFyIHBhcmVudCA9IHRoaXMuYWJzb2x1dGUgPyB0aGlzLiRlbC5wYXJlbnROb2RlIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtYXBwXScpO1xuXG4gICAgICBwYXJlbnQgJiYgcGFyZW50Lmluc2VydEJlZm9yZSh0aGlzLm92ZXJsYXksIHBhcmVudC5maXJzdENoaWxkKTtcblxuICAgICAgdGhpcy5vdmVybGF5LmNsaWVudEhlaWdodDsgLy8gRm9yY2UgcmVwYWludFxuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMub3ZlcmxheS5jbGFzc05hbWUgKz0gJyBvdmVybGF5LS1hY3RpdmUnO1xuXG4gICAgICAgIGlmIChfdGhpcy5hY3RpdmVaSW5kZXggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIF90aGlzLm92ZXJsYXkuc3R5bGUuekluZGV4ID0gX3RoaXMuYWN0aXZlWkluZGV4IC0gMTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgcmVtb3ZlT3ZlcmxheTogZnVuY3Rpb24gcmVtb3ZlT3ZlcmxheSgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAoIXRoaXMub3ZlcmxheSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaG93U2Nyb2xsKCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMub3ZlcmxheS5jbGFzc0xpc3QucmVtb3ZlKCdvdmVybGF5LS1hY3RpdmUnKTtcblxuICAgICAgdGhpcy5vdmVybGF5VGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBJRTExIEZpeFxuICAgICAgICB0cnkge1xuICAgICAgICAgIF90aGlzMi5vdmVybGF5LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoX3RoaXMyLm92ZXJsYXkpO1xuICAgICAgICAgIF90aGlzMi5vdmVybGF5ID0gbnVsbDtcbiAgICAgICAgICBfdGhpczIuc2hvd1Njcm9sbCgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuXG4gICAgICAgIGNsZWFyVGltZW91dChfdGhpczIub3ZlcmxheVRpbWVvdXQpO1xuICAgICAgICBfdGhpczIub3ZlcmxheVRpbWVvdXQgPSBudWxsO1xuICAgICAgfSwgdGhpcy5vdmVybGF5VHJhbnNpdGlvbkR1cmF0aW9uKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBzY3JvbGxMaXN0ZW5lcjogZnVuY3Rpb24gc2Nyb2xsTGlzdGVuZXIoZSkge1xuICAgICAgaWYgKGUudHlwZSA9PT0gJ2tleWRvd24nKSB7XG4gICAgICAgIGlmIChbJ0lOUFVUJywgJ1RFWFRBUkVBJywgJ1NFTEVDVCddLmluY2x1ZGVzKGUudGFyZ2V0LnRhZ05hbWUpKSByZXR1cm47XG5cbiAgICAgICAgdmFyIHVwID0gWzM4LCAzM107XG4gICAgICAgIHZhciBkb3duID0gWzQwLCAzNF07XG5cbiAgICAgICAgaWYgKHVwLmluY2x1ZGVzKGUua2V5Q29kZSkpIHtcbiAgICAgICAgICBlLmRlbHRhWSA9IC0xO1xuICAgICAgICB9IGVsc2UgaWYgKGRvd24uaW5jbHVkZXMoZS5rZXlDb2RlKSkge1xuICAgICAgICAgIGUuZGVsdGFZID0gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGUudGFyZ2V0ID09PSB0aGlzLm92ZXJsYXkgfHwgZS50eXBlICE9PSAna2V5ZG93bicgJiYgZS50YXJnZXQgPT09IGRvY3VtZW50LmJvZHkgfHwgdGhpcy5jaGVja1BhdGgoZSkpIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9LFxuICAgIGhhc1Njcm9sbGJhcjogZnVuY3Rpb24gaGFzU2Nyb2xsYmFyKGVsKSB7XG4gICAgICBpZiAoIWVsIHx8IGVsLm5vZGVUeXBlICE9PSBOb2RlLkVMRU1FTlRfTk9ERSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICB2YXIgc3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCk7XG4gICAgICByZXR1cm4gWydhdXRvJywgJ3Njcm9sbCddLmluY2x1ZGVzKHN0eWxlWydvdmVyZmxvdy15J10pICYmIGVsLnNjcm9sbEhlaWdodCA+IGVsLmNsaWVudEhlaWdodDtcbiAgICB9LFxuICAgIHNob3VsZFNjcm9sbDogZnVuY3Rpb24gc2hvdWxkU2Nyb2xsKGVsLCBkZWx0YSkge1xuICAgICAgaWYgKGVsLnNjcm9sbFRvcCA9PT0gMCAmJiBkZWx0YSA8IDApIHJldHVybiB0cnVlO1xuICAgICAgcmV0dXJuIGVsLnNjcm9sbFRvcCArIGVsLmNsaWVudEhlaWdodCA9PT0gZWwuc2Nyb2xsSGVpZ2h0ICYmIGRlbHRhID4gMDtcbiAgICB9LFxuICAgIGlzSW5zaWRlOiBmdW5jdGlvbiBpc0luc2lkZShlbCwgcGFyZW50KSB7XG4gICAgICBpZiAoZWwgPT09IHBhcmVudCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0gZWxzZSBpZiAoZWwgPT09IG51bGwgfHwgZWwgPT09IGRvY3VtZW50LmJvZHkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNJbnNpZGUoZWwucGFyZW50Tm9kZSwgcGFyZW50KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm5zIGJvb2xlYW5cbiAgICAgKi9cbiAgICBjaGVja1BhdGg6IGZ1bmN0aW9uIGNoZWNrUGF0aChlKSB7XG4gICAgICB2YXIgcGF0aCA9IGUucGF0aCB8fCB0aGlzLmNvbXBvc2VkUGF0aChlKTtcbiAgICAgIHZhciBkZWx0YSA9IGUuZGVsdGFZIHx8IC1lLndoZWVsRGVsdGE7XG5cbiAgICAgIGlmIChlLnR5cGUgPT09ICdrZXlkb3duJyAmJiBwYXRoWzBdID09PSBkb2N1bWVudC5ib2R5KSB7XG4gICAgICAgIHZhciBkaWFsb2cgPSB0aGlzLiRyZWZzLmRpYWxvZztcbiAgICAgICAgdmFyIHNlbGVjdGVkID0gd2luZG93LmdldFNlbGVjdGlvbigpLmFuY2hvck5vZGU7XG4gICAgICAgIGlmICh0aGlzLmhhc1Njcm9sbGJhcihkaWFsb2cpICYmIHRoaXMuaXNJbnNpZGUoc2VsZWN0ZWQsIGRpYWxvZykpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5zaG91bGRTY3JvbGwoZGlhbG9nLCBkZWx0YSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTtcbiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlO1xuICAgICAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkO1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBwYXRoW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgICAgIHZhciBlbCA9IF9zdGVwLnZhbHVlO1xuXG4gICAgICAgICAgaWYgKFtkb2N1bWVudCwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCB0aGlzLiRyZWZzLmNvbnRlbnRdLmluY2x1ZGVzKGVsKSkgcmV0dXJuIHRydWU7XG4gICAgICAgICAgaWYgKHRoaXMuaGFzU2Nyb2xsYmFyKGVsKSkgcmV0dXJuIHRoaXMuc2hvdWxkU2Nyb2xsKGVsLCBkZWx0YSk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7XG4gICAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUG9seWZpbGwgZm9yIEV2ZW50LnByb3RvdHlwZS5jb21wb3NlZFBhdGhcbiAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICogQHJldHVybnMgRWxlbWVudFtdXG4gICAgICovXG4gICAgY29tcG9zZWRQYXRoOiBmdW5jdGlvbiBjb21wb3NlZFBhdGgoZSkge1xuICAgICAgaWYgKGUuY29tcG9zZWRQYXRoKSByZXR1cm4gZS5jb21wb3NlZFBhdGgoKTtcblxuICAgICAgdmFyIHBhdGggPSBbXTtcbiAgICAgIHZhciBlbCA9IGUudGFyZ2V0O1xuXG4gICAgICB3aGlsZSAoZWwpIHtcbiAgICAgICAgcGF0aC5wdXNoKGVsKTtcblxuICAgICAgICBpZiAoZWwudGFnTmFtZSA9PT0gJ0hUTUwnKSB7XG4gICAgICAgICAgcGF0aC5wdXNoKGRvY3VtZW50KTtcbiAgICAgICAgICBwYXRoLnB1c2god2luZG93KTtcblxuICAgICAgICAgIHJldHVybiBwYXRoO1xuICAgICAgICB9XG5cbiAgICAgICAgZWwgPSBlbC5wYXJlbnRFbGVtZW50O1xuICAgICAgfVxuICAgIH0sXG4gICAgaGlkZVNjcm9sbDogZnVuY3Rpb24gaGlkZVNjcm9sbCgpIHtcbiAgICAgIGlmICh0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQuc21BbmREb3duKSB7XG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdvdmVyZmxvdy15LWhpZGRlbicpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3doZWVsJywgdGhpcy5zY3JvbGxMaXN0ZW5lcik7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5zY3JvbGxMaXN0ZW5lcik7XG4gICAgICB9XG4gICAgfSxcbiAgICBzaG93U2Nyb2xsOiBmdW5jdGlvbiBzaG93U2Nyb2xsKCkge1xuICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ292ZXJmbG93LXktaGlkZGVuJyk7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2hlZWwnLCB0aGlzLnNjcm9sbExpc3RlbmVyKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5zY3JvbGxMaXN0ZW5lcik7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyOCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gZWxzZSB7IHJldHVybiBBcnJheS5mcm9tKGFycik7IH0gfVxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YWNrQmFzZTogbnVsbCxcbiAgICAgIHN0YWNrQ2xhc3M6ICd1bnBlY2lmaWVkJyxcbiAgICAgIHN0YWNrRWxlbWVudDogbnVsbCxcbiAgICAgIHN0YWNrRXhjbHVkZTogbnVsbCxcbiAgICAgIHN0YWNrTWluWkluZGV4OiAwXG4gICAgfTtcbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGFjdGl2ZVpJbmRleDogZnVuY3Rpb24gYWN0aXZlWkluZGV4KCkge1xuICAgICAgdmFyIGNvbnRlbnQgPSB0aGlzLnN0YWNrRWxlbWVudCB8fCB0aGlzLiRyZWZzLmNvbnRlbnQ7XG4gICAgICAvLyBSZXR1cm4gY3VycmVudCB6aW5kZXggaWYgbm90IGFjdGl2ZVxuICAgICAgaWYgKCF0aGlzLmlzQWN0aXZlKSByZXR1cm4gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJoXCIgLyogZ2V0WkluZGV4ICovXSkoY29udGVudCk7XG5cbiAgICAgIC8vIFJldHVybiBtYXggY3VycmVudCB6LWluZGV4IChleGNsdWRpbmcgc2VsZikgKyAyXG4gICAgICAvLyAoMiB0byBsZWF2ZSByb29tIGZvciBhbiBvdmVybGF5IGJlbG93LCBpZiBuZWVkZWQpXG4gICAgICByZXR1cm4gdGhpcy5nZXRNYXhaSW5kZXgodGhpcy5zdGFja0V4Y2x1ZGUgfHwgW2NvbnRlbnRdKSArIDI7XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0TWF4WkluZGV4OiBmdW5jdGlvbiBnZXRNYXhaSW5kZXgoKSB7XG4gICAgICB2YXIgZXhjbHVkZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107XG5cbiAgICAgIHZhciBiYXNlID0gdGhpcy5zdGFja0Jhc2UgfHwgdGhpcy4kZWw7XG4gICAgICAvLyBTdGFydCB3aXRoIGxvd2VzdCBhbGxvd2VkIHotaW5kZXggb3Igei1pbmRleCBvZlxuICAgICAgLy8gYmFzZSBjb21wb25lbnQncyBlbGVtZW50LCB3aGljaGV2ZXIgaXMgZ3JlYXRlclxuICAgICAgdmFyIHppcyA9IFt0aGlzLnN0YWNrTWluWkluZGV4LCBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImhcIiAvKiBnZXRaSW5kZXggKi9dKShiYXNlKV07XG4gICAgICAvLyBDb252ZXJ0IHRoZSBOb2RlTGlzdCB0byBhbiBhcnJheSB0b1xuICAgICAgLy8gcHJldmVudCBhbiBFZGdlIGJ1ZyB3aXRoIFN5bWJvbC5pdGVyYXRvclxuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcy92dWV0aWZ5L2lzc3Vlcy8yMTQ2XG4gICAgICB2YXIgYWN0aXZlRWxlbWVudHMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUodGhpcy5zdGFja0NsYXNzKSkpO1xuXG4gICAgICAvLyBHZXQgei1pbmRleCBmb3IgYWxsIGFjdGl2ZSBkaWFsb2dzXG4gICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7XG4gICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcbiAgICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gYWN0aXZlRWxlbWVudHNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICAgICAgdmFyIGFjdGl2ZUVsZW1lbnQgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgICAgIGlmICghZXhjbHVkZS5pbmNsdWRlcyhhY3RpdmVFbGVtZW50KSkge1xuICAgICAgICAgICAgemlzLnB1c2goT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJoXCIgLyogZ2V0WkluZGV4ICovXSkoYWN0aXZlRWxlbWVudCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICAgICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBNYXRoLm1heC5hcHBseShNYXRoLCB6aXMpO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMjkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQ2hlY2tib3hfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOTkpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZDaGVja2JveF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkNoZWNrYm94X19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQ2hlY2tib3hfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkNoZWNrYm94X19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDMwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoZnVuY3Rpb24gKCkge1xuICB2YXIgZXhwYW5kZWRQYXJlbnRDbGFzcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogJyc7XG5cbiAgcmV0dXJuIHtcbiAgICBlbnRlcjogZnVuY3Rpb24gZW50ZXIoZWwsIGRvbmUpIHtcbiAgICAgIGVsLl9wYXJlbnQgPSBlbC5wYXJlbnROb2RlO1xuXG4gICAgICBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImFcIiAvKiBhZGRPbmNlRXZlbnRMaXN0ZW5lciAqL10pKGVsLCAndHJhbnNpdGlvbmVuZCcsIGRvbmUpO1xuXG4gICAgICAvLyBHZXQgaGVpZ2h0IHRoYXQgaXMgdG8gYmUgc2Nyb2xsZWRcbiAgICAgIGVsLnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gICAgICBlbC5zdHlsZS5oZWlnaHQgPSAwO1xuICAgICAgZWwuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICBleHBhbmRlZFBhcmVudENsYXNzICYmIGVsLl9wYXJlbnQuY2xhc3NMaXN0LmFkZChleHBhbmRlZFBhcmVudENsYXNzKTtcblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBlbC5zdHlsZS5oZWlnaHQgPSBlbC5zY3JvbGxIZWlnaHQgKyAncHgnO1xuICAgICAgfSwgMTAwKTtcbiAgICB9LFxuICAgIGFmdGVyRW50ZXI6IGZ1bmN0aW9uIGFmdGVyRW50ZXIoZWwpIHtcbiAgICAgIGVsLnN0eWxlLm92ZXJmbG93ID0gbnVsbDtcbiAgICAgIGVsLnN0eWxlLmhlaWdodCA9IG51bGw7XG4gICAgfSxcbiAgICBsZWF2ZTogZnVuY3Rpb24gbGVhdmUoZWwsIGRvbmUpIHtcbiAgICAgIC8vIFJlbW92ZSBpbml0aWFsIHRyYW5zaXRpb25cbiAgICAgIE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiYVwiIC8qIGFkZE9uY2VFdmVudExpc3RlbmVyICovXSkoZWwsICd0cmFuc2l0aW9uZW5kJywgZG9uZSk7XG5cbiAgICAgIC8vIFNldCBoZWlnaHQgYmVmb3JlIHdlIHRyYW5zaXRpb24gdG8gMFxuICAgICAgZWwuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICAgIGVsLnN0eWxlLmhlaWdodCA9IGVsLm9mZnNldEhlaWdodCArICdweCc7XG5cbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZWwuc3R5bGUuaGVpZ2h0ID0gMDtcbiAgICAgIH0sIDEwMCk7XG4gICAgfSxcbiAgICBhZnRlckxlYXZlOiBmdW5jdGlvbiBhZnRlckxlYXZlKGVsKSB7XG4gICAgICBleHBhbmRlZFBhcmVudENsYXNzICYmIGVsLl9wYXJlbnQuY2xhc3NMaXN0LnJlbW92ZShleHBhbmRlZFBhcmVudENsYXNzKTtcbiAgICB9XG4gIH07XG59KTtcblxuLyoqKi8gfSksXG4vKiAzMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX2lucHV0X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KTtcblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX2lucHV0X19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fY29sb3JhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIG1vZGVsOiB7XG4gICAgcHJvcDogJ2lucHV0VmFsdWUnLFxuICAgIGV2ZW50OiAnY2hhbmdlJ1xuICB9LFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRlZmF1bHRDb2xvcjogJ2FjY2VudCdcbiAgICB9O1xuICB9LFxuXG4gIHByb3BzOiB7XG4gICAgaWQ6IFN0cmluZyxcbiAgICBpbnB1dFZhbHVlOiBudWxsLFxuICAgIGZhbHNlVmFsdWU6IG51bGwsXG4gICAgdHJ1ZVZhbHVlOiBudWxsXG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUoKSB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmlucHV0VmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlucHV0VmFsdWUuaW5kZXhPZih0aGlzLnZhbHVlKSAhPT0gLTE7XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy50cnVlVmFsdWUgfHwgIXRoaXMuZmFsc2VWYWx1ZSkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZSA/IHRoaXMudmFsdWUgPT09IHRoaXMuaW5wdXRWYWx1ZSA6IEJvb2xlYW4odGhpcy5pbnB1dFZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuaW5wdXRWYWx1ZSA9PT0gdGhpcy50cnVlVmFsdWU7XG4gICAgfSxcbiAgICBpc0RpcnR5OiBmdW5jdGlvbiBpc0RpcnR5KCkge1xuICAgICAgcmV0dXJuIHRoaXMuaXNBY3RpdmU7XG4gICAgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgaW5kZXRlcm1pbmF0ZTogZnVuY3Rpb24gaW5kZXRlcm1pbmF0ZSh2YWwpIHtcbiAgICAgIHRoaXMuaW5wdXRJbmRldGVybWluYXRlID0gdmFsO1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgZ2VuTGFiZWw6IGZ1bmN0aW9uIGdlbkxhYmVsKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2xhYmVsJywge1xuICAgICAgICBvbjogeyBjbGljazogdGhpcy50b2dnbGUgfSxcbiAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICBmb3I6IHRoaXMuaWRcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcy4kc2xvdHMubGFiZWwgfHwgdGhpcy5sYWJlbCk7XG4gICAgfSxcbiAgICB0b2dnbGU6IGZ1bmN0aW9uIHRvZ2dsZSgpIHtcbiAgICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGlucHV0ID0gdGhpcy5pbnB1dFZhbHVlO1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgICAgIGlucHV0ID0gaW5wdXQuc2xpY2UoKTtcbiAgICAgICAgdmFyIGkgPSBpbnB1dC5pbmRleE9mKHRoaXMudmFsdWUpO1xuXG4gICAgICAgIGlmIChpID09PSAtMSkge1xuICAgICAgICAgIGlucHV0LnB1c2godGhpcy52YWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaW5wdXQuc3BsaWNlKGksIDEpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHRoaXMudHJ1ZVZhbHVlIHx8IHRoaXMuZmFsc2VWYWx1ZSkge1xuICAgICAgICBpbnB1dCA9IGlucHV0ID09PSB0aGlzLnRydWVWYWx1ZSA/IHRoaXMuZmFsc2VWYWx1ZSA6IHRoaXMudHJ1ZVZhbHVlO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnZhbHVlKSB7XG4gICAgICAgIGlucHV0ID0gdGhpcy52YWx1ZSA9PT0gdGhpcy5pbnB1dFZhbHVlID8gbnVsbCA6IHRoaXMudmFsdWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpbnB1dCA9ICFpbnB1dDtcbiAgICAgIH1cblxuICAgICAgdGhpcy52YWxpZGF0ZSh0cnVlLCBpbnB1dCk7XG5cbiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIGlucHV0KTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDMyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBMb2FkYWJsZVxuICpcbiAqIEBtaXhpblxuICpcbiAqIFVzZWQgdG8gYWRkIGxpbmVhciBwcm9ncmVzcyBiYXIgdG8gY29tcG9uZW50c1xuICogQ2FuIHVzZSBhIGRlZmF1bHQgYmFyIHdpdGggYSBzcGVjaWZpYyBjb2xvclxuICogb3IgZGVzaWduYXRlIGEgY3VzdG9tIHByb2dyZXNzIGxpbmVhciBiYXJcbiAqL1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIHByb3BzOiB7XG4gICAgbG9hZGluZzoge1xuICAgICAgdHlwZTogW0Jvb2xlYW4sIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgZ2VuUHJvZ3Jlc3M6IGZ1bmN0aW9uIGdlblByb2dyZXNzKCkge1xuICAgICAgaWYgKHRoaXMubG9hZGluZyA9PT0gZmFsc2UpIHJldHVybiBudWxsO1xuXG4gICAgICByZXR1cm4gdGhpcy4kc2xvdHMucHJvZ3Jlc3MgfHwgdGhpcy4kY3JlYXRlRWxlbWVudCgndi1wcm9ncmVzcy1saW5lYXInLCB7XG4gICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgY29sb3I6IHRoaXMubG9hZGluZyA9PT0gdHJ1ZSB8fCB0aGlzLmxvYWRpbmcgPT09ICcnID8gdGhpcy5jb2xvciB8fCAncHJpbWFyeScgOiB0aGlzLmxvYWRpbmcsXG4gICAgICAgICAgaGVpZ2h0OiAyLFxuICAgICAgICAgIGluZGV0ZXJtaW5hdGU6IHRydWVcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAzMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZDaGlwX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwMSk7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkNoaXBfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZDaGlwX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQ2hpcF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQ2hpcF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAzNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZQcm9ncmVzc0xpbmVhcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMDcpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZQcm9ncmVzc0xpbmVhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlByb2dyZXNzTGluZWFyX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WUHJvZ3Jlc3NMaW5lYXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlByb2dyZXNzTGluZWFyX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDM1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlNlbGVjdF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMDkpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTZWxlY3RfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTZWxlY3RfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTZWxlY3RfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlNlbGVjdF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAzNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDM3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogdW51c2VkIGhhcm1vbnkgZXhwb3J0IFZMaXN0VGlsZUFjdGlvblRleHQgKi9cbi8qIHVudXNlZCBoYXJtb255IGV4cG9ydCBWTGlzdFRpbGVBdmF0YXIgKi9cbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJkXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gVkxpc3RUaWxlQ29udGVudDsgfSk7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiZVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIFZMaXN0VGlsZVRpdGxlOyB9KTtcbi8qIHVudXNlZCBoYXJtb255IGV4cG9ydCBWTGlzdFRpbGVTdWJUaXRsZSAqL1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkxpc3RfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTExKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZMaXN0R3JvdXBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTEzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1ZMaXN0VGlsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMTQpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVkxpc3RUaWxlQWN0aW9uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDExNSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJhXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WTGlzdF9fW1wiYVwiXTsgfSk7XG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWTGlzdEdyb3VwICovXG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJiXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19WTGlzdFRpbGVfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiY1wiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVkxpc3RUaWxlQWN0aW9uX19bXCJhXCJdOyB9KTtcblxuXG5cblxuXG5cblxuXG52YXIgVkxpc3RUaWxlQWN0aW9uVGV4dCA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZFwiIC8qIGNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwgKi9dKSgnbGlzdF9fdGlsZV9fYWN0aW9uLXRleHQnLCAnc3BhbicpO1xudmFyIFZMaXN0VGlsZUF2YXRhciA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZFwiIC8qIGNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwgKi9dKSgnbGlzdF9fdGlsZV9fYXZhdGFyJywgJ3YtYXZhdGFyJyk7XG52YXIgVkxpc3RUaWxlQ29udGVudCA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZFwiIC8qIGNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwgKi9dKSgnbGlzdF9fdGlsZV9fY29udGVudCcsICdkaXYnKTtcbnZhciBWTGlzdFRpbGVUaXRsZSA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZFwiIC8qIGNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwgKi9dKSgnbGlzdF9fdGlsZV9fdGl0bGUnLCAnZGl2Jyk7XG52YXIgVkxpc3RUaWxlU3ViVGl0bGUgPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImRcIiAvKiBjcmVhdGVTaW1wbGVGdW5jdGlvbmFsICovXSkoJ2xpc3RfX3RpbGVfX3N1Yi10aXRsZScsICdkaXYnKTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkxpc3RfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZMaXN0X19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WTGlzdF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZMaXN0R3JvdXBfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZMaXN0R3JvdXBfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19WTGlzdFRpbGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1ZMaXN0VGlsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1ZMaXN0VGlsZUFjdGlvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVkxpc3RUaWxlQWN0aW9uX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuY29tcG9uZW50KFZMaXN0VGlsZUFjdGlvblRleHQubmFtZSwgVkxpc3RUaWxlQWN0aW9uVGV4dCk7XG4gIFZ1ZS5jb21wb25lbnQoVkxpc3RUaWxlQXZhdGFyLm5hbWUsIFZMaXN0VGlsZUF2YXRhcik7XG4gIFZ1ZS5jb21wb25lbnQoVkxpc3RUaWxlQ29udGVudC5uYW1lLCBWTGlzdFRpbGVDb250ZW50KTtcbiAgVnVlLmNvbXBvbmVudChWTGlzdFRpbGVTdWJUaXRsZS5uYW1lLCBWTGlzdFRpbGVTdWJUaXRsZSk7XG4gIFZ1ZS5jb21wb25lbnQoVkxpc3RUaWxlVGl0bGUubmFtZSwgVkxpc3RUaWxlVGl0bGUpO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZlwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZMaXN0X19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDM4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVk1lbnVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTE2KTtcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WTWVudV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVk1lbnVfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZNZW51X19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZNZW51X19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDM5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBEZWxheWFibGVcbiAqXG4gKiBAbWl4aW5cbiAqXG4gKiBDaGFuZ2VzIHRoZSBvcGVuIG9yIGNsb3NlXG4gKiBkZWxheSB0aW1lIGZvciBlbGVtZW50c1xuICovXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgb3BlblRpbWVvdXQ6IG51bGwsXG4gICAgICBjbG9zZVRpbWVvdXQ6IG51bGxcbiAgICB9O1xuICB9LFxuXG4gIHByb3BzOiB7XG4gICAgb3BlbkRlbGF5OiB7XG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgZGVmYXVsdDogMFxuICAgIH0sXG4gICAgY2xvc2VEZWxheToge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6IDIwMFxuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgLyoqXG4gICAgICogQ2xlYXIgYW55IHBlbmRpbmcgZGVsYXlcbiAgICAgKiB0aW1lcnMgZnJvbSBleGVjdXRpbmdcbiAgICAgKiBcbiAgICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgICAqL1xuICAgIGNsZWFyRGVsYXk6IGZ1bmN0aW9uIGNsZWFyRGVsYXkoKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5vcGVuVGltZW91dCk7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5jbG9zZVRpbWVvdXQpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBSdW5zIGNhbGxiYWNrIGFmdGVyXG4gICAgICogYSBzcGVjaWZpZWQgZGVsYXlcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0gIHtTdHJpbmd9ICAgdHlwZVxuICAgICAqIEBwYXJhbSAge0Z1bmN0aW9ufSBjYlxuICAgICAqIFxuICAgICAqIEByZXR1cm4ge3ZvaWR9XG4gICAgICovXG4gICAgcnVuRGVsYXk6IGZ1bmN0aW9uIHJ1bkRlbGF5KHR5cGUsIGNiKSB7XG4gICAgICB0aGlzLmNsZWFyRGVsYXkoKTtcblxuICAgICAgdmFyIGRlbGF5ID0gcGFyc2VJbnQodGhpc1t0eXBlICsgXCJEZWxheVwiXSwgMTApO1xuXG4gICAgICB0aGlzW3R5cGUgKyBcIlRpbWVvdXRcIl0gPSBzZXRUaW1lb3V0KGNiLCBkZWxheSk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiA0MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3Bvc2l0aW9uYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19zdGFja2FibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjgpO1xudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5cblxuXG5cbnZhciBkaW1lbnNpb25zID0ge1xuICBhY3RpdmF0b3I6IHtcbiAgICB0b3A6IDAsIGxlZnQ6IDAsXG4gICAgYm90dG9tOiAwLCByaWdodDogMCxcbiAgICB3aWR0aDogMCwgaGVpZ2h0OiAwLFxuICAgIG9mZnNldFRvcDogMCwgc2Nyb2xsSGVpZ2h0OiAwXG4gIH0sXG4gIGNvbnRlbnQ6IHtcbiAgICB0b3A6IDAsIGxlZnQ6IDAsXG4gICAgYm90dG9tOiAwLCByaWdodDogMCxcbiAgICB3aWR0aDogMCwgaGVpZ2h0OiAwLFxuICAgIG9mZnNldFRvcDogMCwgc2Nyb2xsSGVpZ2h0OiAwXG4gIH0sXG4gIGhhc1dpbmRvdzogZmFsc2VcblxuICAvKipcbiAgICogTWVudWFibGVcbiAgICpcbiAgICogQG1peGluXG4gICAqXG4gICAqIFVzZWQgZm9yIGZpeGVkIG9yIGFic29sdXRlbHkgcG9zaXRpb25pbmdcbiAgICogZWxlbWVudHMgd2l0aGluIHRoZSBET01cbiAgICogQ2FuIGNhbGN1bGF0ZSBYIGFuZCBZIGF4aXMgb3ZlcmZsb3dzXG4gICAqIEFzIHdlbGwgYXMgYmUgbWFudWFsbHkgcG9zaXRpb25lZFxuICAgKi9cbn07LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fcG9zaXRpb25hYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fc3RhY2thYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFic29sdXRlWDogMCxcbiAgICAgIGFic29sdXRlWTogMCxcbiAgICAgIGRpbWVuc2lvbnM6IE9iamVjdC5hc3NpZ24oe30sIGRpbWVuc2lvbnMpLFxuICAgICAgaXNDb250ZW50QWN0aXZlOiBmYWxzZSxcbiAgICAgIHBhZ2VZT2Zmc2V0OiAwLFxuICAgICAgc3RhY2tDbGFzczogJ21lbnVhYmxlX19jb250ZW50X19hY3RpdmUnLFxuICAgICAgc3RhY2tNaW5aSW5kZXg6IDZcbiAgICB9O1xuICB9LFxuXG4gIHByb3BzOiB7XG4gICAgYWN0aXZhdG9yOiB7XG4gICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IodmFsKSB7XG4gICAgICAgIHJldHVybiBbJ3N0cmluZycsICdvYmplY3QnXS5pbmNsdWRlcyh0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZih2YWwpKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGFsbG93T3ZlcmZsb3c6IEJvb2xlYW4sXG4gICAgbWF4V2lkdGg6IHtcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiAnYXV0bydcbiAgICB9LFxuICAgIG1pbldpZHRoOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgIG51ZGdlQm90dG9tOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAwXG4gICAgfSxcbiAgICBudWRnZUxlZnQ6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDBcbiAgICB9LFxuICAgIG51ZGdlUmlnaHQ6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDBcbiAgICB9LFxuICAgIG51ZGdlVG9wOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAwXG4gICAgfSxcbiAgICBudWRnZVdpZHRoOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAwXG4gICAgfSxcbiAgICBvZmZzZXRPdmVyZmxvdzogQm9vbGVhbixcbiAgICBwb3NpdGlvblg6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IG51bGxcbiAgICB9LFxuICAgIHBvc2l0aW9uWToge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH0sXG4gICAgekluZGV4OiB7XG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH1cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGhhc0FjdGl2YXRvcjogZnVuY3Rpb24gaGFzQWN0aXZhdG9yKCkge1xuICAgICAgcmV0dXJuICEhdGhpcy4kc2xvdHMuYWN0aXZhdG9yIHx8IHRoaXMuYWN0aXZhdG9yO1xuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIGRpc2FibGVkOiBmdW5jdGlvbiBkaXNhYmxlZCh2YWwpIHtcbiAgICAgIHZhbCAmJiB0aGlzLmNhbGxEZWFjdGl2YXRlKCk7XG4gICAgfSxcbiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUodmFsKSB7XG4gICAgICBpZiAodGhpcy5kaXNhYmxlZCkgcmV0dXJuO1xuXG4gICAgICB2YWwgJiYgdGhpcy5jYWxsQWN0aXZhdGUoKSB8fCB0aGlzLmNhbGxEZWFjdGl2YXRlKCk7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBhYnNvbHV0ZVBvc2l0aW9uOiBmdW5jdGlvbiBhYnNvbHV0ZVBvc2l0aW9uKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgb2Zmc2V0VG9wOiAwLFxuICAgICAgICBzY3JvbGxIZWlnaHQ6IDAsXG4gICAgICAgIHRvcDogdGhpcy5wb3NpdGlvblkgfHwgdGhpcy5hYnNvbHV0ZVksXG4gICAgICAgIGJvdHRvbTogdGhpcy5wb3NpdGlvblkgfHwgdGhpcy5hYnNvbHV0ZVksXG4gICAgICAgIGxlZnQ6IHRoaXMucG9zaXRpb25YIHx8IHRoaXMuYWJzb2x1dGVYLFxuICAgICAgICByaWdodDogdGhpcy5wb3NpdGlvblggfHwgdGhpcy5hYnNvbHV0ZVgsXG4gICAgICAgIGhlaWdodDogMCxcbiAgICAgICAgd2lkdGg6IDBcbiAgICAgIH07XG4gICAgfSxcbiAgICBhY3RpdmF0ZTogZnVuY3Rpb24gYWN0aXZhdGUoKSB7fSxcbiAgICBjYWxjTGVmdDogZnVuY3Rpb24gY2FsY0xlZnQoKSB7XG4gICAgICB2YXIgYSA9IHRoaXMuZGltZW5zaW9ucy5hY3RpdmF0b3I7XG4gICAgICB2YXIgYyA9IHRoaXMuZGltZW5zaW9ucy5jb250ZW50O1xuICAgICAgLy8gQ29udGVudCBhbHdheXMgaGFzIGEgbWluIHdpZHRoXG4gICAgICAvLyBvZiBpdHMgYWN0aXZhdG9yLiBUaGlzIGlzIGFwcGxpZWRcbiAgICAgIC8vIHdoZW4gdGhlIG1lbnUgaXMgc2hvd24sIGJ1dCBub3RcbiAgICAgIC8vIHJlZmxlY3RlZCBpbiB0aGUgZ2V0Qm91bmRpbmdDbGllbnRSZWN0XG4gICAgICAvLyBtZXRob2RcbiAgICAgIHZhciBtaW5XaWR0aCA9IGEud2lkdGggPCBjLndpZHRoID8gYy53aWR0aCA6IGEud2lkdGg7XG4gICAgICB2YXIgbGVmdCA9IHRoaXMubGVmdCA/IGEucmlnaHQgLSBtaW5XaWR0aCA6IGEubGVmdDtcblxuICAgICAgaWYgKHRoaXMub2Zmc2V0WCkgbGVmdCArPSB0aGlzLmxlZnQgPyAtYS53aWR0aCA6IGEud2lkdGg7XG4gICAgICBpZiAodGhpcy5udWRnZUxlZnQpIGxlZnQgLT0gdGhpcy5udWRnZUxlZnQ7XG4gICAgICBpZiAodGhpcy5udWRnZVJpZ2h0KSBsZWZ0ICs9IHRoaXMubnVkZ2VSaWdodDtcblxuICAgICAgcmV0dXJuIGxlZnQ7XG4gICAgfSxcbiAgICBjYWxjVG9wOiBmdW5jdGlvbiBjYWxjVG9wKCkge1xuICAgICAgdGhpcy5jaGVja0ZvcldpbmRvdygpO1xuXG4gICAgICB2YXIgYSA9IHRoaXMuZGltZW5zaW9ucy5hY3RpdmF0b3I7XG4gICAgICB2YXIgYyA9IHRoaXMuZGltZW5zaW9ucy5jb250ZW50O1xuICAgICAgdmFyIHRvcCA9IHRoaXMudG9wID8gYS5ib3R0b20gLSBjLmhlaWdodCA6IGEudG9wO1xuXG4gICAgICBpZiAodGhpcy5vZmZzZXRZKSB0b3AgKz0gdGhpcy50b3AgPyAtYS5oZWlnaHQgOiBhLmhlaWdodDtcbiAgICAgIGlmICh0aGlzLm51ZGdlVG9wKSB0b3AgLT0gdGhpcy5udWRnZVRvcDtcbiAgICAgIGlmICh0aGlzLm51ZGdlQm90dG9tKSB0b3AgKz0gdGhpcy5udWRnZUJvdHRvbTtcblxuICAgICAgcmV0dXJuIHRvcCArIHRoaXMucGFnZVlPZmZzZXQ7XG4gICAgfSxcbiAgICBjYWxjWE92ZXJmbG93OiBmdW5jdGlvbiBjYWxjWE92ZXJmbG93KGxlZnQpIHtcbiAgICAgIHZhciBwYXJzZWRNYXhXaWR0aCA9IGlzTmFOKHBhcnNlSW50KHRoaXMubWF4V2lkdGgpKSA/IDAgOiBwYXJzZUludCh0aGlzLm1heFdpZHRoKTtcbiAgICAgIHZhciBpbm5lcldpZHRoID0gdGhpcy5nZXRJbm5lcldpZHRoKCk7XG4gICAgICB2YXIgbWF4V2lkdGggPSBNYXRoLm1heCh0aGlzLmRpbWVuc2lvbnMuY29udGVudC53aWR0aCwgcGFyc2VkTWF4V2lkdGgpO1xuICAgICAgdmFyIHRvdGFsV2lkdGggPSBsZWZ0ICsgbWF4V2lkdGg7XG4gICAgICB2YXIgYXZhaWxhYmxlV2lkdGggPSB0b3RhbFdpZHRoIC0gaW5uZXJXaWR0aDtcblxuICAgICAgaWYgKCghdGhpcy5sZWZ0IHx8IHRoaXMucmlnaHQpICYmIGF2YWlsYWJsZVdpZHRoID4gMCkge1xuICAgICAgICBsZWZ0ID0gaW5uZXJXaWR0aCAtIG1heFdpZHRoIC0gKGlubmVyV2lkdGggPiA2MDAgPyAzMCA6IDEyKSAvLyBBY2NvdW50IGZvciBzY3JvbGxiYXJcbiAgICAgICAgO1xuICAgICAgfVxuXG4gICAgICBpZiAobGVmdCA8IDApIGxlZnQgPSAxMjtcblxuICAgICAgcmV0dXJuIGxlZnQ7XG4gICAgfSxcbiAgICBjYWxjWU92ZXJmbG93OiBmdW5jdGlvbiBjYWxjWU92ZXJmbG93KHRvcCkge1xuICAgICAgdmFyIGRvY3VtZW50SGVpZ2h0ID0gdGhpcy5nZXRJbm5lckhlaWdodCgpO1xuICAgICAgdmFyIHRvVG9wID0gdGhpcy5wYWdlWU9mZnNldCArIGRvY3VtZW50SGVpZ2h0O1xuICAgICAgdmFyIGFjdGl2YXRvciA9IHRoaXMuZGltZW5zaW9ucy5hY3RpdmF0b3I7XG4gICAgICB2YXIgY29udGVudEhlaWdodCA9IHRoaXMuZGltZW5zaW9ucy5jb250ZW50LmhlaWdodDtcbiAgICAgIHZhciB0b3RhbEhlaWdodCA9IHRvcCArIGNvbnRlbnRIZWlnaHQ7XG4gICAgICB2YXIgaXNPdmVyZmxvd2luZyA9IHRvVG9wIDwgdG90YWxIZWlnaHQ7XG5cbiAgICAgIC8vIElmIG92ZXJmbG93aW5nIGJvdHRvbSBhbmQgb2Zmc2V0XG4gICAgICAvLyBUT0RPOiBzZXQgJ2JvdHRvbScgcG9zaXRpb24gaW5zdGVhZCBvZiAndG9wJ1xuICAgICAgaWYgKGlzT3ZlcmZsb3dpbmcgJiYgdGhpcy5vZmZzZXRPdmVyZmxvdykge1xuICAgICAgICB0b3AgPSB0aGlzLnBhZ2VZT2Zmc2V0ICsgKGFjdGl2YXRvci50b3AgLSBjb250ZW50SGVpZ2h0KTtcbiAgICAgICAgLy8gSWYgb3ZlcmZsb3dpbmcgYm90dG9tXG4gICAgICB9IGVsc2UgaWYgKGlzT3ZlcmZsb3dpbmcgJiYgIXRoaXMuYWxsb3dPdmVyZmxvdykge1xuICAgICAgICB0b3AgPSB0b1RvcCAtIGNvbnRlbnRIZWlnaHQgLSAxMjtcbiAgICAgICAgLy8gSWYgb3ZlcmZsb3dpbmcgdG9wXG4gICAgICB9IGVsc2UgaWYgKHRvcCA8IHRoaXMucGFnZVlPZmZzZXQgJiYgIXRoaXMuYWxsb3dPdmVyZmxvdykge1xuICAgICAgICB0b3AgPSB0aGlzLnBhZ2VZT2Zmc2V0ICsgMTI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0b3AgPCAxMiA/IDEyIDogdG9wO1xuICAgIH0sXG4gICAgY2FsbEFjdGl2YXRlOiBmdW5jdGlvbiBjYWxsQWN0aXZhdGUoKSB7XG4gICAgICB0aGlzLmNoZWNrRm9yV2luZG93KCk7XG4gICAgICBpZiAoIXRoaXMuaGFzV2luZG93KSByZXR1cm47XG5cbiAgICAgIHRoaXMuYWN0aXZhdGUoKTtcbiAgICB9LFxuICAgIGNhbGxEZWFjdGl2YXRlOiBmdW5jdGlvbiBjYWxsRGVhY3RpdmF0ZSgpIHtcbiAgICAgIHRoaXMuaXNDb250ZW50QWN0aXZlID0gZmFsc2U7XG5cbiAgICAgIHRoaXMuZGVhY3RpdmF0ZSgpO1xuICAgIH0sXG4gICAgY2hlY2tGb3JXaW5kb3c6IGZ1bmN0aW9uIGNoZWNrRm9yV2luZG93KCkge1xuICAgICAgdGhpcy5oYXNXaW5kb3cgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJztcblxuICAgICAgaWYgKHRoaXMuaGFzV2luZG93KSB7XG4gICAgICAgIHRoaXMucGFnZVlPZmZzZXQgPSB0aGlzLmdldE9mZnNldFRvcCgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZGVhY3RpdmF0ZTogZnVuY3Rpb24gZGVhY3RpdmF0ZSgpIHt9LFxuICAgIGdldEFjdGl2YXRvcjogZnVuY3Rpb24gZ2V0QWN0aXZhdG9yKCkge1xuICAgICAgaWYgKHRoaXMuYWN0aXZhdG9yKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgdGhpcy5hY3RpdmF0b3IgPT09ICdzdHJpbmcnID8gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmFjdGl2YXRvcikgOiB0aGlzLmFjdGl2YXRvcjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuYWN0aXZhdG9yLmNoaWxkcmVuID8gdGhpcy4kcmVmcy5hY3RpdmF0b3IuY2hpbGRyZW5bMF0gOiB0aGlzLiRyZWZzLmFjdGl2YXRvcjtcbiAgICB9LFxuICAgIGdldElubmVySGVpZ2h0OiBmdW5jdGlvbiBnZXRJbm5lckhlaWdodCgpIHtcbiAgICAgIGlmICghdGhpcy5oYXNXaW5kb3cpIHJldHVybiAwO1xuXG4gICAgICByZXR1cm4gd2luZG93LmlubmVySGVpZ2h0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gICAgfSxcbiAgICBnZXRJbm5lcldpZHRoOiBmdW5jdGlvbiBnZXRJbm5lcldpZHRoKCkge1xuICAgICAgaWYgKCF0aGlzLmhhc1dpbmRvdykgcmV0dXJuIDA7XG5cbiAgICAgIHJldHVybiB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICB9LFxuICAgIGdldE9mZnNldFRvcDogZnVuY3Rpb24gZ2V0T2Zmc2V0VG9wKCkge1xuICAgICAgaWYgKCF0aGlzLmhhc1dpbmRvdykgcmV0dXJuIDA7XG5cbiAgICAgIHJldHVybiB3aW5kb3cucGFnZVlPZmZzZXQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcDtcbiAgICB9LFxuICAgIG1lYXN1cmU6IGZ1bmN0aW9uIG1lYXN1cmUoZWwsIHNlbGVjdG9yKSB7XG4gICAgICBlbCA9IHNlbGVjdG9yID8gZWwucXVlcnlTZWxlY3RvcihzZWxlY3RvcikgOiBlbDtcblxuICAgICAgaWYgKCFlbCkgcmV0dXJuIG51bGw7XG5cbiAgICAgIHZhciBfZWwkZ2V0Qm91bmRpbmdDbGllbnQgPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICAgICAgICB0b3AgPSBfZWwkZ2V0Qm91bmRpbmdDbGllbnQudG9wLFxuICAgICAgICAgIGJvdHRvbSA9IF9lbCRnZXRCb3VuZGluZ0NsaWVudC5ib3R0b20sXG4gICAgICAgICAgbGVmdCA9IF9lbCRnZXRCb3VuZGluZ0NsaWVudC5sZWZ0LFxuICAgICAgICAgIHJpZ2h0ID0gX2VsJGdldEJvdW5kaW5nQ2xpZW50LnJpZ2h0LFxuICAgICAgICAgIGhlaWdodCA9IF9lbCRnZXRCb3VuZGluZ0NsaWVudC5oZWlnaHQsXG4gICAgICAgICAgd2lkdGggPSBfZWwkZ2V0Qm91bmRpbmdDbGllbnQud2lkdGg7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIG9mZnNldFRvcDogZWwub2Zmc2V0VG9wLFxuICAgICAgICBzY3JvbGxIZWlnaHQ6IGVsLnNjcm9sbEhlaWdodCxcbiAgICAgICAgdG9wOiB0b3AsIGJvdHRvbTogYm90dG9tLCBsZWZ0OiBsZWZ0LCByaWdodDogcmlnaHQsIGhlaWdodDogaGVpZ2h0LCB3aWR0aDogd2lkdGhcbiAgICAgIH07XG4gICAgfSxcbiAgICBzbmVha1BlZWs6IGZ1bmN0aW9uIHNuZWFrUGVlayhjYikge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGVsID0gX3RoaXMuJHJlZnMuY29udGVudDtcblxuICAgICAgICBpZiAoIWVsIHx8IF90aGlzLmlzU2hvd24oZWwpKSByZXR1cm4gY2IoKTtcblxuICAgICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XG4gICAgICAgIGNiKCk7XG4gICAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHN0YXJ0VHJhbnNpdGlvbjogZnVuY3Rpb24gc3RhcnRUcmFuc2l0aW9uKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczIuaXNDb250ZW50QWN0aXZlID0gdHJ1ZTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgaXNTaG93bjogZnVuY3Rpb24gaXNTaG93bihlbCkge1xuICAgICAgcmV0dXJuIGVsLnN0eWxlLmRpc3BsYXkgIT09ICdub25lJztcbiAgICB9LFxuICAgIHVwZGF0ZURpbWVuc2lvbnM6IGZ1bmN0aW9uIHVwZGF0ZURpbWVuc2lvbnMoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIGRpbWVuc2lvbnMgPSB7fTtcblxuICAgICAgLy8gQWN0aXZhdG9yIHNob3VsZCBhbHJlYWR5IGJlIHNob3duXG4gICAgICBkaW1lbnNpb25zLmFjdGl2YXRvciA9ICF0aGlzLmhhc0FjdGl2YXRvciB8fCB0aGlzLmFic29sdXRlID8gdGhpcy5hYnNvbHV0ZVBvc2l0aW9uKCkgOiB0aGlzLm1lYXN1cmUodGhpcy5nZXRBY3RpdmF0b3IoKSk7XG5cbiAgICAgIC8vIERpc3BsYXkgYW5kIGhpZGUgdG8gZ2V0IGRpbWVuc2lvbnNcbiAgICAgIHRoaXMuc25lYWtQZWVrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGltZW5zaW9ucy5jb250ZW50ID0gX3RoaXMzLm1lYXN1cmUoX3RoaXMzLiRyZWZzLmNvbnRlbnQpO1xuXG4gICAgICAgIF90aGlzMy5kaW1lbnNpb25zID0gZGltZW5zaW9ucztcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogNDEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgcHJvcHM6IHtcbiAgICBub0RhdGFUZXh0OiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnTm8gZGF0YSBhdmFpbGFibGUnXG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiA0MiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfbWFza19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0Myk7XG4vKipcbiAqIE1hc2thYmxlXG4gKlxuICogQG1peGluXG4gKlxuICogQ3JlYXRlcyBhbiBpbnB1dCBtYXNrIHRoYXQgaXNcbiAqIGdlbmVyYXRlZCBmcm9tIGEgbWFza2VkIHN0clxuICpcbiAqIEV4YW1wbGU6IG1hc2s9XCIjIyMjICMjIyMgIyMjIyAjIyMjXCJcbiAqL1xuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbGVjdGlvbjogMCxcbiAgICAgIHByZURlZmluZWQ6IHtcbiAgICAgICAgJ2NyZWRpdC1jYXJkJzogJyMjIyMgLSAjIyMjIC0gIyMjIyAtICMjIyMnLFxuICAgICAgICAnZGF0ZSc6ICcjIy8jIy8jIyMjJyxcbiAgICAgICAgJ2RhdGUtd2l0aC10aW1lJzogJyMjLyMjLyMjIyMgIyM6IyMnLFxuICAgICAgICAncGhvbmUnOiAnKCMjIykgIyMjIC0gIyMjIycsXG4gICAgICAgICdzb2NpYWwnOiAnIyMjLSMjLSMjIyMnLFxuICAgICAgICAndGltZSc6ICcjIzojIycsXG4gICAgICAgICd0aW1lLXdpdGgtc2Vjb25kcyc6ICcjIzojIzojIydcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuXG4gIHByb3BzOiB7XG4gICAgZG9udEZpbGxNYXNrQmxhbmtzOiBCb29sZWFuLFxuICAgIG1hc2s6IHtcbiAgICAgIHR5cGU6IFtPYmplY3QsIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiBudWxsXG4gICAgfSxcbiAgICByZXR1cm5NYXNrZWRWYWx1ZTogQm9vbGVhblxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgbWFza2VkOiBmdW5jdGlvbiBtYXNrZWQoKSB7XG4gICAgICB2YXIgcHJlRGVmaW5lZCA9IHRoaXMucHJlRGVmaW5lZFt0aGlzLm1hc2tdO1xuICAgICAgdmFyIG1hc2sgPSBwcmVEZWZpbmVkIHx8IHRoaXMubWFzayB8fCAnJztcblxuICAgICAgcmV0dXJuIG1hc2suc3BsaXQoJycpO1xuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIC8qKlxuICAgICAqIE1ha2Ugc3VyZSB0aGUgY3Vyc29yIGlzIGluIHRoZSBjb3JyZWN0XG4gICAgICogbG9jYXRpb24gd2hlbiB0aGUgbWFzayBjaGFuZ2VzXG4gICAgICovXG4gICAgbWFzazogZnVuY3Rpb24gbWFzaygpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy4kcmVmcy5pbnB1dCkgcmV0dXJuO1xuXG4gICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLiRyZWZzLmlucHV0LnZhbHVlO1xuICAgICAgdmFyIG5ld1ZhbHVlID0gdGhpcy5tYXNrVGV4dCh0aGlzLmxhenlWYWx1ZSk7XG4gICAgICB2YXIgcG9zaXRpb24gPSAwO1xuICAgICAgdmFyIHNlbGVjdGlvbiA9IHRoaXMuc2VsZWN0aW9uO1xuXG4gICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7XG4gICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcbiAgICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gb2xkVmFsdWUuc3Vic3RyKDAsIHNlbGVjdGlvbilbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICAgICAgdmFyIF9jaGFyID0gX3N0ZXAudmFsdWU7XG5cbiAgICAgICAgICBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX21hc2tfX1tcImFcIiAvKiBpc01hc2tEZWxpbWl0ZXIgKi9dKShfY2hhcikgfHwgcG9zaXRpb24rKztcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICAgICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHNlbGVjdGlvbiA9IDA7XG4gICAgICBpZiAobmV3VmFsdWUpIHtcbiAgICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZTtcbiAgICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yMiA9IGZhbHNlO1xuICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IyID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yMiA9IG5ld1ZhbHVlW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXAyOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gKF9zdGVwMiA9IF9pdGVyYXRvcjIubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlKSB7XG4gICAgICAgICAgICB2YXIgY2hhciA9IF9zdGVwMi52YWx1ZTtcblxuICAgICAgICAgICAgT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9tYXNrX19bXCJhXCIgLyogaXNNYXNrRGVsaW1pdGVyICovXSkoY2hhcikgfHwgcG9zaXRpb24tLTtcbiAgICAgICAgICAgIHNlbGVjdGlvbisrO1xuICAgICAgICAgICAgaWYgKHBvc2l0aW9uIDw9IDApIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IyID0gdHJ1ZTtcbiAgICAgICAgICBfaXRlcmF0b3JFcnJvcjIgPSBlcnI7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgJiYgX2l0ZXJhdG9yMi5yZXR1cm4pIHtcbiAgICAgICAgICAgICAgX2l0ZXJhdG9yMi5yZXR1cm4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMikge1xuICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMuJHJlZnMuaW5wdXQudmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgICAgX3RoaXMuc2V0Q2FyZXRQb3NpdGlvbihzZWxlY3Rpb24pO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBzZXRDYXJldFBvc2l0aW9uOiBmdW5jdGlvbiBzZXRDYXJldFBvc2l0aW9uKHNlbGVjdGlvbikge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHRoaXMuc2VsZWN0aW9uID0gc2VsZWN0aW9uO1xuICAgICAgd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczIuJHJlZnMuaW5wdXQgJiYgX3RoaXMyLiRyZWZzLmlucHV0LnNldFNlbGVjdGlvblJhbmdlKF90aGlzMi5zZWxlY3Rpb24sIF90aGlzMi5zZWxlY3Rpb24pO1xuICAgICAgfSwgMCk7XG4gICAgfSxcbiAgICB1cGRhdGVSYW5nZTogZnVuY3Rpb24gdXBkYXRlUmFuZ2UoKSB7XG4gICAgICBpZiAoIXRoaXMuJHJlZnMuaW5wdXQpIHJldHVybjtcblxuICAgICAgdmFyIG5ld1ZhbHVlID0gdGhpcy5tYXNrVGV4dCh0aGlzLmxhenlWYWx1ZSk7XG4gICAgICB2YXIgc2VsZWN0aW9uID0gMDtcblxuICAgICAgdGhpcy4kcmVmcy5pbnB1dC52YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaWYgKG5ld1ZhbHVlKSB7XG4gICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IHRydWU7XG4gICAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjMgPSBmYWxzZTtcbiAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yMyA9IHVuZGVmaW5lZDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjMgPSBuZXdWYWx1ZVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwMzsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IChfc3RlcDMgPSBfaXRlcmF0b3IzLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zID0gdHJ1ZSkge1xuICAgICAgICAgICAgdmFyIGNoYXIgPSBfc3RlcDMudmFsdWU7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmxhenlTZWxlY3Rpb24gPD0gMCkgYnJlYWs7XG4gICAgICAgICAgICBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX21hc2tfX1tcImFcIiAvKiBpc01hc2tEZWxpbWl0ZXIgKi9dKShjaGFyKSB8fCB0aGlzLmxhenlTZWxlY3Rpb24tLTtcbiAgICAgICAgICAgIHNlbGVjdGlvbisrO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IzID0gdHJ1ZTtcbiAgICAgICAgICBfaXRlcmF0b3JFcnJvcjMgPSBlcnI7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgJiYgX2l0ZXJhdG9yMy5yZXR1cm4pIHtcbiAgICAgICAgICAgICAgX2l0ZXJhdG9yMy5yZXR1cm4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMykge1xuICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2V0Q2FyZXRQb3NpdGlvbihzZWxlY3Rpb24pO1xuICAgICAgLy8gdGhpcy4kZW1pdCgpIG11c3Qgb2NjdXIgb25seSB3aGVuIGFsbCBpbnRlcm5hbCB2YWx1ZXMgYXJlIGNvcnJlY3RcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5yZXR1cm5NYXNrZWRWYWx1ZSA/IHRoaXMuJHJlZnMuaW5wdXQudmFsdWUgOiB0aGlzLmxhenlWYWx1ZSk7XG4gICAgfSxcbiAgICBtYXNrVGV4dDogZnVuY3Rpb24gbWFza1RleHQodGV4dCkge1xuICAgICAgcmV0dXJuIHRoaXMubWFzayA/IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfbWFza19fW1wiYlwiIC8qIG1hc2tUZXh0ICovXSkodGV4dCwgdGhpcy5tYXNrZWQsIHRoaXMuZG9udEZpbGxNYXNrQmxhbmtzKSA6IHRleHQ7XG4gICAgfSxcbiAgICB1bm1hc2tUZXh0OiBmdW5jdGlvbiB1bm1hc2tUZXh0KHRleHQpIHtcbiAgICAgIHJldHVybiB0aGlzLm1hc2sgPyBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX21hc2tfX1tcImNcIiAvKiB1bm1hc2tUZXh0ICovXSkodGV4dCkgOiB0ZXh0O1xuICAgIH0sXG5cbiAgICAvLyBXaGVuIHRoZSBpbnB1dCBjaGFuZ2VzIGFuZCBpc1xuICAgIC8vIHJlLWNyZWF0ZWQsIGVuc3VyZSB0aGF0IHRoZVxuICAgIC8vIGNhcmV0IGxvY2F0aW9uIGlzIGNvcnJlY3RcbiAgICBzZXRTZWxlY3Rpb25SYW5nZTogZnVuY3Rpb24gc2V0U2VsZWN0aW9uUmFuZ2UoKSB7XG4gICAgICB0aGlzLiRuZXh0VGljayh0aGlzLnVwZGF0ZVJhbmdlKTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDQzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogdW51c2VkIGhhcm1vbnkgZXhwb3J0IGRlZmF1bHREZWxpbWl0ZXJzICovXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiYVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIGlzTWFza0RlbGltaXRlcjsgfSk7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiYlwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIG1hc2tUZXh0OyB9KTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJjXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gdW5tYXNrVGV4dDsgfSk7XG4vKipcbiAqIE1hc2sga2V5c1xuICpcbiAqIEB0eXBlIHtPYmplY3R9XG4gKi9cbnZhciBhbGxvd2VkTWFza3MgPSB7XG4gICcjJzoge1xuICAgIHRlc3Q6IGZ1bmN0aW9uIHRlc3QoY2hhcikge1xuICAgICAgcmV0dXJuIGNoYXIubWF0Y2goL1swLTldLyk7XG4gICAgfVxuICB9LFxuICAnQSc6IHtcbiAgICB0ZXN0OiBmdW5jdGlvbiB0ZXN0KGNoYXIpIHtcbiAgICAgIHJldHVybiBjaGFyLm1hdGNoKC9bQS1aXS9pKTtcbiAgICB9LFxuICAgIGNvbnZlcnQ6IGZ1bmN0aW9uIGNvbnZlcnQoY2hhcikge1xuICAgICAgcmV0dXJuIGNoYXIudG9VcHBlckNhc2UoKTtcbiAgICB9XG4gIH0sXG4gICdhJzoge1xuICAgIHRlc3Q6IGZ1bmN0aW9uIHRlc3QoY2hhcikge1xuICAgICAgcmV0dXJuIGNoYXIubWF0Y2goL1thLXpdL2kpO1xuICAgIH0sXG4gICAgY29udmVydDogZnVuY3Rpb24gY29udmVydChjaGFyKSB7XG4gICAgICByZXR1cm4gY2hhci50b0xvd2VyQ2FzZSgpO1xuICAgIH1cbiAgfSxcbiAgJ04nOiB7XG4gICAgdGVzdDogZnVuY3Rpb24gdGVzdChjaGFyKSB7XG4gICAgICByZXR1cm4gY2hhci5tYXRjaCgvWzAtOUEtWl0vaSk7XG4gICAgfSxcbiAgICBjb252ZXJ0OiBmdW5jdGlvbiBjb252ZXJ0KGNoYXIpIHtcbiAgICAgIHJldHVybiBjaGFyLnRvVXBwZXJDYXNlKCk7XG4gICAgfVxuICB9LFxuICAnbic6IHtcbiAgICB0ZXN0OiBmdW5jdGlvbiB0ZXN0KGNoYXIpIHtcbiAgICAgIHJldHVybiBjaGFyLm1hdGNoKC9bMC05YS16XS9pKTtcbiAgICB9LFxuICAgIGNvbnZlcnQ6IGZ1bmN0aW9uIGNvbnZlcnQoY2hhcikge1xuICAgICAgcmV0dXJuIGNoYXIudG9Mb3dlckNhc2UoKTtcbiAgICB9XG4gIH0sXG4gICdYJzoge1xuICAgIHRlc3Q6IGlzTWFza0RlbGltaXRlclxuICB9XG5cbiAgLyoqXG4gICAqIERlZmF1bHQgZGVsaW1pdGVyIFJlZ0V4cFxuICAgKlxuICAgKiBAdHlwZSB7UmVnRXhwfVxuICAgKi9cbn07dmFyIGRlZmF1bHREZWxpbWl0ZXJzID0gL1stISQlXiYqKClfK3x+PWB7fVxcW1xcXTpcIjsnPD4/LC5cXC9cXFxcIF0vO1xuXG4vKipcbiAqIElzIENoYXJhY3RlciBtYXNrXG4gKlxuICogQHBhcmFtICB7U3RyaW5nfSBjaGFyXG4gKlxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xudmFyIGlzTWFzayA9IGZ1bmN0aW9uIGlzTWFzayhjaGFyKSB7XG4gIHJldHVybiBhbGxvd2VkTWFza3MuaGFzT3duUHJvcGVydHkoY2hhcik7XG59O1xuXG4vKipcbiAqIEF1dG9tYXRpY2FsbHkgY29udmVydCBjaGFyIGNhc2VcbiAqXG4gKiBAcGFyYW0gIHtTdHJpbmd9IG1hc2tcbiAqIEBwYXJhbSAge1N0cmluZ30gY2hhclxuICpcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xudmFyIGNvbnZlcnQgPSBmdW5jdGlvbiBjb252ZXJ0KG1hc2ssIGNoYXIpIHtcbiAgcmV0dXJuIGFsbG93ZWRNYXNrc1ttYXNrXS5jb252ZXJ0ID8gYWxsb3dlZE1hc2tzW21hc2tdLmNvbnZlcnQoY2hhcikgOiBjaGFyO1xufTtcblxuLyoqXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGNoYXJcbiAqXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG52YXIgaXNNYXNrRGVsaW1pdGVyID0gZnVuY3Rpb24gaXNNYXNrRGVsaW1pdGVyKGNoYXIpIHtcbiAgcmV0dXJuIGNoYXIgJiYgY2hhci5tYXRjaChkZWZhdWx0RGVsaW1pdGVycyk7XG59O1xuXG4vKipcbiAqIE1hc2sgVmFsaWRhdGlvblxuICpcbiAqIEBwYXJhbSAge1N0cmluZ30gbWFza1xuICogQHBhcmFtICB7U3RyaW5nfSBjaGFyXG4gKlxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xudmFyIG1hc2tWYWxpZGF0ZXMgPSBmdW5jdGlvbiBtYXNrVmFsaWRhdGVzKG1hc2ssIGNoYXIpIHtcbiAgaWYgKGNoYXIgPT0gbnVsbCB8fCAhaXNNYXNrKG1hc2spKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiBhbGxvd2VkTWFza3NbbWFza10udGVzdChjaGFyKTtcbn07XG5cbi8qKlxuICogTWFzayBUZXh0XG4gKlxuICogVGFrZXMgYW4gYXJyYXkgb2YgY2hhcmFjdGVyc1xuICogYW5kIHJldHVybnMgYSBjb21waWxlZCBzdHJcbiAqXG4gKiBAcGFyYW0geyp9IHRleHRcbiAqIEBwYXJhbSB7QXJyYXl8U3RyaW5nfSBtYXNrZWRcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW2RvbnRGaWxsTWFza0JsYW5rc11cbiAqXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbnZhciBtYXNrVGV4dCA9IGZ1bmN0aW9uIG1hc2tUZXh0KHRleHQsIG1hc2tlZCwgZG9udEZpbGxNYXNrQmxhbmtzKSB7XG4gIGlmICh0ZXh0ID09IG51bGwpIHJldHVybiAnJztcbiAgdGV4dCA9IFN0cmluZyh0ZXh0KTtcbiAgaWYgKCFtYXNrZWQubGVuZ3RoIHx8ICF0ZXh0Lmxlbmd0aCkgcmV0dXJuIHRleHQ7XG4gIGlmICghQXJyYXkuaXNBcnJheShtYXNrZWQpKSBtYXNrZWQgPSBtYXNrZWQuc3BsaXQoJycpO1xuXG4gIHZhciB0ZXh0SW5kZXggPSAwO1xuICB2YXIgbWFza0luZGV4ID0gMDtcbiAgdmFyIG5ld1RleHQgPSAnJztcblxuICB3aGlsZSAobWFza0luZGV4IDwgbWFza2VkLmxlbmd0aCkge1xuICAgIHZhciBtYXNrID0gbWFza2VkW21hc2tJbmRleF07XG5cbiAgICAvLyBBc3NpZ24gdGhlIG5leHQgY2hhcmFjdGVyXG4gICAgdmFyIGNoYXIgPSB0ZXh0W3RleHRJbmRleF07XG5cbiAgICAvLyBDaGVjayBpZiBtYXNrIGlzIGRlbGltaXRlclxuICAgIC8vIGFuZCBjdXJyZW50IGNoYXIgbWF0Y2hlc1xuICAgIGlmICghaXNNYXNrKG1hc2spICYmIGNoYXIgPT09IG1hc2spIHtcbiAgICAgIG5ld1RleHQgKz0gbWFzaztcbiAgICAgIHRleHRJbmRleCsrO1xuICAgICAgLy8gQ2hlY2sgaWYgbm90IG1hc2tcbiAgICB9IGVsc2UgaWYgKCFpc01hc2sobWFzaykgJiYgIWRvbnRGaWxsTWFza0JsYW5rcykge1xuICAgICAgbmV3VGV4dCArPSBtYXNrO1xuICAgICAgLy8gQ2hlY2sgaWYgaXMgbWFzayBhbmQgdmFsaWRhdGVzXG4gICAgfSBlbHNlIGlmIChtYXNrVmFsaWRhdGVzKG1hc2ssIGNoYXIpKSB7XG4gICAgICBuZXdUZXh0ICs9IGNvbnZlcnQobWFzaywgY2hhcik7XG4gICAgICB0ZXh0SW5kZXgrKztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ld1RleHQ7XG4gICAgfVxuXG4gICAgbWFza0luZGV4Kys7XG4gIH1cblxuICByZXR1cm4gbmV3VGV4dDtcbn07XG5cbi8qKlxuICogVW5tYXNrIFRleHRcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdGV4dFxuICpcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xudmFyIHVubWFza1RleHQgPSBmdW5jdGlvbiB1bm1hc2tUZXh0KHRleHQpIHtcbiAgcmV0dXJuIHRleHQgPyBTdHJpbmcodGV4dCkucmVwbGFjZShuZXcgUmVnRXhwKGRlZmF1bHREZWxpbWl0ZXJzLCAnZycpLCAnJykgOiB0ZXh0O1xufTtcblxuLyoqKi8gfSksXG4vKiA0NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDQ1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fY29sb3JhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fdGhlbWVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fY29sb3JhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fdGhlbWVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRlZmF1bHRDb2xvcjogJ2FjY2VudCcsXG4gICAgICBpc1NhdmluZzogZmFsc2VcbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICBhY3Rpb25zOiBCb29sZWFuLFxuICAgIGF1dG9zYXZlOiBCb29sZWFuLFxuICAgIGhlYWRlckNvbG9yOiBTdHJpbmcsXG4gICAgbGFuZHNjYXBlOiBCb29sZWFuLFxuICAgIG5vVGl0bGU6IEJvb2xlYW4sXG4gICAgc2Nyb2xsYWJsZTogQm9vbGVhbixcbiAgICB2YWx1ZToge1xuICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICB0aXRsZUNvbG9yOiBmdW5jdGlvbiB0aXRsZUNvbG9yKCkge1xuICAgICAgdmFyIGRhcmtUaGVtZSA9IHRoaXMuZGFyayB8fCAhdGhpcy5saWdodCAmJiB0aGlzLiR2dWV0aWZ5LmRhcms7XG4gICAgICB2YXIgZGVmYXVsdFRpdGxlQ29sb3IgPSBkYXJrVGhlbWUgPyBudWxsIDogJ3ByaW1hcnknO1xuICAgICAgcmV0dXJuIHRoaXMuaGVhZGVyQ29sb3IgfHwgdGhpcy5jb2xvciB8fCBkZWZhdWx0VGl0bGVDb2xvcjtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIHNhdmU6IGZ1bmN0aW9uIHNhdmUoKSB7fSxcbiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbCgpIHt9LFxuICAgIGdlblNsb3Q6IGZ1bmN0aW9uIGdlblNsb3QoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCh7XG4gICAgICAgIHNhdmU6IHRoaXMuc2F2ZSxcbiAgICAgICAgY2FuY2VsOiB0aGlzLmNhbmNlbFxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZW5QaWNrZXJUaXRsZTogZnVuY3Rpb24gZ2VuUGlja2VyVGl0bGUoY2hpbGRyZW4pIHtcbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAncGlja2VyX190aXRsZScsXG4gICAgICAgICdjbGFzcyc6IHRoaXMuYWRkQmFja2dyb3VuZENvbG9yQ2xhc3NDaGVja3Moe30sICd0aXRsZUNvbG9yJylcbiAgICAgIH0sIGNoaWxkcmVuKTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDQ2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KF9fd2VicGFja19leHBvcnRzX18sIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9zZW12ZXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNDgpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9zZW12ZXJfX19kZWZhdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9zZW12ZXJfXyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19wYWNrYWdlX2pzb25fXyA9IF9fd2VicGFja19yZXF1aXJlX18oNTApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fcGFja2FnZV9qc29uX19fZGVmYXVsdCA9IF9fd2VicGFja19yZXF1aXJlX18ubihfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3BhY2thZ2VfanNvbl9fKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2NvbXBvbmVudHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNTEpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fZGlyZWN0aXZlc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMjYpO1xudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXyg0Nyk7XG5cblxuXG5cblxuZnVuY3Rpb24gVnVldGlmeShWdWUsIGFyZ3MpIHtcbiAgdmFyIFZ1ZXRpZnkgPSBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2NvbXBvbmVudHNfX1tcIlZ1ZXRpZnlcIl07XG5cbiAgVnVlLnVzZShWdWV0aWZ5LCBfZXh0ZW5kcyh7XG4gICAgY29tcG9uZW50czogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19jb21wb25lbnRzX18sXG4gICAgZGlyZWN0aXZlczogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19kaXJlY3RpdmVzX19cbiAgfSwgYXJncykpO1xufVxuXG5WdWV0aWZ5LnZlcnNpb24gPSBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3BhY2thZ2VfanNvbl9fW1widmVyc2lvblwiXTtcblxuZnVuY3Rpb24gY2hlY2tWdWVWZXJzaW9uKCkge1xuICB2YXIgdnVlRGVwID0gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19wYWNrYWdlX2pzb25fX1tcInBlZXJEZXBlbmRlbmNpZXNcIl0udnVlO1xuICBpZiAoIV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9zZW12ZXJfX19kZWZhdWx0LmEuc2F0aXNmaWVzKHdpbmRvdy5WdWUudmVyc2lvbiwgdnVlRGVwKSkge1xuICAgIGNvbnNvbGUud2FybignVnVldGlmeSByZXF1aXJlcyBWdWUgdmVyc2lvbiAnICsgdnVlRGVwKTtcbiAgfVxufVxuXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LlZ1ZSkge1xuICB3aW5kb3cuVnVlLnZlcnNpb24gJiYgY2hlY2tWdWVWZXJzaW9uKCk7XG4gIHdpbmRvdy5WdWUudXNlKFZ1ZXRpZnkpO1xufVxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJkZWZhdWx0XCJdID0gKFZ1ZXRpZnkpO1xuXG4vKioqLyB9KSxcbi8qIDQ3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogNDggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuLyogV0VCUEFDSyBWQVIgSU5KRUNUSU9OICovKGZ1bmN0aW9uKHByb2Nlc3MpIHtleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBTZW1WZXI7XG5cbi8vIFRoZSBkZWJ1ZyBmdW5jdGlvbiBpcyBleGNsdWRlZCBlbnRpcmVseSBmcm9tIHRoZSBtaW5pZmllZCB2ZXJzaW9uLlxuLyogbm9taW4gKi8gdmFyIGRlYnVnO1xuLyogbm9taW4gKi8gaWYgKHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJlxuICAgIC8qIG5vbWluICovIHByb2Nlc3MuZW52ICYmXG4gICAgLyogbm9taW4gKi8gcHJvY2Vzcy5lbnYuTk9ERV9ERUJVRyAmJlxuICAgIC8qIG5vbWluICovIC9cXGJzZW12ZXJcXGIvaS50ZXN0KHByb2Nlc3MuZW52Lk5PREVfREVCVUcpKVxuICAvKiBub21pbiAqLyBkZWJ1ZyA9IGZ1bmN0aW9uKCkge1xuICAgIC8qIG5vbWluICovIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKTtcbiAgICAvKiBub21pbiAqLyBhcmdzLnVuc2hpZnQoJ1NFTVZFUicpO1xuICAgIC8qIG5vbWluICovIGNvbnNvbGUubG9nLmFwcGx5KGNvbnNvbGUsIGFyZ3MpO1xuICAgIC8qIG5vbWluICovIH07XG4vKiBub21pbiAqLyBlbHNlXG4gIC8qIG5vbWluICovIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcblxuLy8gTm90ZTogdGhpcyBpcyB0aGUgc2VtdmVyLm9yZyB2ZXJzaW9uIG9mIHRoZSBzcGVjIHRoYXQgaXQgaW1wbGVtZW50c1xuLy8gTm90IG5lY2Vzc2FyaWx5IHRoZSBwYWNrYWdlIHZlcnNpb24gb2YgdGhpcyBjb2RlLlxuZXhwb3J0cy5TRU1WRVJfU1BFQ19WRVJTSU9OID0gJzIuMC4wJztcblxudmFyIE1BWF9MRU5HVEggPSAyNTY7XG52YXIgTUFYX1NBRkVfSU5URUdFUiA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSIHx8IDkwMDcxOTkyNTQ3NDA5OTE7XG5cbi8vIFRoZSBhY3R1YWwgcmVnZXhwcyBnbyBvbiBleHBvcnRzLnJlXG52YXIgcmUgPSBleHBvcnRzLnJlID0gW107XG52YXIgc3JjID0gZXhwb3J0cy5zcmMgPSBbXTtcbnZhciBSID0gMDtcblxuLy8gVGhlIGZvbGxvd2luZyBSZWd1bGFyIEV4cHJlc3Npb25zIGNhbiBiZSB1c2VkIGZvciB0b2tlbml6aW5nLFxuLy8gdmFsaWRhdGluZywgYW5kIHBhcnNpbmcgU2VtVmVyIHZlcnNpb24gc3RyaW5ncy5cblxuLy8gIyMgTnVtZXJpYyBJZGVudGlmaWVyXG4vLyBBIHNpbmdsZSBgMGAsIG9yIGEgbm9uLXplcm8gZGlnaXQgZm9sbG93ZWQgYnkgemVybyBvciBtb3JlIGRpZ2l0cy5cblxudmFyIE5VTUVSSUNJREVOVElGSUVSID0gUisrO1xuc3JjW05VTUVSSUNJREVOVElGSUVSXSA9ICcwfFsxLTldXFxcXGQqJztcbnZhciBOVU1FUklDSURFTlRJRklFUkxPT1NFID0gUisrO1xuc3JjW05VTUVSSUNJREVOVElGSUVSTE9PU0VdID0gJ1swLTldKyc7XG5cblxuLy8gIyMgTm9uLW51bWVyaWMgSWRlbnRpZmllclxuLy8gWmVybyBvciBtb3JlIGRpZ2l0cywgZm9sbG93ZWQgYnkgYSBsZXR0ZXIgb3IgaHlwaGVuLCBhbmQgdGhlbiB6ZXJvIG9yXG4vLyBtb3JlIGxldHRlcnMsIGRpZ2l0cywgb3IgaHlwaGVucy5cblxudmFyIE5PTk5VTUVSSUNJREVOVElGSUVSID0gUisrO1xuc3JjW05PTk5VTUVSSUNJREVOVElGSUVSXSA9ICdcXFxcZCpbYS16QS1aLV1bYS16QS1aMC05LV0qJztcblxuXG4vLyAjIyBNYWluIFZlcnNpb25cbi8vIFRocmVlIGRvdC1zZXBhcmF0ZWQgbnVtZXJpYyBpZGVudGlmaWVycy5cblxudmFyIE1BSU5WRVJTSU9OID0gUisrO1xuc3JjW01BSU5WRVJTSU9OXSA9ICcoJyArIHNyY1tOVU1FUklDSURFTlRJRklFUl0gKyAnKVxcXFwuJyArXG4gICAgICAgICAgICAgICAgICAgJygnICsgc3JjW05VTUVSSUNJREVOVElGSUVSXSArICcpXFxcXC4nICtcbiAgICAgICAgICAgICAgICAgICAnKCcgKyBzcmNbTlVNRVJJQ0lERU5USUZJRVJdICsgJyknO1xuXG52YXIgTUFJTlZFUlNJT05MT09TRSA9IFIrKztcbnNyY1tNQUlOVkVSU0lPTkxPT1NFXSA9ICcoJyArIHNyY1tOVU1FUklDSURFTlRJRklFUkxPT1NFXSArICcpXFxcXC4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICcoJyArIHNyY1tOVU1FUklDSURFTlRJRklFUkxPT1NFXSArICcpXFxcXC4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICcoJyArIHNyY1tOVU1FUklDSURFTlRJRklFUkxPT1NFXSArICcpJztcblxuLy8gIyMgUHJlLXJlbGVhc2UgVmVyc2lvbiBJZGVudGlmaWVyXG4vLyBBIG51bWVyaWMgaWRlbnRpZmllciwgb3IgYSBub24tbnVtZXJpYyBpZGVudGlmaWVyLlxuXG52YXIgUFJFUkVMRUFTRUlERU5USUZJRVIgPSBSKys7XG5zcmNbUFJFUkVMRUFTRUlERU5USUZJRVJdID0gJyg/OicgKyBzcmNbTlVNRVJJQ0lERU5USUZJRVJdICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnfCcgKyBzcmNbTk9OTlVNRVJJQ0lERU5USUZJRVJdICsgJyknO1xuXG52YXIgUFJFUkVMRUFTRUlERU5USUZJRVJMT09TRSA9IFIrKztcbnNyY1tQUkVSRUxFQVNFSURFTlRJRklFUkxPT1NFXSA9ICcoPzonICsgc3JjW05VTUVSSUNJREVOVElGSUVSTE9PU0VdICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd8JyArIHNyY1tOT05OVU1FUklDSURFTlRJRklFUl0gKyAnKSc7XG5cblxuLy8gIyMgUHJlLXJlbGVhc2UgVmVyc2lvblxuLy8gSHlwaGVuLCBmb2xsb3dlZCBieSBvbmUgb3IgbW9yZSBkb3Qtc2VwYXJhdGVkIHByZS1yZWxlYXNlIHZlcnNpb25cbi8vIGlkZW50aWZpZXJzLlxuXG52YXIgUFJFUkVMRUFTRSA9IFIrKztcbnNyY1tQUkVSRUxFQVNFXSA9ICcoPzotKCcgKyBzcmNbUFJFUkVMRUFTRUlERU5USUZJRVJdICtcbiAgICAgICAgICAgICAgICAgICcoPzpcXFxcLicgKyBzcmNbUFJFUkVMRUFTRUlERU5USUZJRVJdICsgJykqKSknO1xuXG52YXIgUFJFUkVMRUFTRUxPT1NFID0gUisrO1xuc3JjW1BSRVJFTEVBU0VMT09TRV0gPSAnKD86LT8oJyArIHNyY1tQUkVSRUxFQVNFSURFTlRJRklFUkxPT1NFXSArXG4gICAgICAgICAgICAgICAgICAgICAgICcoPzpcXFxcLicgKyBzcmNbUFJFUkVMRUFTRUlERU5USUZJRVJMT09TRV0gKyAnKSopKSc7XG5cbi8vICMjIEJ1aWxkIE1ldGFkYXRhIElkZW50aWZpZXJcbi8vIEFueSBjb21iaW5hdGlvbiBvZiBkaWdpdHMsIGxldHRlcnMsIG9yIGh5cGhlbnMuXG5cbnZhciBCVUlMRElERU5USUZJRVIgPSBSKys7XG5zcmNbQlVJTERJREVOVElGSUVSXSA9ICdbMC05QS1aYS16LV0rJztcblxuLy8gIyMgQnVpbGQgTWV0YWRhdGFcbi8vIFBsdXMgc2lnbiwgZm9sbG93ZWQgYnkgb25lIG9yIG1vcmUgcGVyaW9kLXNlcGFyYXRlZCBidWlsZCBtZXRhZGF0YVxuLy8gaWRlbnRpZmllcnMuXG5cbnZhciBCVUlMRCA9IFIrKztcbnNyY1tCVUlMRF0gPSAnKD86XFxcXCsoJyArIHNyY1tCVUlMRElERU5USUZJRVJdICtcbiAgICAgICAgICAgICAnKD86XFxcXC4nICsgc3JjW0JVSUxESURFTlRJRklFUl0gKyAnKSopKSc7XG5cblxuLy8gIyMgRnVsbCBWZXJzaW9uIFN0cmluZ1xuLy8gQSBtYWluIHZlcnNpb24sIGZvbGxvd2VkIG9wdGlvbmFsbHkgYnkgYSBwcmUtcmVsZWFzZSB2ZXJzaW9uIGFuZFxuLy8gYnVpbGQgbWV0YWRhdGEuXG5cbi8vIE5vdGUgdGhhdCB0aGUgb25seSBtYWpvciwgbWlub3IsIHBhdGNoLCBhbmQgcHJlLXJlbGVhc2Ugc2VjdGlvbnMgb2Zcbi8vIHRoZSB2ZXJzaW9uIHN0cmluZyBhcmUgY2FwdHVyaW5nIGdyb3Vwcy4gIFRoZSBidWlsZCBtZXRhZGF0YSBpcyBub3QgYVxuLy8gY2FwdHVyaW5nIGdyb3VwLCBiZWNhdXNlIGl0IHNob3VsZCBub3QgZXZlciBiZSB1c2VkIGluIHZlcnNpb25cbi8vIGNvbXBhcmlzb24uXG5cbnZhciBGVUxMID0gUisrO1xudmFyIEZVTExQTEFJTiA9ICd2PycgKyBzcmNbTUFJTlZFUlNJT05dICtcbiAgICAgICAgICAgICAgICBzcmNbUFJFUkVMRUFTRV0gKyAnPycgK1xuICAgICAgICAgICAgICAgIHNyY1tCVUlMRF0gKyAnPyc7XG5cbnNyY1tGVUxMXSA9ICdeJyArIEZVTExQTEFJTiArICckJztcblxuLy8gbGlrZSBmdWxsLCBidXQgYWxsb3dzIHYxLjIuMyBhbmQgPTEuMi4zLCB3aGljaCBwZW9wbGUgZG8gc29tZXRpbWVzLlxuLy8gYWxzbywgMS4wLjBhbHBoYTEgKHByZXJlbGVhc2Ugd2l0aG91dCB0aGUgaHlwaGVuKSB3aGljaCBpcyBwcmV0dHlcbi8vIGNvbW1vbiBpbiB0aGUgbnBtIHJlZ2lzdHJ5LlxudmFyIExPT1NFUExBSU4gPSAnW3Y9XFxcXHNdKicgKyBzcmNbTUFJTlZFUlNJT05MT09TRV0gK1xuICAgICAgICAgICAgICAgICBzcmNbUFJFUkVMRUFTRUxPT1NFXSArICc/JyArXG4gICAgICAgICAgICAgICAgIHNyY1tCVUlMRF0gKyAnPyc7XG5cbnZhciBMT09TRSA9IFIrKztcbnNyY1tMT09TRV0gPSAnXicgKyBMT09TRVBMQUlOICsgJyQnO1xuXG52YXIgR1RMVCA9IFIrKztcbnNyY1tHVExUXSA9ICcoKD86PHw+KT89PyknO1xuXG4vLyBTb21ldGhpbmcgbGlrZSBcIjIuKlwiIG9yIFwiMS4yLnhcIi5cbi8vIE5vdGUgdGhhdCBcIngueFwiIGlzIGEgdmFsaWQgeFJhbmdlIGlkZW50aWZlciwgbWVhbmluZyBcImFueSB2ZXJzaW9uXCJcbi8vIE9ubHkgdGhlIGZpcnN0IGl0ZW0gaXMgc3RyaWN0bHkgcmVxdWlyZWQuXG52YXIgWFJBTkdFSURFTlRJRklFUkxPT1NFID0gUisrO1xuc3JjW1hSQU5HRUlERU5USUZJRVJMT09TRV0gPSBzcmNbTlVNRVJJQ0lERU5USUZJRVJMT09TRV0gKyAnfHh8WHxcXFxcKic7XG52YXIgWFJBTkdFSURFTlRJRklFUiA9IFIrKztcbnNyY1tYUkFOR0VJREVOVElGSUVSXSA9IHNyY1tOVU1FUklDSURFTlRJRklFUl0gKyAnfHh8WHxcXFxcKic7XG5cbnZhciBYUkFOR0VQTEFJTiA9IFIrKztcbnNyY1tYUkFOR0VQTEFJTl0gPSAnW3Y9XFxcXHNdKignICsgc3JjW1hSQU5HRUlERU5USUZJRVJdICsgJyknICtcbiAgICAgICAgICAgICAgICAgICAnKD86XFxcXC4oJyArIHNyY1tYUkFOR0VJREVOVElGSUVSXSArICcpJyArXG4gICAgICAgICAgICAgICAgICAgJyg/OlxcXFwuKCcgKyBzcmNbWFJBTkdFSURFTlRJRklFUl0gKyAnKScgK1xuICAgICAgICAgICAgICAgICAgICcoPzonICsgc3JjW1BSRVJFTEVBU0VdICsgJyk/JyArXG4gICAgICAgICAgICAgICAgICAgc3JjW0JVSUxEXSArICc/JyArXG4gICAgICAgICAgICAgICAgICAgJyk/KT8nO1xuXG52YXIgWFJBTkdFUExBSU5MT09TRSA9IFIrKztcbnNyY1tYUkFOR0VQTEFJTkxPT1NFXSA9ICdbdj1cXFxcc10qKCcgKyBzcmNbWFJBTkdFSURFTlRJRklFUkxPT1NFXSArICcpJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnKD86XFxcXC4oJyArIHNyY1tYUkFOR0VJREVOVElGSUVSTE9PU0VdICsgJyknICtcbiAgICAgICAgICAgICAgICAgICAgICAgICcoPzpcXFxcLignICsgc3JjW1hSQU5HRUlERU5USUZJRVJMT09TRV0gKyAnKScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJyg/OicgKyBzcmNbUFJFUkVMRUFTRUxPT1NFXSArICcpPycgK1xuICAgICAgICAgICAgICAgICAgICAgICAgc3JjW0JVSUxEXSArICc/JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnKT8pPyc7XG5cbnZhciBYUkFOR0UgPSBSKys7XG5zcmNbWFJBTkdFXSA9ICdeJyArIHNyY1tHVExUXSArICdcXFxccyonICsgc3JjW1hSQU5HRVBMQUlOXSArICckJztcbnZhciBYUkFOR0VMT09TRSA9IFIrKztcbnNyY1tYUkFOR0VMT09TRV0gPSAnXicgKyBzcmNbR1RMVF0gKyAnXFxcXHMqJyArIHNyY1tYUkFOR0VQTEFJTkxPT1NFXSArICckJztcblxuLy8gVGlsZGUgcmFuZ2VzLlxuLy8gTWVhbmluZyBpcyBcInJlYXNvbmFibHkgYXQgb3IgZ3JlYXRlciB0aGFuXCJcbnZhciBMT05FVElMREUgPSBSKys7XG5zcmNbTE9ORVRJTERFXSA9ICcoPzp+Pj8pJztcblxudmFyIFRJTERFVFJJTSA9IFIrKztcbnNyY1tUSUxERVRSSU1dID0gJyhcXFxccyopJyArIHNyY1tMT05FVElMREVdICsgJ1xcXFxzKyc7XG5yZVtUSUxERVRSSU1dID0gbmV3IFJlZ0V4cChzcmNbVElMREVUUklNXSwgJ2cnKTtcbnZhciB0aWxkZVRyaW1SZXBsYWNlID0gJyQxfic7XG5cbnZhciBUSUxERSA9IFIrKztcbnNyY1tUSUxERV0gPSAnXicgKyBzcmNbTE9ORVRJTERFXSArIHNyY1tYUkFOR0VQTEFJTl0gKyAnJCc7XG52YXIgVElMREVMT09TRSA9IFIrKztcbnNyY1tUSUxERUxPT1NFXSA9ICdeJyArIHNyY1tMT05FVElMREVdICsgc3JjW1hSQU5HRVBMQUlOTE9PU0VdICsgJyQnO1xuXG4vLyBDYXJldCByYW5nZXMuXG4vLyBNZWFuaW5nIGlzIFwiYXQgbGVhc3QgYW5kIGJhY2t3YXJkcyBjb21wYXRpYmxlIHdpdGhcIlxudmFyIExPTkVDQVJFVCA9IFIrKztcbnNyY1tMT05FQ0FSRVRdID0gJyg/OlxcXFxeKSc7XG5cbnZhciBDQVJFVFRSSU0gPSBSKys7XG5zcmNbQ0FSRVRUUklNXSA9ICcoXFxcXHMqKScgKyBzcmNbTE9ORUNBUkVUXSArICdcXFxccysnO1xucmVbQ0FSRVRUUklNXSA9IG5ldyBSZWdFeHAoc3JjW0NBUkVUVFJJTV0sICdnJyk7XG52YXIgY2FyZXRUcmltUmVwbGFjZSA9ICckMV4nO1xuXG52YXIgQ0FSRVQgPSBSKys7XG5zcmNbQ0FSRVRdID0gJ14nICsgc3JjW0xPTkVDQVJFVF0gKyBzcmNbWFJBTkdFUExBSU5dICsgJyQnO1xudmFyIENBUkVUTE9PU0UgPSBSKys7XG5zcmNbQ0FSRVRMT09TRV0gPSAnXicgKyBzcmNbTE9ORUNBUkVUXSArIHNyY1tYUkFOR0VQTEFJTkxPT1NFXSArICckJztcblxuLy8gQSBzaW1wbGUgZ3QvbHQvZXEgdGhpbmcsIG9yIGp1c3QgXCJcIiB0byBpbmRpY2F0ZSBcImFueSB2ZXJzaW9uXCJcbnZhciBDT01QQVJBVE9STE9PU0UgPSBSKys7XG5zcmNbQ09NUEFSQVRPUkxPT1NFXSA9ICdeJyArIHNyY1tHVExUXSArICdcXFxccyooJyArIExPT1NFUExBSU4gKyAnKSR8XiQnO1xudmFyIENPTVBBUkFUT1IgPSBSKys7XG5zcmNbQ09NUEFSQVRPUl0gPSAnXicgKyBzcmNbR1RMVF0gKyAnXFxcXHMqKCcgKyBGVUxMUExBSU4gKyAnKSR8XiQnO1xuXG5cbi8vIEFuIGV4cHJlc3Npb24gdG8gc3RyaXAgYW55IHdoaXRlc3BhY2UgYmV0d2VlbiB0aGUgZ3RsdCBhbmQgdGhlIHRoaW5nXG4vLyBpdCBtb2RpZmllcywgc28gdGhhdCBgPiAxLjIuM2AgPT0+IGA+MS4yLjNgXG52YXIgQ09NUEFSQVRPUlRSSU0gPSBSKys7XG5zcmNbQ09NUEFSQVRPUlRSSU1dID0gJyhcXFxccyopJyArIHNyY1tHVExUXSArXG4gICAgICAgICAgICAgICAgICAgICAgJ1xcXFxzKignICsgTE9PU0VQTEFJTiArICd8JyArIHNyY1tYUkFOR0VQTEFJTl0gKyAnKSc7XG5cbi8vIHRoaXMgb25lIGhhcyB0byB1c2UgdGhlIC9nIGZsYWdcbnJlW0NPTVBBUkFUT1JUUklNXSA9IG5ldyBSZWdFeHAoc3JjW0NPTVBBUkFUT1JUUklNXSwgJ2cnKTtcbnZhciBjb21wYXJhdG9yVHJpbVJlcGxhY2UgPSAnJDEkMiQzJztcblxuXG4vLyBTb21ldGhpbmcgbGlrZSBgMS4yLjMgLSAxLjIuNGBcbi8vIE5vdGUgdGhhdCB0aGVzZSBhbGwgdXNlIHRoZSBsb29zZSBmb3JtLCBiZWNhdXNlIHRoZXknbGwgYmVcbi8vIGNoZWNrZWQgYWdhaW5zdCBlaXRoZXIgdGhlIHN0cmljdCBvciBsb29zZSBjb21wYXJhdG9yIGZvcm1cbi8vIGxhdGVyLlxudmFyIEhZUEhFTlJBTkdFID0gUisrO1xuc3JjW0hZUEhFTlJBTkdFXSA9ICdeXFxcXHMqKCcgKyBzcmNbWFJBTkdFUExBSU5dICsgJyknICtcbiAgICAgICAgICAgICAgICAgICAnXFxcXHMrLVxcXFxzKycgK1xuICAgICAgICAgICAgICAgICAgICcoJyArIHNyY1tYUkFOR0VQTEFJTl0gKyAnKScgK1xuICAgICAgICAgICAgICAgICAgICdcXFxccyokJztcblxudmFyIEhZUEhFTlJBTkdFTE9PU0UgPSBSKys7XG5zcmNbSFlQSEVOUkFOR0VMT09TRV0gPSAnXlxcXFxzKignICsgc3JjW1hSQU5HRVBMQUlOTE9PU0VdICsgJyknICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdcXFxccystXFxcXHMrJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnKCcgKyBzcmNbWFJBTkdFUExBSU5MT09TRV0gKyAnKScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ1xcXFxzKiQnO1xuXG4vLyBTdGFyIHJhbmdlcyBiYXNpY2FsbHkganVzdCBhbGxvdyBhbnl0aGluZyBhdCBhbGwuXG52YXIgU1RBUiA9IFIrKztcbnNyY1tTVEFSXSA9ICcoPHw+KT89P1xcXFxzKlxcXFwqJztcblxuLy8gQ29tcGlsZSB0byBhY3R1YWwgcmVnZXhwIG9iamVjdHMuXG4vLyBBbGwgYXJlIGZsYWctZnJlZSwgdW5sZXNzIHRoZXkgd2VyZSBjcmVhdGVkIGFib3ZlIHdpdGggYSBmbGFnLlxuZm9yICh2YXIgaSA9IDA7IGkgPCBSOyBpKyspIHtcbiAgZGVidWcoaSwgc3JjW2ldKTtcbiAgaWYgKCFyZVtpXSlcbiAgICByZVtpXSA9IG5ldyBSZWdFeHAoc3JjW2ldKTtcbn1cblxuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZnVuY3Rpb24gcGFyc2UodmVyc2lvbiwgbG9vc2UpIHtcbiAgaWYgKHZlcnNpb24gaW5zdGFuY2VvZiBTZW1WZXIpXG4gICAgcmV0dXJuIHZlcnNpb247XG5cbiAgaWYgKHR5cGVvZiB2ZXJzaW9uICE9PSAnc3RyaW5nJylcbiAgICByZXR1cm4gbnVsbDtcblxuICBpZiAodmVyc2lvbi5sZW5ndGggPiBNQVhfTEVOR1RIKVxuICAgIHJldHVybiBudWxsO1xuXG4gIHZhciByID0gbG9vc2UgPyByZVtMT09TRV0gOiByZVtGVUxMXTtcbiAgaWYgKCFyLnRlc3QodmVyc2lvbikpXG4gICAgcmV0dXJuIG51bGw7XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gbmV3IFNlbVZlcih2ZXJzaW9uLCBsb29zZSk7XG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0cy52YWxpZCA9IHZhbGlkO1xuZnVuY3Rpb24gdmFsaWQodmVyc2lvbiwgbG9vc2UpIHtcbiAgdmFyIHYgPSBwYXJzZSh2ZXJzaW9uLCBsb29zZSk7XG4gIHJldHVybiB2ID8gdi52ZXJzaW9uIDogbnVsbDtcbn1cblxuXG5leHBvcnRzLmNsZWFuID0gY2xlYW47XG5mdW5jdGlvbiBjbGVhbih2ZXJzaW9uLCBsb29zZSkge1xuICB2YXIgcyA9IHBhcnNlKHZlcnNpb24udHJpbSgpLnJlcGxhY2UoL15bPXZdKy8sICcnKSwgbG9vc2UpO1xuICByZXR1cm4gcyA/IHMudmVyc2lvbiA6IG51bGw7XG59XG5cbmV4cG9ydHMuU2VtVmVyID0gU2VtVmVyO1xuXG5mdW5jdGlvbiBTZW1WZXIodmVyc2lvbiwgbG9vc2UpIHtcbiAgaWYgKHZlcnNpb24gaW5zdGFuY2VvZiBTZW1WZXIpIHtcbiAgICBpZiAodmVyc2lvbi5sb29zZSA9PT0gbG9vc2UpXG4gICAgICByZXR1cm4gdmVyc2lvbjtcbiAgICBlbHNlXG4gICAgICB2ZXJzaW9uID0gdmVyc2lvbi52ZXJzaW9uO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB2ZXJzaW9uICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgVmVyc2lvbjogJyArIHZlcnNpb24pO1xuICB9XG5cbiAgaWYgKHZlcnNpb24ubGVuZ3RoID4gTUFYX0xFTkdUSClcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCd2ZXJzaW9uIGlzIGxvbmdlciB0aGFuICcgKyBNQVhfTEVOR1RIICsgJyBjaGFyYWN0ZXJzJylcblxuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgU2VtVmVyKSlcbiAgICByZXR1cm4gbmV3IFNlbVZlcih2ZXJzaW9uLCBsb29zZSk7XG5cbiAgZGVidWcoJ1NlbVZlcicsIHZlcnNpb24sIGxvb3NlKTtcbiAgdGhpcy5sb29zZSA9IGxvb3NlO1xuICB2YXIgbSA9IHZlcnNpb24udHJpbSgpLm1hdGNoKGxvb3NlID8gcmVbTE9PU0VdIDogcmVbRlVMTF0pO1xuXG4gIGlmICghbSlcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIFZlcnNpb246ICcgKyB2ZXJzaW9uKTtcblxuICB0aGlzLnJhdyA9IHZlcnNpb247XG5cbiAgLy8gdGhlc2UgYXJlIGFjdHVhbGx5IG51bWJlcnNcbiAgdGhpcy5tYWpvciA9ICttWzFdO1xuICB0aGlzLm1pbm9yID0gK21bMl07XG4gIHRoaXMucGF0Y2ggPSArbVszXTtcblxuICBpZiAodGhpcy5tYWpvciA+IE1BWF9TQUZFX0lOVEVHRVIgfHwgdGhpcy5tYWpvciA8IDApXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBtYWpvciB2ZXJzaW9uJylcblxuICBpZiAodGhpcy5taW5vciA+IE1BWF9TQUZFX0lOVEVHRVIgfHwgdGhpcy5taW5vciA8IDApXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBtaW5vciB2ZXJzaW9uJylcblxuICBpZiAodGhpcy5wYXRjaCA+IE1BWF9TQUZFX0lOVEVHRVIgfHwgdGhpcy5wYXRjaCA8IDApXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBwYXRjaCB2ZXJzaW9uJylcblxuICAvLyBudW1iZXJpZnkgYW55IHByZXJlbGVhc2UgbnVtZXJpYyBpZHNcbiAgaWYgKCFtWzRdKVxuICAgIHRoaXMucHJlcmVsZWFzZSA9IFtdO1xuICBlbHNlXG4gICAgdGhpcy5wcmVyZWxlYXNlID0gbVs0XS5zcGxpdCgnLicpLm1hcChmdW5jdGlvbihpZCkge1xuICAgICAgaWYgKC9eWzAtOV0rJC8udGVzdChpZCkpIHtcbiAgICAgICAgdmFyIG51bSA9ICtpZDtcbiAgICAgICAgaWYgKG51bSA+PSAwICYmIG51bSA8IE1BWF9TQUZFX0lOVEVHRVIpXG4gICAgICAgICAgcmV0dXJuIG51bTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBpZDtcbiAgICB9KTtcblxuICB0aGlzLmJ1aWxkID0gbVs1XSA/IG1bNV0uc3BsaXQoJy4nKSA6IFtdO1xuICB0aGlzLmZvcm1hdCgpO1xufVxuXG5TZW1WZXIucHJvdG90eXBlLmZvcm1hdCA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnZlcnNpb24gPSB0aGlzLm1ham9yICsgJy4nICsgdGhpcy5taW5vciArICcuJyArIHRoaXMucGF0Y2g7XG4gIGlmICh0aGlzLnByZXJlbGVhc2UubGVuZ3RoKVxuICAgIHRoaXMudmVyc2lvbiArPSAnLScgKyB0aGlzLnByZXJlbGVhc2Uuam9pbignLicpO1xuICByZXR1cm4gdGhpcy52ZXJzaW9uO1xufTtcblxuU2VtVmVyLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy52ZXJzaW9uO1xufTtcblxuU2VtVmVyLnByb3RvdHlwZS5jb21wYXJlID0gZnVuY3Rpb24ob3RoZXIpIHtcbiAgZGVidWcoJ1NlbVZlci5jb21wYXJlJywgdGhpcy52ZXJzaW9uLCB0aGlzLmxvb3NlLCBvdGhlcik7XG4gIGlmICghKG90aGVyIGluc3RhbmNlb2YgU2VtVmVyKSlcbiAgICBvdGhlciA9IG5ldyBTZW1WZXIob3RoZXIsIHRoaXMubG9vc2UpO1xuXG4gIHJldHVybiB0aGlzLmNvbXBhcmVNYWluKG90aGVyKSB8fCB0aGlzLmNvbXBhcmVQcmUob3RoZXIpO1xufTtcblxuU2VtVmVyLnByb3RvdHlwZS5jb21wYXJlTWFpbiA9IGZ1bmN0aW9uKG90aGVyKSB7XG4gIGlmICghKG90aGVyIGluc3RhbmNlb2YgU2VtVmVyKSlcbiAgICBvdGhlciA9IG5ldyBTZW1WZXIob3RoZXIsIHRoaXMubG9vc2UpO1xuXG4gIHJldHVybiBjb21wYXJlSWRlbnRpZmllcnModGhpcy5tYWpvciwgb3RoZXIubWFqb3IpIHx8XG4gICAgICAgICBjb21wYXJlSWRlbnRpZmllcnModGhpcy5taW5vciwgb3RoZXIubWlub3IpIHx8XG4gICAgICAgICBjb21wYXJlSWRlbnRpZmllcnModGhpcy5wYXRjaCwgb3RoZXIucGF0Y2gpO1xufTtcblxuU2VtVmVyLnByb3RvdHlwZS5jb21wYXJlUHJlID0gZnVuY3Rpb24ob3RoZXIpIHtcbiAgaWYgKCEob3RoZXIgaW5zdGFuY2VvZiBTZW1WZXIpKVxuICAgIG90aGVyID0gbmV3IFNlbVZlcihvdGhlciwgdGhpcy5sb29zZSk7XG5cbiAgLy8gTk9UIGhhdmluZyBhIHByZXJlbGVhc2UgaXMgPiBoYXZpbmcgb25lXG4gIGlmICh0aGlzLnByZXJlbGVhc2UubGVuZ3RoICYmICFvdGhlci5wcmVyZWxlYXNlLmxlbmd0aClcbiAgICByZXR1cm4gLTE7XG4gIGVsc2UgaWYgKCF0aGlzLnByZXJlbGVhc2UubGVuZ3RoICYmIG90aGVyLnByZXJlbGVhc2UubGVuZ3RoKVxuICAgIHJldHVybiAxO1xuICBlbHNlIGlmICghdGhpcy5wcmVyZWxlYXNlLmxlbmd0aCAmJiAhb3RoZXIucHJlcmVsZWFzZS5sZW5ndGgpXG4gICAgcmV0dXJuIDA7XG5cbiAgdmFyIGkgPSAwO1xuICBkbyB7XG4gICAgdmFyIGEgPSB0aGlzLnByZXJlbGVhc2VbaV07XG4gICAgdmFyIGIgPSBvdGhlci5wcmVyZWxlYXNlW2ldO1xuICAgIGRlYnVnKCdwcmVyZWxlYXNlIGNvbXBhcmUnLCBpLCBhLCBiKTtcbiAgICBpZiAoYSA9PT0gdW5kZWZpbmVkICYmIGIgPT09IHVuZGVmaW5lZClcbiAgICAgIHJldHVybiAwO1xuICAgIGVsc2UgaWYgKGIgPT09IHVuZGVmaW5lZClcbiAgICAgIHJldHVybiAxO1xuICAgIGVsc2UgaWYgKGEgPT09IHVuZGVmaW5lZClcbiAgICAgIHJldHVybiAtMTtcbiAgICBlbHNlIGlmIChhID09PSBiKVxuICAgICAgY29udGludWU7XG4gICAgZWxzZVxuICAgICAgcmV0dXJuIGNvbXBhcmVJZGVudGlmaWVycyhhLCBiKTtcbiAgfSB3aGlsZSAoKytpKTtcbn07XG5cbi8vIHByZW1pbm9yIHdpbGwgYnVtcCB0aGUgdmVyc2lvbiB1cCB0byB0aGUgbmV4dCBtaW5vciByZWxlYXNlLCBhbmQgaW1tZWRpYXRlbHlcbi8vIGRvd24gdG8gcHJlLXJlbGVhc2UuIHByZW1ham9yIGFuZCBwcmVwYXRjaCB3b3JrIHRoZSBzYW1lIHdheS5cblNlbVZlci5wcm90b3R5cGUuaW5jID0gZnVuY3Rpb24ocmVsZWFzZSwgaWRlbnRpZmllcikge1xuICBzd2l0Y2ggKHJlbGVhc2UpIHtcbiAgICBjYXNlICdwcmVtYWpvcic6XG4gICAgICB0aGlzLnByZXJlbGVhc2UubGVuZ3RoID0gMDtcbiAgICAgIHRoaXMucGF0Y2ggPSAwO1xuICAgICAgdGhpcy5taW5vciA9IDA7XG4gICAgICB0aGlzLm1ham9yKys7XG4gICAgICB0aGlzLmluYygncHJlJywgaWRlbnRpZmllcik7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdwcmVtaW5vcic6XG4gICAgICB0aGlzLnByZXJlbGVhc2UubGVuZ3RoID0gMDtcbiAgICAgIHRoaXMucGF0Y2ggPSAwO1xuICAgICAgdGhpcy5taW5vcisrO1xuICAgICAgdGhpcy5pbmMoJ3ByZScsIGlkZW50aWZpZXIpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncHJlcGF0Y2gnOlxuICAgICAgLy8gSWYgdGhpcyBpcyBhbHJlYWR5IGEgcHJlcmVsZWFzZSwgaXQgd2lsbCBidW1wIHRvIHRoZSBuZXh0IHZlcnNpb25cbiAgICAgIC8vIGRyb3AgYW55IHByZXJlbGVhc2VzIHRoYXQgbWlnaHQgYWxyZWFkeSBleGlzdCwgc2luY2UgdGhleSBhcmUgbm90XG4gICAgICAvLyByZWxldmFudCBhdCB0aGlzIHBvaW50LlxuICAgICAgdGhpcy5wcmVyZWxlYXNlLmxlbmd0aCA9IDA7XG4gICAgICB0aGlzLmluYygncGF0Y2gnLCBpZGVudGlmaWVyKTtcbiAgICAgIHRoaXMuaW5jKCdwcmUnLCBpZGVudGlmaWVyKTtcbiAgICAgIGJyZWFrO1xuICAgIC8vIElmIHRoZSBpbnB1dCBpcyBhIG5vbi1wcmVyZWxlYXNlIHZlcnNpb24sIHRoaXMgYWN0cyB0aGUgc2FtZSBhc1xuICAgIC8vIHByZXBhdGNoLlxuICAgIGNhc2UgJ3ByZXJlbGVhc2UnOlxuICAgICAgaWYgKHRoaXMucHJlcmVsZWFzZS5sZW5ndGggPT09IDApXG4gICAgICAgIHRoaXMuaW5jKCdwYXRjaCcsIGlkZW50aWZpZXIpO1xuICAgICAgdGhpcy5pbmMoJ3ByZScsIGlkZW50aWZpZXIpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdtYWpvcic6XG4gICAgICAvLyBJZiB0aGlzIGlzIGEgcHJlLW1ham9yIHZlcnNpb24sIGJ1bXAgdXAgdG8gdGhlIHNhbWUgbWFqb3IgdmVyc2lvbi5cbiAgICAgIC8vIE90aGVyd2lzZSBpbmNyZW1lbnQgbWFqb3IuXG4gICAgICAvLyAxLjAuMC01IGJ1bXBzIHRvIDEuMC4wXG4gICAgICAvLyAxLjEuMCBidW1wcyB0byAyLjAuMFxuICAgICAgaWYgKHRoaXMubWlub3IgIT09IDAgfHwgdGhpcy5wYXRjaCAhPT0gMCB8fCB0aGlzLnByZXJlbGVhc2UubGVuZ3RoID09PSAwKVxuICAgICAgICB0aGlzLm1ham9yKys7XG4gICAgICB0aGlzLm1pbm9yID0gMDtcbiAgICAgIHRoaXMucGF0Y2ggPSAwO1xuICAgICAgdGhpcy5wcmVyZWxlYXNlID0gW107XG4gICAgICBicmVhaztcbiAgICBjYXNlICdtaW5vcic6XG4gICAgICAvLyBJZiB0aGlzIGlzIGEgcHJlLW1pbm9yIHZlcnNpb24sIGJ1bXAgdXAgdG8gdGhlIHNhbWUgbWlub3IgdmVyc2lvbi5cbiAgICAgIC8vIE90aGVyd2lzZSBpbmNyZW1lbnQgbWlub3IuXG4gICAgICAvLyAxLjIuMC01IGJ1bXBzIHRvIDEuMi4wXG4gICAgICAvLyAxLjIuMSBidW1wcyB0byAxLjMuMFxuICAgICAgaWYgKHRoaXMucGF0Y2ggIT09IDAgfHwgdGhpcy5wcmVyZWxlYXNlLmxlbmd0aCA9PT0gMClcbiAgICAgICAgdGhpcy5taW5vcisrO1xuICAgICAgdGhpcy5wYXRjaCA9IDA7XG4gICAgICB0aGlzLnByZXJlbGVhc2UgPSBbXTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3BhdGNoJzpcbiAgICAgIC8vIElmIHRoaXMgaXMgbm90IGEgcHJlLXJlbGVhc2UgdmVyc2lvbiwgaXQgd2lsbCBpbmNyZW1lbnQgdGhlIHBhdGNoLlxuICAgICAgLy8gSWYgaXQgaXMgYSBwcmUtcmVsZWFzZSBpdCB3aWxsIGJ1bXAgdXAgdG8gdGhlIHNhbWUgcGF0Y2ggdmVyc2lvbi5cbiAgICAgIC8vIDEuMi4wLTUgcGF0Y2hlcyB0byAxLjIuMFxuICAgICAgLy8gMS4yLjAgcGF0Y2hlcyB0byAxLjIuMVxuICAgICAgaWYgKHRoaXMucHJlcmVsZWFzZS5sZW5ndGggPT09IDApXG4gICAgICAgIHRoaXMucGF0Y2grKztcbiAgICAgIHRoaXMucHJlcmVsZWFzZSA9IFtdO1xuICAgICAgYnJlYWs7XG4gICAgLy8gVGhpcyBwcm9iYWJseSBzaG91bGRuJ3QgYmUgdXNlZCBwdWJsaWNseS5cbiAgICAvLyAxLjAuMCBcInByZVwiIHdvdWxkIGJlY29tZSAxLjAuMC0wIHdoaWNoIGlzIHRoZSB3cm9uZyBkaXJlY3Rpb24uXG4gICAgY2FzZSAncHJlJzpcbiAgICAgIGlmICh0aGlzLnByZXJlbGVhc2UubGVuZ3RoID09PSAwKVxuICAgICAgICB0aGlzLnByZXJlbGVhc2UgPSBbMF07XG4gICAgICBlbHNlIHtcbiAgICAgICAgdmFyIGkgPSB0aGlzLnByZXJlbGVhc2UubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoLS1pID49IDApIHtcbiAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucHJlcmVsZWFzZVtpXSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHRoaXMucHJlcmVsZWFzZVtpXSsrO1xuICAgICAgICAgICAgaSA9IC0yO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaSA9PT0gLTEpIC8vIGRpZG4ndCBpbmNyZW1lbnQgYW55dGhpbmdcbiAgICAgICAgICB0aGlzLnByZXJlbGVhc2UucHVzaCgwKTtcbiAgICAgIH1cbiAgICAgIGlmIChpZGVudGlmaWVyKSB7XG4gICAgICAgIC8vIDEuMi4wLWJldGEuMSBidW1wcyB0byAxLjIuMC1iZXRhLjIsXG4gICAgICAgIC8vIDEuMi4wLWJldGEuZm9vYmx6IG9yIDEuMi4wLWJldGEgYnVtcHMgdG8gMS4yLjAtYmV0YS4wXG4gICAgICAgIGlmICh0aGlzLnByZXJlbGVhc2VbMF0gPT09IGlkZW50aWZpZXIpIHtcbiAgICAgICAgICBpZiAoaXNOYU4odGhpcy5wcmVyZWxlYXNlWzFdKSlcbiAgICAgICAgICAgIHRoaXMucHJlcmVsZWFzZSA9IFtpZGVudGlmaWVyLCAwXTtcbiAgICAgICAgfSBlbHNlXG4gICAgICAgICAgdGhpcy5wcmVyZWxlYXNlID0gW2lkZW50aWZpZXIsIDBdO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGluY3JlbWVudCBhcmd1bWVudDogJyArIHJlbGVhc2UpO1xuICB9XG4gIHRoaXMuZm9ybWF0KCk7XG4gIHRoaXMucmF3ID0gdGhpcy52ZXJzaW9uO1xuICByZXR1cm4gdGhpcztcbn07XG5cbmV4cG9ydHMuaW5jID0gaW5jO1xuZnVuY3Rpb24gaW5jKHZlcnNpb24sIHJlbGVhc2UsIGxvb3NlLCBpZGVudGlmaWVyKSB7XG4gIGlmICh0eXBlb2YobG9vc2UpID09PSAnc3RyaW5nJykge1xuICAgIGlkZW50aWZpZXIgPSBsb29zZTtcbiAgICBsb29zZSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHRyeSB7XG4gICAgcmV0dXJuIG5ldyBTZW1WZXIodmVyc2lvbiwgbG9vc2UpLmluYyhyZWxlYXNlLCBpZGVudGlmaWVyKS52ZXJzaW9uO1xuICB9IGNhdGNoIChlcikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmV4cG9ydHMuZGlmZiA9IGRpZmY7XG5mdW5jdGlvbiBkaWZmKHZlcnNpb24xLCB2ZXJzaW9uMikge1xuICBpZiAoZXEodmVyc2lvbjEsIHZlcnNpb24yKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9IGVsc2Uge1xuICAgIHZhciB2MSA9IHBhcnNlKHZlcnNpb24xKTtcbiAgICB2YXIgdjIgPSBwYXJzZSh2ZXJzaW9uMik7XG4gICAgaWYgKHYxLnByZXJlbGVhc2UubGVuZ3RoIHx8IHYyLnByZXJlbGVhc2UubGVuZ3RoKSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gdjEpIHtcbiAgICAgICAgaWYgKGtleSA9PT0gJ21ham9yJyB8fCBrZXkgPT09ICdtaW5vcicgfHwga2V5ID09PSAncGF0Y2gnKSB7XG4gICAgICAgICAgaWYgKHYxW2tleV0gIT09IHYyW2tleV0pIHtcbiAgICAgICAgICAgIHJldHVybiAncHJlJytrZXk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gJ3ByZXJlbGVhc2UnO1xuICAgIH1cbiAgICBmb3IgKHZhciBrZXkgaW4gdjEpIHtcbiAgICAgIGlmIChrZXkgPT09ICdtYWpvcicgfHwga2V5ID09PSAnbWlub3InIHx8IGtleSA9PT0gJ3BhdGNoJykge1xuICAgICAgICBpZiAodjFba2V5XSAhPT0gdjJba2V5XSkge1xuICAgICAgICAgIHJldHVybiBrZXk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0cy5jb21wYXJlSWRlbnRpZmllcnMgPSBjb21wYXJlSWRlbnRpZmllcnM7XG5cbnZhciBudW1lcmljID0gL15bMC05XSskLztcbmZ1bmN0aW9uIGNvbXBhcmVJZGVudGlmaWVycyhhLCBiKSB7XG4gIHZhciBhbnVtID0gbnVtZXJpYy50ZXN0KGEpO1xuICB2YXIgYm51bSA9IG51bWVyaWMudGVzdChiKTtcblxuICBpZiAoYW51bSAmJiBibnVtKSB7XG4gICAgYSA9ICthO1xuICAgIGIgPSArYjtcbiAgfVxuXG4gIHJldHVybiAoYW51bSAmJiAhYm51bSkgPyAtMSA6XG4gICAgICAgICAoYm51bSAmJiAhYW51bSkgPyAxIDpcbiAgICAgICAgIGEgPCBiID8gLTEgOlxuICAgICAgICAgYSA+IGIgPyAxIDpcbiAgICAgICAgIDA7XG59XG5cbmV4cG9ydHMucmNvbXBhcmVJZGVudGlmaWVycyA9IHJjb21wYXJlSWRlbnRpZmllcnM7XG5mdW5jdGlvbiByY29tcGFyZUlkZW50aWZpZXJzKGEsIGIpIHtcbiAgcmV0dXJuIGNvbXBhcmVJZGVudGlmaWVycyhiLCBhKTtcbn1cblxuZXhwb3J0cy5tYWpvciA9IG1ham9yO1xuZnVuY3Rpb24gbWFqb3IoYSwgbG9vc2UpIHtcbiAgcmV0dXJuIG5ldyBTZW1WZXIoYSwgbG9vc2UpLm1ham9yO1xufVxuXG5leHBvcnRzLm1pbm9yID0gbWlub3I7XG5mdW5jdGlvbiBtaW5vcihhLCBsb29zZSkge1xuICByZXR1cm4gbmV3IFNlbVZlcihhLCBsb29zZSkubWlub3I7XG59XG5cbmV4cG9ydHMucGF0Y2ggPSBwYXRjaDtcbmZ1bmN0aW9uIHBhdGNoKGEsIGxvb3NlKSB7XG4gIHJldHVybiBuZXcgU2VtVmVyKGEsIGxvb3NlKS5wYXRjaDtcbn1cblxuZXhwb3J0cy5jb21wYXJlID0gY29tcGFyZTtcbmZ1bmN0aW9uIGNvbXBhcmUoYSwgYiwgbG9vc2UpIHtcbiAgcmV0dXJuIG5ldyBTZW1WZXIoYSwgbG9vc2UpLmNvbXBhcmUobmV3IFNlbVZlcihiLCBsb29zZSkpO1xufVxuXG5leHBvcnRzLmNvbXBhcmVMb29zZSA9IGNvbXBhcmVMb29zZTtcbmZ1bmN0aW9uIGNvbXBhcmVMb29zZShhLCBiKSB7XG4gIHJldHVybiBjb21wYXJlKGEsIGIsIHRydWUpO1xufVxuXG5leHBvcnRzLnJjb21wYXJlID0gcmNvbXBhcmU7XG5mdW5jdGlvbiByY29tcGFyZShhLCBiLCBsb29zZSkge1xuICByZXR1cm4gY29tcGFyZShiLCBhLCBsb29zZSk7XG59XG5cbmV4cG9ydHMuc29ydCA9IHNvcnQ7XG5mdW5jdGlvbiBzb3J0KGxpc3QsIGxvb3NlKSB7XG4gIHJldHVybiBsaXN0LnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiBleHBvcnRzLmNvbXBhcmUoYSwgYiwgbG9vc2UpO1xuICB9KTtcbn1cblxuZXhwb3J0cy5yc29ydCA9IHJzb3J0O1xuZnVuY3Rpb24gcnNvcnQobGlzdCwgbG9vc2UpIHtcbiAgcmV0dXJuIGxpc3Quc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGV4cG9ydHMucmNvbXBhcmUoYSwgYiwgbG9vc2UpO1xuICB9KTtcbn1cblxuZXhwb3J0cy5ndCA9IGd0O1xuZnVuY3Rpb24gZ3QoYSwgYiwgbG9vc2UpIHtcbiAgcmV0dXJuIGNvbXBhcmUoYSwgYiwgbG9vc2UpID4gMDtcbn1cblxuZXhwb3J0cy5sdCA9IGx0O1xuZnVuY3Rpb24gbHQoYSwgYiwgbG9vc2UpIHtcbiAgcmV0dXJuIGNvbXBhcmUoYSwgYiwgbG9vc2UpIDwgMDtcbn1cblxuZXhwb3J0cy5lcSA9IGVxO1xuZnVuY3Rpb24gZXEoYSwgYiwgbG9vc2UpIHtcbiAgcmV0dXJuIGNvbXBhcmUoYSwgYiwgbG9vc2UpID09PSAwO1xufVxuXG5leHBvcnRzLm5lcSA9IG5lcTtcbmZ1bmN0aW9uIG5lcShhLCBiLCBsb29zZSkge1xuICByZXR1cm4gY29tcGFyZShhLCBiLCBsb29zZSkgIT09IDA7XG59XG5cbmV4cG9ydHMuZ3RlID0gZ3RlO1xuZnVuY3Rpb24gZ3RlKGEsIGIsIGxvb3NlKSB7XG4gIHJldHVybiBjb21wYXJlKGEsIGIsIGxvb3NlKSA+PSAwO1xufVxuXG5leHBvcnRzLmx0ZSA9IGx0ZTtcbmZ1bmN0aW9uIGx0ZShhLCBiLCBsb29zZSkge1xuICByZXR1cm4gY29tcGFyZShhLCBiLCBsb29zZSkgPD0gMDtcbn1cblxuZXhwb3J0cy5jbXAgPSBjbXA7XG5mdW5jdGlvbiBjbXAoYSwgb3AsIGIsIGxvb3NlKSB7XG4gIHZhciByZXQ7XG4gIHN3aXRjaCAob3ApIHtcbiAgICBjYXNlICc9PT0nOlxuICAgICAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0JykgYSA9IGEudmVyc2lvbjtcbiAgICAgIGlmICh0eXBlb2YgYiA9PT0gJ29iamVjdCcpIGIgPSBiLnZlcnNpb247XG4gICAgICByZXQgPSBhID09PSBiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnIT09JzpcbiAgICAgIGlmICh0eXBlb2YgYSA9PT0gJ29iamVjdCcpIGEgPSBhLnZlcnNpb247XG4gICAgICBpZiAodHlwZW9mIGIgPT09ICdvYmplY3QnKSBiID0gYi52ZXJzaW9uO1xuICAgICAgcmV0ID0gYSAhPT0gYjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJyc6IGNhc2UgJz0nOiBjYXNlICc9PSc6IHJldCA9IGVxKGEsIGIsIGxvb3NlKTsgYnJlYWs7XG4gICAgY2FzZSAnIT0nOiByZXQgPSBuZXEoYSwgYiwgbG9vc2UpOyBicmVhaztcbiAgICBjYXNlICc+JzogcmV0ID0gZ3QoYSwgYiwgbG9vc2UpOyBicmVhaztcbiAgICBjYXNlICc+PSc6IHJldCA9IGd0ZShhLCBiLCBsb29zZSk7IGJyZWFrO1xuICAgIGNhc2UgJzwnOiByZXQgPSBsdChhLCBiLCBsb29zZSk7IGJyZWFrO1xuICAgIGNhc2UgJzw9JzogcmV0ID0gbHRlKGEsIGIsIGxvb3NlKTsgYnJlYWs7XG4gICAgZGVmYXVsdDogdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBvcGVyYXRvcjogJyArIG9wKTtcbiAgfVxuICByZXR1cm4gcmV0O1xufVxuXG5leHBvcnRzLkNvbXBhcmF0b3IgPSBDb21wYXJhdG9yO1xuZnVuY3Rpb24gQ29tcGFyYXRvcihjb21wLCBsb29zZSkge1xuICBpZiAoY29tcCBpbnN0YW5jZW9mIENvbXBhcmF0b3IpIHtcbiAgICBpZiAoY29tcC5sb29zZSA9PT0gbG9vc2UpXG4gICAgICByZXR1cm4gY29tcDtcbiAgICBlbHNlXG4gICAgICBjb21wID0gY29tcC52YWx1ZTtcbiAgfVxuXG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBDb21wYXJhdG9yKSlcbiAgICByZXR1cm4gbmV3IENvbXBhcmF0b3IoY29tcCwgbG9vc2UpO1xuXG4gIGRlYnVnKCdjb21wYXJhdG9yJywgY29tcCwgbG9vc2UpO1xuICB0aGlzLmxvb3NlID0gbG9vc2U7XG4gIHRoaXMucGFyc2UoY29tcCk7XG5cbiAgaWYgKHRoaXMuc2VtdmVyID09PSBBTlkpXG4gICAgdGhpcy52YWx1ZSA9ICcnO1xuICBlbHNlXG4gICAgdGhpcy52YWx1ZSA9IHRoaXMub3BlcmF0b3IgKyB0aGlzLnNlbXZlci52ZXJzaW9uO1xuXG4gIGRlYnVnKCdjb21wJywgdGhpcyk7XG59XG5cbnZhciBBTlkgPSB7fTtcbkNvbXBhcmF0b3IucHJvdG90eXBlLnBhcnNlID0gZnVuY3Rpb24oY29tcCkge1xuICB2YXIgciA9IHRoaXMubG9vc2UgPyByZVtDT01QQVJBVE9STE9PU0VdIDogcmVbQ09NUEFSQVRPUl07XG4gIHZhciBtID0gY29tcC5tYXRjaChyKTtcblxuICBpZiAoIW0pXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBjb21wYXJhdG9yOiAnICsgY29tcCk7XG5cbiAgdGhpcy5vcGVyYXRvciA9IG1bMV07XG4gIGlmICh0aGlzLm9wZXJhdG9yID09PSAnPScpXG4gICAgdGhpcy5vcGVyYXRvciA9ICcnO1xuXG4gIC8vIGlmIGl0IGxpdGVyYWxseSBpcyBqdXN0ICc+JyBvciAnJyB0aGVuIGFsbG93IGFueXRoaW5nLlxuICBpZiAoIW1bMl0pXG4gICAgdGhpcy5zZW12ZXIgPSBBTlk7XG4gIGVsc2VcbiAgICB0aGlzLnNlbXZlciA9IG5ldyBTZW1WZXIobVsyXSwgdGhpcy5sb29zZSk7XG59O1xuXG5Db21wYXJhdG9yLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy52YWx1ZTtcbn07XG5cbkNvbXBhcmF0b3IucHJvdG90eXBlLnRlc3QgPSBmdW5jdGlvbih2ZXJzaW9uKSB7XG4gIGRlYnVnKCdDb21wYXJhdG9yLnRlc3QnLCB2ZXJzaW9uLCB0aGlzLmxvb3NlKTtcblxuICBpZiAodGhpcy5zZW12ZXIgPT09IEFOWSlcbiAgICByZXR1cm4gdHJ1ZTtcblxuICBpZiAodHlwZW9mIHZlcnNpb24gPT09ICdzdHJpbmcnKVxuICAgIHZlcnNpb24gPSBuZXcgU2VtVmVyKHZlcnNpb24sIHRoaXMubG9vc2UpO1xuXG4gIHJldHVybiBjbXAodmVyc2lvbiwgdGhpcy5vcGVyYXRvciwgdGhpcy5zZW12ZXIsIHRoaXMubG9vc2UpO1xufTtcblxuQ29tcGFyYXRvci5wcm90b3R5cGUuaW50ZXJzZWN0cyA9IGZ1bmN0aW9uKGNvbXAsIGxvb3NlKSB7XG4gIGlmICghKGNvbXAgaW5zdGFuY2VvZiBDb21wYXJhdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2EgQ29tcGFyYXRvciBpcyByZXF1aXJlZCcpO1xuICB9XG5cbiAgdmFyIHJhbmdlVG1wO1xuXG4gIGlmICh0aGlzLm9wZXJhdG9yID09PSAnJykge1xuICAgIHJhbmdlVG1wID0gbmV3IFJhbmdlKGNvbXAudmFsdWUsIGxvb3NlKTtcbiAgICByZXR1cm4gc2F0aXNmaWVzKHRoaXMudmFsdWUsIHJhbmdlVG1wLCBsb29zZSk7XG4gIH0gZWxzZSBpZiAoY29tcC5vcGVyYXRvciA9PT0gJycpIHtcbiAgICByYW5nZVRtcCA9IG5ldyBSYW5nZSh0aGlzLnZhbHVlLCBsb29zZSk7XG4gICAgcmV0dXJuIHNhdGlzZmllcyhjb21wLnNlbXZlciwgcmFuZ2VUbXAsIGxvb3NlKTtcbiAgfVxuXG4gIHZhciBzYW1lRGlyZWN0aW9uSW5jcmVhc2luZyA9XG4gICAgKHRoaXMub3BlcmF0b3IgPT09ICc+PScgfHwgdGhpcy5vcGVyYXRvciA9PT0gJz4nKSAmJlxuICAgIChjb21wLm9wZXJhdG9yID09PSAnPj0nIHx8IGNvbXAub3BlcmF0b3IgPT09ICc+Jyk7XG4gIHZhciBzYW1lRGlyZWN0aW9uRGVjcmVhc2luZyA9XG4gICAgKHRoaXMub3BlcmF0b3IgPT09ICc8PScgfHwgdGhpcy5vcGVyYXRvciA9PT0gJzwnKSAmJlxuICAgIChjb21wLm9wZXJhdG9yID09PSAnPD0nIHx8IGNvbXAub3BlcmF0b3IgPT09ICc8Jyk7XG4gIHZhciBzYW1lU2VtVmVyID0gdGhpcy5zZW12ZXIudmVyc2lvbiA9PT0gY29tcC5zZW12ZXIudmVyc2lvbjtcbiAgdmFyIGRpZmZlcmVudERpcmVjdGlvbnNJbmNsdXNpdmUgPVxuICAgICh0aGlzLm9wZXJhdG9yID09PSAnPj0nIHx8IHRoaXMub3BlcmF0b3IgPT09ICc8PScpICYmXG4gICAgKGNvbXAub3BlcmF0b3IgPT09ICc+PScgfHwgY29tcC5vcGVyYXRvciA9PT0gJzw9Jyk7XG4gIHZhciBvcHBvc2l0ZURpcmVjdGlvbnNMZXNzVGhhbiA9XG4gICAgY21wKHRoaXMuc2VtdmVyLCAnPCcsIGNvbXAuc2VtdmVyLCBsb29zZSkgJiZcbiAgICAoKHRoaXMub3BlcmF0b3IgPT09ICc+PScgfHwgdGhpcy5vcGVyYXRvciA9PT0gJz4nKSAmJlxuICAgIChjb21wLm9wZXJhdG9yID09PSAnPD0nIHx8IGNvbXAub3BlcmF0b3IgPT09ICc8JykpO1xuICB2YXIgb3Bwb3NpdGVEaXJlY3Rpb25zR3JlYXRlclRoYW4gPVxuICAgIGNtcCh0aGlzLnNlbXZlciwgJz4nLCBjb21wLnNlbXZlciwgbG9vc2UpICYmXG4gICAgKCh0aGlzLm9wZXJhdG9yID09PSAnPD0nIHx8IHRoaXMub3BlcmF0b3IgPT09ICc8JykgJiZcbiAgICAoY29tcC5vcGVyYXRvciA9PT0gJz49JyB8fCBjb21wLm9wZXJhdG9yID09PSAnPicpKTtcblxuICByZXR1cm4gc2FtZURpcmVjdGlvbkluY3JlYXNpbmcgfHwgc2FtZURpcmVjdGlvbkRlY3JlYXNpbmcgfHxcbiAgICAoc2FtZVNlbVZlciAmJiBkaWZmZXJlbnREaXJlY3Rpb25zSW5jbHVzaXZlKSB8fFxuICAgIG9wcG9zaXRlRGlyZWN0aW9uc0xlc3NUaGFuIHx8IG9wcG9zaXRlRGlyZWN0aW9uc0dyZWF0ZXJUaGFuO1xufTtcblxuXG5leHBvcnRzLlJhbmdlID0gUmFuZ2U7XG5mdW5jdGlvbiBSYW5nZShyYW5nZSwgbG9vc2UpIHtcbiAgaWYgKHJhbmdlIGluc3RhbmNlb2YgUmFuZ2UpIHtcbiAgICBpZiAocmFuZ2UubG9vc2UgPT09IGxvb3NlKSB7XG4gICAgICByZXR1cm4gcmFuZ2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXcgUmFuZ2UocmFuZ2UucmF3LCBsb29zZSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHJhbmdlIGluc3RhbmNlb2YgQ29tcGFyYXRvcikge1xuICAgIHJldHVybiBuZXcgUmFuZ2UocmFuZ2UudmFsdWUsIGxvb3NlKTtcbiAgfVxuXG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBSYW5nZSkpXG4gICAgcmV0dXJuIG5ldyBSYW5nZShyYW5nZSwgbG9vc2UpO1xuXG4gIHRoaXMubG9vc2UgPSBsb29zZTtcblxuICAvLyBGaXJzdCwgc3BsaXQgYmFzZWQgb24gYm9vbGVhbiBvciB8fFxuICB0aGlzLnJhdyA9IHJhbmdlO1xuICB0aGlzLnNldCA9IHJhbmdlLnNwbGl0KC9cXHMqXFx8XFx8XFxzKi8pLm1hcChmdW5jdGlvbihyYW5nZSkge1xuICAgIHJldHVybiB0aGlzLnBhcnNlUmFuZ2UocmFuZ2UudHJpbSgpKTtcbiAgfSwgdGhpcykuZmlsdGVyKGZ1bmN0aW9uKGMpIHtcbiAgICAvLyB0aHJvdyBvdXQgYW55IHRoYXQgYXJlIG5vdCByZWxldmFudCBmb3Igd2hhdGV2ZXIgcmVhc29uXG4gICAgcmV0dXJuIGMubGVuZ3RoO1xuICB9KTtcblxuICBpZiAoIXRoaXMuc2V0Lmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgU2VtVmVyIFJhbmdlOiAnICsgcmFuZ2UpO1xuICB9XG5cbiAgdGhpcy5mb3JtYXQoKTtcbn1cblxuUmFuZ2UucHJvdG90eXBlLmZvcm1hdCA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnJhbmdlID0gdGhpcy5zZXQubWFwKGZ1bmN0aW9uKGNvbXBzKSB7XG4gICAgcmV0dXJuIGNvbXBzLmpvaW4oJyAnKS50cmltKCk7XG4gIH0pLmpvaW4oJ3x8JykudHJpbSgpO1xuICByZXR1cm4gdGhpcy5yYW5nZTtcbn07XG5cblJhbmdlLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5yYW5nZTtcbn07XG5cblJhbmdlLnByb3RvdHlwZS5wYXJzZVJhbmdlID0gZnVuY3Rpb24ocmFuZ2UpIHtcbiAgdmFyIGxvb3NlID0gdGhpcy5sb29zZTtcbiAgcmFuZ2UgPSByYW5nZS50cmltKCk7XG4gIGRlYnVnKCdyYW5nZScsIHJhbmdlLCBsb29zZSk7XG4gIC8vIGAxLjIuMyAtIDEuMi40YCA9PiBgPj0xLjIuMyA8PTEuMi40YFxuICB2YXIgaHIgPSBsb29zZSA/IHJlW0hZUEhFTlJBTkdFTE9PU0VdIDogcmVbSFlQSEVOUkFOR0VdO1xuICByYW5nZSA9IHJhbmdlLnJlcGxhY2UoaHIsIGh5cGhlblJlcGxhY2UpO1xuICBkZWJ1ZygnaHlwaGVuIHJlcGxhY2UnLCByYW5nZSk7XG4gIC8vIGA+IDEuMi4zIDwgMS4yLjVgID0+IGA+MS4yLjMgPDEuMi41YFxuICByYW5nZSA9IHJhbmdlLnJlcGxhY2UocmVbQ09NUEFSQVRPUlRSSU1dLCBjb21wYXJhdG9yVHJpbVJlcGxhY2UpO1xuICBkZWJ1ZygnY29tcGFyYXRvciB0cmltJywgcmFuZ2UsIHJlW0NPTVBBUkFUT1JUUklNXSk7XG5cbiAgLy8gYH4gMS4yLjNgID0+IGB+MS4yLjNgXG4gIHJhbmdlID0gcmFuZ2UucmVwbGFjZShyZVtUSUxERVRSSU1dLCB0aWxkZVRyaW1SZXBsYWNlKTtcblxuICAvLyBgXiAxLjIuM2AgPT4gYF4xLjIuM2BcbiAgcmFuZ2UgPSByYW5nZS5yZXBsYWNlKHJlW0NBUkVUVFJJTV0sIGNhcmV0VHJpbVJlcGxhY2UpO1xuXG4gIC8vIG5vcm1hbGl6ZSBzcGFjZXNcbiAgcmFuZ2UgPSByYW5nZS5zcGxpdCgvXFxzKy8pLmpvaW4oJyAnKTtcblxuICAvLyBBdCB0aGlzIHBvaW50LCB0aGUgcmFuZ2UgaXMgY29tcGxldGVseSB0cmltbWVkIGFuZFxuICAvLyByZWFkeSB0byBiZSBzcGxpdCBpbnRvIGNvbXBhcmF0b3JzLlxuXG4gIHZhciBjb21wUmUgPSBsb29zZSA/IHJlW0NPTVBBUkFUT1JMT09TRV0gOiByZVtDT01QQVJBVE9SXTtcbiAgdmFyIHNldCA9IHJhbmdlLnNwbGl0KCcgJykubWFwKGZ1bmN0aW9uKGNvbXApIHtcbiAgICByZXR1cm4gcGFyc2VDb21wYXJhdG9yKGNvbXAsIGxvb3NlKTtcbiAgfSkuam9pbignICcpLnNwbGl0KC9cXHMrLyk7XG4gIGlmICh0aGlzLmxvb3NlKSB7XG4gICAgLy8gaW4gbG9vc2UgbW9kZSwgdGhyb3cgb3V0IGFueSB0aGF0IGFyZSBub3QgdmFsaWQgY29tcGFyYXRvcnNcbiAgICBzZXQgPSBzZXQuZmlsdGVyKGZ1bmN0aW9uKGNvbXApIHtcbiAgICAgIHJldHVybiAhIWNvbXAubWF0Y2goY29tcFJlKTtcbiAgICB9KTtcbiAgfVxuICBzZXQgPSBzZXQubWFwKGZ1bmN0aW9uKGNvbXApIHtcbiAgICByZXR1cm4gbmV3IENvbXBhcmF0b3IoY29tcCwgbG9vc2UpO1xuICB9KTtcblxuICByZXR1cm4gc2V0O1xufTtcblxuUmFuZ2UucHJvdG90eXBlLmludGVyc2VjdHMgPSBmdW5jdGlvbihyYW5nZSwgbG9vc2UpIHtcbiAgaWYgKCEocmFuZ2UgaW5zdGFuY2VvZiBSYW5nZSkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhIFJhbmdlIGlzIHJlcXVpcmVkJyk7XG4gIH1cblxuICByZXR1cm4gdGhpcy5zZXQuc29tZShmdW5jdGlvbih0aGlzQ29tcGFyYXRvcnMpIHtcbiAgICByZXR1cm4gdGhpc0NvbXBhcmF0b3JzLmV2ZXJ5KGZ1bmN0aW9uKHRoaXNDb21wYXJhdG9yKSB7XG4gICAgICByZXR1cm4gcmFuZ2Uuc2V0LnNvbWUoZnVuY3Rpb24ocmFuZ2VDb21wYXJhdG9ycykge1xuICAgICAgICByZXR1cm4gcmFuZ2VDb21wYXJhdG9ycy5ldmVyeShmdW5jdGlvbihyYW5nZUNvbXBhcmF0b3IpIHtcbiAgICAgICAgICByZXR1cm4gdGhpc0NvbXBhcmF0b3IuaW50ZXJzZWN0cyhyYW5nZUNvbXBhcmF0b3IsIGxvb3NlKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG4vLyBNb3N0bHkganVzdCBmb3IgdGVzdGluZyBhbmQgbGVnYWN5IEFQSSByZWFzb25zXG5leHBvcnRzLnRvQ29tcGFyYXRvcnMgPSB0b0NvbXBhcmF0b3JzO1xuZnVuY3Rpb24gdG9Db21wYXJhdG9ycyhyYW5nZSwgbG9vc2UpIHtcbiAgcmV0dXJuIG5ldyBSYW5nZShyYW5nZSwgbG9vc2UpLnNldC5tYXAoZnVuY3Rpb24oY29tcCkge1xuICAgIHJldHVybiBjb21wLm1hcChmdW5jdGlvbihjKSB7XG4gICAgICByZXR1cm4gYy52YWx1ZTtcbiAgICB9KS5qb2luKCcgJykudHJpbSgpLnNwbGl0KCcgJyk7XG4gIH0pO1xufVxuXG4vLyBjb21wcmlzZWQgb2YgeHJhbmdlcywgdGlsZGVzLCBzdGFycywgYW5kIGd0bHQncyBhdCB0aGlzIHBvaW50LlxuLy8gYWxyZWFkeSByZXBsYWNlZCB0aGUgaHlwaGVuIHJhbmdlc1xuLy8gdHVybiBpbnRvIGEgc2V0IG9mIEpVU1QgY29tcGFyYXRvcnMuXG5mdW5jdGlvbiBwYXJzZUNvbXBhcmF0b3IoY29tcCwgbG9vc2UpIHtcbiAgZGVidWcoJ2NvbXAnLCBjb21wKTtcbiAgY29tcCA9IHJlcGxhY2VDYXJldHMoY29tcCwgbG9vc2UpO1xuICBkZWJ1ZygnY2FyZXQnLCBjb21wKTtcbiAgY29tcCA9IHJlcGxhY2VUaWxkZXMoY29tcCwgbG9vc2UpO1xuICBkZWJ1ZygndGlsZGVzJywgY29tcCk7XG4gIGNvbXAgPSByZXBsYWNlWFJhbmdlcyhjb21wLCBsb29zZSk7XG4gIGRlYnVnKCd4cmFuZ2UnLCBjb21wKTtcbiAgY29tcCA9IHJlcGxhY2VTdGFycyhjb21wLCBsb29zZSk7XG4gIGRlYnVnKCdzdGFycycsIGNvbXApO1xuICByZXR1cm4gY29tcDtcbn1cblxuZnVuY3Rpb24gaXNYKGlkKSB7XG4gIHJldHVybiAhaWQgfHwgaWQudG9Mb3dlckNhc2UoKSA9PT0gJ3gnIHx8IGlkID09PSAnKic7XG59XG5cbi8vIH4sIH4+IC0tPiAqIChhbnksIGtpbmRhIHNpbGx5KVxuLy8gfjIsIH4yLngsIH4yLngueCwgfj4yLCB+PjIueCB+PjIueC54IC0tPiA+PTIuMC4wIDwzLjAuMFxuLy8gfjIuMCwgfjIuMC54LCB+PjIuMCwgfj4yLjAueCAtLT4gPj0yLjAuMCA8Mi4xLjBcbi8vIH4xLjIsIH4xLjIueCwgfj4xLjIsIH4+MS4yLnggLS0+ID49MS4yLjAgPDEuMy4wXG4vLyB+MS4yLjMsIH4+MS4yLjMgLS0+ID49MS4yLjMgPDEuMy4wXG4vLyB+MS4yLjAsIH4+MS4yLjAgLS0+ID49MS4yLjAgPDEuMy4wXG5mdW5jdGlvbiByZXBsYWNlVGlsZGVzKGNvbXAsIGxvb3NlKSB7XG4gIHJldHVybiBjb21wLnRyaW0oKS5zcGxpdCgvXFxzKy8pLm1hcChmdW5jdGlvbihjb21wKSB7XG4gICAgcmV0dXJuIHJlcGxhY2VUaWxkZShjb21wLCBsb29zZSk7XG4gIH0pLmpvaW4oJyAnKTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZVRpbGRlKGNvbXAsIGxvb3NlKSB7XG4gIHZhciByID0gbG9vc2UgPyByZVtUSUxERUxPT1NFXSA6IHJlW1RJTERFXTtcbiAgcmV0dXJuIGNvbXAucmVwbGFjZShyLCBmdW5jdGlvbihfLCBNLCBtLCBwLCBwcikge1xuICAgIGRlYnVnKCd0aWxkZScsIGNvbXAsIF8sIE0sIG0sIHAsIHByKTtcbiAgICB2YXIgcmV0O1xuXG4gICAgaWYgKGlzWChNKSlcbiAgICAgIHJldCA9ICcnO1xuICAgIGVsc2UgaWYgKGlzWChtKSlcbiAgICAgIHJldCA9ICc+PScgKyBNICsgJy4wLjAgPCcgKyAoK00gKyAxKSArICcuMC4wJztcbiAgICBlbHNlIGlmIChpc1gocCkpXG4gICAgICAvLyB+MS4yID09ID49MS4yLjAgPDEuMy4wXG4gICAgICByZXQgPSAnPj0nICsgTSArICcuJyArIG0gKyAnLjAgPCcgKyBNICsgJy4nICsgKCttICsgMSkgKyAnLjAnO1xuICAgIGVsc2UgaWYgKHByKSB7XG4gICAgICBkZWJ1ZygncmVwbGFjZVRpbGRlIHByJywgcHIpO1xuICAgICAgaWYgKHByLmNoYXJBdCgwKSAhPT0gJy0nKVxuICAgICAgICBwciA9ICctJyArIHByO1xuICAgICAgcmV0ID0gJz49JyArIE0gKyAnLicgKyBtICsgJy4nICsgcCArIHByICtcbiAgICAgICAgICAgICcgPCcgKyBNICsgJy4nICsgKCttICsgMSkgKyAnLjAnO1xuICAgIH0gZWxzZVxuICAgICAgLy8gfjEuMi4zID09ID49MS4yLjMgPDEuMy4wXG4gICAgICByZXQgPSAnPj0nICsgTSArICcuJyArIG0gKyAnLicgKyBwICtcbiAgICAgICAgICAgICcgPCcgKyBNICsgJy4nICsgKCttICsgMSkgKyAnLjAnO1xuXG4gICAgZGVidWcoJ3RpbGRlIHJldHVybicsIHJldCk7XG4gICAgcmV0dXJuIHJldDtcbiAgfSk7XG59XG5cbi8vIF4gLS0+ICogKGFueSwga2luZGEgc2lsbHkpXG4vLyBeMiwgXjIueCwgXjIueC54IC0tPiA+PTIuMC4wIDwzLjAuMFxuLy8gXjIuMCwgXjIuMC54IC0tPiA+PTIuMC4wIDwzLjAuMFxuLy8gXjEuMiwgXjEuMi54IC0tPiA+PTEuMi4wIDwyLjAuMFxuLy8gXjEuMi4zIC0tPiA+PTEuMi4zIDwyLjAuMFxuLy8gXjEuMi4wIC0tPiA+PTEuMi4wIDwyLjAuMFxuZnVuY3Rpb24gcmVwbGFjZUNhcmV0cyhjb21wLCBsb29zZSkge1xuICByZXR1cm4gY29tcC50cmltKCkuc3BsaXQoL1xccysvKS5tYXAoZnVuY3Rpb24oY29tcCkge1xuICAgIHJldHVybiByZXBsYWNlQ2FyZXQoY29tcCwgbG9vc2UpO1xuICB9KS5qb2luKCcgJyk7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VDYXJldChjb21wLCBsb29zZSkge1xuICBkZWJ1ZygnY2FyZXQnLCBjb21wLCBsb29zZSk7XG4gIHZhciByID0gbG9vc2UgPyByZVtDQVJFVExPT1NFXSA6IHJlW0NBUkVUXTtcbiAgcmV0dXJuIGNvbXAucmVwbGFjZShyLCBmdW5jdGlvbihfLCBNLCBtLCBwLCBwcikge1xuICAgIGRlYnVnKCdjYXJldCcsIGNvbXAsIF8sIE0sIG0sIHAsIHByKTtcbiAgICB2YXIgcmV0O1xuXG4gICAgaWYgKGlzWChNKSlcbiAgICAgIHJldCA9ICcnO1xuICAgIGVsc2UgaWYgKGlzWChtKSlcbiAgICAgIHJldCA9ICc+PScgKyBNICsgJy4wLjAgPCcgKyAoK00gKyAxKSArICcuMC4wJztcbiAgICBlbHNlIGlmIChpc1gocCkpIHtcbiAgICAgIGlmIChNID09PSAnMCcpXG4gICAgICAgIHJldCA9ICc+PScgKyBNICsgJy4nICsgbSArICcuMCA8JyArIE0gKyAnLicgKyAoK20gKyAxKSArICcuMCc7XG4gICAgICBlbHNlXG4gICAgICAgIHJldCA9ICc+PScgKyBNICsgJy4nICsgbSArICcuMCA8JyArICgrTSArIDEpICsgJy4wLjAnO1xuICAgIH0gZWxzZSBpZiAocHIpIHtcbiAgICAgIGRlYnVnKCdyZXBsYWNlQ2FyZXQgcHInLCBwcik7XG4gICAgICBpZiAocHIuY2hhckF0KDApICE9PSAnLScpXG4gICAgICAgIHByID0gJy0nICsgcHI7XG4gICAgICBpZiAoTSA9PT0gJzAnKSB7XG4gICAgICAgIGlmIChtID09PSAnMCcpXG4gICAgICAgICAgcmV0ID0gJz49JyArIE0gKyAnLicgKyBtICsgJy4nICsgcCArIHByICtcbiAgICAgICAgICAgICAgICAnIDwnICsgTSArICcuJyArIG0gKyAnLicgKyAoK3AgKyAxKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHJldCA9ICc+PScgKyBNICsgJy4nICsgbSArICcuJyArIHAgKyBwciArXG4gICAgICAgICAgICAgICAgJyA8JyArIE0gKyAnLicgKyAoK20gKyAxKSArICcuMCc7XG4gICAgICB9IGVsc2VcbiAgICAgICAgcmV0ID0gJz49JyArIE0gKyAnLicgKyBtICsgJy4nICsgcCArIHByICtcbiAgICAgICAgICAgICAgJyA8JyArICgrTSArIDEpICsgJy4wLjAnO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZWJ1Zygnbm8gcHInKTtcbiAgICAgIGlmIChNID09PSAnMCcpIHtcbiAgICAgICAgaWYgKG0gPT09ICcwJylcbiAgICAgICAgICByZXQgPSAnPj0nICsgTSArICcuJyArIG0gKyAnLicgKyBwICtcbiAgICAgICAgICAgICAgICAnIDwnICsgTSArICcuJyArIG0gKyAnLicgKyAoK3AgKyAxKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHJldCA9ICc+PScgKyBNICsgJy4nICsgbSArICcuJyArIHAgK1xuICAgICAgICAgICAgICAgICcgPCcgKyBNICsgJy4nICsgKCttICsgMSkgKyAnLjAnO1xuICAgICAgfSBlbHNlXG4gICAgICAgIHJldCA9ICc+PScgKyBNICsgJy4nICsgbSArICcuJyArIHAgK1xuICAgICAgICAgICAgICAnIDwnICsgKCtNICsgMSkgKyAnLjAuMCc7XG4gICAgfVxuXG4gICAgZGVidWcoJ2NhcmV0IHJldHVybicsIHJldCk7XG4gICAgcmV0dXJuIHJldDtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VYUmFuZ2VzKGNvbXAsIGxvb3NlKSB7XG4gIGRlYnVnKCdyZXBsYWNlWFJhbmdlcycsIGNvbXAsIGxvb3NlKTtcbiAgcmV0dXJuIGNvbXAuc3BsaXQoL1xccysvKS5tYXAoZnVuY3Rpb24oY29tcCkge1xuICAgIHJldHVybiByZXBsYWNlWFJhbmdlKGNvbXAsIGxvb3NlKTtcbiAgfSkuam9pbignICcpO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlWFJhbmdlKGNvbXAsIGxvb3NlKSB7XG4gIGNvbXAgPSBjb21wLnRyaW0oKTtcbiAgdmFyIHIgPSBsb29zZSA/IHJlW1hSQU5HRUxPT1NFXSA6IHJlW1hSQU5HRV07XG4gIHJldHVybiBjb21wLnJlcGxhY2UociwgZnVuY3Rpb24ocmV0LCBndGx0LCBNLCBtLCBwLCBwcikge1xuICAgIGRlYnVnKCd4UmFuZ2UnLCBjb21wLCByZXQsIGd0bHQsIE0sIG0sIHAsIHByKTtcbiAgICB2YXIgeE0gPSBpc1goTSk7XG4gICAgdmFyIHhtID0geE0gfHwgaXNYKG0pO1xuICAgIHZhciB4cCA9IHhtIHx8IGlzWChwKTtcbiAgICB2YXIgYW55WCA9IHhwO1xuXG4gICAgaWYgKGd0bHQgPT09ICc9JyAmJiBhbnlYKVxuICAgICAgZ3RsdCA9ICcnO1xuXG4gICAgaWYgKHhNKSB7XG4gICAgICBpZiAoZ3RsdCA9PT0gJz4nIHx8IGd0bHQgPT09ICc8Jykge1xuICAgICAgICAvLyBub3RoaW5nIGlzIGFsbG93ZWRcbiAgICAgICAgcmV0ID0gJzwwLjAuMCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBub3RoaW5nIGlzIGZvcmJpZGRlblxuICAgICAgICByZXQgPSAnKic7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChndGx0ICYmIGFueVgpIHtcbiAgICAgIC8vIHJlcGxhY2UgWCB3aXRoIDBcbiAgICAgIGlmICh4bSlcbiAgICAgICAgbSA9IDA7XG4gICAgICBpZiAoeHApXG4gICAgICAgIHAgPSAwO1xuXG4gICAgICBpZiAoZ3RsdCA9PT0gJz4nKSB7XG4gICAgICAgIC8vID4xID0+ID49Mi4wLjBcbiAgICAgICAgLy8gPjEuMiA9PiA+PTEuMy4wXG4gICAgICAgIC8vID4xLjIuMyA9PiA+PSAxLjIuNFxuICAgICAgICBndGx0ID0gJz49JztcbiAgICAgICAgaWYgKHhtKSB7XG4gICAgICAgICAgTSA9ICtNICsgMTtcbiAgICAgICAgICBtID0gMDtcbiAgICAgICAgICBwID0gMDtcbiAgICAgICAgfSBlbHNlIGlmICh4cCkge1xuICAgICAgICAgIG0gPSArbSArIDE7XG4gICAgICAgICAgcCA9IDA7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZ3RsdCA9PT0gJzw9Jykge1xuICAgICAgICAvLyA8PTAuNy54IGlzIGFjdHVhbGx5IDwwLjguMCwgc2luY2UgYW55IDAuNy54IHNob3VsZFxuICAgICAgICAvLyBwYXNzLiAgU2ltaWxhcmx5LCA8PTcueCBpcyBhY3R1YWxseSA8OC4wLjAsIGV0Yy5cbiAgICAgICAgZ3RsdCA9ICc8JztcbiAgICAgICAgaWYgKHhtKVxuICAgICAgICAgIE0gPSArTSArIDE7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBtID0gK20gKyAxO1xuICAgICAgfVxuXG4gICAgICByZXQgPSBndGx0ICsgTSArICcuJyArIG0gKyAnLicgKyBwO1xuICAgIH0gZWxzZSBpZiAoeG0pIHtcbiAgICAgIHJldCA9ICc+PScgKyBNICsgJy4wLjAgPCcgKyAoK00gKyAxKSArICcuMC4wJztcbiAgICB9IGVsc2UgaWYgKHhwKSB7XG4gICAgICByZXQgPSAnPj0nICsgTSArICcuJyArIG0gKyAnLjAgPCcgKyBNICsgJy4nICsgKCttICsgMSkgKyAnLjAnO1xuICAgIH1cblxuICAgIGRlYnVnKCd4UmFuZ2UgcmV0dXJuJywgcmV0KTtcblxuICAgIHJldHVybiByZXQ7XG4gIH0pO1xufVxuXG4vLyBCZWNhdXNlICogaXMgQU5ELWVkIHdpdGggZXZlcnl0aGluZyBlbHNlIGluIHRoZSBjb21wYXJhdG9yLFxuLy8gYW5kICcnIG1lYW5zIFwiYW55IHZlcnNpb25cIiwganVzdCByZW1vdmUgdGhlICpzIGVudGlyZWx5LlxuZnVuY3Rpb24gcmVwbGFjZVN0YXJzKGNvbXAsIGxvb3NlKSB7XG4gIGRlYnVnKCdyZXBsYWNlU3RhcnMnLCBjb21wLCBsb29zZSk7XG4gIC8vIExvb3NlbmVzcyBpcyBpZ25vcmVkIGhlcmUuICBzdGFyIGlzIGFsd2F5cyBhcyBsb29zZSBhcyBpdCBnZXRzIVxuICByZXR1cm4gY29tcC50cmltKCkucmVwbGFjZShyZVtTVEFSXSwgJycpO1xufVxuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIHBhc3NlZCB0byBzdHJpbmcucmVwbGFjZShyZVtIWVBIRU5SQU5HRV0pXG4vLyBNLCBtLCBwYXRjaCwgcHJlcmVsZWFzZSwgYnVpbGRcbi8vIDEuMiAtIDMuNC41ID0+ID49MS4yLjAgPD0zLjQuNVxuLy8gMS4yLjMgLSAzLjQgPT4gPj0xLjIuMCA8My41LjAgQW55IDMuNC54IHdpbGwgZG9cbi8vIDEuMiAtIDMuNCA9PiA+PTEuMi4wIDwzLjUuMFxuZnVuY3Rpb24gaHlwaGVuUmVwbGFjZSgkMCxcbiAgICAgICAgICAgICAgICAgICAgICAgZnJvbSwgZk0sIGZtLCBmcCwgZnByLCBmYixcbiAgICAgICAgICAgICAgICAgICAgICAgdG8sIHRNLCB0bSwgdHAsIHRwciwgdGIpIHtcblxuICBpZiAoaXNYKGZNKSlcbiAgICBmcm9tID0gJyc7XG4gIGVsc2UgaWYgKGlzWChmbSkpXG4gICAgZnJvbSA9ICc+PScgKyBmTSArICcuMC4wJztcbiAgZWxzZSBpZiAoaXNYKGZwKSlcbiAgICBmcm9tID0gJz49JyArIGZNICsgJy4nICsgZm0gKyAnLjAnO1xuICBlbHNlXG4gICAgZnJvbSA9ICc+PScgKyBmcm9tO1xuXG4gIGlmIChpc1godE0pKVxuICAgIHRvID0gJyc7XG4gIGVsc2UgaWYgKGlzWCh0bSkpXG4gICAgdG8gPSAnPCcgKyAoK3RNICsgMSkgKyAnLjAuMCc7XG4gIGVsc2UgaWYgKGlzWCh0cCkpXG4gICAgdG8gPSAnPCcgKyB0TSArICcuJyArICgrdG0gKyAxKSArICcuMCc7XG4gIGVsc2UgaWYgKHRwcilcbiAgICB0byA9ICc8PScgKyB0TSArICcuJyArIHRtICsgJy4nICsgdHAgKyAnLScgKyB0cHI7XG4gIGVsc2VcbiAgICB0byA9ICc8PScgKyB0bztcblxuICByZXR1cm4gKGZyb20gKyAnICcgKyB0bykudHJpbSgpO1xufVxuXG5cbi8vIGlmIEFOWSBvZiB0aGUgc2V0cyBtYXRjaCBBTEwgb2YgaXRzIGNvbXBhcmF0b3JzLCB0aGVuIHBhc3NcblJhbmdlLnByb3RvdHlwZS50ZXN0ID0gZnVuY3Rpb24odmVyc2lvbikge1xuICBpZiAoIXZlcnNpb24pXG4gICAgcmV0dXJuIGZhbHNlO1xuXG4gIGlmICh0eXBlb2YgdmVyc2lvbiA9PT0gJ3N0cmluZycpXG4gICAgdmVyc2lvbiA9IG5ldyBTZW1WZXIodmVyc2lvbiwgdGhpcy5sb29zZSk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNldC5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0ZXN0U2V0KHRoaXMuc2V0W2ldLCB2ZXJzaW9uKSlcbiAgICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmZ1bmN0aW9uIHRlc3RTZXQoc2V0LCB2ZXJzaW9uKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc2V0Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFzZXRbaV0udGVzdCh2ZXJzaW9uKSlcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICh2ZXJzaW9uLnByZXJlbGVhc2UubGVuZ3RoKSB7XG4gICAgLy8gRmluZCB0aGUgc2V0IG9mIHZlcnNpb25zIHRoYXQgYXJlIGFsbG93ZWQgdG8gaGF2ZSBwcmVyZWxlYXNlc1xuICAgIC8vIEZvciBleGFtcGxlLCBeMS4yLjMtcHIuMSBkZXN1Z2FycyB0byA+PTEuMi4zLXByLjEgPDIuMC4wXG4gICAgLy8gVGhhdCBzaG91bGQgYWxsb3cgYDEuMi4zLXByLjJgIHRvIHBhc3MuXG4gICAgLy8gSG93ZXZlciwgYDEuMi40LWFscGhhLm5vdHJlYWR5YCBzaG91bGQgTk9UIGJlIGFsbG93ZWQsXG4gICAgLy8gZXZlbiB0aG91Z2ggaXQncyB3aXRoaW4gdGhlIHJhbmdlIHNldCBieSB0aGUgY29tcGFyYXRvcnMuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZXQubGVuZ3RoOyBpKyspIHtcbiAgICAgIGRlYnVnKHNldFtpXS5zZW12ZXIpO1xuICAgICAgaWYgKHNldFtpXS5zZW12ZXIgPT09IEFOWSlcbiAgICAgICAgY29udGludWU7XG5cbiAgICAgIGlmIChzZXRbaV0uc2VtdmVyLnByZXJlbGVhc2UubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgYWxsb3dlZCA9IHNldFtpXS5zZW12ZXI7XG4gICAgICAgIGlmIChhbGxvd2VkLm1ham9yID09PSB2ZXJzaW9uLm1ham9yICYmXG4gICAgICAgICAgICBhbGxvd2VkLm1pbm9yID09PSB2ZXJzaW9uLm1pbm9yICYmXG4gICAgICAgICAgICBhbGxvd2VkLnBhdGNoID09PSB2ZXJzaW9uLnBhdGNoKVxuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFZlcnNpb24gaGFzIGEgLXByZSwgYnV0IGl0J3Mgbm90IG9uZSBvZiB0aGUgb25lcyB3ZSBsaWtlLlxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnRzLnNhdGlzZmllcyA9IHNhdGlzZmllcztcbmZ1bmN0aW9uIHNhdGlzZmllcyh2ZXJzaW9uLCByYW5nZSwgbG9vc2UpIHtcbiAgdHJ5IHtcbiAgICByYW5nZSA9IG5ldyBSYW5nZShyYW5nZSwgbG9vc2UpO1xuICB9IGNhdGNoIChlcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gcmFuZ2UudGVzdCh2ZXJzaW9uKTtcbn1cblxuZXhwb3J0cy5tYXhTYXRpc2Z5aW5nID0gbWF4U2F0aXNmeWluZztcbmZ1bmN0aW9uIG1heFNhdGlzZnlpbmcodmVyc2lvbnMsIHJhbmdlLCBsb29zZSkge1xuICB2YXIgbWF4ID0gbnVsbDtcbiAgdmFyIG1heFNWID0gbnVsbDtcbiAgdHJ5IHtcbiAgICB2YXIgcmFuZ2VPYmogPSBuZXcgUmFuZ2UocmFuZ2UsIGxvb3NlKTtcbiAgfSBjYXRjaCAoZXIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB2ZXJzaW9ucy5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7XG4gICAgaWYgKHJhbmdlT2JqLnRlc3QodikpIHsgLy8gc2F0aXNmaWVzKHYsIHJhbmdlLCBsb29zZSlcbiAgICAgIGlmICghbWF4IHx8IG1heFNWLmNvbXBhcmUodikgPT09IC0xKSB7IC8vIGNvbXBhcmUobWF4LCB2LCB0cnVlKVxuICAgICAgICBtYXggPSB2O1xuICAgICAgICBtYXhTViA9IG5ldyBTZW1WZXIobWF4LCBsb29zZSk7XG4gICAgICB9XG4gICAgfVxuICB9KVxuICByZXR1cm4gbWF4O1xufVxuXG5leHBvcnRzLm1pblNhdGlzZnlpbmcgPSBtaW5TYXRpc2Z5aW5nO1xuZnVuY3Rpb24gbWluU2F0aXNmeWluZyh2ZXJzaW9ucywgcmFuZ2UsIGxvb3NlKSB7XG4gIHZhciBtaW4gPSBudWxsO1xuICB2YXIgbWluU1YgPSBudWxsO1xuICB0cnkge1xuICAgIHZhciByYW5nZU9iaiA9IG5ldyBSYW5nZShyYW5nZSwgbG9vc2UpO1xuICB9IGNhdGNoIChlcikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZlcnNpb25zLmZvckVhY2goZnVuY3Rpb24gKHYpIHtcbiAgICBpZiAocmFuZ2VPYmoudGVzdCh2KSkgeyAvLyBzYXRpc2ZpZXModiwgcmFuZ2UsIGxvb3NlKVxuICAgICAgaWYgKCFtaW4gfHwgbWluU1YuY29tcGFyZSh2KSA9PT0gMSkgeyAvLyBjb21wYXJlKG1pbiwgdiwgdHJ1ZSlcbiAgICAgICAgbWluID0gdjtcbiAgICAgICAgbWluU1YgPSBuZXcgU2VtVmVyKG1pbiwgbG9vc2UpO1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgcmV0dXJuIG1pbjtcbn1cblxuZXhwb3J0cy52YWxpZFJhbmdlID0gdmFsaWRSYW5nZTtcbmZ1bmN0aW9uIHZhbGlkUmFuZ2UocmFuZ2UsIGxvb3NlKSB7XG4gIHRyeSB7XG4gICAgLy8gUmV0dXJuICcqJyBpbnN0ZWFkIG9mICcnIHNvIHRoYXQgdHJ1dGhpbmVzcyB3b3Jrcy5cbiAgICAvLyBUaGlzIHdpbGwgdGhyb3cgaWYgaXQncyBpbnZhbGlkIGFueXdheVxuICAgIHJldHVybiBuZXcgUmFuZ2UocmFuZ2UsIGxvb3NlKS5yYW5nZSB8fCAnKic7XG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLy8gRGV0ZXJtaW5lIGlmIHZlcnNpb24gaXMgbGVzcyB0aGFuIGFsbCB0aGUgdmVyc2lvbnMgcG9zc2libGUgaW4gdGhlIHJhbmdlXG5leHBvcnRzLmx0ciA9IGx0cjtcbmZ1bmN0aW9uIGx0cih2ZXJzaW9uLCByYW5nZSwgbG9vc2UpIHtcbiAgcmV0dXJuIG91dHNpZGUodmVyc2lvbiwgcmFuZ2UsICc8JywgbG9vc2UpO1xufVxuXG4vLyBEZXRlcm1pbmUgaWYgdmVyc2lvbiBpcyBncmVhdGVyIHRoYW4gYWxsIHRoZSB2ZXJzaW9ucyBwb3NzaWJsZSBpbiB0aGUgcmFuZ2UuXG5leHBvcnRzLmd0ciA9IGd0cjtcbmZ1bmN0aW9uIGd0cih2ZXJzaW9uLCByYW5nZSwgbG9vc2UpIHtcbiAgcmV0dXJuIG91dHNpZGUodmVyc2lvbiwgcmFuZ2UsICc+JywgbG9vc2UpO1xufVxuXG5leHBvcnRzLm91dHNpZGUgPSBvdXRzaWRlO1xuZnVuY3Rpb24gb3V0c2lkZSh2ZXJzaW9uLCByYW5nZSwgaGlsbywgbG9vc2UpIHtcbiAgdmVyc2lvbiA9IG5ldyBTZW1WZXIodmVyc2lvbiwgbG9vc2UpO1xuICByYW5nZSA9IG5ldyBSYW5nZShyYW5nZSwgbG9vc2UpO1xuXG4gIHZhciBndGZuLCBsdGVmbiwgbHRmbiwgY29tcCwgZWNvbXA7XG4gIHN3aXRjaCAoaGlsbykge1xuICAgIGNhc2UgJz4nOlxuICAgICAgZ3RmbiA9IGd0O1xuICAgICAgbHRlZm4gPSBsdGU7XG4gICAgICBsdGZuID0gbHQ7XG4gICAgICBjb21wID0gJz4nO1xuICAgICAgZWNvbXAgPSAnPj0nO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnPCc6XG4gICAgICBndGZuID0gbHQ7XG4gICAgICBsdGVmbiA9IGd0ZTtcbiAgICAgIGx0Zm4gPSBndDtcbiAgICAgIGNvbXAgPSAnPCc7XG4gICAgICBlY29tcCA9ICc8PSc7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignTXVzdCBwcm92aWRlIGEgaGlsbyB2YWwgb2YgXCI8XCIgb3IgXCI+XCInKTtcbiAgfVxuXG4gIC8vIElmIGl0IHNhdGlzaWZlcyB0aGUgcmFuZ2UgaXQgaXMgbm90IG91dHNpZGVcbiAgaWYgKHNhdGlzZmllcyh2ZXJzaW9uLCByYW5nZSwgbG9vc2UpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gRnJvbSBub3cgb24sIHZhcmlhYmxlIHRlcm1zIGFyZSBhcyBpZiB3ZSdyZSBpbiBcImd0clwiIG1vZGUuXG4gIC8vIGJ1dCBub3RlIHRoYXQgZXZlcnl0aGluZyBpcyBmbGlwcGVkIGZvciB0aGUgXCJsdHJcIiBmdW5jdGlvbi5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJhbmdlLnNldC5sZW5ndGg7ICsraSkge1xuICAgIHZhciBjb21wYXJhdG9ycyA9IHJhbmdlLnNldFtpXTtcblxuICAgIHZhciBoaWdoID0gbnVsbDtcbiAgICB2YXIgbG93ID0gbnVsbDtcblxuICAgIGNvbXBhcmF0b3JzLmZvckVhY2goZnVuY3Rpb24oY29tcGFyYXRvcikge1xuICAgICAgaWYgKGNvbXBhcmF0b3Iuc2VtdmVyID09PSBBTlkpIHtcbiAgICAgICAgY29tcGFyYXRvciA9IG5ldyBDb21wYXJhdG9yKCc+PTAuMC4wJylcbiAgICAgIH1cbiAgICAgIGhpZ2ggPSBoaWdoIHx8IGNvbXBhcmF0b3I7XG4gICAgICBsb3cgPSBsb3cgfHwgY29tcGFyYXRvcjtcbiAgICAgIGlmIChndGZuKGNvbXBhcmF0b3Iuc2VtdmVyLCBoaWdoLnNlbXZlciwgbG9vc2UpKSB7XG4gICAgICAgIGhpZ2ggPSBjb21wYXJhdG9yO1xuICAgICAgfSBlbHNlIGlmIChsdGZuKGNvbXBhcmF0b3Iuc2VtdmVyLCBsb3cuc2VtdmVyLCBsb29zZSkpIHtcbiAgICAgICAgbG93ID0gY29tcGFyYXRvcjtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIElmIHRoZSBlZGdlIHZlcnNpb24gY29tcGFyYXRvciBoYXMgYSBvcGVyYXRvciB0aGVuIG91ciB2ZXJzaW9uXG4gICAgLy8gaXNuJ3Qgb3V0c2lkZSBpdFxuICAgIGlmIChoaWdoLm9wZXJhdG9yID09PSBjb21wIHx8IGhpZ2gub3BlcmF0b3IgPT09IGVjb21wKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhlIGxvd2VzdCB2ZXJzaW9uIGNvbXBhcmF0b3IgaGFzIGFuIG9wZXJhdG9yIGFuZCBvdXIgdmVyc2lvblxuICAgIC8vIGlzIGxlc3MgdGhhbiBpdCB0aGVuIGl0IGlzbid0IGhpZ2hlciB0aGFuIHRoZSByYW5nZVxuICAgIGlmICgoIWxvdy5vcGVyYXRvciB8fCBsb3cub3BlcmF0b3IgPT09IGNvbXApICYmXG4gICAgICAgIGx0ZWZuKHZlcnNpb24sIGxvdy5zZW12ZXIpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIGlmIChsb3cub3BlcmF0b3IgPT09IGVjb21wICYmIGx0Zm4odmVyc2lvbiwgbG93LnNlbXZlcikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydHMucHJlcmVsZWFzZSA9IHByZXJlbGVhc2U7XG5mdW5jdGlvbiBwcmVyZWxlYXNlKHZlcnNpb24sIGxvb3NlKSB7XG4gIHZhciBwYXJzZWQgPSBwYXJzZSh2ZXJzaW9uLCBsb29zZSk7XG4gIHJldHVybiAocGFyc2VkICYmIHBhcnNlZC5wcmVyZWxlYXNlLmxlbmd0aCkgPyBwYXJzZWQucHJlcmVsZWFzZSA6IG51bGw7XG59XG5cbmV4cG9ydHMuaW50ZXJzZWN0cyA9IGludGVyc2VjdHM7XG5mdW5jdGlvbiBpbnRlcnNlY3RzKHIxLCByMiwgbG9vc2UpIHtcbiAgcjEgPSBuZXcgUmFuZ2UocjEsIGxvb3NlKVxuICByMiA9IG5ldyBSYW5nZShyMiwgbG9vc2UpXG4gIHJldHVybiByMS5pbnRlcnNlY3RzKHIyKVxufVxuXG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi99LmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyg0OSkpKVxuXG4vKioqLyB9KSxcbi8qIDQ5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG5cblxuLyoqKi8gfSksXG4vKiA1MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcIm5hbWVcIjpcInZ1ZXRpZnlcIixcInZlcnNpb25cIjpcIjAuMTcuN1wiLFwiYXV0aG9yXCI6e1wibmFtZVwiOlwiSm9obiBMZWlkZXJcIixcImVtYWlsXCI6XCJqb2huQHZ1ZXRpZnlqcy5jb21cIn0sXCJsaWNlbnNlXCI6XCJNSVRcIixcImhvbWVwYWdlXCI6XCJodHRwOi8vdnVldGlmeWpzLmNvbVwiLFwibWFpblwiOlwiZGlzdC92dWV0aWZ5LmpzXCIsXCJ1bnBrZ1wiOlwiZGlzdC92dWV0aWZ5LmpzXCIsXCJ0eXBlc1wiOlwiaW5kZXguZC50c1wiLFwic2NyaXB0c1wiOntcIndhdGNoXCI6XCJjcm9zcy1lbnYgVEFSR0VUPWRldmVsb3BtZW50IHdlYnBhY2sgLS1jb25maWcgYnVpbGQvY29uZmlnLmpzIC0tcHJvZ3Jlc3MgLS1oaWRlLW1vZHVsZXMgLS13YXRjaFwiLFwiZGV2XCI6XCJjcm9zcy1lbnYgTk9ERV9FTlY9ZGV2ZWxvcG1lbnQgd2VicGFjay1kZXYtc2VydmVyIC0tY29uZmlnIGJ1aWxkL3dlYnBhY2suZGV2LmNvbmZpZy5qcyAtLW9wZW4gLS1ob3RcIixcImJ1aWxkXCI6XCJucG0gcnVuIGJ1aWxkOmRpc3QgJiYgbnBtIHJ1biBidWlsZDplczVcIixcImJ1aWxkOmRldlwiOlwiY3Jvc3MtZW52IE5PREVfRU5WPXByb2R1Y3Rpb24gbm9kZSBidWlsZC93ZWJwYWNrLmRldi5jb25maWcuanNcIixcImJ1aWxkOmRpc3RcIjpcInJpbXJhZiBkaXN0ICYmIGNyb3NzLWVudiBOT0RFX0VOVj1wcm9kdWN0aW9uIHdlYnBhY2sgLS1jb25maWcgYnVpbGQvY29uZmlnLmpzIC0tcHJvZ3Jlc3MgLS1oaWRlLW1vZHVsZXNcIixcImJ1aWxkOmVzNVwiOlwicmltcmFmIGVzNSAmJiBjcm9zcy1lbnYgTk9ERV9FTlY9ZXM1IGJhYmVsIHNyYyAtLW91dC1kaXIgZXM1XCIsXCJkZWJ1Zy1idWlsZFwiOlwibm9kZSAtLWluc3BlY3QgLS1kZWJ1Zy1icmsgYnVpbGQvY29uZmlnLmpzXCIsXCJkZWJ1Zzp0ZXN0XCI6XCIuL25vZGVfbW9kdWxlcy8uYmluL2Nyb3NzLWVudiBOT0RFX0VOVj10ZXN0IG5vZGUgLS1pbnNwZWN0IC0taW5zcGVjdC1icmsgLi9ub2RlX21vZHVsZXMvamVzdC9iaW4vamVzdC5qcyAtLW5vLWNhY2hlIC0tcnVuSW5CYW5kIC0tdmVyYm9zZVwiLFwidGVzdFwiOlwiY3Jvc3MtZW52IE5PREVfRU5WPXRlc3QgamVzdCAtaVwiLFwidGVzdDpjb3ZlcmFnZVwiOlwiY3Jvc3MtZW52IE5PREVfRU5WPXRlc3QgamVzdCAtaSAtLWNvdmVyYWdlXCIsXCJsaW50XCI6XCJlc2xpbnQgLS1leHQgLmpzLC52dWUgc3JjXCIsXCJwcmVwYXJlY29tbWl0bXNnXCI6XCJub2RlIGRldi9wcmVwYXJlLWNvbW1pdC1tZXNzYWdlLmpzXCIsXCJwcmVjb21taXRcIjpcInlhcm4gcnVuIGxpbnQgJiYgeWFybiB0ZXN0XCIsXCJwcmVwdXNoXCI6XCJ5YXJuIHJ1biBsaW50ICYmIHlhcm4gdGVzdFwiLFwicHJlcGFyZVwiOlwiZ2l0IHVwZGF0ZS1pbmRleCAtLXNraXAtd29ya3RyZWUgLmVudlwifSxcImRlc2NyaXB0aW9uXCI6XCJWdWUuanMgMiBTZW1hbnRpYyBDb21wb25lbnQgRnJhbWV3b3JrXCIsXCJkZXZEZXBlbmRlbmNpZXNcIjp7XCJhdXRvcHJlZml4ZXJcIjpcIl43LjEuNFwiLFwiYXZvcmlhelwiOlwiXjQuMS4wXCIsXCJiYWJlbC1jbGlcIjpcIl42LjI2LjBcIixcImJhYmVsLWNvcmVcIjpcIl42LjI2LjBcIixcImJhYmVsLWVzbGludFwiOlwiXjguMC4wXCIsXCJiYWJlbC1qZXN0XCI6XCJeMjEuMC4yXCIsXCJiYWJlbC1sb2FkZXJcIjpcIl43LjEuMlwiLFwiYmFiZWwtcGx1Z2luLWFkZC1maWxlaGFzaFwiOlwiXjYuOS40XCIsXCJiYWJlbC1wbHVnaW4tZGV0ZWN0aXZlXCI6XCJeMi4wLjBcIixcImJhYmVsLXBsdWdpbi1tb2R1bGUtcmVzb2x2ZXJcIjpcIl4yLjcuMVwiLFwiYmFiZWwtcGx1Z2luLXRyYW5zZm9ybS1hc3luYy10by1nZW5lcmF0b3JcIjpcIl42LjI0LjFcIixcImJhYmVsLXBsdWdpbi10cmFuc2Zvcm0tcnVudGltZVwiOlwiXjYuMjMuMFwiLFwiYmFiZWwtcG9seWZpbGxcIjpcIl42LjI2LjBcIixcImJhYmVsLXByZXNldC1lbnZcIjpcIl4xLjUuMVwiLFwiYmFiZWwtcHJlc2V0LWVzMjAxNVwiOlwiXjYuMjQuMVwiLFwiYmFiZWwtcHJlc2V0LXN0YWdlLTJcIjpcIl42LjI0LjFcIixcImNyb3NzLWVudlwiOlwiXjUuMC41XCIsXCJjcm9zcy1zcGF3blwiOlwiXjUuMS4wXCIsXCJjc3MtbG9hZGVyXCI6XCJeMC4yOC43XCIsXCJjc3MtbXFwYWNrZXJcIjpcIl42LjAuMVwiLFwiY3NzbmFub1wiOlwiXjMuMTAuMFwiLFwiZG90ZW52XCI6XCJeNC4wLjBcIixcImVzbGludFwiOlwiXjQuNi4xXCIsXCJlc2xpbnQtY29uZmlnLXN0YW5kYXJkXCI6XCJeMTAuMi4xXCIsXCJlc2xpbnQtY29uZmlnLXZ1ZVwiOlwiXjIuMC4yXCIsXCJlc2xpbnQtZnJpZW5kbHktZm9ybWF0dGVyXCI6XCJeMy4wLjBcIixcImVzbGludC1sb2FkZXJcIjpcIl4xLjYuMVwiLFwiZXNsaW50LXBsdWdpbi1odG1sXCI6XCJeMy4yLjFcIixcImVzbGludC1wbHVnaW4taW1wb3J0XCI6XCJeMi43LjBcIixcImVzbGludC1wbHVnaW4tbm9kZVwiOlwiXjUuMS4xXCIsXCJlc2xpbnQtcGx1Z2luLXByb21pc2VcIjpcIl4zLjQuMFwiLFwiZXNsaW50LXBsdWdpbi1wdWdcIjpcIl4xLjAuMFwiLFwiZXNsaW50LXBsdWdpbi1zdGFuZGFyZFwiOlwiXjMuMC4xXCIsXCJlc2xpbnQtcGx1Z2luLXZ1ZVwiOlwiXjIuMS4wXCIsXCJldmVudHNvdXJjZS1wb2x5ZmlsbFwiOlwiXjAuOS42XCIsXCJleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cIjpcIl4zLjAuMFwiLFwiZnJpZW5kbHktZXJyb3JzLXdlYnBhY2stcGx1Z2luXCI6XCJeMS42LjFcIixcImZ1bmN0aW9uLWJpbmRcIjpcIl4xLjEuMVwiLFwiaHVza3lcIjpcIl4wLjE0LjNcIixcImlucXVpcmVyXCI6XCJeNC4wLjFcIixcImplc3RcIjpcIl4yMS4xLjBcIixcImplc3QtY2xpXCI6XCJeMjEuMS4wXCIsXCJqZXN0LWNzcy1tb2R1bGVzXCI6XCJeMS4xLjBcIixcImplc3Qtc2VyaWFsaXplci1odG1sXCI6XCJeNC4wLjBcIixcImplc3QtdnVlLXByZXByb2Nlc3NvclwiOlwiXjEuMS4wXCIsXCJvcHRpbWl6ZS1jc3MtYXNzZXRzLXdlYnBhY2stcGx1Z2luXCI6XCJeMy4yLjBcIixcIm9wdGltaXplLWpzLXBsdWdpblwiOlwiXjAuMC40XCIsXCJwb3N0Y3NzLWxvYWRlclwiOlwiXjEuMy4zXCIsXCJwcm9ncmVzcy1iYXItd2VicGFjay1wbHVnaW5cIjpcIl4xLjEwLjBcIixcInB1Z1wiOlwiXjIuMC4wLXJjLjRcIixcInB1Zy1sb2FkZXJcIjpcIl4yLjMuMFwiLFwicmVzc1wiOlwiXjEuMS4xXCIsXCJyaW1yYWZcIjpcIl4yLjYuMlwiLFwic2VtdmVyXCI6XCJeNS40LjFcIixcInNlcmlhbGl6ZS1qYXZhc2NyaXB0XCI6XCJeMS4zLjBcIixcInNoZWxsanNcIjpcIl4wLjcuOFwiLFwic3R5bGUtbG9hZGVyXCI6XCJeMC4xOC4yXCIsXCJzdHlsdXNcIjpcIl4wLjU0LjVcIixcInN0eWx1cy1sb2FkZXJcIjpcIl4zLjAuMVwiLFwidWdsaWZ5anMtd2VicGFjay1wbHVnaW5cIjpcIl4wLjQuNlwiLFwidnVlXCI6XCJeMi41LjRcIixcInZ1ZS1sb2FkZXJcIjpcIl4xMy41LjBcIixcInZ1ZS1yb3V0ZXJcIjpcIl4zLjAuMVwiLFwidnVlLXNlcnZlci1yZW5kZXJlclwiOlwiXjIuNS40XCIsXCJ2dWUtdGVtcGxhdGUtY29tcGlsZXJcIjpcIl4yLjUuNFwiLFwid2VicGFja1wiOlwiXjMuNi4wXCIsXCJ3ZWJwYWNrLWJ1bmRsZS1hbmFseXplclwiOlwiXjIuOS4wXCIsXCJ3ZWJwYWNrLWJ1bmRsZS1zaXplLWFuYWx5emVyXCI6XCJeMi43LjBcIixcIndlYnBhY2stZGV2LXNlcnZlclwiOlwiXjIuOC4yXCIsXCJ3ZWJwYWNrLW1lcmdlXCI6XCJeNC4xLjBcIixcIndyaXRlLWZpbGUtd2VicGFjay1wbHVnaW5cIjpcIl40LjEuMFwifSxcImRlcGVuZGVuY2llc1wiOnt9LFwicGVlckRlcGVuZGVuY2llc1wiOntcInZ1ZVwiOlwiXjIuNS4wXCJ9LFwiZW5naW5lc1wiOntcIm5vZGVcIjpcIj49IDQuMC4wXCIsXCJucG1cIjpcIj49IDMuMC4wXCJ9LFwiamVzdFwiOntcInZlcmJvc2VcIjpmYWxzZSxcInJvb3RzXCI6W1wiPHJvb3REaXI+L3NyY1wiXSxcIm1vZHVsZUZpbGVFeHRlbnNpb25zXCI6W1wianNcIixcInZ1ZVwiXSxcIm1vZHVsZURpcmVjdG9yaWVzXCI6W1wibm9kZV9tb2R1bGVzXCJdLFwibW9kdWxlTmFtZU1hcHBlclwiOntcInNyYy8oLiopXCI6XCI8cm9vdERpcj4vc3JjLyQxXCJ9LFwidHJhbnNmb3JtXCI6e1wiLipcXFxcLih2dWUpJFwiOlwiPHJvb3REaXI+L25vZGVfbW9kdWxlcy9qZXN0LXZ1ZS1wcmVwcm9jZXNzb3JcIixcIlxcXFwuKHN0eWwpJFwiOlwiPHJvb3REaXI+L25vZGVfbW9kdWxlcy9qZXN0LWNzcy1tb2R1bGVzXCIsXCIuKlxcXFwuKHZ1ZXxqcykkXCI6XCI8cm9vdERpcj4vbm9kZV9tb2R1bGVzL2JhYmVsLWplc3RcIn0sXCJ0cmFuc2Zvcm1JZ25vcmVQYXR0ZXJuc1wiOltcIm5vZGVfbW9kdWxlcy8oPyF2dWUtcm91dGVyKVwiXSxcInNuYXBzaG90U2VyaWFsaXplcnNcIjpbXCJqZXN0LXNlcmlhbGl6ZXItaHRtbFwiXX19XG5cbi8qKiovIH0pLFxuLyogNTEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WdWV0aWZ5X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUyKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZ1ZXRpZnlcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1Z1ZXRpZnlfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkFwcF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1NSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWQXBwXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WQXBwX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZBbGVydF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2MSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWQWxlcnRcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZBbGVydF9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19WQXZhdGFyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDY3KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZBdmF0YXJcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1ZBdmF0YXJfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVkJhZGdlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcwKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZCYWRnZVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVkJhZGdlX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1ZCb3R0b21OYXZfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNzMpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVkJvdHRvbU5hdlwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fVkJvdHRvbU5hdl9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19WQm90dG9tU2hlZXRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNzYpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVkJvdHRvbVNoZWV0XCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19WQm90dG9tU2hlZXRfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fVkJyZWFkY3J1bWJzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgxKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZCcmVhZGNydW1ic1wiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fVkJyZWFkY3J1bWJzX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1ZCdG5fXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTApO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVkJ0blwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fVkJ0bl9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19WQnRuVG9nZ2xlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDg4KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZCdG5Ub2dnbGVcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1ZCdG5Ub2dnbGVfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX1ZDYXJkX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE3KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZDYXJkXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fVkNhcmRfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfX1ZDYXJvdXNlbF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5NSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWQ2Fyb3VzZWxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19WQ2Fyb3VzZWxfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfX1ZDaGVja2JveF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyOSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWQ2hlY2tib3hcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEyX19WQ2hlY2tib3hfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfX1ZDaGlwX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMzKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZDaGlwXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fVkNoaXBfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTRfX1ZEYXRhVGFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTAzKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZEYXRhVGFibGVcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE0X19WRGF0YVRhYmxlX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE1X19WRGF0ZVBpY2tlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMzYpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVkRhdGVQaWNrZXJcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE1X19WRGF0ZVBpY2tlcl9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNl9fVkRpYWxvZ19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNDQpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVkRpYWxvZ1wiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTZfX1ZEaWFsb2dfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTdfX1ZEaXZpZGVyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE0NSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWRGl2aWRlclwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTdfX1ZEaXZpZGVyX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE4X19WRXhwYW5zaW9uUGFuZWxfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTQ4KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZFeHBhbnNpb25QYW5lbFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMThfX1ZFeHBhbnNpb25QYW5lbF9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xOV9fVkZvb3Rlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNTIpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVkZvb3RlclwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTlfX1ZGb290ZXJfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjBfX1ZGb3JtX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1NSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWRm9ybVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjBfX1ZGb3JtX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIxX19WR3JpZF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNTcpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVkdyaWRcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIxX19WR3JpZF9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yMl9fVkljb25fXyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWSWNvblwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjJfX1ZJY29uX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIzX19WTGlzdF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNyk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWTGlzdFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjNfX1ZMaXN0X19bXCJmXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI0X19WTWVudV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzOCk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWTWVudVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjRfX1ZNZW51X19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI1X19WTmF2aWdhdGlvbkRyYXdlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNjMpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVk5hdmlnYXRpb25EcmF3ZXJcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI1X19WTmF2aWdhdGlvbkRyYXdlcl9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNl9fVlBhZ2luYXRpb25fXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTY2KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZQYWdpbmF0aW9uXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNl9fVlBhZ2luYXRpb25fX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjdfX1ZQYXJhbGxheF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNjkpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVlBhcmFsbGF4XCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yN19fVlBhcmFsbGF4X19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI4X19WUHJvZ3Jlc3NDaXJjdWxhcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNzMpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVlByb2dyZXNzQ2lyY3VsYXJcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI4X19WUHJvZ3Jlc3NDaXJjdWxhcl9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yOV9fVlByb2dyZXNzTGluZWFyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDM0KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZQcm9ncmVzc0xpbmVhclwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjlfX1ZQcm9ncmVzc0xpbmVhcl9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zMF9fVlJhZGlvR3JvdXBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTc2KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZSYWRpb0dyb3VwXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zMF9fVlJhZGlvR3JvdXBfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzFfX1ZTZWxlY3RfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMzUpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVlNlbGVjdFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzFfX1ZTZWxlY3RfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzJfX1ZTbGlkZXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTgxKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZTbGlkZXJcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzMyX19WU2xpZGVyX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzMzX19WU25hY2tiYXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTg0KTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZTbmFja2JhclwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzNfX1ZTbmFja2Jhcl9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zNF9fVlNwZWVkRGlhbF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxODcpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVlNwZWVkRGlhbFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzRfX1ZTcGVlZERpYWxfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzVfX1ZTdGVwcGVyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE5MCk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWU3RlcHBlclwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzVfX1ZTdGVwcGVyX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM2X19WU3ViaGVhZGVyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE5NSk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWU3ViaGVhZGVyXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zNl9fVlN1YmhlYWRlcl9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zN19fVlN3aXRjaF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOTgpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVlN3aXRjaFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzdfX1ZTd2l0Y2hfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzhfX1ZTeXN0ZW1CYXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjAxKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZTeXN0ZW1CYXJcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM4X19WU3lzdGVtQmFyX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM5X19WVGFic19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMDQpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVlRhYnNcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM5X19WVGFic19fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80MF9fVlRleHRGaWVsZF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMTIpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVlRleHRGaWVsZFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDBfX1ZUZXh0RmllbGRfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDFfX1ZUaW1lUGlja2VyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxNCk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJWVGltZVBpY2tlclwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDFfX1ZUaW1lUGlja2VyX19bXCJhXCJdOyB9KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQyX19WVG9vbGJhcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMTkpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVlRvb2xiYXJcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQyX19WVG9vbGJhcl9fW1wiYVwiXTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80M19fVlRvb2x0aXBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjIzKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIlZUb29sdGlwXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80M19fVlRvb2x0aXBfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDRfX3RyYW5zaXRpb25zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVHJhbnNpdGlvbnNcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQ0X190cmFuc2l0aW9uc19fW1wiaFwiXTsgfSk7XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbi8qKiovIH0pLFxuLyogNTIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfYXBwbGljYXRpb25fXyA9IF9fd2VicGFja19yZXF1aXJlX18oNTMpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX3RoZW1lX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDU0KTtcblxuXG5cbnZhciBWdWV0aWZ5ID0ge1xuICBpbnN0YWxsOiBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICAgIHZhciBvcHRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICAgIGlmICh0aGlzLmluc3RhbGxlZCkgcmV0dXJuO1xuXG4gICAgdGhpcy5pbnN0YWxsZWQgPSB0cnVlO1xuXG4gICAgdmFyICR2dWV0aWZ5ID0ge307XG4gICAgVnVlLnV0aWwuZGVmaW5lUmVhY3RpdmUoJHZ1ZXRpZnksICdpbnNwaXJlJywge1xuICAgICAgYnJlYWtwb2ludDoge30sXG4gICAgICBhcHBsaWNhdGlvbjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfYXBwbGljYXRpb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXSxcbiAgICAgIGRhcms6IGZhbHNlLFxuICAgICAgdGhlbWU6IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc190aGVtZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKShvcHRzLnRoZW1lKSxcbiAgICAgIHRvdWNoU3VwcG9ydDogZmFsc2VcbiAgICB9KTtcblxuICAgIFZ1ZS5wcm90b3R5cGUuJHZ1ZXRpZnkgPSAkdnVldGlmeS5pbnNwaXJlO1xuXG4gICAgaWYgKG9wdHMudHJhbnNpdGlvbnMpIHtcbiAgICAgIE9iamVjdC5rZXlzKG9wdHMudHJhbnNpdGlvbnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgdCA9IG9wdHMudHJhbnNpdGlvbnNba2V5XTtcbiAgICAgICAgaWYgKHQubmFtZSAhPT0gdW5kZWZpbmVkICYmIHQubmFtZS5zdGFydHNXaXRoKCd2LScpKSB7XG4gICAgICAgICAgVnVlLmNvbXBvbmVudCh0Lm5hbWUsIHQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAob3B0cy5kaXJlY3RpdmVzKSB7XG4gICAgICBPYmplY3Qua2V5cyhvcHRzLmRpcmVjdGl2ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgZCA9IG9wdHMuZGlyZWN0aXZlc1trZXldO1xuICAgICAgICBWdWUuZGlyZWN0aXZlKGQubmFtZSwgZCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAob3B0cy5jb21wb25lbnRzKSB7XG4gICAgICBPYmplY3Qua2V5cyhvcHRzLmNvbXBvbmVudHMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgYyA9IG9wdHMuY29tcG9uZW50c1trZXldO1xuICAgICAgICBWdWUudXNlKGMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKFZ1ZXRpZnkpO1xuXG4vKioqLyB9KSxcbi8qIDUzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGJhcjogMCxcbiAgdG9wOiAwLFxuICBib3R0b206IDAsXG4gIGxlZnQ6IDAsXG4gIHJpZ2h0OiAwXG59KTtcblxuLyoqKi8gfSksXG4vKiA1NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgZXhwb3J0IChpbW11dGFibGUpICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gdGhlbWU7XG52YXIgVEhFTUVfREVGQVVMVFMgPSB7XG4gIHByaW1hcnk6ICcjMTk3NkQyJyxcbiAgc2Vjb25kYXJ5OiAnIzQyNDI0MicsXG4gIGFjY2VudDogJyM4MkIxRkYnLFxuICBlcnJvcjogJyNGRjUyNTInLFxuICBpbmZvOiAnIzIxOTZGMycsXG4gIHN1Y2Nlc3M6ICcjNENBRjUwJyxcbiAgd2FybmluZzogJyNGRkMxMDcnXG59O1xuXG5mdW5jdGlvbiB0aGVtZSh0aGVtZSkge1xuICB0aGVtZSA9IHRoZW1lIHx8IHt9O1xuXG4gIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBUSEVNRV9ERUZBVUxUUywgdGhlbWUpO1xufVxuXG4vKioqLyB9KSxcbi8qIDU1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkFwcF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1Nik7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkFwcF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkFwcF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkFwcF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQXBwX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDU2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2FwcF90aGVtZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1OCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfYXBwX2JyZWFrcG9pbnRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNTkpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fZGlyZWN0aXZlc19yZXNpemVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX191dGlsX3BvaW50ZXJTdXBwb3J0X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYwKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbl9fd2VicGFja19yZXF1aXJlX18oNTcpO1xuXG4vLyBDb21wb25lbnQgbGV2ZWwgbWl4aW5zXG5cblxuXG4vLyBEaXJlY3RpdmVzXG5cblxuLy8gVXRpbGl0aWVzXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWFwcCcsXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfYXBwX2JyZWFrcG9pbnRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfYXBwX3RoZW1lX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fdXRpbF9wb2ludGVyU3VwcG9ydF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBkaXJlY3RpdmVzOiB7XG4gICAgUmVzaXplOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2RpcmVjdGl2ZXNfcmVzaXplX19bXCJhXCIgLyogZGVmYXVsdCAqL11cbiAgfSxcblxuICBwcm9wczoge1xuICAgIGlkOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnYXBwJ1xuICAgIH0sXG4gICAgZGFyazogQm9vbGVhblxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiBfZGVmaW5lUHJvcGVydHkoe30sICd0aGVtZS0tJyArICh0aGlzLmRhcmsgPyAnZGFyaycgOiAnbGlnaHQnKSwgdHJ1ZSk7XG4gICAgfVxuICB9LFxuXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy4kdnVldGlmeS5kYXJrID0gdGhpcy5kYXJrO1xuICB9LFxuXG5cbiAgd2F0Y2g6IHtcbiAgICBkYXJrOiBmdW5jdGlvbiBkYXJrKCkge1xuICAgICAgdGhpcy4kdnVldGlmeS5kYXJrID0gdGhpcy5kYXJrO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIGRhdGEgPSB7XG4gICAgICBzdGF0aWNDbGFzczogJ2FwcGxpY2F0aW9uJyxcbiAgICAgICdjbGFzcyc6IHRoaXMuY2xhc3NlcyxcbiAgICAgIGF0dHJzOiB7ICdkYXRhLWFwcCc6IHRydWUgfSxcbiAgICAgIGRvbVByb3BzOiB7IGlkOiB0aGlzLmlkIH0sXG4gICAgICBkaXJlY3RpdmVzOiBbe1xuICAgICAgICBuYW1lOiAncmVzaXplJyxcbiAgICAgICAgdmFsdWU6IHRoaXMub25SZXNpemVcbiAgICAgIH1dXG4gICAgfTtcblxuICAgIHZhciB3cmFwcGVyID0gaCgnZGl2JywgeyBzdGF0aWNDbGFzczogJ2FwcGxpY2F0aW9uLS13cmFwJyB9LCB0aGlzLiRzbG90cy5kZWZhdWx0KTtcblxuICAgIHJldHVybiBoKCdkaXYnLCBkYXRhLCBbd3JhcHBlcl0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiA1NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDU4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0eWxlOiBudWxsXG4gICAgfTtcbiAgfSxcblxuICB3YXRjaDoge1xuICAgICckdnVldGlmeS50aGVtZSc6IHtcbiAgICAgIGRlZXA6IHRydWUsXG4gICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKCkge1xuICAgICAgICB0aGlzLmFwcGx5VGhlbWUoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhpcy4kc3NyQ29udGV4dCAmJiAhdGhpcy4kc3NyQ29udGV4dC5fc3R5bGVzICYmICh0aGlzLiRzc3JDb250ZXh0Ll9zdHlsZXMgPSB7fSk7XG4gICAgICByZXR1cm4gdGhpcy4kc3NyQ29udGV4dCAmJiB0aGlzLiRzc3JDb250ZXh0Ll9zdHlsZXMgJiYgKHRoaXMuJHNzckNvbnRleHQuX3N0eWxlc1sndnVldGlmeS10aGVtZS1zdHlsZXNoZWV0J10gPSB7XG4gICAgICAgIGlkczogWyd2dWV0aWZ5LXRoZW1lLXN0eWxlc2hlZXQnXSxcbiAgICAgICAgY3NzOiB0aGlzLmdlbkNvbG9ycyh0aGlzLiR2dWV0aWZ5LnRoZW1lKSxcbiAgICAgICAgbWVkaWE6ICcnXG4gICAgICB9KTtcbiAgICB9XG4gICAgdGhpcy5nZW5TdHlsZSgpO1xuICAgIHRoaXMuYXBwbHlUaGVtZSgpO1xuICB9LFxuXG5cbiAgbWV0aG9kczoge1xuICAgIGFwcGx5VGhlbWU6IGZ1bmN0aW9uIGFwcGx5VGhlbWUoKSB7XG4gICAgICB0aGlzLnN0eWxlLmlubmVySFRNTCA9IHRoaXMuZ2VuQ29sb3JzKHRoaXMuJHZ1ZXRpZnkudGhlbWUpO1xuICAgIH0sXG4gICAgZ2VuQ29sb3JzOiBmdW5jdGlvbiBnZW5Db2xvcnModGhlbWUpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBjb2xvcnMgPSBPYmplY3Qua2V5cyh0aGVtZSkubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gdGhlbWVba2V5XTtcblxuICAgICAgICByZXR1cm4gX3RoaXMuZ2VuQmFja2dyb3VuZENvbG9yKGtleSwgdmFsdWUpICsgX3RoaXMuZ2VuVGV4dENvbG9yKGtleSwgdmFsdWUpO1xuICAgICAgfSk7XG5cbiAgICAgIGNvbG9ycy5wdXNoKHRoaXMuZ2VuQW5jaG9yQ29sb3IodGhpcy4kdnVldGlmeS50aGVtZS5wcmltYXJ5KSk7XG5cbiAgICAgIHJldHVybiBjb2xvcnMuam9pbignJyk7XG4gICAgfSxcbiAgICBnZW5BbmNob3JDb2xvcjogZnVuY3Rpb24gZ2VuQW5jaG9yQ29sb3IoY29sb3IpIHtcbiAgICAgIHJldHVybiAnLmFwcGxpY2F0aW9uIGF7Y29sb3I6ICcgKyBjb2xvciArICc7fSc7XG4gICAgfSxcbiAgICBnZW5CYWNrZ3JvdW5kQ29sb3I6IGZ1bmN0aW9uIGdlbkJhY2tncm91bmRDb2xvcihrZXksIHZhbHVlKSB7XG4gICAgICByZXR1cm4gJy4nICsga2V5ICsgJ3tiYWNrZ3JvdW5kLWNvbG9yOicgKyB2YWx1ZSArICcgIWltcG9ydGFudDtib3JkZXItY29sb3I6JyArIHZhbHVlICsgJyAhaW1wb3J0YW50O30nO1xuICAgIH0sXG4gICAgZ2VuVGV4dENvbG9yOiBmdW5jdGlvbiBnZW5UZXh0Q29sb3Ioa2V5LCB2YWx1ZSkge1xuICAgICAgcmV0dXJuICcuJyArIGtleSArICctLXRleHR7Y29sb3I6JyArIHZhbHVlICsgJyAhaW1wb3J0YW50O30nO1xuICAgIH0sXG4gICAgZ2VuU3R5bGU6IGZ1bmN0aW9uIGdlblN0eWxlKCkge1xuICAgICAgdmFyIHN0eWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtdnVlLXNzci1pZD12dWV0aWZ5LXRoZW1lLXN0eWxlc2hlZXRdJyk7XG5cbiAgICAgIGlmICghc3R5bGUpIHtcbiAgICAgICAgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgICBzdHlsZS50eXBlID0gJ3RleHQvY3NzJztcbiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc3R5bGUgPSBzdHlsZTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDU5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBBIG1vZGlmaWVkIHZlcnNpb24gb2YgaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vY2IxMDkvYjA3NGE2NWY3NTk1Y2ZmYzIxY2VhNTljZThkMTVmOWJcbiAqL1xuXG4vKipcbiAqIEEgVnVlIG1peGluIHRvIGdldCB0aGUgY3VycmVudCB3aWR0aC9oZWlnaHQgYW5kIHRoZSBhc3NvY2lhdGVkIGJyZWFrcG9pbnQuXG4gKlxuICogVXNlZnVsIHRvIGUuZy4gYWRhcHQgdGhlIHVzZXIgaW50ZXJmYWNlIGZyb20gaW5zaWRlIGEgVnVlIGNvbXBvbmVudFxuICogYXMgb3Bwb3NlZCB0byB1c2luZyBDU1MgY2xhc3Nlcy4gVGhlIGJyZWFrcG9pbnQgcGl4ZWwgdmFsdWVzIGFuZFxuICogcmFuZ2UgbmFtZXMgYXJlIHRha2VuIGZyb20gVnVldGlmeSAoaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcykuXG4gKlxuICogVXNlIHdpdGhpbiBhIGNvbXBvbmVudDpcbiAqXG4gKiAgIGltcG9ydCBicmVha3BvaW50IGZyb20gJy4vYnJlYWtwb2ludC5qcydcbiAqXG4gKiAgIGV4cG9ydCBkZWZhdWx0IHtcbiAqICAgICBuYW1lOiAnbXktY29tcG9uZW50JyxcbiAqICAgICBtaXhpbnM6IFticmVha3BvaW50XSxcbiAqICAgICAuLi5cbiAqXG4gKiBUaGVuIGluc2lkZSBhIHRlbXBsYXRlOlxuICpcbiAqICAgPGRpdiB2LWlmPVwiJGJyZWFrcG9pbnQuc21BbmREb3duXCI+Li4uPC9kaXY+XG4gKi9cbnZhciBicmVha3BvaW50ID0ge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGllbnRXaWR0aDogY2xpZW50RGltZW5zaW9ucy5nZXRXaWR0aCgpLFxuICAgICAgY2xpZW50SGVpZ2h0OiBjbGllbnREaW1lbnNpb25zLmdldEhlaWdodCgpXG4gICAgfTtcbiAgfSxcblxuXG4gIGNvbXB1dGVkOiB7XG4gICAgYnJlYWtwb2ludDogZnVuY3Rpb24gYnJlYWtwb2ludCgpIHtcbiAgICAgIHZhciB4cyA9IHRoaXMuY2xpZW50V2lkdGggPCA2MDA7XG4gICAgICB2YXIgc20gPSB0aGlzLmNsaWVudFdpZHRoIDwgOTYwICYmICF4cztcbiAgICAgIHZhciBtZCA9IHRoaXMuY2xpZW50V2lkdGggPCAxMjgwIC0gMTYgJiYgIShzbSB8fCB4cyk7XG4gICAgICB2YXIgbGcgPSB0aGlzLmNsaWVudFdpZHRoIDwgMTkyMCAtIDE2ICYmICEobWQgfHwgc20gfHwgeHMpO1xuICAgICAgdmFyIHhsID0gdGhpcy5jbGllbnRXaWR0aCA+PSAxOTIwIC0gMTYgJiYgIShsZyB8fCBtZCB8fCBzbSB8fCB4cyk7XG5cbiAgICAgIHZhciB4c09ubHkgPSB4cztcbiAgICAgIHZhciBzbU9ubHkgPSBzbTtcbiAgICAgIHZhciBzbUFuZERvd24gPSAoeHMgfHwgc20pICYmICEobWQgfHwgbGcgfHwgeGwpO1xuICAgICAgdmFyIHNtQW5kVXAgPSAheHMgJiYgKHNtIHx8IG1kIHx8IGxnIHx8IHhsKTtcbiAgICAgIHZhciBtZE9ubHkgPSBtZDtcbiAgICAgIHZhciBtZEFuZERvd24gPSAoeHMgfHwgc20gfHwgbWQpICYmICEobGcgfHwgeGwpO1xuICAgICAgdmFyIG1kQW5kVXAgPSAhKHhzIHx8IHNtKSAmJiAobWQgfHwgbGcgfHwgeGwpO1xuICAgICAgdmFyIGxnT25seSA9IGxnO1xuICAgICAgdmFyIGxnQW5kRG93biA9ICh4cyB8fCBzbSB8fCBtZCB8fCBsZykgJiYgIXhsO1xuICAgICAgdmFyIGxnQW5kVXAgPSAhKHhzIHx8IHNtIHx8IG1kKSAmJiAobGcgfHwgeGwpO1xuICAgICAgdmFyIHhsT25seSA9IHhsO1xuXG4gICAgICB2YXIgbmFtZSA9IHZvaWQgMDtcbiAgICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgICBjYXNlIHhzOlxuICAgICAgICAgIG5hbWUgPSAneHMnO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIHNtOlxuICAgICAgICAgIG5hbWUgPSAnc20nO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIG1kOlxuICAgICAgICAgIG5hbWUgPSAnbWQnO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIGxnOlxuICAgICAgICAgIG5hbWUgPSAnbGcnO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIG5hbWUgPSAneGwnO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgICAvLyBEZWZpbml0ZSBicmVha3BvaW50LlxuICAgICAgICB4czogeHMsXG4gICAgICAgIHNtOiBzbSxcbiAgICAgICAgbWQ6IG1kLFxuICAgICAgICBsZzogbGcsXG4gICAgICAgIHhsOiB4bCxcblxuICAgICAgICAvLyBVc2VmdWwgZS5nLiB0byBjb25zdHJ1Y3QgQ1NTIGNsYXNzIG5hbWVzIGR5bmFtaWNhbGx5LlxuICAgICAgICBuYW1lOiBuYW1lLFxuXG4gICAgICAgIC8vIEJyZWFrcG9pbnQgcmFuZ2VzLlxuICAgICAgICB4c09ubHk6IHhzT25seSxcbiAgICAgICAgc21Pbmx5OiBzbU9ubHksXG4gICAgICAgIHNtQW5kRG93bjogc21BbmREb3duLFxuICAgICAgICBzbUFuZFVwOiBzbUFuZFVwLFxuICAgICAgICBtZE9ubHk6IG1kT25seSxcbiAgICAgICAgbWRBbmREb3duOiBtZEFuZERvd24sXG4gICAgICAgIG1kQW5kVXA6IG1kQW5kVXAsXG4gICAgICAgIGxnT25seTogbGdPbmx5LFxuICAgICAgICBsZ0FuZERvd246IGxnQW5kRG93bixcbiAgICAgICAgbGdBbmRVcDogbGdBbmRVcCxcbiAgICAgICAgeGxPbmx5OiB4bE9ubHksXG5cbiAgICAgICAgLy8gRm9yIGN1c3RvbSBicmVha3BvaW50IGxvZ2ljLlxuICAgICAgICB3aWR0aDogdGhpcy5jbGllbnRXaWR0aCxcbiAgICAgICAgaGVpZ2h0OiB0aGlzLmNsaWVudEhlaWdodFxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBicmVha3BvaW50OiBmdW5jdGlvbiBicmVha3BvaW50KHZhbCkge1xuICAgICAgdGhpcy4kdnVldGlmeS5icmVha3BvaW50ID0gdmFsO1xuICAgIH1cbiAgfSxcblxuICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge1xuICAgIHRoaXMuJHZ1ZXRpZnkuYnJlYWtwb2ludCA9IHRoaXMuYnJlYWtwb2ludDtcbiAgfSxcblxuXG4gIG1ldGhvZHM6IHtcbiAgICBvblJlc2l6ZTogZnVuY3Rpb24gb25SZXNpemUoKSB7XG4gICAgICB0aGlzLmNsaWVudFdpZHRoID0gY2xpZW50RGltZW5zaW9ucy5nZXRXaWR0aCgpO1xuICAgICAgdGhpcy5jbGllbnRIZWlnaHQgPSBjbGllbnREaW1lbnNpb25zLmdldEhlaWdodCgpO1xuICAgIH1cbiAgfVxuXG4gIC8vIENyb3NzLWJyb3dzZXIgc3VwcG9ydCBhcyBkZXNjcmliZWQgaW46XG4gIC8vIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzEyNDgwODFcbn07dmFyIGNsaWVudERpbWVuc2lvbnMgPSB7XG4gIGdldFdpZHRoOiBmdW5jdGlvbiBnZXRXaWR0aCgpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIDA7IC8vIFNTUlxuICAgIHJldHVybiBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsIHdpbmRvdy5pbm5lcldpZHRoIHx8IDApO1xuICB9LFxuICBnZXRIZWlnaHQ6IGZ1bmN0aW9uIGdldEhlaWdodCgpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIDA7IC8vIFNTUlxuICAgIHJldHVybiBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LCB3aW5kb3cuaW5uZXJIZWlnaHQgfHwgMCk7XG4gIH1cbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoYnJlYWtwb2ludCk7XG5cbi8qKiovIH0pLFxuLyogNjAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19oZWxwZXJzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuXG5cbi8qKlxuICogQG1peGluXG4gKi9cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB2YXIgc2V0dXBQb2ludGVyU3VwcG9ydCA9IGZ1bmN0aW9uIHNldHVwUG9pbnRlclN1cHBvcnQocHJvcE5hbWUsIGV2ZW50TmFtZSkge1xuICAgICAgT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9faGVscGVyc19fW1wiYVwiIC8qIGFkZE9uY2VFdmVudExpc3RlbmVyICovXSkod2luZG93LCBldmVudE5hbWUsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMuJHZ1ZXRpZnlbcHJvcE5hbWVdID0gdHJ1ZTtcbiAgICAgICAgdmFyIGNsYXNzTmFtZSA9ICdhcHBsaWNhdGlvbi0tJyArIHByb3BOYW1lLnJlcGxhY2UoLyhbQS1aXSkvZywgJy0kMScpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFwcF0nKS5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gQWRkcyBhcHBsaWNhdGlvbi0tdG91Y2gtc3VwcG9ydCBjbGFzc1xuICAgIC8vIGFmdGVyIHRvdWNoc3RhcnQgZXZlbnQgaXMgdHJpZ2dlcmVkXG4gICAgc2V0dXBQb2ludGVyU3VwcG9ydCgndG91Y2hTdXBwb3J0JywgJ3RvdWNoc3RhcnQnKTtcblxuICAgIC8vIEFkZCBhcHBsaWNhdGlvbi0taG92ZXItc3VwcG9ydCBjbGFzc1xuICAgIC8vIGFmdGVyIG1vdXNlb3ZlciBldmVudCBpcyB0cmlnZ2VyZWRcbiAgICAvLyBVc2VsZXNzIGFzIHBlciAjODY5IGluIE1vZGVybml6clxuICAgIC8vIHNldHVwUG9pbnRlclN1cHBvcnQoJ2hvdmVyU3VwcG9ydCcsICdtb3VzZW92ZXInKVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiA2MSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZBbGVydF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2Mik7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkFsZXJ0X19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQWxlcnRfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZBbGVydF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQWxlcnRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogNjIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19jb2xvcmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfdG9nZ2xlYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc190cmFuc2l0aW9uYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2Nik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDYzKTtcblxuXG5cblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWFsZXJ0JyxcblxuICBjb21wb25lbnRzOiB7XG4gICAgVkljb246IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkljb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXVxuICB9LFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190b2dnbGVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fbWl4aW5zX3RyYW5zaXRpb25hYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIHByb3BzOiB7XG4gICAgZGlzbWlzc2libGU6IEJvb2xlYW4sXG4gICAgaWNvbjogU3RyaW5nLFxuICAgIG91dGxpbmU6IEJvb2xlYW4sXG4gICAgdHlwZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IodmFsKSB7XG4gICAgICAgIHJldHVybiBbJ2luZm8nLCAnZXJyb3InLCAnc3VjY2VzcycsICd3YXJuaW5nJ10uaW5jbHVkZXModmFsKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGVmYXVsdENvbG9yOiAnZXJyb3InXG4gICAgfTtcbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICB2YXIgY29sb3JQcm9wID0gdGhpcy50eXBlICYmICF0aGlzLmNvbG9yID8gJ3R5cGUnIDogJ2NvbXB1dGVkQ29sb3InO1xuICAgICAgdmFyIGNsYXNzZXMgPSB7XG4gICAgICAgICdhbGVydC0tZGlzbWlzc2libGUnOiB0aGlzLmRpc21pc3NpYmxlLFxuICAgICAgICAnYWxlcnQtLW91dGxpbmUnOiB0aGlzLm91dGxpbmVcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiB0aGlzLm91dGxpbmUgPyB0aGlzLmFkZFRleHRDb2xvckNsYXNzQ2hlY2tzKGNsYXNzZXMsIGNvbG9yUHJvcCkgOiB0aGlzLmFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzKGNsYXNzZXMsIGNvbG9yUHJvcCk7XG4gICAgfSxcbiAgICBjb21wdXRlZEljb246IGZ1bmN0aW9uIGNvbXB1dGVkSWNvbigpIHtcbiAgICAgIGlmICh0aGlzLmljb24gfHwgIXRoaXMudHlwZSkgcmV0dXJuIHRoaXMuaWNvbjtcblxuICAgICAgc3dpdGNoICh0aGlzLnR5cGUpIHtcbiAgICAgICAgY2FzZSAnaW5mbyc6XG4gICAgICAgICAgcmV0dXJuICdpbmZvJztcbiAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgIHJldHVybiAnd2FybmluZyc7XG4gICAgICAgIGNhc2UgJ3N1Y2Nlc3MnOlxuICAgICAgICAgIHJldHVybiAnY2hlY2tfY2lyY2xlJztcbiAgICAgICAgY2FzZSAnd2FybmluZyc6XG4gICAgICAgICAgcmV0dXJuICdwcmlvcml0eV9oaWdoJztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB2YXIgY2hpbGRyZW4gPSBbaCgnZGl2JywgdGhpcy4kc2xvdHMuZGVmYXVsdCldO1xuXG4gICAgaWYgKHRoaXMuY29tcHV0ZWRJY29uKSB7XG4gICAgICBjaGlsZHJlbi51bnNoaWZ0KGgoJ3YtaWNvbicsIHtcbiAgICAgICAgJ2NsYXNzJzogJ2FsZXJ0X19pY29uJ1xuICAgICAgfSwgdGhpcy5jb21wdXRlZEljb24pKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5kaXNtaXNzaWJsZSkge1xuICAgICAgdmFyIGNsb3NlID0gaCgnYScsIHtcbiAgICAgICAgJ2NsYXNzJzogJ2FsZXJ0X19kaXNtaXNzaWJsZScsXG4gICAgICAgIG9uOiB7IGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy4kZW1pdCgnaW5wdXQnLCBmYWxzZSk7XG4gICAgICAgICAgfSB9XG4gICAgICB9LCBbaChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZJY29uX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIHtcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICByaWdodDogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9LCAnY2FuY2VsJyldKTtcblxuICAgICAgY2hpbGRyZW4ucHVzaChjbG9zZSk7XG4gICAgfVxuXG4gICAgdmFyIGFsZXJ0ID0gaCgnZGl2Jywge1xuICAgICAgc3RhdGljQ2xhc3M6ICdhbGVydCcsXG4gICAgICAnY2xhc3MnOiB0aGlzLmNsYXNzZXMsXG4gICAgICBkaXJlY3RpdmVzOiBbe1xuICAgICAgICBuYW1lOiAnc2hvdycsXG4gICAgICAgIHZhbHVlOiB0aGlzLmlzQWN0aXZlXG4gICAgICB9XSxcbiAgICAgIG9uOiB0aGlzLiRsaXN0ZW5lcnNcbiAgICB9LCBjaGlsZHJlbik7XG5cbiAgICBpZiAoIXRoaXMudHJhbnNpdGlvbikgcmV0dXJuIGFsZXJ0O1xuXG4gICAgcmV0dXJuIGgoJ3RyYW5zaXRpb24nLCB7XG4gICAgICBwcm9wczoge1xuICAgICAgICBuYW1lOiB0aGlzLnRyYW5zaXRpb24sXG4gICAgICAgIG9yaWdpbjogdGhpcy5vcmlnaW4sXG4gICAgICAgIG1vZGU6IHRoaXMubW9kZVxuICAgICAgfVxuICAgIH0sIFthbGVydF0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiA2MyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDY0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX3RoZW1lYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19jb2xvcmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDY1KTtcblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWljb24nLFxuXG4gIGZ1bmN0aW9uYWw6IHRydWUsXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfY29sb3JhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX3RoZW1lYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBwcm9wczoge1xuICAgIGRpc2FibGVkOiBCb29sZWFuLFxuICAgIGxhcmdlOiBCb29sZWFuLFxuICAgIGxlZnQ6IEJvb2xlYW4sXG4gICAgbWVkaXVtOiBCb29sZWFuLFxuICAgIHJpZ2h0OiBCb29sZWFuLFxuICAgIHhMYXJnZTogQm9vbGVhblxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIF9yZWYpIHtcbiAgICB2YXIgcHJvcHMgPSBfcmVmLnByb3BzLFxuICAgICAgICBkYXRhID0gX3JlZi5kYXRhLFxuICAgICAgICBfcmVmJGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbixcbiAgICAgICAgY2hpbGRyZW4gPSBfcmVmJGNoaWxkcmVuID09PSB1bmRlZmluZWQgPyBbXSA6IF9yZWYkY2hpbGRyZW47XG5cbiAgICB2YXIgaWNvbk5hbWUgPSAnJztcbiAgICBpZiAoY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICBpY29uTmFtZSA9IGNoaWxkcmVuLnBvcCgpLnRleHQ7XG4gICAgfSBlbHNlIGlmIChkYXRhLmRvbVByb3BzICYmIGRhdGEuZG9tUHJvcHMudGV4dENvbnRlbnQpIHtcbiAgICAgIGljb25OYW1lID0gZGF0YS5kb21Qcm9wcy50ZXh0Q29udGVudDtcbiAgICAgIGRlbGV0ZSBkYXRhLmRvbVByb3BzLnRleHRDb250ZW50O1xuICAgIH0gZWxzZSBpZiAoZGF0YS5kb21Qcm9wcyAmJiBkYXRhLmRvbVByb3BzLmlubmVySFRNTCkge1xuICAgICAgaWNvbk5hbWUgPSBkYXRhLmRvbVByb3BzLmlubmVySFRNTDtcbiAgICAgIGRlbGV0ZSBkYXRhLmRvbVByb3BzLmlubmVySFRNTDtcbiAgICB9XG5cbiAgICB2YXIgaWNvblR5cGUgPSAnbWF0ZXJpYWwtaWNvbnMnO1xuICAgIHZhciB0aGlyZFBhcnR5SWNvbiA9IGljb25OYW1lLmluZGV4T2YoJy0nKSA+IC0xO1xuICAgIGlmICh0aGlyZFBhcnR5SWNvbikgaWNvblR5cGUgPSBpY29uTmFtZS5zbGljZSgwLCBpY29uTmFtZS5pbmRleE9mKCctJykpO1xuXG4gICAgZGF0YS5zdGF0aWNDbGFzcyA9IChpY29uVHlwZSArICcgaWNvbiAnICsgKGRhdGEuc3RhdGljQ2xhc3MgfHwgJycpKS50cmltKCk7XG4gICAgZGF0YS5hdHRycyA9IGRhdGEuYXR0cnMgfHwge307XG5cbiAgICBpZiAoISgnYXJpYS1oaWRkZW4nIGluIGRhdGEuYXR0cnMpKSB7XG4gICAgICBkYXRhLmF0dHJzWydhcmlhLWhpZGRlbiddID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgY2xhc3NlcyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgJ2ljb24tLWRpc2FibGVkJzogcHJvcHMuZGlzYWJsZWQsXG4gICAgICAnaWNvbi0tbGFyZ2UnOiBwcm9wcy5sYXJnZSxcbiAgICAgICdpY29uLS1sZWZ0JzogcHJvcHMubGVmdCxcbiAgICAgICdpY29uLS1tZWRpdW0nOiBwcm9wcy5tZWRpdW0sXG4gICAgICAnaWNvbi0tcmlnaHQnOiBwcm9wcy5yaWdodCxcbiAgICAgICdpY29uLS14LWxhcmdlJzogcHJvcHMueExhcmdlLFxuICAgICAgJ3RoZW1lLS1kYXJrJzogcHJvcHMuZGFyayxcbiAgICAgICd0aGVtZS0tbGlnaHQnOiBwcm9wcy5saWdodFxuICAgIH0sIHByb3BzLmNvbG9yID8gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfY29sb3JhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubWV0aG9kcy5hZGRUZXh0Q29sb3JDbGFzc0NoZWNrcy5jYWxsKHByb3BzLCB7fSwgJ2NvbG9yJykgOiB7XG4gICAgICAncHJpbWFyeS0tdGV4dCc6IHByb3BzLnByaW1hcnksXG4gICAgICAnc2Vjb25kYXJ5LS10ZXh0JzogcHJvcHMuc2Vjb25kYXJ5LFxuICAgICAgJ3N1Y2Nlc3MtLXRleHQnOiBwcm9wcy5zdWNjZXNzLFxuICAgICAgJ2luZm8tLXRleHQnOiBwcm9wcy5pbmZvLFxuICAgICAgJ3dhcm5pbmctLXRleHQnOiBwcm9wcy53YXJuaW5nLFxuICAgICAgJ2Vycm9yLS10ZXh0JzogcHJvcHMuZXJyb3JcbiAgICB9KTtcblxuICAgIHZhciBpY29uQ2xhc3NlcyA9IE9iamVjdC5rZXlzKGNsYXNzZXMpLmZpbHRlcihmdW5jdGlvbiAoaykge1xuICAgICAgcmV0dXJuIGNsYXNzZXNba107XG4gICAgfSkuam9pbignICcpO1xuICAgIGljb25DbGFzc2VzICYmIChkYXRhLnN0YXRpY0NsYXNzICs9ICcgJyArIGljb25DbGFzc2VzKTtcblxuICAgIGlmICh0aGlyZFBhcnR5SWNvbikgZGF0YS5zdGF0aWNDbGFzcyArPSAnICcgKyBpY29uTmFtZTtlbHNlIGNoaWxkcmVuLnB1c2goaWNvbk5hbWUpO1xuXG4gICAgcmV0dXJuIGgoJ2knLCBkYXRhLCBjaGlsZHJlbik7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDY1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogNjYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgcHJvcHM6IHtcbiAgICBtb2RlOiBTdHJpbmcsXG4gICAgb3JpZ2luOiBTdHJpbmcsXG4gICAgdHJhbnNpdGlvbjogU3RyaW5nXG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDY3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkF2YXRhcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2OCk7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkF2YXRhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkF2YXRhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkF2YXRhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQXZhdGFyX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDY4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXyg2OSk7XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1hdmF0YXInLFxuXG4gIGZ1bmN0aW9uYWw6IHRydWUsXG5cbiAgcHJvcHM6IHtcbiAgICBzaXplOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnNDhweCdcbiAgICB9LFxuICAgIHRpbGU6IEJvb2xlYW5cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBfcmVmKSB7XG4gICAgdmFyIGRhdGEgPSBfcmVmLmRhdGEsXG4gICAgICAgIHByb3BzID0gX3JlZi5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuO1xuXG4gICAgZGF0YS5zdGF0aWNDbGFzcyA9ICgnYXZhdGFyICcgKyAoZGF0YS5zdGF0aWNDbGFzcyB8fCAnJykpLnRyaW0oKTtcbiAgICBkYXRhLnN0eWxlID0gZGF0YS5zdHlsZSB8fCB7fTtcblxuICAgIGlmIChwcm9wcy50aWxlKSBkYXRhLnN0YXRpY0NsYXNzICs9ICcgYXZhdGFyLS10aWxlJztcblxuICAgIGRhdGEuc3R5bGUuaGVpZ2h0ID0gcHJvcHMuc2l6ZTtcbiAgICBkYXRhLnN0eWxlLndpZHRoID0gcHJvcHMuc2l6ZTtcblxuICAgIHJldHVybiBoKCdkaXYnLCBkYXRhLCBjaGlsZHJlbik7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDY5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogNzAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQmFkZ2VfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNzEpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCYWRnZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJhZGdlX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQmFkZ2VfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJhZGdlX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDcxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc190b2dnbGVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xuX193ZWJwYWNrX3JlcXVpcmVfXyg3Mik7XG5cbi8vIE1peGluc1xuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWJhZGdlJyxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19jb2xvcmFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfdG9nZ2xlYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBwcm9wczoge1xuICAgIGJvdHRvbTogQm9vbGVhbixcbiAgICBjb2xvcjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ3ByaW1hcnknXG4gICAgfSxcbiAgICBsZWZ0OiBCb29sZWFuLFxuICAgIG92ZXJsYXA6IEJvb2xlYW4sXG4gICAgdHJhbnNpdGlvbjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2ZhYi10cmFuc2l0aW9uJ1xuICAgIH0sXG4gICAgdmFsdWU6IHtcbiAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ2JhZGdlLS1ib3R0b20nOiB0aGlzLmJvdHRvbSxcbiAgICAgICAgJ2JhZGdlLS1sZWZ0JzogdGhpcy5sZWZ0LFxuICAgICAgICAnYmFkZ2UtLW92ZXJsYXAnOiB0aGlzLm92ZXJsYXBcbiAgICAgIH07XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgYmFkZ2UgPSB0aGlzLiRzbG90cy5iYWRnZSA/IFtoKCdzcGFuJywge1xuICAgICAgc3RhdGljQ2xhc3M6ICdiYWRnZV9fYmFkZ2UnLFxuICAgICAgJ2NsYXNzJzogdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcygpLFxuICAgICAgYXR0cnM6IHRoaXMuYXR0cnMsXG4gICAgICBkaXJlY3RpdmVzOiBbe1xuICAgICAgICBuYW1lOiAnc2hvdycsXG4gICAgICAgIHZhbHVlOiB0aGlzLmlzQWN0aXZlXG4gICAgICB9XVxuICAgIH0sIHRoaXMuJHNsb3RzLmJhZGdlKV0gOiBudWxsO1xuXG4gICAgcmV0dXJuIGgoJ3NwYW4nLCB7XG4gICAgICBzdGF0aWNDbGFzczogJ2JhZGdlJyxcbiAgICAgICdjbGFzcyc6IHRoaXMuY2xhc3Nlc1xuICAgIH0sIFt0aGlzLiRzbG90cy5kZWZhdWx0LCBoKCd0cmFuc2l0aW9uJywge1xuICAgICAgcHJvcHM6IHtcbiAgICAgICAgbmFtZTogdGhpcy50cmFuc2l0aW9uXG4gICAgICB9XG4gICAgfSwgYmFkZ2UpXSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDcyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogNzMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQm90dG9tTmF2X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDc0KTtcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQm90dG9tTmF2X19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQm90dG9tTmF2X19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQm90dG9tTmF2X19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCb3R0b21OYXZfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogNzQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfYXBwbGljYXRpb25hYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDExKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19idXR0b25fZ3JvdXBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbl9fd2VicGFja19yZXF1aXJlX18oNzUpO1xuXG4vLyBNaXhpbnNcblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWJvdHRvbS1uYXYnLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2FwcGxpY2F0aW9uYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19idXR0b25fZ3JvdXBfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfY29sb3JhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRlZmF1bHRDb2xvcjogJ3ByaW1hcnknXG4gICAgfTtcbiAgfSxcblxuICBwcm9wczoge1xuICAgIGFic29sdXRlOiBCb29sZWFuLFxuICAgIGFjdGl2ZTogW051bWJlciwgU3RyaW5nXSxcbiAgICBzaGlmdDogQm9vbGVhbixcbiAgICB2YWx1ZTogeyByZXF1aXJlZDogZmFsc2UgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgYWN0aXZlOiBmdW5jdGlvbiBhY3RpdmUoKSB7XG4gICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgIH1cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAnYm90dG9tLW5hdic6IHRydWUsXG4gICAgICAgICdib3R0b20tbmF2LS1hYnNvbHV0ZSc6IHRoaXMuYWJzb2x1dGUsXG4gICAgICAgICdib3R0b20tbmF2LS1zaGlmdCc6IHRoaXMuc2hpZnQsXG4gICAgICAgICdib3R0b20tbmF2LS1hY3RpdmUnOiB0aGlzLnZhbHVlXG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgaXNTZWxlY3RlZDogZnVuY3Rpb24gaXNTZWxlY3RlZChpKSB7XG4gICAgICB2YXIgaXRlbSA9IHRoaXMuZ2V0VmFsdWUoaSk7XG4gICAgICByZXR1cm4gdGhpcy5hY3RpdmUgPT09IGl0ZW07XG4gICAgfSxcbiAgICB1cGRhdGVBcHBsaWNhdGlvbjogZnVuY3Rpb24gdXBkYXRlQXBwbGljYXRpb24oKSB7XG4gICAgICBpZiAoIXRoaXMuYXBwKSByZXR1cm47XG5cbiAgICAgIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYm90dG9tID0gdGhpcy4kZWwuY2xpZW50SGVpZ2h0O1xuICAgIH0sXG4gICAgdXBkYXRlVmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZVZhbHVlKGkpIHtcbiAgICAgIHZhciBpdGVtID0gdGhpcy5nZXRWYWx1ZShpKTtcbiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTphY3RpdmUnLCBpdGVtKTtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICBjbGFzczogdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyh0aGlzLmNsYXNzZXMpLFxuICAgICAgcmVmOiAnY29udGVudCdcbiAgICB9LCB0aGlzLiRzbG90cy5kZWZhdWx0KTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogNzUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiA3NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCb3R0b21TaGVldF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3Nyk7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJvdHRvbVNoZWV0X19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQm90dG9tU2hlZXRfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCb3R0b21TaGVldF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQm90dG9tU2hlZXRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogNzcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRGlhbG9nX1ZEaWFsb2dfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjYpO1xudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXyg3OCk7XG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtYm90dG9tLXNoZWV0JyxcblxuICBwcm9wczoge1xuICAgIGRpc2FibGVkOiBCb29sZWFuLFxuICAgIGZ1bGxXaWR0aDogQm9vbGVhbixcbiAgICBpbnNldDogQm9vbGVhbixcbiAgICBsYXp5OiBCb29sZWFuLFxuICAgIG1heFdpZHRoOiB7XG4gICAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLFxuICAgICAgZGVmYXVsdDogJ2F1dG8nXG4gICAgfSxcbiAgICBwZXJzaXN0ZW50OiBCb29sZWFuLFxuICAgIHZhbHVlOiBudWxsXG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBhY3RpdmF0b3IgPSBoKCd0ZW1wbGF0ZScsIHtcbiAgICAgIHNsb3Q6ICdhY3RpdmF0b3InXG4gICAgfSwgdGhpcy4kc2xvdHMuYWN0aXZhdG9yKTtcblxuICAgIHZhciBjb250ZW50Q2xhc3MgPSBbJ2JvdHRvbS1zaGVldCcsIHRoaXMuaW5zZXQgPyAnYm90dG9tLXNoZWV0LS1pbnNldCcgOiAnJ10uam9pbignICcpO1xuXG4gICAgcmV0dXJuIGgoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRGlhbG9nX1ZEaWFsb2dfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwge1xuICAgICAgYXR0cnM6IF9leHRlbmRzKHt9LCB0aGlzLiRwcm9wcyksXG4gICAgICBvbjogX2V4dGVuZHMoe30sIHRoaXMuJGxpc3RlbmVycyksXG4gICAgICBwcm9wczoge1xuICAgICAgICBjb250ZW50Q2xhc3M6IGNvbnRlbnRDbGFzcyxcbiAgICAgICAgdHJhbnNpdGlvbjogJ2JvdHRvbS1zaGVldC10cmFuc2l0aW9uJyxcbiAgICAgICAgdmFsdWU6IHRoaXMudmFsdWVcbiAgICAgIH1cbiAgICB9LCBbYWN0aXZhdG9yLCB0aGlzLiRzbG90cy5kZWZhdWx0XSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDc4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogNzkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiA4MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDgxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJyZWFkY3J1bWJzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZCcmVhZGNydW1ic0l0ZW1fXyA9IF9fd2VicGFja19yZXF1aXJlX18oODQpO1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVkJyZWFkY3J1bWJzICovXG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWQnJlYWRjcnVtYnNJdGVtICovXG5cblxuXG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJyZWFkY3J1bWJzX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQnJlYWRjcnVtYnNfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCcmVhZGNydW1ic19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZCcmVhZGNydW1ic0l0ZW1fX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZCcmVhZGNydW1ic0l0ZW1fX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJyZWFkY3J1bWJzX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDgyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXyg4Myk7XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1icmVhZGNydW1icycsXG5cbiAgcHJvcHM6IHtcbiAgICBkaXZpZGVyOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnLydcbiAgICB9LFxuICAgIGxhcmdlOiBCb29sZWFuLFxuICAgIGp1c3RpZnlDZW50ZXI6IEJvb2xlYW4sXG4gICAganVzdGlmeUVuZDogQm9vbGVhblxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICdicmVhZGNydW1icy0tbGFyZ2UnOiB0aGlzLmxhcmdlXG4gICAgICB9O1xuICAgIH0sXG4gICAgY29tcHV0ZWREaXZpZGVyOiBmdW5jdGlvbiBjb21wdXRlZERpdmlkZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kc2xvdHMuZGl2aWRlciA/IHRoaXMuJHNsb3RzLmRpdmlkZXIgOiB0aGlzLmRpdmlkZXI7XG4gICAgfSxcbiAgICBzdHlsZXM6IGZ1bmN0aW9uIHN0eWxlcygpIHtcbiAgICAgIHZhciBqdXN0aWZ5ID0gdGhpcy5qdXN0aWZ5Q2VudGVyID8gJ2NlbnRlcicgOiB0aGlzLmp1c3RpZnlFbmQgPyAnZmxleC1lbmQnIDogJ2ZsZXgtc3RhcnQnO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICAnanVzdGlmeS1jb250ZW50JzoganVzdGlmeVxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIC8qKlxuICAgICAqIEFkZCBkaXZpZGVycyBiZXR3ZWVuXG4gICAgICogdi1icmVhZGNydW1icy1pdGVtXG4gICAgICogXG4gICAgICogQHJldHVybiB7YXJyYXl9XG4gICAgICovXG4gICAgZ2VuQ2hpbGRyZW46IGZ1bmN0aW9uIGdlbkNoaWxkcmVuKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKCF0aGlzLiRzbG90cy5kZWZhdWx0KSByZXR1cm4gbnVsbDtcblxuICAgICAgdmFyIGNoaWxkcmVuID0gW107XG4gICAgICB2YXIgZGl2aWRlckRhdGEgPSB7IHN0YXRpY0NsYXNzOiAnYnJlYWRjcnVtYnNfX2RpdmlkZXInIH07XG4gICAgICB2YXIgbGVuZ3RoID0gdGhpcy4kc2xvdHMuZGVmYXVsdC5sZW5ndGg7XG5cbiAgICAgIHRoaXMuJHNsb3RzLmRlZmF1bHQuZm9yRWFjaChmdW5jdGlvbiAoZWxtLCBpKSB7XG4gICAgICAgIGNoaWxkcmVuLnB1c2goZWxtKTtcblxuICAgICAgICBpZiAoIWVsbS5jb21wb25lbnRPcHRpb25zIHx8IGVsbS5jb21wb25lbnRPcHRpb25zLnRhZyAhPT0gJ3YtYnJlYWRjcnVtYnMtaXRlbScgfHwgaSA9PT0gbGVuZ3RoIC0gMSkgcmV0dXJuO1xuXG4gICAgICAgIGNoaWxkcmVuLnB1c2goX3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ2xpJywgZGl2aWRlckRhdGEsIF90aGlzLmNvbXB1dGVkRGl2aWRlcikpO1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBjaGlsZHJlbjtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHJldHVybiBoKCd1bCcsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiAnYnJlYWRjcnVtYnMnLFxuICAgICAgJ2NsYXNzJzogdGhpcy5jbGFzc2VzLFxuICAgICAgc3R5bGU6IHRoaXMuc3R5bGVzXG4gICAgfSwgdGhpcy5nZW5DaGlsZHJlbigpKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogODMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiA4NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19yb3V0YWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMyk7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWJyZWFkY3J1bWJzLWl0ZW0nLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX3JvdXRhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIHByb3BzOiB7XG4gICAgLy8gSW4gYSBicmVhZGNydW1iLCB0aGUgY3VycmVudGx5XG4gICAgLy8gYWN0aXZlIGl0ZW0gc2hvdWxkIGJlIGRpbW1lZFxuICAgIGFjdGl2ZUNsYXNzOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnYnJlYWRjcnVtYnNfX2l0ZW0tLWRpc2FibGVkJ1xuICAgIH1cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4gX2RlZmluZVByb3BlcnR5KHtcbiAgICAgICAgJ2JyZWFkY3J1bWJzX19pdGVtJzogdHJ1ZVxuICAgICAgfSwgdGhpcy5hY3RpdmVDbGFzcywgdGhpcy5kaXNhYmxlZCk7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgX2dlbmVyYXRlUm91dGVMaW5rID0gdGhpcy5nZW5lcmF0ZVJvdXRlTGluaygpLFxuICAgICAgICB0YWcgPSBfZ2VuZXJhdGVSb3V0ZUxpbmsudGFnLFxuICAgICAgICBkYXRhID0gX2dlbmVyYXRlUm91dGVMaW5rLmRhdGE7XG5cbiAgICByZXR1cm4gaCgnbGknLCBbaCh0YWcsIGRhdGEsIHRoaXMuJHNsb3RzLmRlZmF1bHQpXSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDg1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19jb250ZXh0dWFsYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4Nyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfcG9zaXRpb25hYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc19yb3V0YWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfdGhlbWVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fbWl4aW5zX3RvZ2dsZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbl9fd2VicGFja19yZXF1aXJlX18oODYpO1xuXG5cblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1idG4nLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19jb250ZXh0dWFsYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc19yb3V0YWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc19wb3NpdGlvbmFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfdGhlbWVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX21peGluc190b2dnbGVhYmxlX19bXCJiXCIgLyogZmFjdG9yeSAqL10pKCdpbnB1dFZhbHVlJyldLFxuXG4gIHByb3BzOiB7XG4gICAgYWN0aXZlQ2xhc3M6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdidG4tLWFjdGl2ZSdcbiAgICB9LFxuICAgIGJsb2NrOiBCb29sZWFuLFxuICAgIGRlcHJlc3NlZDogQm9vbGVhbixcbiAgICBmYWI6IEJvb2xlYW4sXG4gICAgZmxhdDogQm9vbGVhbixcbiAgICBpY29uOiBCb29sZWFuLFxuICAgIGxhcmdlOiBCb29sZWFuLFxuICAgIGxvYWRpbmc6IEJvb2xlYW4sXG4gICAgb3V0bGluZTogQm9vbGVhbixcbiAgICByaXBwbGU6IHtcbiAgICAgIHR5cGU6IFtCb29sZWFuLCBPYmplY3RdLFxuICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgIH0sXG4gICAgcm91bmQ6IEJvb2xlYW4sXG4gICAgc21hbGw6IEJvb2xlYW4sXG4gICAgdGFnOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnYnV0dG9uJ1xuICAgIH0sXG4gICAgdHlwZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2J1dHRvbidcbiAgICB9LFxuICAgIHZhbHVlOiBudWxsXG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgdmFyIGNvbG9yQmFja2dyb3VuZCA9ICF0aGlzLm91dGxpbmUgJiYgIXRoaXMuZmxhdDtcbiAgICAgIHZhciBjb2xvclRleHQgPSAhdGhpcy5kaXNhYmxlZCAmJiAhY29sb3JCYWNrZ3JvdW5kO1xuXG4gICAgICB2YXIgY2xhc3NlcyA9IF9leHRlbmRzKHtcbiAgICAgICAgJ2J0bic6IHRydWUsXG4gICAgICAgICdidG4tLWFjdGl2ZSc6IHRoaXMuaXNBY3RpdmUsXG4gICAgICAgICdidG4tLWFic29sdXRlJzogdGhpcy5hYnNvbHV0ZSxcbiAgICAgICAgJ2J0bi0tYmxvY2snOiB0aGlzLmJsb2NrLFxuICAgICAgICAnYnRuLS1ib3R0b20nOiB0aGlzLmJvdHRvbSxcbiAgICAgICAgJ2J0bi0tZGlzYWJsZWQnOiB0aGlzLmRpc2FibGVkLFxuICAgICAgICAnYnRuLS1mbGF0JzogdGhpcy5mbGF0LFxuICAgICAgICAnYnRuLS1mbG9hdGluZyc6IHRoaXMuZmFiLFxuICAgICAgICAnYnRuLS1maXhlZCc6IHRoaXMuZml4ZWQsXG4gICAgICAgICdidG4tLWhvdmVyJzogdGhpcy5ob3ZlcixcbiAgICAgICAgJ2J0bi0taWNvbic6IHRoaXMuaWNvbixcbiAgICAgICAgJ2J0bi0tbGFyZ2UnOiB0aGlzLmxhcmdlLFxuICAgICAgICAnYnRuLS1sZWZ0JzogdGhpcy5sZWZ0LFxuICAgICAgICAnYnRuLS1sb2FkZXInOiB0aGlzLmxvYWRpbmcsXG4gICAgICAgICdidG4tLW91dGxpbmUnOiB0aGlzLm91dGxpbmUsXG4gICAgICAgICdidG4tLWRlcHJlc3NlZCc6IHRoaXMuZGVwcmVzc2VkICYmICF0aGlzLmZsYXQgfHwgdGhpcy5vdXRsaW5lLFxuICAgICAgICAnYnRuLS1yaWdodCc6IHRoaXMucmlnaHQsXG4gICAgICAgICdidG4tLXJvdW5kJzogdGhpcy5yb3VuZCxcbiAgICAgICAgJ2J0bi0tcm91dGVyJzogdGhpcy50byxcbiAgICAgICAgJ2J0bi0tc21hbGwnOiB0aGlzLnNtYWxsLFxuICAgICAgICAnYnRuLS10b3AnOiB0aGlzLnRvcFxuICAgICAgfSwgdGhpcy50aGVtZUNsYXNzZXMpO1xuXG4gICAgICBpZiAoIXRoaXMuY29sb3IpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oY2xhc3Nlcywge1xuICAgICAgICAgICdwcmltYXJ5JzogdGhpcy5wcmltYXJ5ICYmIGNvbG9yQmFja2dyb3VuZCxcbiAgICAgICAgICAnc2Vjb25kYXJ5JzogdGhpcy5zZWNvbmRhcnkgJiYgY29sb3JCYWNrZ3JvdW5kLFxuICAgICAgICAgICdzdWNjZXNzJzogdGhpcy5zdWNjZXNzICYmIGNvbG9yQmFja2dyb3VuZCxcbiAgICAgICAgICAnaW5mbyc6IHRoaXMuaW5mbyAmJiBjb2xvckJhY2tncm91bmQsXG4gICAgICAgICAgJ3dhcm5pbmcnOiB0aGlzLndhcm5pbmcgJiYgY29sb3JCYWNrZ3JvdW5kLFxuICAgICAgICAgICdlcnJvcic6IHRoaXMuZXJyb3IgJiYgY29sb3JCYWNrZ3JvdW5kLFxuICAgICAgICAgICdwcmltYXJ5LS10ZXh0JzogdGhpcy5wcmltYXJ5ICYmIGNvbG9yVGV4dCxcbiAgICAgICAgICAnc2Vjb25kYXJ5LS10ZXh0JzogdGhpcy5zZWNvbmRhcnkgJiYgY29sb3JUZXh0LFxuICAgICAgICAgICdzdWNjZXNzLS10ZXh0JzogdGhpcy5zdWNjZXNzICYmIGNvbG9yVGV4dCxcbiAgICAgICAgICAnaW5mby0tdGV4dCc6IHRoaXMuaW5mbyAmJiBjb2xvclRleHQsXG4gICAgICAgICAgJ3dhcm5pbmctLXRleHQnOiB0aGlzLndhcm5pbmcgJiYgY29sb3JUZXh0LFxuICAgICAgICAgICdlcnJvci0tdGV4dCc6IHRoaXMuZXJyb3IgJiYgY29sb3JUZXh0XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29sb3JCYWNrZ3JvdW5kID8gdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyhjbGFzc2VzKSA6IHRoaXMuYWRkVGV4dENvbG9yQ2xhc3NDaGVja3MoY2xhc3Nlcyk7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICAvLyBQcmV2ZW50IGZvY3VzIHRvIG1hdGNoIG1kIHNwZWNcbiAgICBjbGljazogZnVuY3Rpb24gY2xpY2soZSkge1xuICAgICAgIXRoaXMuZmFiICYmIGUuZGV0YWlsICYmIHRoaXMuJGVsLmJsdXIoKTtcblxuICAgICAgdGhpcy4kZW1pdCgnY2xpY2snLCBlKTtcbiAgICB9LFxuICAgIGdlbkNvbnRlbnQ6IGZ1bmN0aW9uIGdlbkNvbnRlbnQoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JywgeyAnY2xhc3MnOiAnYnRuX19jb250ZW50JyB9LCBbdGhpcy4kc2xvdHMuZGVmYXVsdF0pO1xuICAgIH0sXG4gICAgZ2VuTG9hZGVyOiBmdW5jdGlvbiBnZW5Mb2FkZXIoKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBbXTtcblxuICAgICAgaWYgKCF0aGlzLiRzbG90cy5sb2FkZXIpIHtcbiAgICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KCd2LXByb2dyZXNzLWNpcmN1bGFyJywge1xuICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICBpbmRldGVybWluYXRlOiB0cnVlLFxuICAgICAgICAgICAgc2l6ZTogMjZcbiAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNoaWxkcmVuLnB1c2godGhpcy4kc2xvdHMubG9hZGVyKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLCB7ICdjbGFzcyc6ICdidG5fX2xvYWRpbmcnIH0sIGNoaWxkcmVuKTtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgT2JqZWN0LmtleXMoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfY29udGV4dHVhbGFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5wcm9wcykuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICAgICAgaWYgKF90aGlzW3Byb3BdKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignQ29udGV4dCBwcm9wIFxcJycgKyBwcm9wICsgJ1xcJyBmb3IgVkJ0biBjb21wb25lbnQgaGFzIGJlZW4gZGVwcmVjYXRlZC4gVXNlIFxcJ2NvbG9yXFwnIHByb3AgaW5zdGVhZC4nKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBfZ2VuZXJhdGVSb3V0ZUxpbmsgPSB0aGlzLmdlbmVyYXRlUm91dGVMaW5rKCksXG4gICAgICAgIHRhZyA9IF9nZW5lcmF0ZVJvdXRlTGluay50YWcsXG4gICAgICAgIGRhdGEgPSBfZ2VuZXJhdGVSb3V0ZUxpbmsuZGF0YTtcblxuICAgIHZhciBjaGlsZHJlbiA9IFt0aGlzLmdlbkNvbnRlbnQoKV07XG5cbiAgICB0YWcgPT09ICdidXR0b24nICYmIChkYXRhLmF0dHJzLnR5cGUgPSB0aGlzLnR5cGUpO1xuICAgIHRoaXMubG9hZGluZyAmJiBjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuTG9hZGVyKCkpO1xuXG4gICAgZGF0YS5hdHRycy52YWx1ZSA9IFsnc3RyaW5nJywgJ251bWJlciddLmluY2x1ZGVzKF90eXBlb2YodGhpcy52YWx1ZSkpID8gdGhpcy52YWx1ZSA6IEpTT04uc3RyaW5naWZ5KHRoaXMudmFsdWUpO1xuXG4gICAgcmV0dXJuIGgodGFnLCBkYXRhLCBjaGlsZHJlbik7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDg2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogODcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgcHJvcHM6IHtcbiAgICBwcmltYXJ5OiBCb29sZWFuLFxuICAgIHNlY29uZGFyeTogQm9vbGVhbixcbiAgICBzdWNjZXNzOiBCb29sZWFuLFxuICAgIGluZm86IEJvb2xlYW4sXG4gICAgd2FybmluZzogQm9vbGVhbixcbiAgICBlcnJvcjogQm9vbGVhblxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiA4OCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5Ub2dnbGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oODkpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5Ub2dnbGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5Ub2dnbGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5Ub2dnbGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJ0blRvZ2dsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiA4OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19idXR0b25fZ3JvdXBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX3RoZW1lYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbl9fd2VicGFja19yZXF1aXJlX18oOTApO1xuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtYnRuLXRvZ2dsZScsXG5cbiAgbW9kZWw6IHtcbiAgICBwcm9wOiAnaW5wdXRWYWx1ZScsXG4gICAgZXZlbnQ6ICdjaGFuZ2UnXG4gIH0sXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfYnV0dG9uX2dyb3VwX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX3RoZW1lYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBwcm9wczoge1xuICAgIGlucHV0VmFsdWU6IHtcbiAgICAgIHJlcXVpcmVkOiBmYWxzZVxuICAgIH0sXG4gICAgaXRlbXM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG1hbmRhdG9yeTogQm9vbGVhbixcbiAgICBtdWx0aXBsZTogQm9vbGVhblxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICdidG4tdG9nZ2xlJzogdHJ1ZSxcbiAgICAgICAgJ2J0bi10b2dnbGUtLXNlbGVjdGVkJzogdGhpcy5oYXNWYWx1ZSxcbiAgICAgICAgJ3RoZW1lLS1saWdodCc6IHRoaXMubGlnaHQsXG4gICAgICAgICd0aGVtZS0tZGFyayc6IHRoaXMuZGFya1xuICAgICAgfTtcbiAgICB9LFxuICAgIGhhc1ZhbHVlOiBmdW5jdGlvbiBoYXNWYWx1ZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLm11bHRpcGxlICYmIHRoaXMuaW5wdXRWYWx1ZS5sZW5ndGggfHwgIXRoaXMubXVsdGlwbGUgJiYgdGhpcy5pbnB1dFZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB0aGlzLmlucHV0VmFsdWUgIT09ICd1bmRlZmluZWQnO1xuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIGlucHV0VmFsdWU6IHtcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICB9LFxuXG4gICAgICBkZWVwOiB0cnVlXG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBpc1NlbGVjdGVkOiBmdW5jdGlvbiBpc1NlbGVjdGVkKGkpIHtcbiAgICAgIHZhciBpdGVtID0gdGhpcy5nZXRWYWx1ZShpKTtcbiAgICAgIGlmICghdGhpcy5tdWx0aXBsZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbnB1dFZhbHVlID09PSBpdGVtO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5pbnB1dFZhbHVlLmluY2x1ZGVzKGl0ZW0pO1xuICAgIH0sXG4gICAgdXBkYXRlVmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZVZhbHVlKGkpIHtcbiAgICAgIHZhciBpdGVtID0gdGhpcy5nZXRWYWx1ZShpKTtcbiAgICAgIGlmICghdGhpcy5tdWx0aXBsZSkge1xuICAgICAgICBpZiAodGhpcy5tYW5kYXRvcnkgJiYgdGhpcy5pbnB1dFZhbHVlID09PSBpdGVtKSByZXR1cm47XG4gICAgICAgIHJldHVybiB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB0aGlzLmlucHV0VmFsdWUgPT09IGl0ZW0gPyBudWxsIDogaXRlbSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBpdGVtcyA9IHRoaXMuaW5wdXRWYWx1ZS5zbGljZSgpO1xuXG4gICAgICB2YXIgaW5kZXggPSBpdGVtcy5pbmRleE9mKGl0ZW0pO1xuICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgaWYgKHRoaXMubWFuZGF0b3J5ICYmIGl0ZW1zLmxlbmd0aCA9PT0gMSkgcmV0dXJuO1xuICAgICAgICBpdGVtcy5sZW5ndGggPj0gMSAmJiBpdGVtcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaXRlbXMucHVzaChpdGVtKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgaXRlbXMpO1xuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIGlmICh0aGlzLml0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnNvbGUud2FybignVGhlIFxcJ2l0ZW1zXFwnIHByb3BzIGhhcyBiZWVuIGRlcHJlY2F0ZWQuIHYtYnRuLXRvZ2dsZSBub3cgaGFzIGEgZGVmYXVsdCBzbG90IHdoZXJlIHlvdSBjYW4gcGxhY2UgYnV0dG9ucy4nKTtcbiAgICB9XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICByZXR1cm4gaCgnZGl2JywgeyBjbGFzczogdGhpcy5jbGFzc2VzIH0sIHRoaXMuJHNsb3RzLmRlZmF1bHQpO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiA5MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDkxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19yb3V0YWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfdGhlbWVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xuX193ZWJwYWNrX3JlcXVpcmVfXyg5Mik7XG5cblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWNhcmQnLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19yb3V0YWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190aGVtZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgcHJvcHM6IHtcbiAgICBmbGF0OiBCb29sZWFuLFxuICAgIGhlaWdodDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2F1dG8nXG4gICAgfSxcbiAgICBob3ZlcjogQm9vbGVhbixcbiAgICBpbWc6IFN0cmluZyxcbiAgICByYWlzZWQ6IEJvb2xlYW4sXG4gICAgdGFnOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnZGl2J1xuICAgIH0sXG4gICAgdGlsZTogQm9vbGVhblxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB0aGlzLmFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzKHtcbiAgICAgICAgJ2NhcmQnOiB0cnVlLFxuICAgICAgICAnY2FyZC0tZmxhdCc6IHRoaXMuZmxhdCxcbiAgICAgICAgJ2NhcmQtLWhvcml6b250YWwnOiB0aGlzLmhvcml6b250YWwsXG4gICAgICAgICdjYXJkLS1ob3Zlcic6IHRoaXMuaG92ZXIsXG4gICAgICAgICdjYXJkLS1yYWlzZWQnOiB0aGlzLnJhaXNlZCxcbiAgICAgICAgJ2NhcmQtLXRpbGUnOiB0aGlzLnRpbGUsXG4gICAgICAgICd0aGVtZS0tbGlnaHQnOiB0aGlzLmxpZ2h0LFxuICAgICAgICAndGhlbWUtLWRhcmsnOiB0aGlzLmRhcmtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgc3R5bGVzOiBmdW5jdGlvbiBzdHlsZXMoKSB7XG4gICAgICB2YXIgc3R5bGUgPSB7XG4gICAgICAgIGhlaWdodDogaXNOYU4odGhpcy5oZWlnaHQpID8gdGhpcy5oZWlnaHQgOiB0aGlzLmhlaWdodCArICdweCdcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLmltZykge1xuICAgICAgICBzdHlsZS5iYWNrZ3JvdW5kID0gJ3VybChcIicgKyB0aGlzLmltZyArICdcIikgY2VudGVyIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdCc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdHlsZTtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBfZ2VuZXJhdGVSb3V0ZUxpbmsgPSB0aGlzLmdlbmVyYXRlUm91dGVMaW5rKCksXG4gICAgICAgIHRhZyA9IF9nZW5lcmF0ZVJvdXRlTGluay50YWcsXG4gICAgICAgIGRhdGEgPSBfZ2VuZXJhdGVSb3V0ZUxpbmsuZGF0YTtcblxuICAgIGRhdGEuc3R5bGUgPSB0aGlzLnN0eWxlcztcblxuICAgIHJldHVybiBoKHRhZywgZGF0YSwgdGhpcy4kc2xvdHMuZGVmYXVsdCk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDkyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogOTMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtY2FyZC1tZWRpYScsXG5cbiAgcHJvcHM6IHtcbiAgICBjb250YWluOiBCb29sZWFuLFxuICAgIGhlaWdodDoge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6ICdhdXRvJ1xuICAgIH0sXG4gICAgc3JjOiB7XG4gICAgICB0eXBlOiBTdHJpbmdcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgJ2NsYXNzJzogJ2NhcmRfX21lZGlhJyxcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGhlaWdodDogIWlzTmFOKHRoaXMuaGVpZ2h0KSA/IHRoaXMuaGVpZ2h0ICsgJ3B4JyA6IHRoaXMuaGVpZ2h0XG4gICAgICB9LFxuICAgICAgb246IHRoaXMuJGxpc3RlbmVyc1xuICAgIH07XG5cbiAgICB2YXIgY2hpbGRyZW4gPSBbXTtcblxuICAgIGlmICh0aGlzLnNyYykge1xuICAgICAgY2hpbGRyZW4ucHVzaChoKCdkaXYnLCB7XG4gICAgICAgICdjbGFzcyc6ICdjYXJkX19tZWRpYV9fYmFja2dyb3VuZCcsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJ3VybCgnICsgdGhpcy5zcmMgKyAnKSBjZW50ZXIgY2VudGVyIC8gJyArICh0aGlzLmNvbnRhaW4gPyAnY29udGFpbicgOiAnY292ZXInKSArICcgbm8tcmVwZWF0J1xuICAgICAgICB9XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgY2hpbGRyZW4ucHVzaChoKCdkaXYnLCB7XG4gICAgICAnY2xhc3MnOiAnY2FyZF9fbWVkaWFfX2NvbnRlbnQnXG4gICAgfSwgdGhpcy4kc2xvdHMuZGVmYXVsdCkpO1xuXG4gICAgcmV0dXJuIGgoJ2RpdicsIGRhdGEsIGNoaWxkcmVuKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogOTQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtY2FyZC10aXRsZScsXG5cbiAgZnVuY3Rpb25hbDogdHJ1ZSxcblxuICBwcm9wczoge1xuICAgIHByaW1hcnlUaXRsZTogQm9vbGVhblxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIF9yZWYpIHtcbiAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YSxcbiAgICAgICAgcHJvcHMgPSBfcmVmLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW47XG5cbiAgICBkYXRhLnN0YXRpY0NsYXNzID0gKCdjYXJkX190aXRsZSAnICsgKGRhdGEuc3RhdGljQ2xhc3MgfHwgJycpKS50cmltKCk7XG5cbiAgICBpZiAocHJvcHMucHJpbWFyeVRpdGxlKSBkYXRhLnN0YXRpY0NsYXNzICs9ICcgY2FyZF9fdGl0bGUtLXByaW1hcnknO1xuXG4gICAgcmV0dXJuIGgoJ2RpdicsIGRhdGEsIGNoaWxkcmVuKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogOTUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQ2Fyb3VzZWxfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOTYpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkNhcm91c2VsSXRlbV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5OCk7XG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWQ2Fyb3VzZWwgKi9cbi8qIHVudXNlZCBoYXJtb255IHJlZXhwb3J0IFZDYXJvdXNlbEl0ZW0gKi9cblxuXG5cblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQ2Fyb3VzZWxfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZDYXJvdXNlbF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkNhcm91c2VsX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkNhcm91c2VsSXRlbV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkNhcm91c2VsSXRlbV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQ2Fyb3VzZWxfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogOTYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WQnRuX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZJY29uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX2Jvb3RhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc190aGVtZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfcmVnaXN0cmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTgpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fZGlyZWN0aXZlc190b3VjaF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcbl9fd2VicGFja19yZXF1aXJlX18oOTcpO1xuXG5cblxuXG5cblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtY2Fyb3VzZWwnLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX2Jvb3RhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fbWl4aW5zX3RoZW1lYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfcmVnaXN0cmFibGVfX1tcImJcIiAvKiBwcm92aWRlICovXSkoJ2Nhcm91c2VsJyldLFxuXG4gIGRpcmVjdGl2ZXM6IHsgVG91Y2g6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fZGlyZWN0aXZlc190b3VjaF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dIH0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5wdXRWYWx1ZTogbnVsbCxcbiAgICAgIGl0ZW1zOiBbXSxcbiAgICAgIHNsaWRlVGltZW91dDogbnVsbCxcbiAgICAgIHJldmVyc2U6IGZhbHNlXG4gICAgfTtcbiAgfSxcblxuXG4gIHByb3BzOiB7XG4gICAgY3ljbGU6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlXG4gICAgfSxcbiAgICBkZWxpbWl0ZXJJY29uOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnZmliZXJfbWFudWFsX3JlY29yZCdcbiAgICB9LFxuICAgIGhpZGVDb250cm9sczogQm9vbGVhbixcbiAgICBoaWRlRGVsaW1pdGVyczogQm9vbGVhbixcbiAgICBpbnRlcnZhbDoge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6IDYwMDAsXG4gICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWUgPiAwO1xuICAgICAgfVxuICAgIH0sXG4gICAgbGVmdENvbnRyb2xJY29uOiB7XG4gICAgICB0eXBlOiBbQm9vbGVhbiwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6ICdjaGV2cm9uX2xlZnQnXG4gICAgfSxcbiAgICByaWdodENvbnRyb2xJY29uOiB7XG4gICAgICB0eXBlOiBbQm9vbGVhbiwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6ICdjaGV2cm9uX3JpZ2h0J1xuICAgIH0sXG4gICAgdmFsdWU6IE51bWJlclxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgaXRlbXM6IGZ1bmN0aW9uIGl0ZW1zKCkge1xuICAgICAgaWYgKHRoaXMuaW5wdXRWYWx1ZSA+PSB0aGlzLml0ZW1zLmxlbmd0aCkge1xuICAgICAgICB0aGlzLmlucHV0VmFsdWUgPSB0aGlzLml0ZW1zLmxlbmd0aCAtIDE7XG4gICAgICB9XG4gICAgfSxcbiAgICBpbnB1dFZhbHVlOiBmdW5jdGlvbiBpbnB1dFZhbHVlKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgLy8gRXZhbHVhdGUgaXRlbXMgd2hlbiBpbnB1dFZhbHVlIGNoYW5nZXMgdG8gYWNjb3VudCBmb3JcbiAgICAgIC8vIGR5bmFtaWMgY2hhbmdpbmcgb2YgY2hpbGRyZW5cblxuICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgIGkub3BlbihfdGhpcy5pdGVtc1tfdGhpcy5pbnB1dFZhbHVlXS51aWQsIF90aGlzLnJldmVyc2UpO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5pbnB1dFZhbHVlKTtcbiAgICAgIHRoaXMucmVzdGFydFRpbWVvdXQoKTtcbiAgICB9LFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh2YWwpIHtcbiAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9IHZhbDtcbiAgICB9LFxuICAgIGludGVydmFsOiBmdW5jdGlvbiBpbnRlcnZhbCgpIHtcbiAgICAgIHRoaXMucmVzdGFydFRpbWVvdXQoKTtcbiAgICB9LFxuICAgIGN5Y2xlOiBmdW5jdGlvbiBjeWNsZSh2YWwpIHtcbiAgICAgIGlmICh2YWwpIHtcbiAgICAgICAgdGhpcy5yZXN0YXJ0VGltZW91dCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuc2xpZGVUaW1lb3V0KTtcbiAgICAgICAgdGhpcy5zbGlkZVRpbWVvdXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuaW5pdCgpO1xuICB9LFxuXG5cbiAgbWV0aG9kczoge1xuICAgIGdlbkRlbGltaXRlcnM6IGZ1bmN0aW9uIGdlbkRlbGltaXRlcnMoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ2Nhcm91c2VsX19jb250cm9scydcbiAgICAgIH0sIHRoaXMuZ2VuSXRlbXMoKSk7XG4gICAgfSxcbiAgICBnZW5JY29uOiBmdW5jdGlvbiBnZW5JY29uKGRpcmVjdGlvbiwgaWNvbiwgZm4pIHtcbiAgICAgIGlmICghaWNvbikgcmV0dXJuIG51bGw7XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAnY2Fyb3VzZWxfXycgKyBkaXJlY3Rpb25cbiAgICAgIH0sIFt0aGlzLiRjcmVhdGVFbGVtZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJ0bl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCB7XG4gICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgaWNvbjogdHJ1ZSxcbiAgICAgICAgICBkYXJrOiB0aGlzLmRhcmsgfHwgIXRoaXMubGlnaHQsXG4gICAgICAgICAgbGlnaHQ6IHRoaXMubGlnaHRcbiAgICAgICAgfSxcbiAgICAgICAgb246IHsgY2xpY2s6IGZuIH1cbiAgICAgIH0sIFt0aGlzLiRjcmVhdGVFbGVtZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkljb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgaWNvbildKV0pO1xuICAgIH0sXG4gICAgZ2VuSXRlbXM6IGZ1bmN0aW9uIGdlbkl0ZW1zKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHJldHVybiB0aGlzLml0ZW1zLm1hcChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi4kY3JlYXRlRWxlbWVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5fX1tcImFcIiAvKiBkZWZhdWx0ICovXSwge1xuICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAnY2Fyb3VzZWxfX2NvbnRyb2xzX19pdGVtJzogdHJ1ZSxcbiAgICAgICAgICAgICdjYXJvdXNlbF9fY29udHJvbHNfX2l0ZW0tLWFjdGl2ZSc6IGluZGV4ID09PSBfdGhpczIuaW5wdXRWYWx1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICAgIGljb246IHRydWUsXG4gICAgICAgICAgICBkYXJrOiBfdGhpczIuZGFyayB8fCAhX3RoaXMyLmxpZ2h0LFxuICAgICAgICAgICAgbGlnaHQ6IF90aGlzMi5saWdodFxuICAgICAgICAgIH0sXG4gICAgICAgICAga2V5OiBpbmRleCxcbiAgICAgICAgICBvbjogeyBjbGljazogX3RoaXMyLnNlbGVjdC5iaW5kKF90aGlzMiwgaW5kZXgpIH1cbiAgICAgICAgfSwgW190aGlzMi4kY3JlYXRlRWxlbWVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZJY29uX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF90aGlzMi5kZWxpbWl0ZXJJY29uKV0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICByZXN0YXJ0VGltZW91dDogZnVuY3Rpb24gcmVzdGFydFRpbWVvdXQoKSB7XG4gICAgICB0aGlzLnNsaWRlVGltZW91dCAmJiBjbGVhclRpbWVvdXQodGhpcy5zbGlkZVRpbWVvdXQpO1xuICAgICAgdGhpcy5zbGlkZVRpbWVvdXQgPSBudWxsO1xuXG4gICAgICB2YXIgcmFmID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IHNldFRpbWVvdXQ7XG4gICAgICByYWYodGhpcy5zdGFydFRpbWVvdXQpO1xuICAgIH0sXG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9IHRoaXMudmFsdWUgfHwgMDtcbiAgICB9LFxuICAgIG5leHQ6IGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICB0aGlzLnJldmVyc2UgPSBmYWxzZTtcbiAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9ICh0aGlzLmlucHV0VmFsdWUgKyAxKSAlIHRoaXMuaXRlbXMubGVuZ3RoO1xuICAgIH0sXG4gICAgcHJldjogZnVuY3Rpb24gcHJldigpIHtcbiAgICAgIHRoaXMucmV2ZXJzZSA9IHRydWU7XG4gICAgICB0aGlzLmlucHV0VmFsdWUgPSAodGhpcy5pbnB1dFZhbHVlICsgdGhpcy5pdGVtcy5sZW5ndGggLSAxKSAlIHRoaXMuaXRlbXMubGVuZ3RoO1xuICAgIH0sXG4gICAgc2VsZWN0OiBmdW5jdGlvbiBzZWxlY3QoaW5kZXgpIHtcbiAgICAgIHRoaXMucmV2ZXJzZSA9IGluZGV4IDwgdGhpcy5pbnB1dFZhbHVlO1xuICAgICAgdGhpcy5pbnB1dFZhbHVlID0gaW5kZXg7XG4gICAgfSxcbiAgICBzdGFydFRpbWVvdXQ6IGZ1bmN0aW9uIHN0YXJ0VGltZW91dCgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICBpZiAoIXRoaXMuY3ljbGUpIHJldHVybjtcblxuICAgICAgdGhpcy5zbGlkZVRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMy5uZXh0KCk7XG4gICAgICB9LCB0aGlzLmludGVydmFsID4gMCA/IHRoaXMuaW50ZXJ2YWwgOiA2MDAwKTtcbiAgICB9LFxuICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3Rlcih1aWQsIG9wZW4pIHtcbiAgICAgIHRoaXMuaXRlbXMucHVzaCh7IHVpZDogdWlkLCBvcGVuOiBvcGVuIH0pO1xuICAgIH0sXG4gICAgdW5yZWdpc3RlcjogZnVuY3Rpb24gdW5yZWdpc3Rlcih1aWQpIHtcbiAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLml0ZW1zLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gaS51aWQgIT09IHVpZDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiAnY2Fyb3VzZWwnLFxuICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgbmFtZTogJ3RvdWNoJyxcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICBsZWZ0OiB0aGlzLm5leHQsXG4gICAgICAgICAgcmlnaHQ6IHRoaXMucHJldlxuICAgICAgICB9XG4gICAgICB9XVxuICAgIH0sIFt0aGlzLmhpZGVDb250cm9scyA/IG51bGwgOiB0aGlzLmdlbkljb24oJ2xlZnQnLCB0aGlzLmxlZnRDb250cm9sSWNvbiwgdGhpcy5wcmV2KSwgdGhpcy5oaWRlQ29udHJvbHMgPyBudWxsIDogdGhpcy5nZW5JY29uKCdyaWdodCcsIHRoaXMucmlnaHRDb250cm9sSWNvbiwgdGhpcy5uZXh0KSwgdGhpcy5oaWRlRGVsaW1pdGVycyA/IG51bGwgOiB0aGlzLmdlbkRlbGltaXRlcnMoKSwgdGhpcy4kc2xvdHMuZGVmYXVsdF0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiA5NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDk4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX3JlZ2lzdHJhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE4KTtcblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtY2Fyb3VzZWwtaXRlbScsXG5cbiAgbWl4aW5zOiBbT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX3JlZ2lzdHJhYmxlX19bXCJhXCIgLyogaW5qZWN0ICovXSkoJ2Nhcm91c2VsJywgJ3YtY2Fyb3VzZWwtaXRlbScsICd2LWNhcm91c2VsJyldLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjdGl2ZTogZmFsc2UsXG4gICAgICByZXZlcnNlOiBmYWxzZVxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIHNyYzoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuXG4gICAgdHJhbnNpdGlvbjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ3RhYi10cmFuc2l0aW9uJ1xuICAgIH0sXG5cbiAgICByZXZlcnNlVHJhbnNpdGlvbjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ3RhYi1yZXZlcnNlLXRyYW5zaXRpb24nXG4gICAgfVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY29tcHV0ZWRUcmFuc2l0aW9uOiBmdW5jdGlvbiBjb21wdXRlZFRyYW5zaXRpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZXZlcnNlID8gdGhpcy5yZXZlcnNlVHJhbnNpdGlvbiA6IHRoaXMudHJhbnNpdGlvbjtcbiAgICB9LFxuICAgIHN0eWxlczogZnVuY3Rpb24gc3R5bGVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYmFja2dyb3VuZEltYWdlOiAndXJsKCcgKyB0aGlzLnNyYyArICcpJ1xuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIG9wZW46IGZ1bmN0aW9uIG9wZW4oaWQsIHJldmVyc2UpIHtcbiAgICAgIHRoaXMuYWN0aXZlID0gdGhpcy5fdWlkID09PSBpZDtcbiAgICAgIHRoaXMucmV2ZXJzZSA9IHJldmVyc2U7XG4gICAgfVxuICB9LFxuXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5jYXJvdXNlbC5yZWdpc3Rlcih0aGlzLl91aWQsIHRoaXMub3Blbik7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgdGhpcy5jYXJvdXNlbC51bnJlZ2lzdGVyKHRoaXMuX3VpZCwgdGhpcy5vcGVuKTtcbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBpdGVtID0gaCgnZGl2Jywge1xuICAgICAgY2xhc3M6IHtcbiAgICAgICAgJ2Nhcm91c2VsX19pdGVtJzogdHJ1ZSxcbiAgICAgICAgJ3JldmVyc2UnOiB0aGlzLnJldmVyc2VcbiAgICAgIH0sXG4gICAgICBzdHlsZTogdGhpcy5zdHlsZXMsXG4gICAgICBvbjogdGhpcy4kbGlzdGVuZXJzLFxuICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgbmFtZTogJ3Nob3cnLFxuICAgICAgICB2YWx1ZTogdGhpcy5hY3RpdmVcbiAgICAgIH1dXG4gICAgfSwgW3RoaXMuJHNsb3RzLmRlZmF1bHRdKTtcblxuICAgIHJldHVybiBoKCd0cmFuc2l0aW9uJywgeyBwcm9wczogeyBuYW1lOiB0aGlzLmNvbXB1dGVkVHJhbnNpdGlvbiB9IH0sIFtpdGVtXSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDk5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkljb25fXyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX190cmFuc2l0aW9uc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc19yaXBwbGVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc19zZWxlY3RhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMxKTtcbl9fd2VicGFja19yZXF1aXJlX18oMTQpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygyMSk7XG5cblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtY2hlY2tib3gnLFxuXG4gIGNvbXBvbmVudHM6IHtcbiAgICBWRmFkZVRyYW5zaXRpb246IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fdHJhbnNpdGlvbnNfX1tcImJcIiAvKiBWRmFkZVRyYW5zaXRpb24gKi9dLFxuICAgIFZJY29uOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZJY29uX19bXCJhXCIgLyogZGVmYXVsdCAqL11cbiAgfSxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc19yaXBwbGVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fbWl4aW5zX3NlbGVjdGFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5wdXRJbmRldGVybWluYXRlOiB0aGlzLmluZGV0ZXJtaW5hdGVcbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICBpbmRldGVybWluYXRlOiBCb29sZWFuXG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgdmFyIGNsYXNzZXMgPSB7XG4gICAgICAgICdjaGVja2JveCc6IHRydWUsXG4gICAgICAgICdpbnB1dC1ncm91cC0tc2VsZWN0aW9uLWNvbnRyb2xzJzogdHJ1ZSxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1hY3RpdmUnOiB0aGlzLmlzQWN0aXZlXG4gICAgICB9O1xuXG4gICAgICBpZiAodGhpcy5oYXNFcnJvcikge1xuICAgICAgICBjbGFzc2VzWydlcnJvci0tdGV4dCddID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFkZFRleHRDb2xvckNsYXNzQ2hlY2tzKGNsYXNzZXMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY2xhc3NlcztcbiAgICB9LFxuICAgIGljb246IGZ1bmN0aW9uIGljb24oKSB7XG4gICAgICBpZiAodGhpcy5pbnB1dEluZGV0ZXJtaW5hdGUpIHtcbiAgICAgICAgcmV0dXJuICdpbmRldGVybWluYXRlX2NoZWNrX2JveCc7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaXNBY3RpdmUpIHtcbiAgICAgICAgcmV0dXJuICdjaGVja19ib3gnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuICdjaGVja19ib3hfb3V0bGluZV9ibGFuayc7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBncm91cEZvY3VzOiBmdW5jdGlvbiBncm91cEZvY3VzKGUpIHtcbiAgICAgIHRoaXMuaXNGb2N1c2VkID0gdHJ1ZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2ZvY3VzJywgZSk7XG4gICAgfSxcbiAgICBncm91cEJsdXI6IGZ1bmN0aW9uIGdyb3VwQmx1cihlKSB7XG4gICAgICB0aGlzLmlzRm9jdXNlZCA9IGZhbHNlO1xuICAgICAgdGhpcy50YWJGb2N1c2VkID0gZmFsc2U7XG4gICAgICB0aGlzLiRlbWl0KCdibHVyJywgdGhpcy5pbnB1dFZhbHVlKTtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciB0cmFuc2l0aW9uID0gaCgndi1mYWRlLXRyYW5zaXRpb24nLCBbaCgndi1pY29uJywge1xuICAgICAgc3RhdGljQ2xhc3M6ICdpY29uLS1zZWxlY3Rpb24tY29udHJvbCcsXG4gICAgICAnY2xhc3MnOiB7XG4gICAgICAgICdpY29uLS1jaGVja2JveCc6IHRoaXMuaWNvbiA9PT0gJ2NoZWNrX2JveCdcbiAgICAgIH0sXG4gICAgICBrZXk6IHRoaXMuaWNvbixcbiAgICAgIG9uOiBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgY2xpY2s6IHRoaXMudG9nZ2xlXG4gICAgICB9LCB0aGlzLiRsaXN0ZW5lcnMpXG4gICAgfSwgdGhpcy5pY29uKV0pO1xuXG4gICAgdmFyIGRhdGEgPSB7XG4gICAgICBhdHRyczoge1xuICAgICAgICB0YWJpbmRleDogdGhpcy5kaXNhYmxlZCA/IC0xIDogdGhpcy5pbnRlcm5hbFRhYkluZGV4IHx8IHRoaXMudGFiaW5kZXgsXG4gICAgICAgIHJvbGU6ICdjaGVja2JveCcsXG4gICAgICAgICdhcmlhLWNoZWNrZWQnOiB0aGlzLmlucHV0SW5kZXRlcm1pbmF0ZSAmJiAnbWl4ZWQnIHx8IHRoaXMuaXNBY3RpdmUgJiYgJ3RydWUnIHx8ICdmYWxzZScsXG4gICAgICAgICdhcmlhLWxhYmVsJzogdGhpcy5sYWJlbFxuICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgcmlwcGxlID0gdGhpcy5yaXBwbGUgPyB0aGlzLmdlblJpcHBsZSgpIDogbnVsbDtcblxuICAgIHJldHVybiB0aGlzLmdlbklucHV0R3JvdXAoW3RyYW5zaXRpb24sIHJpcHBsZV0sIGRhdGEpO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMDAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBlcnJvckJ1Y2tldDogW10sXG4gICAgICBoYXNGb2N1c2VkOiBmYWxzZSxcbiAgICAgIGhhc0lucHV0OiBmYWxzZSxcbiAgICAgIHNob3VsZFZhbGlkYXRlOiBmYWxzZSxcbiAgICAgIHZhbGlkOiBmYWxzZVxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGVycm9yOiB7XG4gICAgICB0eXBlOiBCb29sZWFuXG4gICAgfSxcbiAgICBlcnJvck1lc3NhZ2VzOiB7XG4gICAgICB0eXBlOiBbU3RyaW5nLCBBcnJheV0sXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgfVxuICAgIH0sXG4gICAgcnVsZXM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHZhbGlkYXRlT25CbHVyOiBCb29sZWFuXG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICB2YWxpZGF0aW9uczogZnVuY3Rpb24gdmFsaWRhdGlvbnMoKSB7XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy5lcnJvck1lc3NhZ2VzKSkge1xuICAgICAgICByZXR1cm4gW3RoaXMuZXJyb3JNZXNzYWdlc107XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZXJyb3JNZXNzYWdlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVycm9yTWVzc2FnZXM7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuc2hvdWxkVmFsaWRhdGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXJyb3JCdWNrZXQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG4gICAgfSxcbiAgICBoYXNFcnJvcjogZnVuY3Rpb24gaGFzRXJyb3IoKSB7XG4gICAgICByZXR1cm4gdGhpcy52YWxpZGF0aW9ucy5sZW5ndGggPiAwIHx8IHRoaXMuZXJyb3JNZXNzYWdlcy5sZW5ndGggPiAwIHx8IHRoaXMuZXJyb3I7XG4gICAgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgcnVsZXM6IHtcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsLCBvbGRWYWwpIHtcbiAgICAgICAgLy8gVE9ETzogVGhpcyBoYW5kbGVyIHNlZW1zIHRvIHRyaWdnZXIgd2hlbiBpbnB1dCBjaGFuZ2VzLCBldmVuIHRob3VnaFxuICAgICAgICAvLyBydWxlcyBhcnJheSBzdGF5cyB0aGUgc2FtZT8gU29sdmVkIGl0IGxpa2UgdGhpcyBmb3Igbm93XG4gICAgICAgIGlmIChuZXdWYWwubGVuZ3RoID09PSBvbGRWYWwubGVuZ3RoKSByZXR1cm47XG5cbiAgICAgICAgdGhpcy52YWxpZGF0ZSgpO1xuICAgICAgfSxcblxuICAgICAgZGVlcDogdHJ1ZVxuICAgIH0sXG4gICAgaW5wdXRWYWx1ZTogZnVuY3Rpb24gaW5wdXRWYWx1ZSh2YWwpIHtcbiAgICAgIC8vIElmIGl0J3MgdGhlIGZpcnN0IHRpbWUgd2UncmUgc2V0dGluZyBpbnB1dCxcbiAgICAgIC8vIG1hcmsgaXQgd2l0aCBoYXNJbnB1dFxuICAgICAgaWYgKCEhdmFsICYmICF0aGlzLmhhc0lucHV0KSB0aGlzLmhhc0lucHV0ID0gdHJ1ZTtcblxuICAgICAgaWYgKHRoaXMuaGFzSW5wdXQgJiYgIXRoaXMudmFsaWRhdGVPbkJsdXIpIHRoaXMuc2hvdWxkVmFsaWRhdGUgPSB0cnVlO1xuICAgIH0sXG4gICAgaXNGb2N1c2VkOiBmdW5jdGlvbiBpc0ZvY3VzZWQodmFsKSB7XG4gICAgICAvLyBJZiB3ZSdyZSBub3QgZm9jdXNlZCwgYW5kIGl0J3MgdGhlIGZpcnN0IHRpbWVcbiAgICAgIC8vIHdlJ3JlIGRlZm9jdXNpbmcsIHNldCBzaG91bGRWYWxpZGF0ZSB0byB0cnVlXG4gICAgICBpZiAoIXZhbCAmJiAhdGhpcy5oYXNGb2N1c2VkKSB7XG4gICAgICAgIHRoaXMuaGFzRm9jdXNlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuc2hvdWxkVmFsaWRhdGUgPSB0cnVlO1xuXG4gICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTplcnJvcicsIHRoaXMuZXJyb3JCdWNrZXQubGVuZ3RoID4gMCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBoYXNFcnJvcjogZnVuY3Rpb24gaGFzRXJyb3IodmFsKSB7XG4gICAgICBpZiAodGhpcy5zaG91bGRWYWxpZGF0ZSkge1xuICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZXJyb3InLCB2YWwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKHZhbCkge1xuICAgICAgdGhpcy5zaG91bGRWYWxpZGF0ZSA9ICEhdmFsO1xuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuc2hvdWxkVmFsaWRhdGUgPSAhIXRoaXMuZXJyb3I7XG4gICAgdGhpcy52YWxpZGF0ZSgpO1xuICB9LFxuXG5cbiAgbWV0aG9kczoge1xuICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIC8vIFRPRE86IERvIHRoaXMgYW5vdGhlciB3YXkhXG4gICAgICAvLyBUaGlzIGlzIHNvIHRoYXQgd2UgY2FuIHJlc2V0IGFsbCB0eXBlcyBvZiBpbnB1dHNcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5pc011bHRpcGxlID8gW10gOiBudWxsKTtcbiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIG51bGwpO1xuXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLnNob3VsZFZhbGlkYXRlID0gZmFsc2U7XG4gICAgICAgIF90aGlzLmhhc0ZvY3VzZWQgPSBmYWxzZTtcbiAgICAgICAgX3RoaXMudmFsaWRhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgdmFsaWRhdGU6IGZ1bmN0aW9uIHZhbGlkYXRlKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBmb3JjZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG4gICAgICB2YXIgdmFsdWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHRoaXMuaW5wdXRWYWx1ZTtcblxuICAgICAgaWYgKGZvcmNlKSB0aGlzLnNob3VsZFZhbGlkYXRlID0gdHJ1ZTtcblxuICAgICAgdGhpcy5lcnJvckJ1Y2tldCA9IFtdO1xuXG4gICAgICB0aGlzLnJ1bGVzLmZvckVhY2goZnVuY3Rpb24gKHJ1bGUpIHtcbiAgICAgICAgdmFyIHZhbGlkID0gdHlwZW9mIHJ1bGUgPT09ICdmdW5jdGlvbicgPyBydWxlKHZhbHVlKSA6IHJ1bGU7XG5cbiAgICAgICAgaWYgKHZhbGlkICE9PSB0cnVlICYmICFbJ3N0cmluZycsICdib29sZWFuJ10uaW5jbHVkZXModHlwZW9mIHZhbGlkID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZih2YWxpZCkpKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUnVsZXMgc2hvdWxkIHJldHVybiBhIHN0cmluZyBvciBib29sZWFuLCByZWNlaXZlZCBcXCcnICsgKHR5cGVvZiB2YWxpZCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YodmFsaWQpKSArICdcXCcgaW5zdGVhZCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbGlkICE9PSB0cnVlKSB7XG4gICAgICAgICAgX3RoaXMyLmVycm9yQnVja2V0LnB1c2godmFsaWQpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgdGhpcy52YWxpZCA9IHRoaXMuZXJyb3JCdWNrZXQubGVuZ3RoID09PSAwO1xuXG4gICAgICByZXR1cm4gdGhpcy52YWxpZDtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEwMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZJY29uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190aGVtZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19taXhpbnNfdG9nZ2xlYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcbl9fd2VicGFja19yZXF1aXJlX18oMTAyKTtcblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1jaGlwJyxcblxuICBjb21wb25lbnRzOiB7XG4gICAgVkljb246IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkljb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXVxuICB9LFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190aGVtZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19taXhpbnNfdG9nZ2xlYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBwcm9wczoge1xuICAgIGNsb3NlOiBCb29sZWFuLFxuICAgIGRpc2FibGVkOiBCb29sZWFuLFxuICAgIGxhYmVsOiBCb29sZWFuLFxuICAgIG91dGxpbmU6IEJvb2xlYW4sXG4gICAgLy8gVXNlZCBmb3Igc2VsZWN0cy90YWdnaW5nXG4gICAgc2VsZWN0ZWQ6IEJvb2xlYW4sXG4gICAgc21hbGw6IEJvb2xlYW4sXG4gICAgdGV4dENvbG9yOiBTdHJpbmcsXG4gICAgdmFsdWU6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlXG4gICAgfVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHZhciBjbGFzc2VzID0gdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyh7XG4gICAgICAgICdjaGlwLS1kaXNhYmxlZCc6IHRoaXMuZGlzYWJsZWQsXG4gICAgICAgICdjaGlwLS1zZWxlY3RlZCc6IHRoaXMuc2VsZWN0ZWQsXG4gICAgICAgICdjaGlwLS1sYWJlbCc6IHRoaXMubGFiZWwsXG4gICAgICAgICdjaGlwLS1vdXRsaW5lJzogdGhpcy5vdXRsaW5lLFxuICAgICAgICAnY2hpcC0tc21hbGwnOiB0aGlzLnNtYWxsLFxuICAgICAgICAnY2hpcC0tcmVtb3ZhYmxlJzogdGhpcy5jbG9zZSxcbiAgICAgICAgJ3RoZW1lLS1saWdodCc6IHRoaXMubGlnaHQsXG4gICAgICAgICd0aGVtZS0tZGFyayc6IHRoaXMuZGFya1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiB0aGlzLnRleHRDb2xvciB8fCB0aGlzLm91dGxpbmUgPyB0aGlzLmFkZFRleHRDb2xvckNsYXNzQ2hlY2tzKGNsYXNzZXMsIHRoaXMudGV4dENvbG9yID8gJ3RleHRDb2xvcicgOiAnY29sb3InKSA6IGNsYXNzZXM7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBnZW5DbG9zZTogZnVuY3Rpb24gZ2VuQ2xvc2UoaCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAnY2hpcF9fY2xvc2UnLFxuICAgICAgICBvbjoge1xuICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAgICAgICBfdGhpcy4kZW1pdCgnaW5wdXQnLCBmYWxzZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gaCgnZGl2JywgZGF0YSwgW2goX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCAnY2FuY2VsJyldKTtcbiAgICB9LFxuICAgIGdlbkNvbnRlbnQ6IGZ1bmN0aW9uIGdlbkNvbnRlbnQoaCkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gW3RoaXMuJHNsb3RzLmRlZmF1bHRdO1xuXG4gICAgICB0aGlzLmNsb3NlICYmIGNoaWxkcmVuLnB1c2godGhpcy5nZW5DbG9zZShoKSk7XG5cbiAgICAgIHJldHVybiBoKCdzcGFuJywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ2NoaXBfX2NvbnRlbnQnXG4gICAgICB9LCBjaGlsZHJlbik7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgZGF0YSA9IHtcbiAgICAgIHN0YXRpY0NsYXNzOiAnY2hpcCcsXG4gICAgICAnY2xhc3MnOiB0aGlzLmNsYXNzZXMsXG4gICAgICBhdHRyczogeyB0YWJpbmRleDogdGhpcy5kaXNhYmxlZCA/IC0xIDogMCB9LFxuICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgbmFtZTogJ3Nob3cnLFxuICAgICAgICB2YWx1ZTogdGhpcy5pc0FjdGl2ZVxuICAgICAgfV0sXG4gICAgICBvbjogdGhpcy4kbGlzdGVuZXJzXG4gICAgfTtcblxuICAgIHJldHVybiBoKCdzcGFuJywgZGF0YSwgW3RoaXMuZ2VuQ29udGVudChoKV0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMDIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAxMDMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiB1bnVzZWQgaGFybW9ueSBleHBvcnQgVlRhYmxlT3ZlcmZsb3cgKi9cbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZEYXRhVGFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTA0KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZFZGl0RGlhbG9nX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzNCk7XG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWRGF0YVRhYmxlICovXG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWRWRpdERpYWxvZyAqL1xuXG5cblxuXG5cbnZhciBWVGFibGVPdmVyZmxvdyA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZFwiIC8qIGNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwgKi9dKSgndGFibGVfX292ZXJmbG93Jyk7XG5cblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WRGF0YVRhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WRGF0YVRhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WRGF0YVRhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fVkVkaXREaWFsb2dfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZFZGl0RGlhbG9nX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuY29tcG9uZW50KFZUYWJsZU92ZXJmbG93Lm5hbWUsIFZUYWJsZU92ZXJmbG93KTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WRGF0YVRhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDEwNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZCdG5fXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkljb25fXyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19WUHJvZ3Jlc3NMaW5lYXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMzQpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fVlNlbGVjdF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfZmlsdGVyYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0MSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19taXhpbnNfdGhlbWVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fbWl4aW5zX2xvYWRhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX21peGluc19oZWFkX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19taXhpbnNfYm9keV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMzEpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fbWl4aW5zX2Zvb3RfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTMyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX19taXhpbnNfcHJvZ3Jlc3NfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTMzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX191dGlsX2hlbHBlcnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG52YXIgX3NsaWNlZFRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0gcmV0dXJuIGZ1bmN0aW9uIChhcnIsIGkpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyByZXR1cm4gYXJyOyB9IGVsc2UgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkgeyByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpOyB9IGVsc2UgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTsgfSB9OyB9KCk7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXygxMDUpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxMDYpO1xuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtZGF0YS10YWJsZScsXG5cbiAgY29tcG9uZW50czoge1xuICAgIFZCdG46IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJ0bl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLFxuICAgIFZJY29uOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZJY29uX19bXCJhXCIgLyogZGVmYXVsdCAqL10sXG4gICAgVlByb2dyZXNzTGluZWFyOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZQcm9ncmVzc0xpbmVhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLFxuICAgIFZTZWxlY3Q6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fVlNlbGVjdF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLFxuICAgIC8vIEltcG9ydGluZyBkb2VzIG5vdCB3b3JrIHByb3Blcmx5XG4gICAgJ3YtdGFibGUtb3ZlcmZsb3cnOiBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fdXRpbF9oZWxwZXJzX19bXCJkXCIgLyogY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCAqL10pKCd0YWJsZV9fb3ZlcmZsb3cnKVxuICB9LFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFsbDogZmFsc2UsXG4gICAgICBzZWFyY2hMZW5ndGg6IDAsXG4gICAgICBkZWZhdWx0UGFnaW5hdGlvbjoge1xuICAgICAgICBkZXNjZW5kaW5nOiBmYWxzZSxcbiAgICAgICAgcGFnZTogMSxcbiAgICAgICAgcm93c1BlclBhZ2U6IDUsXG4gICAgICAgIHNvcnRCeTogbnVsbCxcbiAgICAgICAgdG90YWxJdGVtczogMFxuICAgICAgfSxcbiAgICAgIGV4cGFuZGVkOiB7fVxuICAgIH07XG4gIH0sXG5cblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX21peGluc19oZWFkX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fbWl4aW5zX2JvZHlfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfZmlsdGVyYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX21peGluc19mb290X19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fbWl4aW5zX2xvYWRhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX21peGluc19wcm9ncmVzc19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX21peGluc190aGVtZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgcHJvcHM6IHtcbiAgICBleHBhbmQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW5cbiAgICB9LFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGhlYWRlclRleHQ6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICd0ZXh0J1xuICAgIH0sXG4gICAgaGlkZUFjdGlvbnM6IEJvb2xlYW4sXG4gICAgaGlkZUhlYWRlcnM6IEJvb2xlYW4sXG4gICAgZGlzYWJsZUluaXRpYWxTb3J0OiBCb29sZWFuLFxuICAgIG11c3RTb3J0OiBCb29sZWFuLFxuICAgIG5vUmVzdWx0c1RleHQ6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdObyBtYXRjaGluZyByZWNvcmRzIGZvdW5kJ1xuICAgIH0sXG4gICAgcm93c1BlclBhZ2VJdGVtczoge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIFs1LCAxMCwgMjUsIHsgdGV4dDogJ0FsbCcsIHZhbHVlOiAtMSB9XTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHJvd3NQZXJQYWdlVGV4dDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ1Jvd3MgcGVyIHBhZ2U6J1xuICAgIH0sXG4gICAgc2VsZWN0QWxsOiBbQm9vbGVhbiwgU3RyaW5nXSxcbiAgICBzZWFyY2g6IHtcbiAgICAgIHJlcXVpcmVkOiBmYWxzZVxuICAgIH0sXG4gICAgZmlsdGVyOiB7XG4gICAgICB0eXBlOiBGdW5jdGlvbixcbiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KHZhbCwgc2VhcmNoKSB7XG4gICAgICAgIHJldHVybiB2YWwgIT09IG51bGwgJiYgWyd1bmRlZmluZWQnLCAnYm9vbGVhbiddLmluZGV4T2YodHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YodmFsKSkgPT09IC0xICYmIHZhbC50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihzZWFyY2gpICE9PSAtMTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGN1c3RvbUZpbHRlcjoge1xuICAgICAgdHlwZTogRnVuY3Rpb24sXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdChpdGVtcywgc2VhcmNoLCBmaWx0ZXIsIGhlYWRlcnMpIHtcbiAgICAgICAgc2VhcmNoID0gc2VhcmNoLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKHNlYXJjaC50cmltKCkgPT09ICcnKSByZXR1cm4gaXRlbXM7XG5cbiAgICAgICAgdmFyIHByb3BzID0gaGVhZGVycy5tYXAoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgICByZXR1cm4gaC52YWx1ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGl0ZW1zLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5zb21lKGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgICAgICAgICByZXR1cm4gZmlsdGVyKE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX191dGlsX2hlbHBlcnNfX1tcImdcIiAvKiBnZXRPYmplY3RWYWx1ZUJ5UGF0aCAqL10pKGl0ZW0sIHByb3ApLCBzZWFyY2gpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGN1c3RvbVNvcnQ6IHtcbiAgICAgIHR5cGU6IEZ1bmN0aW9uLFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoaXRlbXMsIGluZGV4LCBpc0Rlc2NlbmRpbmcpIHtcbiAgICAgICAgaWYgKGluZGV4ID09PSBudWxsKSByZXR1cm4gaXRlbXM7XG5cbiAgICAgICAgcmV0dXJuIGl0ZW1zLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICB2YXIgc29ydEEgPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fdXRpbF9oZWxwZXJzX19bXCJnXCIgLyogZ2V0T2JqZWN0VmFsdWVCeVBhdGggKi9dKShhLCBpbmRleCk7XG4gICAgICAgICAgdmFyIHNvcnRCID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfX3V0aWxfaGVscGVyc19fW1wiZ1wiIC8qIGdldE9iamVjdFZhbHVlQnlQYXRoICovXSkoYiwgaW5kZXgpO1xuXG4gICAgICAgICAgaWYgKGlzRGVzY2VuZGluZykge1xuICAgICAgICAgICAgdmFyIF9yZWYgPSBbc29ydEIsIHNvcnRBXTtcbiAgICAgICAgICAgIHNvcnRBID0gX3JlZlswXTtcbiAgICAgICAgICAgIHNvcnRCID0gX3JlZlsxXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBDaGVjayBpZiBib3RoIGFyZSBudW1iZXJzXG4gICAgICAgICAgaWYgKCFpc05hTihzb3J0QSkgJiYgIWlzTmFOKHNvcnRCKSkge1xuICAgICAgICAgICAgcmV0dXJuIHNvcnRBIC0gc29ydEI7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gQ2hlY2sgaWYgYm90aCBjYW5ub3QgYmUgZXZhbHVhdGVkXG4gICAgICAgICAgaWYgKHNvcnRBID09PSBudWxsICYmIHNvcnRCID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgX21hcCA9IFtzb3J0QSwgc29ydEJdLm1hcChmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgcmV0dXJuIChzIHx8ICcnKS50b1N0cmluZygpLnRvTG9jYWxlTG93ZXJDYXNlKCk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICB2YXIgX21hcDIgPSBfc2xpY2VkVG9BcnJheShfbWFwLCAyKTtcblxuICAgICAgICAgIHNvcnRBID0gX21hcDJbMF07XG4gICAgICAgICAgc29ydEIgPSBfbWFwMlsxXTtcblxuXG4gICAgICAgICAgaWYgKHNvcnRBID4gc29ydEIpIHJldHVybiAxO1xuICAgICAgICAgIGlmIChzb3J0QSA8IHNvcnRCKSByZXR1cm4gLTE7XG5cbiAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICB2YWx1ZToge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgfVxuICAgIH0sXG4gICAgaXRlbXM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgfVxuICAgIH0sXG4gICAgdG90YWxJdGVtczoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH0sXG4gICAgaXRlbUtleToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2lkJ1xuICAgIH0sXG4gICAgcGFnaW5hdGlvbjoge1xuICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7fVxuICAgIH1cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAnZGF0YXRhYmxlIHRhYmxlJzogdHJ1ZSxcbiAgICAgICAgJ2RhdGF0YWJsZS0tc2VsZWN0LWFsbCc6IHRoaXMuc2VsZWN0QWxsICE9PSBmYWxzZSxcbiAgICAgICAgJ3RoZW1lLS1kYXJrJzogdGhpcy5kYXJrLFxuICAgICAgICAndGhlbWUtLWxpZ2h0JzogdGhpcy5saWdodFxuICAgICAgfTtcbiAgICB9LFxuICAgIGNvbXB1dGVkUGFnaW5hdGlvbjogZnVuY3Rpb24gY29tcHV0ZWRQYWdpbmF0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaGFzUGFnaW5hdGlvbiA/IHRoaXMucGFnaW5hdGlvbiA6IHRoaXMuZGVmYXVsdFBhZ2luYXRpb247XG4gICAgfSxcbiAgICBoYXNQYWdpbmF0aW9uOiBmdW5jdGlvbiBoYXNQYWdpbmF0aW9uKCkge1xuICAgICAgdmFyIHBhZ2luYXRpb24gPSB0aGlzLnBhZ2luYXRpb24gfHwge307XG5cbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhwYWdpbmF0aW9uKS5sZW5ndGggPiAwO1xuICAgIH0sXG4gICAgaGFzU2VsZWN0QWxsOiBmdW5jdGlvbiBoYXNTZWxlY3RBbGwoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zZWxlY3RBbGwgIT09IHVuZGVmaW5lZCAmJiB0aGlzLnNlbGVjdEFsbCAhPT0gZmFsc2U7XG4gICAgfSxcbiAgICBpdGVtc0xlbmd0aDogZnVuY3Rpb24gaXRlbXNMZW5ndGgoKSB7XG4gICAgICBpZiAodGhpcy5zZWFyY2gpIHJldHVybiB0aGlzLnNlYXJjaExlbmd0aDtcbiAgICAgIHJldHVybiB0aGlzLnRvdGFsSXRlbXMgfHwgdGhpcy5pdGVtcy5sZW5ndGg7XG4gICAgfSxcbiAgICBpbmRldGVybWluYXRlOiBmdW5jdGlvbiBpbmRldGVybWluYXRlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaGFzU2VsZWN0QWxsICYmIHRoaXMuc29tZUl0ZW1zICYmICF0aGlzLmV2ZXJ5SXRlbTtcbiAgICB9LFxuICAgIGV2ZXJ5SXRlbTogZnVuY3Rpb24gZXZlcnlJdGVtKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyZWRJdGVtcy5sZW5ndGggJiYgdGhpcy5maWx0ZXJlZEl0ZW1zLmV2ZXJ5KGZ1bmN0aW9uIChpKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5pc1NlbGVjdGVkKGkpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBzb21lSXRlbXM6IGZ1bmN0aW9uIHNvbWVJdGVtcygpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gdGhpcy5maWx0ZXJlZEl0ZW1zLnNvbWUoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi5pc1NlbGVjdGVkKGkpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRQYWdlOiBmdW5jdGlvbiBnZXRQYWdlKCkge1xuICAgICAgdmFyIHJvd3NQZXJQYWdlID0gdGhpcy5jb21wdXRlZFBhZ2luYXRpb24ucm93c1BlclBhZ2U7XG5cblxuICAgICAgcmV0dXJuIHJvd3NQZXJQYWdlID09PSBPYmplY3Qocm93c1BlclBhZ2UpID8gcm93c1BlclBhZ2UudmFsdWUgOiByb3dzUGVyUGFnZTtcbiAgICB9LFxuICAgIHBhZ2VTdGFydDogZnVuY3Rpb24gcGFnZVN0YXJ0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0UGFnZSA9PT0gLTEgPyAwIDogKHRoaXMuY29tcHV0ZWRQYWdpbmF0aW9uLnBhZ2UgLSAxKSAqIHRoaXMuZ2V0UGFnZTtcbiAgICB9LFxuICAgIHBhZ2VTdG9wOiBmdW5jdGlvbiBwYWdlU3RvcCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldFBhZ2UgPT09IC0xID8gdGhpcy5pdGVtc0xlbmd0aCA6IHRoaXMuY29tcHV0ZWRQYWdpbmF0aW9uLnBhZ2UgKiB0aGlzLmdldFBhZ2U7XG4gICAgfSxcbiAgICBmaWx0ZXJlZEl0ZW1zOiBmdW5jdGlvbiBmaWx0ZXJlZEl0ZW1zKCkge1xuICAgICAgaWYgKHRoaXMudG90YWxJdGVtcykgcmV0dXJuIHRoaXMuaXRlbXM7XG5cbiAgICAgIHZhciBpdGVtcyA9IHRoaXMuaXRlbXMuc2xpY2UoKTtcbiAgICAgIHZhciBoYXNTZWFyY2ggPSB0eXBlb2YgdGhpcy5zZWFyY2ggIT09ICd1bmRlZmluZWQnICYmIHRoaXMuc2VhcmNoICE9PSBudWxsO1xuXG4gICAgICBpZiAoaGFzU2VhcmNoKSB7XG4gICAgICAgIGl0ZW1zID0gdGhpcy5jdXN0b21GaWx0ZXIoaXRlbXMsIHRoaXMuc2VhcmNoLCB0aGlzLmZpbHRlciwgdGhpcy5oZWFkZXJzKTtcbiAgICAgICAgdGhpcy5zZWFyY2hMZW5ndGggPSBpdGVtcy5sZW5ndGg7XG4gICAgICB9XG5cbiAgICAgIGl0ZW1zID0gdGhpcy5jdXN0b21Tb3J0KGl0ZW1zLCB0aGlzLmNvbXB1dGVkUGFnaW5hdGlvbi5zb3J0QnksIHRoaXMuY29tcHV0ZWRQYWdpbmF0aW9uLmRlc2NlbmRpbmcpO1xuXG4gICAgICByZXR1cm4gdGhpcy5oaWRlQWN0aW9ucyAmJiAhdGhpcy5oYXNQYWdpbmF0aW9uID8gaXRlbXMgOiBpdGVtcy5zbGljZSh0aGlzLnBhZ2VTdGFydCwgdGhpcy5wYWdlU3RvcCk7XG4gICAgfSxcbiAgICBzZWxlY3RlZDogZnVuY3Rpb24gc2VsZWN0ZWQoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIHNlbGVjdGVkID0ge307XG4gICAgICB0aGlzLnZhbHVlLmZvckVhY2goZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgcmV0dXJuIHNlbGVjdGVkW2lbX3RoaXMzLml0ZW1LZXldXSA9IHRydWU7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzZWxlY3RlZDtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBpbmRldGVybWluYXRlOiBmdW5jdGlvbiBpbmRldGVybWluYXRlKHZhbCkge1xuICAgICAgaWYgKHZhbCkgdGhpcy5hbGwgPSB0cnVlO1xuICAgIH0sXG4gICAgc29tZUl0ZW1zOiBmdW5jdGlvbiBzb21lSXRlbXModmFsKSB7XG4gICAgICBpZiAoIXZhbCkgdGhpcy5hbGwgPSBmYWxzZTtcbiAgICB9LFxuICAgIHNlYXJjaDogZnVuY3Rpb24gc2VhcmNoKCkge1xuICAgICAgdGhpcy51cGRhdGVQYWdpbmF0aW9uKHsgcGFnZTogMSwgdG90YWxJdGVtczogdGhpcy5pdGVtc0xlbmd0aCB9KTtcbiAgICB9LFxuICAgIGV2ZXJ5SXRlbTogZnVuY3Rpb24gZXZlcnlJdGVtKHZhbCkge1xuICAgICAgaWYgKHZhbCkgdGhpcy5hbGwgPSB0cnVlO1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgdXBkYXRlUGFnaW5hdGlvbjogZnVuY3Rpb24gdXBkYXRlUGFnaW5hdGlvbih2YWwpIHtcbiAgICAgIHZhciBwYWdpbmF0aW9uID0gdGhpcy5oYXNQYWdpbmF0aW9uID8gdGhpcy5wYWdpbmF0aW9uIDogdGhpcy5kZWZhdWx0UGFnaW5hdGlvbjtcbiAgICAgIHZhciB1cGRhdGVkUGFnaW5hdGlvbiA9IE9iamVjdC5hc3NpZ24oe30sIHBhZ2luYXRpb24sIHZhbCk7XG4gICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6cGFnaW5hdGlvbicsIHVwZGF0ZWRQYWdpbmF0aW9uKTtcblxuICAgICAgaWYgKCF0aGlzLmhhc1BhZ2luYXRpb24pIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0UGFnaW5hdGlvbiA9IHVwZGF0ZWRQYWdpbmF0aW9uO1xuICAgICAgfVxuICAgIH0sXG4gICAgaXNTZWxlY3RlZDogZnVuY3Rpb24gaXNTZWxlY3RlZChpdGVtKSB7XG4gICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZFtpdGVtW3RoaXMuaXRlbUtleV1dO1xuICAgIH0sXG4gICAgaXNFeHBhbmRlZDogZnVuY3Rpb24gaXNFeHBhbmRlZChpdGVtKSB7XG4gICAgICByZXR1cm4gdGhpcy5leHBhbmRlZFtpdGVtW3RoaXMuaXRlbUtleV1dO1xuICAgIH0sXG4gICAgc29ydDogZnVuY3Rpb24gc29ydChpbmRleCkge1xuICAgICAgdmFyIF9jb21wdXRlZFBhZ2luYXRpb24gPSB0aGlzLmNvbXB1dGVkUGFnaW5hdGlvbixcbiAgICAgICAgICBzb3J0QnkgPSBfY29tcHV0ZWRQYWdpbmF0aW9uLnNvcnRCeSxcbiAgICAgICAgICBkZXNjZW5kaW5nID0gX2NvbXB1dGVkUGFnaW5hdGlvbi5kZXNjZW5kaW5nO1xuXG4gICAgICBpZiAoc29ydEJ5ID09PSBudWxsKSB7XG4gICAgICAgIHRoaXMudXBkYXRlUGFnaW5hdGlvbih7IHNvcnRCeTogaW5kZXgsIGRlc2NlbmRpbmc6IGZhbHNlIH0pO1xuICAgICAgfSBlbHNlIGlmIChzb3J0QnkgPT09IGluZGV4ICYmICFkZXNjZW5kaW5nKSB7XG4gICAgICAgIHRoaXMudXBkYXRlUGFnaW5hdGlvbih7IGRlc2NlbmRpbmc6IHRydWUgfSk7XG4gICAgICB9IGVsc2UgaWYgKHNvcnRCeSAhPT0gaW5kZXgpIHtcbiAgICAgICAgdGhpcy51cGRhdGVQYWdpbmF0aW9uKHsgc29ydEJ5OiBpbmRleCwgZGVzY2VuZGluZzogZmFsc2UgfSk7XG4gICAgICB9IGVsc2UgaWYgKCF0aGlzLm11c3RTb3J0KSB7XG4gICAgICAgIHRoaXMudXBkYXRlUGFnaW5hdGlvbih7IHNvcnRCeTogbnVsbCwgZGVzY2VuZGluZzogbnVsbCB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudXBkYXRlUGFnaW5hdGlvbih7IHNvcnRCeTogaW5kZXgsIGRlc2NlbmRpbmc6IGZhbHNlIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgbmVlZHNUUjogZnVuY3Rpb24gbmVlZHNUUihyb3cpIHtcbiAgICAgIHJldHVybiByb3cubGVuZ3RoICYmIHJvdy5maW5kKGZ1bmN0aW9uIChjKSB7XG4gICAgICAgIHJldHVybiBjLnRhZyA9PT0gJ3RkJyB8fCBjLnRhZyA9PT0gJ3RoJztcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2VuVFI6IGZ1bmN0aW9uIGdlblRSKGNoaWxkcmVuKSB7XG4gICAgICB2YXIgZGF0YSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0cicsIGRhdGEsIGNoaWxkcmVuKTtcbiAgICB9LFxuICAgIHRvZ2dsZTogZnVuY3Rpb24gdG9nZ2xlKHZhbHVlKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdmFyIHNlbGVjdGVkID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zZWxlY3RlZCk7XG4gICAgICB0aGlzLmZpbHRlcmVkSXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gc2VsZWN0ZWRbaVtfdGhpczQuaXRlbUtleV1dID0gdmFsdWU7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLml0ZW1zLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gc2VsZWN0ZWRbaVtfdGhpczQuaXRlbUtleV1dO1xuICAgICAgfSkpO1xuICAgIH1cbiAgfSxcblxuICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge1xuICAgIHZhciBmaXJzdFNvcnRhYmxlID0gdGhpcy5oZWFkZXJzLmZpbmQoZnVuY3Rpb24gKGgpIHtcbiAgICAgIHJldHVybiAhKCdzb3J0YWJsZScgaW4gaCkgfHwgaC5zb3J0YWJsZTtcbiAgICB9KTtcblxuICAgIHRoaXMuZGVmYXVsdFBhZ2luYXRpb24uc29ydEJ5ID0gIXRoaXMuZGlzYWJsZUluaXRpYWxTb3J0ICYmIGZpcnN0U29ydGFibGUgPyBmaXJzdFNvcnRhYmxlLnZhbHVlIDogbnVsbDtcblxuICAgIGlmICghdGhpcy5yb3dzUGVyUGFnZUl0ZW1zLmxlbmd0aCkge1xuICAgICAgY29uc29sZS53YXJuKCdUaGUgcHJvcCBcXCdyb3dzLXBlci1wYWdlLWl0ZW1zXFwnIGluIHYtZGF0YS10YWJsZSBjYW4gbm90IGJlIGVtcHR5LicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRlZmF1bHRQYWdpbmF0aW9uLnJvd3NQZXJQYWdlID0gdGhpcy5yb3dzUGVyUGFnZUl0ZW1zWzBdO1xuICAgIH1cblxuICAgIHRoaXMuZGVmYXVsdFBhZ2luYXRpb24udG90YWxJdGVtcyA9IHRoaXMuaXRlbXNMZW5ndGg7XG5cbiAgICB0aGlzLnVwZGF0ZVBhZ2luYXRpb24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kZWZhdWx0UGFnaW5hdGlvbiwgdGhpcy5wYWdpbmF0aW9uKSk7XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICByZXR1cm4gaCgndi10YWJsZS1vdmVyZmxvdycsIHt9LCBbaCgndGFibGUnLCB7XG4gICAgICAnY2xhc3MnOiB0aGlzLmNsYXNzZXNcbiAgICB9LCBbdGhpcy5nZW5USGVhZCgpLCB0aGlzLmdlblRCb2R5KCksIHRoaXMuZ2VuVEZvb3QoKV0pXSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEwNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDEwNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDEwNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19jb2xvcmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX190cmFuc2l0aW9uc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbl9fd2VicGFja19yZXF1aXJlX18oMTA4KTtcblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtcHJvZ3Jlc3MtbGluZWFyJyxcblxuICBjb21wb25lbnRzOiB7XG4gICAgVkZhZGVUcmFuc2l0aW9uOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3RyYW5zaXRpb25zX19bXCJiXCIgLyogVkZhZGVUcmFuc2l0aW9uICovXSxcbiAgICBWU2xpZGVYVHJhbnNpdGlvbjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX190cmFuc2l0aW9uc19fW1wiY1wiIC8qIFZTbGlkZVhUcmFuc2l0aW9uICovXVxuICB9LFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBwcm9wczoge1xuICAgIGFjdGl2ZToge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICB9LFxuICAgIGJhY2tncm91bmRDb2xvcjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH0sXG4gICAgYmFja2dyb3VuZE9wYWNpdHk6IHtcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiBudWxsXG4gICAgfSxcbiAgICBidWZmZXJWYWx1ZToge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6IDEwMFxuICAgIH0sXG4gICAgY29sb3I6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdwcmltYXJ5J1xuICAgIH0sXG4gICAgaGVpZ2h0OiB7XG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgZGVmYXVsdDogN1xuICAgIH0sXG4gICAgaW5kZXRlcm1pbmF0ZTogQm9vbGVhbixcbiAgICBxdWVyeTogQm9vbGVhbixcbiAgICB2YWx1ZToge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6IDBcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBzdHlsZXM6IGZ1bmN0aW9uIHN0eWxlcygpIHtcbiAgICAgIHZhciBzdHlsZXMgPSB7fTtcblxuICAgICAgaWYgKCF0aGlzLmFjdGl2ZSkge1xuICAgICAgICBzdHlsZXMuaGVpZ2h0ID0gMDtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLmluZGV0ZXJtaW5hdGUgJiYgcGFyc2VJbnQodGhpcy5idWZmZXJWYWx1ZSwgMTApICE9PSAxMDApIHtcbiAgICAgICAgc3R5bGVzLndpZHRoID0gdGhpcy5idWZmZXJWYWx1ZSArICclJztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN0eWxlcztcbiAgICB9LFxuICAgIGVmZmVjdGl2ZVdpZHRoOiBmdW5jdGlvbiBlZmZlY3RpdmVXaWR0aCgpIHtcbiAgICAgIGlmICghdGhpcy5idWZmZXJWYWx1ZSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMudmFsdWUgKiAxMDAgLyB0aGlzLmJ1ZmZlclZhbHVlO1xuICAgIH0sXG4gICAgYnVmZmVyU3R5bGVzOiBmdW5jdGlvbiBidWZmZXJTdHlsZXMoKSB7XG4gICAgICB2YXIgc3R5bGVzID0ge307XG5cbiAgICAgIGlmICghdGhpcy5hY3RpdmUpIHtcbiAgICAgICAgc3R5bGVzLmhlaWdodCA9IDA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdHlsZXM7XG4gICAgfSxcbiAgICBiYWNrZ3JvdW5kU3R5bGU6IGZ1bmN0aW9uIGJhY2tncm91bmRTdHlsZSgpIHtcbiAgICAgIHZhciBiYWNrZ3JvdW5kT3BhY2l0eSA9IHRoaXMuYmFja2dyb3VuZE9wYWNpdHkgPT0gbnVsbCA/IHRoaXMuYmFja2dyb3VuZENvbG9yID8gMSA6IDAuMyA6IHBhcnNlRmxvYXQodGhpcy5iYWNrZ3JvdW5kT3BhY2l0eSk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGhlaWdodDogdGhpcy5hY3RpdmUgPyAnYXV0bycgOiAwLFxuICAgICAgICBvcGFjaXR5OiBiYWNrZ3JvdW5kT3BhY2l0eSxcbiAgICAgICAgd2lkdGg6IHRoaXMuYnVmZmVyVmFsdWUgKyAnJSdcbiAgICAgIH07XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBnZW5EZXRlcm1pbmF0ZTogZnVuY3Rpb24gZ2VuRGV0ZXJtaW5hdGUoaCkge1xuICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgcmVmOiAnZnJvbnQnLFxuICAgICAgICBzdGF0aWNDbGFzczogJ3Byb2dyZXNzLWxpbmVhcl9fYmFyX19kZXRlcm1pbmF0ZScsXG4gICAgICAgIGNsYXNzOiB0aGlzLmFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzKCksXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgd2lkdGg6IHRoaXMuZWZmZWN0aXZlV2lkdGggKyAnJSdcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZW5CYXI6IGZ1bmN0aW9uIGdlbkJhcihoLCBuYW1lKSB7XG4gICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ3Byb2dyZXNzLWxpbmVhcl9fYmFyX19pbmRldGVybWluYXRlJyxcbiAgICAgICAgY2xhc3M6IHRoaXMuYWRkQmFja2dyb3VuZENvbG9yQ2xhc3NDaGVja3MoX2RlZmluZVByb3BlcnR5KHt9LCBuYW1lLCB0cnVlKSlcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2VuSW5kZXRlcm1pbmF0ZTogZnVuY3Rpb24gZ2VuSW5kZXRlcm1pbmF0ZShoKSB7XG4gICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICByZWY6ICdmcm9udCcsXG4gICAgICAgIHN0YXRpY0NsYXNzOiAncHJvZ3Jlc3MtbGluZWFyX19iYXJfX2luZGV0ZXJtaW5hdGUnLFxuICAgICAgICBjbGFzczoge1xuICAgICAgICAgICdwcm9ncmVzcy1saW5lYXJfX2Jhcl9faW5kZXRlcm1pbmF0ZS0tYWN0aXZlJzogdGhpcy5hY3RpdmVcbiAgICAgICAgfVxuICAgICAgfSwgW3RoaXMuZ2VuQmFyKGgsICdsb25nJyksIHRoaXMuZ2VuQmFyKGgsICdzaG9ydCcpXSk7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgZmFkZSA9IGgoJ3YtZmFkZS10cmFuc2l0aW9uJywgW3RoaXMuaW5kZXRlcm1pbmF0ZSAmJiB0aGlzLmdlbkluZGV0ZXJtaW5hdGUoaCldKTtcbiAgICB2YXIgc2xpZGUgPSBoKCd2LXNsaWRlLXgtdHJhbnNpdGlvbicsIFshdGhpcy5pbmRldGVybWluYXRlICYmIHRoaXMuZ2VuRGV0ZXJtaW5hdGUoaCldKTtcblxuICAgIHZhciBiYXIgPSBoKCdkaXYnLCB7XG4gICAgICBzdGF0aWNDbGFzczogJ3Byb2dyZXNzLWxpbmVhcl9fYmFyJyxcbiAgICAgIHN0eWxlOiB0aGlzLnN0eWxlc1xuICAgIH0sIFtmYWRlLCBzbGlkZV0pO1xuICAgIHZhciBiYWNrZ3JvdW5kID0gaCgnZGl2Jywge1xuICAgICAgc3RhdGljQ2xhc3M6ICdwcm9ncmVzcy1saW5lYXJfX2JhY2tncm91bmQnLFxuICAgICAgY2xhc3M6IFt0aGlzLmJhY2tncm91bmRDb2xvciB8fCB0aGlzLmNvbG9yXSxcbiAgICAgIHN0eWxlOiB0aGlzLmJhY2tncm91bmRTdHlsZVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiAncHJvZ3Jlc3MtbGluZWFyJyxcbiAgICAgIGNsYXNzOiB7XG4gICAgICAgICdwcm9ncmVzcy1saW5lYXItLXF1ZXJ5JzogdGhpcy5xdWVyeVxuICAgICAgfSxcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGhlaWdodDogdGhpcy5oZWlnaHQgKyAncHgnXG4gICAgICB9LFxuICAgICAgb246IHRoaXMuJGxpc3RlbmVyc1xuICAgIH0sIFtiYWNrZ3JvdW5kLCBiYXJdKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTA4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogMTA5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJ0bl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WQ2FyZF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19WQ2hlY2tib3hfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjkpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fVkNoaXBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMzMpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVkxpc3RfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMzcpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fVk1lbnVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMzgpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX21peGluc19kZXBlbmRlbnRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTYpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fbWl4aW5zX2ZpbHRlcmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNDEpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fbWl4aW5zX2lucHV0X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX19taXhpbnNfbWFza2FibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNDIpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfX21peGluc19zZWxlY3RfYXV0b2NvbXBsZXRlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyMik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fbWl4aW5zX3NlbGVjdF9jb21wdXRlZF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMjMpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfX21peGluc19zZWxlY3RfZXZlbnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyNCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNF9fbWl4aW5zX3NlbGVjdF9nZW5lcmF0b3JzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyNSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNV9fbWl4aW5zX3NlbGVjdF9oZWxwZXJzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyNik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNl9fbWl4aW5zX3NlbGVjdF9tZW51X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyNyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xN19fbWl4aW5zX3NlbGVjdF9wcm9wc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMjgpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMThfX21peGluc19zZWxlY3Rfd2F0Y2hlcnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTI5KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE5X19kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDM2KTtcbl9fd2VicGFja19yZXF1aXJlX18oMTQpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxMTApO1xuXG4vLyBDb21wb25lbnRzXG5cblxuXG5cblxuXG5cbi8vIE1peGluc1xuXG5cblxuXG5cblxuLy8gQ29tcG9uZW50IGxldmVsIG1peGluc1xuXG5cblxuXG5cblxuXG5cblxuLy8gRGlyZWN0aXZlc1xuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1zZWxlY3QnLFxuXG4gIGluaGVyaXRBdHRyczogZmFsc2UsXG5cbiAgY29tcG9uZW50czoge1xuICAgIFZDYXJkOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZDYXJkX19bXCJhXCIgLyogZGVmYXVsdCAqL10sXG4gICAgVkNoZWNrYm94OiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZDaGVja2JveF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLFxuICAgIFZDaGlwOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1ZDaGlwX19bXCJhXCIgLyogZGVmYXVsdCAqL10sXG4gICAgVkxpc3Q6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVkxpc3RfX1tcImFcIiAvKiBWTGlzdCAqL10sXG4gICAgVkxpc3RUaWxlOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1ZMaXN0X19bXCJiXCIgLyogVkxpc3RUaWxlICovXSxcbiAgICBWTGlzdFRpbGVBY3Rpb246IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVkxpc3RfX1tcImNcIiAvKiBWTGlzdFRpbGVBY3Rpb24gKi9dLFxuICAgIFZMaXN0VGlsZUNvbnRlbnQ6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVkxpc3RfX1tcImRcIiAvKiBWTGlzdFRpbGVDb250ZW50ICovXSxcbiAgICBWTGlzdFRpbGVUaXRsZTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19WTGlzdF9fW1wiZVwiIC8qIFZMaXN0VGlsZVRpdGxlICovXSxcbiAgICBWTWVudTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19WTWVudV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLFxuICAgIFZCdG46IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkJ0bl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXG4gIH0sXG5cbiAgZGlyZWN0aXZlczoge1xuICAgIENsaWNrT3V0c2lkZTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xOV9fZGlyZWN0aXZlc19jbGlja19vdXRzaWRlX19bXCJhXCIgLyogZGVmYXVsdCAqL11cbiAgfSxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19taXhpbnNfc2VsZWN0X2F1dG9jb21wbGV0ZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX21peGluc19jb2xvcmFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19taXhpbnNfZGVwZW5kZW50X19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfX21peGluc19zZWxlY3RfZXZlbnRzX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fbWl4aW5zX2ZpbHRlcmFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNF9fbWl4aW5zX3NlbGVjdF9nZW5lcmF0b3JzX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTVfX21peGluc19zZWxlY3RfaGVscGVyc19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX21peGluc19pbnB1dF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX19taXhpbnNfbWFza2FibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNl9fbWl4aW5zX3NlbGVjdF9tZW51X19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTdfX21peGluc19zZWxlY3RfcHJvcHNfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xOF9fbWl4aW5zX3NlbGVjdF93YXRjaGVyc19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLFxuICAvLyBJbnB1dCBhbmQgQ29tcHV0ZWQgYm90aFxuICAvLyBjb250YWluIGlzRGlydHkgcHJvcHNcbiAgLy8gbGFzdCBnZXRzIG1lcmdlZCBpblxuICBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEyX19taXhpbnNfc2VsZWN0X2NvbXB1dGVkX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNhY2hlZEl0ZW1zOiB0aGlzLmNhY2hlSXRlbXMgPyB0aGlzLml0ZW1zIDogW10sXG4gICAgICBjb250ZW50OiB7fSxcbiAgICAgIGRlZmF1bHRDb2xvcjogJ3ByaW1hcnknLFxuICAgICAgaW5wdXRWYWx1ZTogKHRoaXMubXVsdGlwbGUgfHwgdGhpcy50YWdzKSAmJiAhdGhpcy52YWx1ZSA/IFtdIDogdGhpcy52YWx1ZSxcbiAgICAgIGlzQm9vdGVkOiBmYWxzZSxcbiAgICAgIGxhc3RJdGVtOiAyMCxcbiAgICAgIGxhenlTZWFyY2g6IG51bGwsXG4gICAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgICBtZW51SXNBY3RpdmU6IGZhbHNlLFxuICAgICAgc2VhcmNoVGltZW91dDogbnVsbCxcbiAgICAgIHNlbGVjdGVkSW5kZXg6IC0xLFxuICAgICAgc2VsZWN0ZWRJdGVtczogW10sXG4gICAgICBzaG91bGRCcmVhazogZmFsc2VcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIC8vIElmIGluc3RhbmNlIGlzIGJlaW5nIGRlc3Ryb3llZFxuICAgIC8vIGRvIG5vdCBydW4gbW91bnRlZCBmdW5jdGlvbnNcbiAgICBpZiAodGhpcy5faXNEZXN0cm95ZWQpIHJldHVybjtcblxuICAgIC8vIEV2YWx1YXRlIHRoZSBzZWxlY3RlZCBpdGVtcyBpbW1lZGlhdGVseVxuICAgIC8vIHRvIGF2b2lkIGEgdW5uZWNlc3NhcnkgbGFiZWwgdHJhbnNpdGlvblxuICAgIHRoaXMuZ2VuU2VsZWN0ZWRJdGVtcygpO1xuXG4gICAgdGhpcy5jb250ZW50ID0gdGhpcy4kcmVmcy5tZW51LiRyZWZzLmNvbnRlbnQ7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuaXNCb290ZWQpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRlbnQpIHtcbiAgICAgICAgdGhpcy5jb250ZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMub25TY3JvbGwsIGZhbHNlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cblxuICBtZXRob2RzOiB7XG4gICAgY2hhbmdlU2VsZWN0ZWRJbmRleDogZnVuY3Rpb24gY2hhbmdlU2VsZWN0ZWRJbmRleChrZXlDb2RlKSB7XG4gICAgICAvLyBiYWNrc3BhY2UsIGxlZnQsIHJpZ2h0LCBkZWxldGVcbiAgICAgIGlmICghWzgsIDM3LCAzOSwgNDZdLmluY2x1ZGVzKGtleUNvZGUpKSByZXR1cm47XG5cbiAgICAgIHZhciBpbmRleGVzID0gdGhpcy5zZWxlY3RlZEl0ZW1zLmxlbmd0aCAtIDE7XG5cbiAgICAgIGlmIChrZXlDb2RlID09PSAzNykge1xuICAgICAgICAvLyBMZWZ0IGFycm93XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IHRoaXMuc2VsZWN0ZWRJbmRleCA9PT0gLTEgPyBpbmRleGVzIDogdGhpcy5zZWxlY3RlZEluZGV4IC0gMTtcbiAgICAgIH0gZWxzZSBpZiAoa2V5Q29kZSA9PT0gMzkpIHtcbiAgICAgICAgLy8gUmlnaHQgYXJyb3dcbiAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gdGhpcy5zZWxlY3RlZEluZGV4ID49IGluZGV4ZXMgPyAtMSA6IHRoaXMuc2VsZWN0ZWRJbmRleCArIDE7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZWN0ZWRJbmRleCA9PT0gLTEpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gaW5kZXhlcztcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBiYWNrc3BhY2UvZGVsZXRlXG4gICAgICBpZiAoWzgsIDQ2XS5pbmNsdWRlcyhrZXlDb2RlKSkge1xuICAgICAgICB2YXIgbmV3SW5kZXggPSB0aGlzLnNlbGVjdGVkSW5kZXggPT09IGluZGV4ZXMgPyB0aGlzLnNlbGVjdGVkSW5kZXggLSAxIDogdGhpcy5zZWxlY3RlZEl0ZW1zW3RoaXMuc2VsZWN0ZWRJbmRleCArIDFdID8gdGhpcy5zZWxlY3RlZEluZGV4IDogLTE7XG5cbiAgICAgICAgdGhpcy5jb21ib2JveCA/IHRoaXMuaW5wdXRWYWx1ZSA9IG51bGwgOiB0aGlzLnNlbGVjdEl0ZW0odGhpcy5zZWxlY3RlZEl0ZW1zW3RoaXMuc2VsZWN0ZWRJbmRleF0pO1xuICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBuZXdJbmRleDtcbiAgICAgIH1cbiAgICB9LFxuICAgIGZpbHRlckR1cGxpY2F0ZXM6IGZ1bmN0aW9uIGZpbHRlckR1cGxpY2F0ZXMoYXJyKSB7XG4gICAgICB2YXIgdmFsdWVzID0gYXJyLm1hcCh0aGlzLmdldFZhbHVlKTtcbiAgICAgIHJldHVybiBhcnIuZmlsdGVyKGZ1bmN0aW9uIChlbCwgaSkge1xuICAgICAgICByZXR1cm4gaSA9PT0gdmFsdWVzLmluZGV4T2YodmFsdWVzW2ldKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2VuRGlyZWN0aXZlczogZnVuY3Rpb24gZ2VuRGlyZWN0aXZlcygpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBbe1xuICAgICAgICBuYW1lOiAnY2xpY2stb3V0c2lkZScsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShlKSB7XG4gICAgICAgICAgcmV0dXJuICEhX3RoaXMuY29udGVudCAmJiAhX3RoaXMuY29udGVudC5jb250YWlucyhlLnRhcmdldCkgJiYgISFfdGhpcy4kZWwgJiYgIV90aGlzLiRlbC5jb250YWlucyhlLnRhcmdldCk7XG4gICAgICAgIH1cbiAgICAgIH1dO1xuICAgIH0sXG4gICAgZ2VuU2VsZWN0ZWRJdGVtczogZnVuY3Rpb24gZ2VuU2VsZWN0ZWRJdGVtcygpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgdmFsID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB0aGlzLmlucHV0VmFsdWU7XG5cbiAgICAgIC8vIElmIHdlIGFyZSB1c2luZyB0YWdzLCBkb24ndCBmaWx0ZXIgcmVzdWx0c1xuICAgICAgaWYgKHRoaXMudGFncykgcmV0dXJuIHRoaXMuc2VsZWN0ZWRJdGVtcyA9IHZhbDtcblxuICAgICAgLy8gQ29tYm9ib3ggaXMgdGhlIHNpbmdsZSB2ZXJzaW9uXG4gICAgICAvLyBvZiBhIHRhZ2dhYmxlIHNlbGVjdCBlbGVtZW50XG4gICAgICBpZiAodGhpcy5jb21ib2JveCkgcmV0dXJuIHRoaXMuc2VsZWN0ZWRJdGVtcyA9IHZhbCA/IFt2YWxdIDogW107XG5cbiAgICAgIHZhciBzZWxlY3RlZEl0ZW1zID0gdGhpcy5jb21wdXRlZEl0ZW1zLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICBpZiAoIV90aGlzMi5pc011bHRpcGxlKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5nZXRWYWx1ZShpKSA9PT0gX3RoaXMyLmdldFZhbHVlKHZhbCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gQWx3YXlzIHJldHVybiBCb29sZWFuXG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5maW5kRXhpc3RpbmdJdGVtKGkpID4gLTE7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIXNlbGVjdGVkSXRlbXMubGVuZ3RoICYmIHZhbCAhPSBudWxsICYmIHRoaXMudGFncykge1xuICAgICAgICBzZWxlY3RlZEl0ZW1zID0gQXJyYXkuaXNBcnJheSh2YWwpID8gdmFsIDogW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2VsZWN0ZWRJdGVtcyA9IHNlbGVjdGVkSXRlbXM7XG4gICAgfSxcbiAgICBjbGVhcmFibGVDYWxsYmFjazogZnVuY3Rpb24gY2xlYXJhYmxlQ2FsbGJhY2soKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIGlucHV0VmFsdWUgPSB0aGlzLmlzTXVsdGlwbGUgPyBbXSA6IG51bGw7XG5cbiAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9IGlucHV0VmFsdWU7XG4gICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCBpbnB1dFZhbHVlKTtcbiAgICAgIHRoaXMuZ2VuU2VsZWN0ZWRJdGVtcygpO1xuXG4gICAgICAvLyBXaGVuIGlucHV0IGlzIGNsZWFyZWRcbiAgICAgIC8vIHJlc2V0IHNlYXJjaCB2YWx1ZSBhbmRcbiAgICAgIC8vIHJlLWZvY3VzIHRoZSBpbnB1dFxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMy5zZWFyY2hWYWx1ZSA9IG51bGw7XG4gICAgICAgIF90aGlzMy5mb2N1c0lucHV0KCk7XG4gICAgICB9LCAwKTtcblxuICAgICAgaWYgKHRoaXMub3Blbk9uQ2xlYXIpIHtcbiAgICAgICAgc2V0VGltZW91dCh0aGlzLnNob3dNZW51LCA1MCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBvblNjcm9sbDogZnVuY3Rpb24gb25TY3JvbGwoKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgaWYgKCF0aGlzLmlzQWN0aXZlKSB7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzNC5jb250ZW50LnNjcm9sbFRvcCA9IDA7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHRoaXMubGFzdEl0ZW0gPj0gdGhpcy5jb21wdXRlZEl0ZW1zLmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgICAgIHZhciBzaG93TW9yZUl0ZW1zID0gdGhpcy5jb250ZW50LnNjcm9sbEhlaWdodCAtICh0aGlzLmNvbnRlbnQuc2Nyb2xsVG9wICsgdGhpcy5jb250ZW50LmNsaWVudEhlaWdodCkgPCAyMDA7XG5cbiAgICAgICAgaWYgKHNob3dNb3JlSXRlbXMpIHtcbiAgICAgICAgICB0aGlzLmxhc3RJdGVtICs9IDIwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBmaW5kRXhpc3RpbmdJdGVtOiBmdW5jdGlvbiBmaW5kRXhpc3RpbmdJdGVtKGl0ZW0pIHtcbiAgICAgIHZhciBfdGhpczUgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gdGhpcy5pbnB1dFZhbHVlLmZpbmRJbmRleChmdW5jdGlvbiAoaSkge1xuICAgICAgICB2YXIgYSA9IF90aGlzNS5nZXRWYWx1ZShpKTtcbiAgICAgICAgdmFyIGIgPSBfdGhpczUuZ2V0VmFsdWUoaXRlbSk7XG5cbiAgICAgICAgaWYgKGEgIT09IE9iamVjdChhKSkgcmV0dXJuIGEgPT09IGI7XG5cbiAgICAgICAgcmV0dXJuIF90aGlzNS5jb21wYXJlT2JqZWN0cyhhLCBiKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgc2VsZWN0SXRlbTogZnVuY3Rpb24gc2VsZWN0SXRlbShpdGVtKSB7XG4gICAgICB2YXIgX3RoaXM2ID0gdGhpcztcblxuICAgICAgaWYgKCF0aGlzLmlzTXVsdGlwbGUpIHtcbiAgICAgICAgdGhpcy5pbnB1dFZhbHVlID0gdGhpcy5yZXR1cm5PYmplY3QgPyBpdGVtIDogdGhpcy5nZXRWYWx1ZShpdGVtKTtcbiAgICAgICAgdGhpcy5zZWxlY3RlZEl0ZW1zID0gW2l0ZW1dO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHNlbGVjdGVkSXRlbXMgPSBbXTtcbiAgICAgICAgdmFyIGlucHV0VmFsdWUgPSB0aGlzLmlucHV0VmFsdWUuc2xpY2UoKTtcbiAgICAgICAgdmFyIGkgPSB0aGlzLmZpbmRFeGlzdGluZ0l0ZW0oaXRlbSk7XG5cbiAgICAgICAgaSAhPT0gLTEgJiYgaW5wdXRWYWx1ZS5zcGxpY2UoaSwgMSkgfHwgaW5wdXRWYWx1ZS5wdXNoKGl0ZW0pO1xuICAgICAgICB0aGlzLmlucHV0VmFsdWUgPSBpbnB1dFZhbHVlLm1hcChmdW5jdGlvbiAoaSkge1xuICAgICAgICAgIHNlbGVjdGVkSXRlbXMucHVzaChpKTtcbiAgICAgICAgICByZXR1cm4gX3RoaXM2LnJldHVybk9iamVjdCA/IGkgOiBfdGhpczYuZ2V0VmFsdWUoaSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRJdGVtcyA9IHNlbGVjdGVkSXRlbXM7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2VhcmNoVmFsdWUgPSAhdGhpcy5pc011bHRpcGxlICYmICF0aGlzLmNoaXBzICYmICF0aGlzLiRzY29wZWRTbG90cy5zZWxlY3Rpb24gPyB0aGlzLmdldFRleHQodGhpcy5zZWxlY3RlZEl0ZW0pIDogbnVsbDtcblxuICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdGhpcy5pbnB1dFZhbHVlKTtcblxuICAgICAgLy8gTGlzdCB0aWxlIHdpbGwgcmUtcmVuZGVyLCByZXNldCBpbmRleCB0b1xuICAgICAgLy8gbWFpbnRhaW4gaGlnaGxpZ2h0aW5nXG4gICAgICB2YXIgc2F2ZWRJbmRleCA9IHRoaXMuZ2V0TWVudUluZGV4KCk7XG4gICAgICB0aGlzLnJlc2V0TWVudUluZGV4KCk7XG5cbiAgICAgIC8vIEFmdGVyIHNlbGVjdGluZyBhbiBpdGVtXG4gICAgICAvLyByZWZvY3VzIHRoZSBpbnB1dCBhbmRcbiAgICAgIC8vIHJlc2V0IHRoZSBjYXJldCBwb3NcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXM2LmZvY3VzSW5wdXQoKTtcbiAgICAgICAgX3RoaXM2LnNldENhcmV0UG9zaXRpb24oX3RoaXM2LmN1cnJlbnRSYW5nZSk7XG5cbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoc2F2ZWRJbmRleCA+IC0xKSB7XG4gICAgICAgICAgICBfdGhpczYuc2V0TWVudUluZGV4KHNhdmVkSW5kZXgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBfdGhpczcgPSB0aGlzO1xuXG4gICAgdmFyIGRhdGEgPSB7XG4gICAgICBhdHRyczogX2V4dGVuZHMoe1xuICAgICAgICB0YWJpbmRleDogdGhpcy5pc0F1dG9jb21wbGV0ZSB8fCB0aGlzLmRpc2FibGVkID8gLTEgOiB0aGlzLnRhYmluZGV4XG4gICAgICB9LCB0aGlzLmlzQXV0b2NvbXBsZXRlID8gbnVsbCA6IHRoaXMuJGF0dHJzLCB7XG4gICAgICAgIHJvbGU6IHRoaXMuaXNBdXRvY29tcGxldGUgPyBudWxsIDogJ2NvbWJvYm94J1xuICAgICAgfSlcbiAgICB9O1xuXG4gICAgaWYgKCF0aGlzLmlzQXV0b2NvbXBsZXRlKSB7XG4gICAgICBkYXRhLm9uID0gdGhpcy5nZW5MaXN0ZW5lcnMoKTtcbiAgICAgIGRhdGEuZGlyZWN0aXZlcyA9IHRoaXMuZ2VuRGlyZWN0aXZlcygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkYXRhLm9uID0ge1xuICAgICAgICBjbGljazogZnVuY3Rpb24gY2xpY2soKSB7XG4gICAgICAgICAgaWYgKF90aGlzNy5kaXNhYmxlZCB8fCBfdGhpczcucmVhZG9ubHkgfHwgX3RoaXM3LmlzRm9jdXNlZCkgcmV0dXJuO1xuXG4gICAgICAgICAgLy8gSWYgdGhlIGlucHV0IGlzIGRpcnR5LFxuICAgICAgICAgIC8vIHRoZSBpbnB1dCBpcyBub3QgdGFyZ2V0YWJsZVxuICAgICAgICAgIC8vIHNvIHdlIG11c3QgbWFudWFsbHkgZm9jdXNcbiAgICAgICAgICBpZiAoX3RoaXM3LmlzRGlydHkpIHtcbiAgICAgICAgICAgIF90aGlzNy5mb2N1cygpO1xuICAgICAgICAgICAgX3RoaXM3LiRuZXh0VGljayhfdGhpczcuZm9jdXNJbnB1dCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmdlbklucHV0R3JvdXAoW3RoaXMuZ2VuU2VsZWN0aW9uc0FuZFNlYXJjaCgpLCB0aGlzLmdlbk1lbnUoKV0sIGRhdGEsIHRoaXMudG9nZ2xlTWVudSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDExMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDExMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc190aGVtZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDExMik7XG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtbGlzdCcsXG5cbiAgcHJvdmlkZTogZnVuY3Rpb24gcHJvdmlkZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbGlzdENsaWNrOiB0aGlzLmxpc3RDbGljayxcbiAgICAgIGxpc3RDbG9zZTogdGhpcy5saXN0Q2xvc2VcbiAgICB9O1xuICB9LFxuXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfdGhlbWVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVpZDogbnVsbCxcbiAgICAgIGdyb3VwczogW11cbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICBkZW5zZTogQm9vbGVhbixcbiAgICBzdWJoZWFkZXI6IEJvb2xlYW4sXG4gICAgdGhyZWVMaW5lOiBCb29sZWFuLFxuICAgIHR3b0xpbmU6IEJvb2xlYW5cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAnbGlzdCc6IHRydWUsXG4gICAgICAgICdsaXN0LS10d28tbGluZSc6IHRoaXMudHdvTGluZSxcbiAgICAgICAgJ2xpc3QtLWRlbnNlJzogdGhpcy5kZW5zZSxcbiAgICAgICAgJ2xpc3QtLXRocmVlLWxpbmUnOiB0aGlzLnRocmVlTGluZSxcbiAgICAgICAgJ2xpc3QtLXN1YmhlYWRlcic6IHRoaXMuc3ViaGVhZGVyLFxuICAgICAgICAndGhlbWUtLWRhcmsgZGFyay0tYmcnOiB0aGlzLmRhcmssXG4gICAgICAgICd0aGVtZS0tbGlnaHQgbGlnaHQtLWJnJzogdGhpcy5saWdodFxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICB1aWQ6IGZ1bmN0aW9uIHVpZCgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHRoaXMuJGNoaWxkcmVuLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gaS4kb3B0aW9ucy5fY29tcG9uZW50VGFnID09PSAndi1saXN0LWdyb3VwJztcbiAgICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgcmV0dXJuIGkudG9nZ2xlKF90aGlzLnVpZCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGxpc3RDbGljazogZnVuY3Rpb24gbGlzdENsaWNrKHVpZCwgZm9yY2UpIHtcbiAgICAgIGlmIChmb3JjZSkge1xuICAgICAgICB0aGlzLnVpZCA9IHVpZDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudWlkID0gdGhpcy51aWQgPT09IHVpZCA/IG51bGwgOiB1aWQ7XG4gICAgICB9XG4gICAgfSxcbiAgICBsaXN0Q2xvc2U6IGZ1bmN0aW9uIGxpc3RDbG9zZSh1aWQpIHtcbiAgICAgIGlmICh0aGlzLnVpZCA9PT0gdWlkKSB7XG4gICAgICAgIHRoaXMudWlkID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgJ2NsYXNzJzogdGhpcy5jbGFzc2VzLFxuICAgICAgYXR0cnM6IHsgJ2RhdGEtdWlkJzogdGhpcy5fdWlkIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIGgoJ3VsJywgZGF0YSwgW3RoaXMuJHNsb3RzLmRlZmF1bHRdKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTEyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogMTEzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdHJhbnNpdGlvbnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfYm9vdGFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTIpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX3RvZ2dsZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG5cblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWxpc3QtZ3JvdXAnLFxuXG4gIGluamVjdDogWydsaXN0Q2xpY2snLCAnbGlzdENsb3NlJ10sXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfYm9vdGFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfdG9nZ2xlYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBwcm9wczoge1xuICAgIGdyb3VwOiBTdHJpbmcsXG4gICAgbm9BY3Rpb246IEJvb2xlYW5cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAnbGlzdC0tZ3JvdXBfX2hlYWRlcic6IHRydWUsXG4gICAgICAgICdsaXN0LS1ncm91cF9faGVhZGVyLS1hY3RpdmUnOiB0aGlzLmlzQWN0aXZlLFxuICAgICAgICAnbGlzdC0tZ3JvdXBfX2hlYWRlci0tbm8tYWN0aW9uJzogdGhpcy5ub0FjdGlvblxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUoKSB7XG4gICAgICB0aGlzLmlzQm9vdGVkID0gdHJ1ZTtcblxuICAgICAgaWYgKCF0aGlzLmlzQWN0aXZlKSB7XG4gICAgICAgIHRoaXMubGlzdENsb3NlKHRoaXMuX3VpZCk7XG4gICAgICB9XG4gICAgfSxcbiAgICAkcm91dGU6IGZ1bmN0aW9uICRyb3V0ZSh0bykge1xuICAgICAgdmFyIGlzQWN0aXZlID0gdGhpcy5tYXRjaFJvdXRlKHRvLnBhdGgpO1xuXG4gICAgICBpZiAodGhpcy5ncm91cCkge1xuICAgICAgICBpZiAoaXNBY3RpdmUgJiYgdGhpcy5pc0FjdGl2ZSAhPT0gaXNBY3RpdmUpIHtcbiAgICAgICAgICB0aGlzLmxpc3RDbGljayh0aGlzLl91aWQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaXNBY3RpdmUgPSBpc0FjdGl2ZTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmlzQm9vdGVkID0gdGhpcy5pc0FjdGl2ZTtcblxuICAgIGlmICh0aGlzLmdyb3VwKSB7XG4gICAgICB0aGlzLmlzQWN0aXZlID0gdGhpcy5tYXRjaFJvdXRlKHRoaXMuJHJvdXRlLnBhdGgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmlzQWN0aXZlKSB7XG4gICAgICB0aGlzLmxpc3RDbGljayh0aGlzLl91aWQpO1xuICAgIH1cbiAgfSxcblxuXG4gIG1ldGhvZHM6IHtcbiAgICBjbGljazogZnVuY3Rpb24gY2xpY2soKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBpZiAoIXRoaXMuJHJlZnMuaXRlbS5xdWVyeVNlbGVjdG9yKCcubGlzdF9fdGlsZS0tZGlzYWJsZWQnKSkge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5saXN0Q2xpY2soX3RoaXMuX3VpZCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgdG9nZ2xlOiBmdW5jdGlvbiB0b2dnbGUodWlkKSB7XG4gICAgICB0aGlzLmlzQWN0aXZlID0gdGhpcy5fdWlkID09PSB1aWQ7XG4gICAgfSxcbiAgICBtYXRjaFJvdXRlOiBmdW5jdGlvbiBtYXRjaFJvdXRlKHRvKSB7XG4gICAgICBpZiAoIXRoaXMuZ3JvdXApIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0by5tYXRjaCh0aGlzLmdyb3VwKSAhPT0gbnVsbDtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBncm91cCA9IGgoJ3VsJywge1xuICAgICAgJ2NsYXNzJzogJ2xpc3QgbGlzdC0tZ3JvdXAnLFxuICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgbmFtZTogJ3Nob3cnLFxuICAgICAgICB2YWx1ZTogdGhpcy5pc0FjdGl2ZVxuICAgICAgfV0sXG4gICAgICByZWY6ICdncm91cCdcbiAgICB9LCB0aGlzLnNob3dMYXp5Q29udGVudCh0aGlzLiRzbG90cy5kZWZhdWx0KSk7XG5cbiAgICB2YXIgaXRlbSA9IGgoJ3VsJywge1xuICAgICAgJ2NsYXNzJzogdGhpcy5jbGFzc2VzLFxuICAgICAgb246IE9iamVjdC5hc3NpZ24oe30sIHsgY2xpY2s6IHRoaXMuY2xpY2sgfSwgdGhpcy4kbGlzdGVuZXJzKSxcbiAgICAgIHJlZjogJ2l0ZW0nXG4gICAgfSwgW3RoaXMuJHNsb3RzLml0ZW1dKTtcblxuICAgIHZhciB0cmFuc2l0aW9uID0gaChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3RyYW5zaXRpb25zX19bXCJhXCIgLyogVkV4cGFuZFRyYW5zaXRpb24gKi9dLCBbZ3JvdXBdKTtcblxuICAgIHJldHVybiBoKCdsaScsIHsgJ2NsYXNzJzogJ2xpc3QtLWdyb3VwX19jb250YWluZXInIH0sIFtpdGVtLCB0cmFuc2l0aW9uXSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDExNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19yb3V0YWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfdG9nZ2xlYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2RpcmVjdGl2ZXNfcmlwcGxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtbGlzdC10aWxlJyxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19yb3V0YWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc190b2dnbGVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRpcmVjdGl2ZXM6IHtcbiAgICBSaXBwbGU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fZGlyZWN0aXZlc19yaXBwbGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXVxuICB9LFxuXG4gIGluaGVyaXRBdHRyczogZmFsc2UsXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcHJveHlDbGFzczogJ2xpc3RfX3RpbGUtLWFjdGl2ZSdcbiAgICB9O1xuICB9LFxuXG4gIHByb3BzOiB7XG4gICAgYWN0aXZlQ2xhc3M6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdwcmltYXJ5LS10ZXh0J1xuICAgIH0sXG4gICAgYXZhdGFyOiBCb29sZWFuLFxuICAgIGluYWN0aXZlOiBCb29sZWFuLFxuICAgIHRhZzogU3RyaW5nXG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIF9kZWZpbmVQcm9wZXJ0eSh7XG4gICAgICAgICdsaXN0X190aWxlJzogdHJ1ZSxcbiAgICAgICAgJ2xpc3RfX3RpbGUtLWxpbmsnOiB0aGlzLmlzTGluayAmJiAhdGhpcy5pbmFjdGl2ZSxcbiAgICAgICAgJ2xpc3RfX3RpbGUtLWF2YXRhcic6IHRoaXMuYXZhdGFyLFxuICAgICAgICAnbGlzdF9fdGlsZS0tZGlzYWJsZWQnOiB0aGlzLmRpc2FibGVkLFxuICAgICAgICAnbGlzdF9fdGlsZS0tYWN0aXZlJzogIXRoaXMudG8gJiYgdGhpcy5pc0FjdGl2ZVxuICAgICAgfSwgdGhpcy5hY3RpdmVDbGFzcywgdGhpcy5pc0FjdGl2ZSk7XG4gICAgfSxcbiAgICBpc0xpbms6IGZ1bmN0aW9uIGlzTGluaygpIHtcbiAgICAgIHJldHVybiB0aGlzLmhyZWYgfHwgdGhpcy50byB8fCB0aGlzLiRsaXN0ZW5lcnMgJiYgKHRoaXMuJGxpc3RlbmVycy5jbGljayB8fCB0aGlzLiRsaXN0ZW5lcnNbJyFjbGljayddKTtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBpc1JvdXRlTGluayA9ICF0aGlzLmluYWN0aXZlICYmIHRoaXMuaXNMaW5rO1xuXG4gICAgdmFyIF9yZWYyID0gaXNSb3V0ZUxpbmsgPyB0aGlzLmdlbmVyYXRlUm91dGVMaW5rKCkgOiB7XG4gICAgICB0YWc6IHRoaXMudGFnIHx8ICdkaXYnLFxuICAgICAgZGF0YToge1xuICAgICAgICBjbGFzczogdGhpcy5jbGFzc2VzXG4gICAgICB9XG4gICAgfSxcbiAgICAgICAgdGFnID0gX3JlZjIudGFnLFxuICAgICAgICBkYXRhID0gX3JlZjIuZGF0YTtcblxuICAgIGRhdGEuYXR0cnMgPSBPYmplY3QuYXNzaWduKHt9LCBkYXRhLmF0dHJzLCB0aGlzLiRhdHRycyk7XG5cbiAgICByZXR1cm4gaCgnbGknLCB7XG4gICAgICBhdHRyczoge1xuICAgICAgICBkaXNhYmxlZDogdGhpcy5kaXNhYmxlZFxuICAgICAgfSxcbiAgICAgIG9uOiBfZXh0ZW5kcyh7fSwgdGhpcy4kbGlzdGVuZXJzKVxuICAgIH0sIFtoKHRhZywgZGF0YSwgdGhpcy4kc2xvdHMuZGVmYXVsdCldKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTE1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGZ1bmN0aW9uYWw6IHRydWUsXG5cbiAgbmFtZTogJ3YtbGlzdC10aWxlLWFjdGlvbicsXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgX3JlZikge1xuICAgIHZhciBkYXRhID0gX3JlZi5kYXRhLFxuICAgICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW47XG5cbiAgICBkYXRhLnN0YXRpY0NsYXNzID0gZGF0YS5zdGF0aWNDbGFzcyA/ICdsaXN0X190aWxlX19hY3Rpb24gJyArIChkYXRhLnN0YXRpY0NsYXNzIHx8ICcnKSA6ICdsaXN0X190aWxlX19hY3Rpb24nO1xuICAgIGlmICgoY2hpbGRyZW4gfHwgW10pLmxlbmd0aCA+IDEpIGRhdGEuc3RhdGljQ2xhc3MgKz0gJyBsaXN0X190aWxlX19hY3Rpb24tLXN0YWNrJztcblxuICAgIHJldHVybiBoKCdkaXYnLCBkYXRhLCBjaGlsZHJlbik7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDExNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19kZWxheWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMzkpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2RlcGVuZGVudF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfZGV0YWNoYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19taXhpbnNfbWVudWFibGVfanNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNDApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fbWl4aW5zX3RvZ2dsZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19taXhpbnNfbWVudV9hY3RpdmF0b3JfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTE4KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX21peGluc19tZW51X2dlbmVyYXRvcnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTE5KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX21peGluc19tZW51X2tleWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTIwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX21peGluc19tZW51X3Bvc2l0aW9uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyMSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fZGlyZWN0aXZlc19yZXNpemVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOCk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDExNyk7XG5cbi8vIE1peGluc1xuXG5cblxuXG5cblxuLy8gQ29tcG9uZW50IGxldmVsIG1peGluc1xuXG5cblxuXG5cbi8vIERpcmVjdGl2ZXNcblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1tZW51JyxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX21peGluc19tZW51X2FjdGl2YXRvcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19kZXBlbmRlbnRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfZGVsYXlhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX2RldGFjaGFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19taXhpbnNfbWVudV9nZW5lcmF0b3JzX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fbWl4aW5zX21lbnVfa2V5YWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc19tZW51YWJsZV9qc19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX21peGluc19tZW51X3Bvc2l0aW9uX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fbWl4aW5zX3RvZ2dsZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgZGlyZWN0aXZlczoge1xuICAgIENsaWNrT3V0c2lkZTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSxcbiAgICBSZXNpemU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX2RpcmVjdGl2ZXNfcmVzaXplX19bXCJhXCIgLyogZGVmYXVsdCAqL11cbiAgfSxcblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBkZWZhdWx0T2Zmc2V0OiA4LFxuICAgICAgbWF4SGVpZ2h0QXV0b0RlZmF1bHQ6ICcyMDBweCcsXG4gICAgICBzdGFydEluZGV4OiAzLFxuICAgICAgc3RvcEluZGV4OiAwLFxuICAgICAgaGFzSnVzdEZvY3VzZWQ6IGZhbHNlLFxuICAgICAgcmVzaXplVGltZW91dDogbnVsbFxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGF1dG86IEJvb2xlYW4sXG4gICAgY2xvc2VPbkNsaWNrOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgIH0sXG4gICAgY2xvc2VPbkNvbnRlbnRDbGljazoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICB9LFxuICAgIGRpc2FibGVkOiBCb29sZWFuLFxuICAgIGZ1bGxXaWR0aDogQm9vbGVhbixcbiAgICBtYXhIZWlnaHQ6IHsgZGVmYXVsdDogJ2F1dG8nIH0sXG4gICAgb2Zmc2V0WDogQm9vbGVhbixcbiAgICBvZmZzZXRZOiBCb29sZWFuLFxuICAgIG9wZW5PbkNsaWNrOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgIH0sXG4gICAgb3Blbk9uSG92ZXI6IEJvb2xlYW4sXG4gICAgb3JpZ2luOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAndG9wIGxlZnQnXG4gICAgfSxcbiAgICB0cmFuc2l0aW9uOiB7XG4gICAgICB0eXBlOiBbQm9vbGVhbiwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6ICdtZW51LXRyYW5zaXRpb24nXG4gICAgfVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2FsY3VsYXRlZExlZnQ6IGZ1bmN0aW9uIGNhbGN1bGF0ZWRMZWZ0KCkge1xuICAgICAgdmFyIGxlZnQgPSB0aGlzLmNhbGNMZWZ0O1xuICAgICAgaWYgKHRoaXMuYXV0bykgbGVmdCA9IHRoaXMuY2FsY0xlZnRBdXRvO1xuXG4gICAgICByZXR1cm4gdGhpcy5jYWxjWE92ZXJmbG93KGxlZnQoKSkgKyAncHgnO1xuICAgIH0sXG4gICAgY2FsY3VsYXRlZE1heEhlaWdodDogZnVuY3Rpb24gY2FsY3VsYXRlZE1heEhlaWdodCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmF1dG8gPyAnMjAwcHgnIDogaXNOYU4odGhpcy5tYXhIZWlnaHQpID8gdGhpcy5tYXhIZWlnaHQgOiB0aGlzLm1heEhlaWdodCArICdweCc7XG4gICAgfSxcbiAgICBjYWxjdWxhdGVkTWF4V2lkdGg6IGZ1bmN0aW9uIGNhbGN1bGF0ZWRNYXhXaWR0aCgpIHtcbiAgICAgIHJldHVybiBpc05hTih0aGlzLm1heFdpZHRoKSA/IHRoaXMubWF4V2lkdGggOiB0aGlzLm1heFdpZHRoICsgJ3B4JztcbiAgICB9LFxuICAgIGNhbGN1bGF0ZWRNaW5XaWR0aDogZnVuY3Rpb24gY2FsY3VsYXRlZE1pbldpZHRoKCkge1xuICAgICAgaWYgKHRoaXMubWluV2lkdGgpIHtcbiAgICAgICAgcmV0dXJuIGlzTmFOKHRoaXMubWluV2lkdGgpID8gdGhpcy5taW5XaWR0aCA6IHRoaXMubWluV2lkdGggKyAncHgnO1xuICAgICAgfVxuXG4gICAgICB2YXIgbWluV2lkdGggPSB0aGlzLmRpbWVuc2lvbnMuYWN0aXZhdG9yLndpZHRoICsgdGhpcy5udWRnZVdpZHRoICsgKHRoaXMuYXV0byA/IDE2IDogMCk7XG5cbiAgICAgIHZhciBjYWxjdWxhdGVkTWF4V2lkdGggPSBpc05hTihwYXJzZUludCh0aGlzLmNhbGN1bGF0ZWRNYXhXaWR0aCkpID8gbWluV2lkdGggOiBwYXJzZUludCh0aGlzLmNhbGN1bGF0ZWRNYXhXaWR0aCk7XG5cbiAgICAgIHJldHVybiBNYXRoLm1pbihjYWxjdWxhdGVkTWF4V2lkdGgsIG1pbldpZHRoKSArICdweCc7XG4gICAgfSxcbiAgICBjYWxjdWxhdGVkVG9wOiBmdW5jdGlvbiBjYWxjdWxhdGVkVG9wKCkge1xuICAgICAgdmFyIHRvcCA9IHRoaXMuYXV0byA/IHRoaXMuY2FsY1RvcEF1dG8gOiB0aGlzLmNhbGNUb3A7XG5cbiAgICAgIHJldHVybiB0aGlzLmNhbGNZT3ZlcmZsb3codG9wKCkpICsgJ3B4JztcbiAgICB9LFxuICAgIHN0eWxlczogZnVuY3Rpb24gc3R5bGVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWF4SGVpZ2h0OiB0aGlzLmNhbGN1bGF0ZWRNYXhIZWlnaHQsXG4gICAgICAgIG1pbldpZHRoOiB0aGlzLmNhbGN1bGF0ZWRNaW5XaWR0aCxcbiAgICAgICAgbWF4V2lkdGg6IHRoaXMuY2FsY3VsYXRlZE1heFdpZHRoLFxuICAgICAgICB0b3A6IHRoaXMuY2FsY3VsYXRlZFRvcCxcbiAgICAgICAgbGVmdDogdGhpcy5jYWxjdWxhdGVkTGVmdCxcbiAgICAgICAgdHJhbnNmb3JtT3JpZ2luOiB0aGlzLm9yaWdpbixcbiAgICAgICAgekluZGV4OiB0aGlzLnpJbmRleCB8fCB0aGlzLmFjdGl2ZVpJbmRleFxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBhY3RpdmF0b3I6IGZ1bmN0aW9uIGFjdGl2YXRvcihuZXdBY3RpdmF0b3IsIG9sZEFjdGl2YXRvcikge1xuICAgICAgdGhpcy5yZW1vdmVBY3RpdmF0b3JFdmVudHMob2xkQWN0aXZhdG9yKTtcbiAgICAgIHRoaXMuYWRkQWN0aXZhdG9yRXZlbnRzKG5ld0FjdGl2YXRvcik7XG4gICAgfSxcbiAgICBpc0NvbnRlbnRBY3RpdmU6IGZ1bmN0aW9uIGlzQ29udGVudEFjdGl2ZSh2YWwpIHtcbiAgICAgIHRoaXMuaGFzSnVzdEZvY3VzZWQgPSB2YWw7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBhY3RpdmF0ZTogZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICAvLyBUaGlzIGV4aXN0cyBwcmltYXJpbHkgZm9yIHYtc2VsZWN0XG4gICAgICAvLyBoZWxwcyBkZXRlcm1pbmUgd2hpY2ggdGlsZXMgdG8gYWN0aXZhdGVcbiAgICAgIHRoaXMuZ2V0VGlsZXMoKTtcbiAgICAgIC8vIFVwZGF0ZSBjb29yZGluYXRlcyBhbmQgZGltZW5zaW9ucyBvZiBtZW51XG4gICAgICAvLyBhbmQgaXRzIGFjdGl2YXRvclxuICAgICAgdGhpcy51cGRhdGVEaW1lbnNpb25zKCk7XG4gICAgICAvLyBTdGFydCB0aGUgdHJhbnNpdGlvblxuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuc3RhcnRUcmFuc2l0aW9uKTtcbiAgICAgIC8vIE9uY2UgdHJhbnNpdGlvbmluZywgY2FsY3VsYXRlIHNjcm9sbCBwb3NpdGlvblxuICAgICAgc2V0VGltZW91dCh0aGlzLmNhbGN1bGF0ZVNjcm9sbCwgNTApO1xuICAgIH0sXG4gICAgb25SZXNpemU6IGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuICAgICAgaWYgKCF0aGlzLmlzQWN0aXZlKSByZXR1cm47XG5cbiAgICAgIC8vIEFjY291bnQgZm9yIHNjcmVlbiByZXNpemVcbiAgICAgIC8vIGFuZCBvcmllbnRhdGlvbiBjaGFuZ2VcbiAgICAgIHRoaXMuJHJlZnMuY29udGVudC5vZmZzZXRXaWR0aDtcbiAgICAgIHRoaXMudXBkYXRlRGltZW5zaW9ucygpO1xuXG4gICAgICAvLyBXaGVuIHJlc2l6aW5nIHRvIGEgc21hbGxlciB3aWR0aFxuICAgICAgLy8gY29udGVudCB3aWR0aCBpcyBldmFsdWF0ZWQgYmVmb3JlXG4gICAgICAvLyB0aGUgbmV3IGFjdGl2YXRvciB3aWR0aCBoYXMgYmVlblxuICAgICAgLy8gc2V0LCBjYXVzaW5nIGl0IHRvIG5vdCBzaXplIHByb3Blcmx5XG4gICAgICAvLyBoYWNreSBidXQgd2lsbCByZXZpc2l0IGluIHRoZSBmdXR1cmVcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLnJlc2l6ZVRpbWVvdXQpO1xuICAgICAgdGhpcy5yZXNpemVUaW1lb3V0ID0gc2V0VGltZW91dCh0aGlzLnVwZGF0ZURpbWVuc2lvbnMsIDEwMCk7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgZGF0YSA9IHtcbiAgICAgIHN0YXRpY0NsYXNzOiAnbWVudScsXG4gICAgICBjbGFzczoge1xuICAgICAgICAnbWVudS0tZGlzYWJsZWQnOiB0aGlzLmRpc2FibGVkXG4gICAgICB9LFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgZGlzcGxheTogdGhpcy5mdWxsV2lkdGggPyAnYmxvY2snIDogJ2lubGluZS1ibG9jaydcbiAgICAgIH0sXG4gICAgICBkaXJlY3RpdmVzOiBbe1xuICAgICAgICBuYW1lOiAncmVzaXplJyxcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICBkZWJvdW5jZTogNTAwLFxuICAgICAgICAgIHZhbHVlOiB0aGlzLm9uUmVzaXplXG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgb246IHtcbiAgICAgICAga2V5ZG93bjogdGhpcy5jaGFuZ2VMaXN0SW5kZXhcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIGgoJ2RpdicsIGRhdGEsIFt0aGlzLmdlbkFjdGl2YXRvcigpLCB0aGlzLmdlblRyYW5zaXRpb24oKV0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMTcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAxMTggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIE1lbnUgYWN0aXZhdG9yXG4gKlxuICogQG1peGluXG4gKlxuICogSGFuZGxlcyB0aGUgY2xpY2sgYW5kIGhvdmVyIGFjdGl2YXRpb25cbiAqIFN1cHBvcnRzIHNsb3R0ZWQgYW5kIGRldGFjaGVkIGFjdGl2YXRvcnNcbiAqL1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG1ldGhvZHM6IHtcbiAgICBhY3RpdmF0b3JDbGlja0hhbmRsZXI6IGZ1bmN0aW9uIGFjdGl2YXRvckNsaWNrSGFuZGxlcihlKSB7XG4gICAgICBpZiAodGhpcy5kaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgaWYgKHRoaXMub3Blbk9uQ2xpY2sgJiYgIXRoaXMuaXNBY3RpdmUpIHtcbiAgICAgICAgdGhpcy5nZXRBY3RpdmF0b3IoKS5mb2N1cygpO1xuICAgICAgICB0aGlzLmlzQWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5hYnNvbHV0ZVggPSBlLmNsaWVudFg7XG4gICAgICAgIHRoaXMuYWJzb2x1dGVZID0gZS5jbGllbnRZO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmNsb3NlT25DbGljayAmJiB0aGlzLmlzQWN0aXZlKSB7XG4gICAgICAgIHRoaXMuZ2V0QWN0aXZhdG9yKCkuYmx1cigpO1xuICAgICAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcbiAgICBtb3VzZUVudGVySGFuZGxlcjogZnVuY3Rpb24gbW91c2VFbnRlckhhbmRsZXIoZSkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdGhpcy5ydW5EZWxheSgnb3BlbicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKF90aGlzLmhhc0p1c3RGb2N1c2VkKSByZXR1cm47XG5cbiAgICAgICAgX3RoaXMuaGFzSnVzdEZvY3VzZWQgPSB0cnVlO1xuICAgICAgICBfdGhpcy5pc0FjdGl2ZSA9IHRydWU7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIG1vdXNlTGVhdmVIYW5kbGVyOiBmdW5jdGlvbiBtb3VzZUxlYXZlSGFuZGxlcihlKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgLy8gUHJldmVudCBhY2NpZGVudGFsIHJlLWFjdGl2YXRpb25cbiAgICAgIHRoaXMucnVuRGVsYXkoJ2Nsb3NlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoX3RoaXMyLiRyZWZzLmNvbnRlbnQuY29udGFpbnMoZS5yZWxhdGVkVGFyZ2V0KSkgcmV0dXJuO1xuXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3RoaXMyLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgICAgICAgX3RoaXMyLmNhbGxEZWFjdGl2YXRlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBhZGRBY3RpdmF0b3JFdmVudHM6IGZ1bmN0aW9uIGFkZEFjdGl2YXRvckV2ZW50cygpIHtcbiAgICAgIHZhciBhY3RpdmF0b3IgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IG51bGw7XG5cbiAgICAgIGlmICghYWN0aXZhdG9yKSByZXR1cm47XG4gICAgICBhY3RpdmF0b3IuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmFjdGl2YXRvckNsaWNrSGFuZGxlcik7XG4gICAgfSxcbiAgICByZW1vdmVBY3RpdmF0b3JFdmVudHM6IGZ1bmN0aW9uIHJlbW92ZUFjdGl2YXRvckV2ZW50cygpIHtcbiAgICAgIHZhciBhY3RpdmF0b3IgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IG51bGw7XG5cbiAgICAgIGlmICghYWN0aXZhdG9yKSByZXR1cm47XG4gICAgICBhY3RpdmF0b3IucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmFjdGl2YXRvckNsaWNrSGFuZGxlcik7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9IGVsc2UgeyByZXR1cm4gQXJyYXkuZnJvbShhcnIpOyB9IH1cblxuLyoqXG4gKiBNZW51IGdlbmVyYXRvcnNcbiAqXG4gKiBAbWl4aW5cbiAqXG4gKiBVc2VkIGZvciBjcmVhdGluZyB0aGUgRE9NIGVsZW1lbnRzIGZvciBWTWVudVxuICovXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbWV0aG9kczoge1xuICAgIGdlbkFjdGl2YXRvcjogZnVuY3Rpb24gZ2VuQWN0aXZhdG9yKCkge1xuICAgICAgaWYgKCF0aGlzLiRzbG90cy5hY3RpdmF0b3IpIHJldHVybiBudWxsO1xuXG4gICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgc3RhdGljQ2xhc3M6ICdtZW51X19hY3RpdmF0b3InLFxuICAgICAgICAnY2xhc3MnOiB7XG4gICAgICAgICAgJ21lbnVfX2FjdGl2YXRvci0tYWN0aXZlJzogdGhpcy5oYXNKdXN0Rm9jdXNlZCB8fCB0aGlzLmlzQWN0aXZlXG4gICAgICAgIH0sXG4gICAgICAgIHJlZjogJ2FjdGl2YXRvcicsXG4gICAgICAgIG9uOiB7fVxuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMub3Blbk9uSG92ZXIpIHtcbiAgICAgICAgb3B0aW9ucy5vblsnbW91c2VlbnRlciddID0gdGhpcy5tb3VzZUVudGVySGFuZGxlcjtcbiAgICAgICAgb3B0aW9ucy5vblsnbW91c2VsZWF2ZSddID0gdGhpcy5tb3VzZUxlYXZlSGFuZGxlcjtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5vcGVuT25DbGljaykge1xuICAgICAgICBvcHRpb25zLm9uWydjbGljayddID0gdGhpcy5hY3RpdmF0b3JDbGlja0hhbmRsZXI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCBvcHRpb25zLCB0aGlzLiRzbG90cy5hY3RpdmF0b3IpO1xuICAgIH0sXG4gICAgZ2VuVHJhbnNpdGlvbjogZnVuY3Rpb24gZ2VuVHJhbnNpdGlvbigpIHtcbiAgICAgIGlmICghdGhpcy50cmFuc2l0aW9uKSByZXR1cm4gdGhpcy5nZW5Db250ZW50KCk7XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0cmFuc2l0aW9uJywge1xuICAgICAgICBwcm9wczoge1xuICAgICAgICAgIG5hbWU6IHRoaXMudHJhbnNpdGlvblxuICAgICAgICB9XG4gICAgICB9LCBbdGhpcy5nZW5Db250ZW50KCldKTtcbiAgICB9LFxuICAgIGdlbkRpcmVjdGl2ZXM6IGZ1bmN0aW9uIGdlbkRpcmVjdGl2ZXMoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAvLyBEbyBub3QgYWRkIGNsaWNrIG91dHNpZGUgZm9yIGhvdmVyIG1lbnVcbiAgICAgIHZhciBkaXJlY3RpdmVzID0gIXRoaXMub3Blbk9uSG92ZXIgPyBbe1xuICAgICAgICBuYW1lOiAnY2xpY2stb3V0c2lkZScsXG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLmNsb3NlT25DbGljaztcbiAgICAgICAgICB9LFxuICAgICAgICAgIGluY2x1ZGU6IGZ1bmN0aW9uIGluY2x1ZGUoKSB7XG4gICAgICAgICAgICByZXR1cm4gW190aGlzLiRlbF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShfdGhpcy5nZXRPcGVuRGVwZW5kZW50RWxlbWVudHMoKSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfV0gOiBbXTtcblxuICAgICAgZGlyZWN0aXZlcy5wdXNoKHtcbiAgICAgICAgbmFtZTogJ3Nob3cnLFxuICAgICAgICB2YWx1ZTogdGhpcy5pc0NvbnRlbnRBY3RpdmVcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gZGlyZWN0aXZlcztcbiAgICB9LFxuICAgIGdlbkNvbnRlbnQ6IGZ1bmN0aW9uIGdlbkNvbnRlbnQoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgICdjbGFzcyc6IFsoJ21lbnVfX2NvbnRlbnQgJyArIHRoaXMuY29udGVudENsYXNzKS50cmltKCksIHsgJ21lbnVhYmxlX19jb250ZW50X19hY3RpdmUnOiB0aGlzLmlzQWN0aXZlIH1dLFxuICAgICAgICBzdHlsZTogdGhpcy5zdHlsZXMsXG4gICAgICAgIGRpcmVjdGl2ZXM6IHRoaXMuZ2VuRGlyZWN0aXZlcygpLFxuICAgICAgICByZWY6ICdjb250ZW50JyxcbiAgICAgICAgb246IHtcbiAgICAgICAgICBjbGljazogZnVuY3Rpb24gY2xpY2soZSkge1xuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGlmIChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJykpIHJldHVybjtcbiAgICAgICAgICAgIGlmIChfdGhpczIuY2xvc2VPbkNvbnRlbnRDbGljaykgX3RoaXMyLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICAhdGhpcy5kaXNhYmxlZCAmJiB0aGlzLm9wZW5PbkhvdmVyICYmIChvcHRpb25zLm9uLm1vdXNlZW50ZXIgPSB0aGlzLm1vdXNlRW50ZXJIYW5kbGVyKTtcbiAgICAgIHRoaXMub3Blbk9uSG92ZXIgJiYgKG9wdGlvbnMub24ubW91c2VsZWF2ZSA9IHRoaXMubW91c2VMZWF2ZUhhbmRsZXIpO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywgb3B0aW9ucywgdGhpcy5zaG93TGF6eUNvbnRlbnQodGhpcy4kc2xvdHMuZGVmYXVsdCkpO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTIwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBNZW51IGtleWFibGVcbiAqXG4gKiBAbWl4aW5cbiAqXG4gKiBQcmltYXJpbHkgdXNlZCB0byBzdXBwb3J0IFZTZWxlY3RcbiAqIEhhbmRsZXMgb3BlbmluZyBhbmQgY2xvc2luZyBvZiBWTWVudSBmcm9tIGtleXN0cm9rZXNcbiAqIFdpbGwgY29uZGl0aW9uYWxseSBoaWdobGlnaHQgVkxpc3RUaWxlcyBmb3IgVlNlbGVjdFxuICovXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbGlzdEluZGV4OiAtMSxcbiAgICAgIHRpbGVzOiBbXVxuICAgIH07XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUodmFsKSB7XG4gICAgICBpZiAoIXZhbCkgdGhpcy5saXN0SW5kZXggPSAtMTtcbiAgICB9LFxuICAgIGxpc3RJbmRleDogZnVuY3Rpb24gbGlzdEluZGV4KG5leHQsIHByZXYpIHtcbiAgICAgIC8vIEZvciBpbmZpbml0ZSBzY3JvbGwgYW5kIGF1dG9jb21wbGV0ZSwgcmUtZXZhbHVhdGUgY2hpbGRyZW5cbiAgICAgIHRoaXMuZ2V0VGlsZXMoKTtcblxuICAgICAgaWYgKG5leHQgaW4gdGhpcy50aWxlcykge1xuICAgICAgICB0aGlzLnRpbGVzW25leHRdLmNsYXNzTGlzdC5hZGQoJ2xpc3RfX3RpbGUtLWhpZ2hsaWdodGVkJyk7XG4gICAgICAgIHRoaXMuJHJlZnMuY29udGVudC5zY3JvbGxUb3AgPSBuZXh0ICogNDg7XG4gICAgICB9XG5cbiAgICAgIHByZXYgaW4gdGhpcy50aWxlcyAmJiB0aGlzLnRpbGVzW3ByZXZdLmNsYXNzTGlzdC5yZW1vdmUoJ2xpc3RfX3RpbGUtLWhpZ2hsaWdodGVkJyk7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBjaGFuZ2VMaXN0SW5kZXg6IGZ1bmN0aW9uIGNoYW5nZUxpc3RJbmRleChlKSB7XG4gICAgICAvLyBVcCwgRG93biwgRW50ZXIsIFNwYWNlXG4gICAgICBpZiAoWzQwLCAzOCwgMTNdLmluY2x1ZGVzKGUua2V5Q29kZSkgfHwgZS5rZXlDb2RlID09PSAzMiAmJiAhdGhpcy5pc0FjdGl2ZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIC8vIEVzYywgVGFiXG4gICAgICBpZiAoWzI3LCA5XS5pbmNsdWRlcyhlLmtleUNvZGUpKSByZXR1cm4gdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO2Vsc2UgaWYgKCF0aGlzLmlzQWN0aXZlICYmXG4gICAgICAvLyBFbnRlciwgU3BhY2VcbiAgICAgIFsxMywgMzJdLmluY2x1ZGVzKGUua2V5Q29kZSkgJiYgdGhpcy5vcGVuT25DbGljaykge1xuICAgICAgICByZXR1cm4gdGhpcy5pc0FjdGl2ZSA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIC8vIERvd25cbiAgICAgIGlmIChlLmtleUNvZGUgPT09IDQwICYmIHRoaXMubGlzdEluZGV4IDwgdGhpcy50aWxlcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIHRoaXMubGlzdEluZGV4Kys7XG4gICAgICAgIC8vIFVwXG4gICAgICB9IGVsc2UgaWYgKGUua2V5Q29kZSA9PT0gMzggJiYgdGhpcy5saXN0SW5kZXggPiAwKSB7XG4gICAgICAgIHRoaXMubGlzdEluZGV4LS07XG4gICAgICAgIC8vIEVudGVyXG4gICAgICB9IGVsc2UgaWYgKGUua2V5Q29kZSA9PT0gMTMgJiYgdGhpcy5saXN0SW5kZXggIT09IC0xKSB7XG4gICAgICAgIHRoaXMudGlsZXNbdGhpcy5saXN0SW5kZXhdLmNsaWNrKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXRUaWxlczogZnVuY3Rpb24gZ2V0VGlsZXMoKSB7XG4gICAgICB0aGlzLnRpbGVzID0gdGhpcy4kcmVmcy5jb250ZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5saXN0X190aWxlJyk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMjEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIE1lbnUgcG9zaXRpb25cbiAqIFxuICogQG1peGluXG4gKlxuICogVXNlZCBmb3IgY2FsY3VsYXRpbmcgYW4gYXV0b21hdGljIHBvc2l0aW9uICh1c2VkIGZvciBWU2VsZWN0KVxuICogV2lsbCBwb3NpdGlvbiB0aGUgVk1lbnUgY29udGVudCBwcm9wZXJseSBvdmVyIHRoZSBWU2VsZWN0XG4gKi9cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBtZXRob2RzOiB7XG4gICAgLy8gUmV2aXNpdCB0aGlzXG4gICAgY2FsY3VsYXRlU2Nyb2xsOiBmdW5jdGlvbiBjYWxjdWxhdGVTY3JvbGwoKSB7XG4gICAgICBpZiAodGhpcy5zZWxlY3RlZEluZGV4ID09PSBudWxsKSByZXR1cm47XG5cbiAgICAgIHZhciBzY3JvbGxUb3AgPSAwO1xuXG4gICAgICBpZiAodGhpcy5zZWxlY3RlZEluZGV4ID49IHRoaXMuc3RvcEluZGV4KSB7XG4gICAgICAgIHNjcm9sbFRvcCA9IHRoaXMuJHJlZnMuY29udGVudC5zY3JvbGxIZWlnaHQ7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZWN0ZWRJbmRleCA+IHRoaXMuc3RhcnRJbmRleCkge1xuICAgICAgICBzY3JvbGxUb3AgPSB0aGlzLnNlbGVjdGVkSW5kZXggKiAodGhpcy5kZWZhdWx0T2Zmc2V0ICogNikgLSB0aGlzLmRlZmF1bHRPZmZzZXQgKiA3O1xuICAgICAgfVxuXG4gICAgICB0aGlzLiRyZWZzLmNvbnRlbnQuc2Nyb2xsVG9wID0gc2Nyb2xsVG9wO1xuICAgIH0sXG4gICAgY2FsY0xlZnRBdXRvOiBmdW5jdGlvbiBjYWxjTGVmdEF1dG8oKSB7XG4gICAgICB2YXIgYSA9IHRoaXMuZGltZW5zaW9ucy5hY3RpdmF0b3I7XG5cbiAgICAgIHJldHVybiBwYXJzZUludChhLmxlZnQgLSB0aGlzLmRlZmF1bHRPZmZzZXQgKiAyKTtcbiAgICB9LFxuICAgIGNhbGNUb3BBdXRvOiBmdW5jdGlvbiBjYWxjVG9wQXV0bygpIHtcbiAgICAgIGlmICghdGhpcy5oYXNBY3RpdmF0b3IpIHJldHVybiB0aGlzLmNhbGNUb3AoKTtcblxuICAgICAgdmFyIHNlbGVjdGVkSW5kZXggPSBBcnJheS5mcm9tKHRoaXMudGlsZXMpLmZpbmRJbmRleChmdW5jdGlvbiAobikge1xuICAgICAgICByZXR1cm4gbi5jbGFzc0xpc3QuY29udGFpbnMoJ2xpc3RfX3RpbGUtLWFjdGl2ZScpO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChzZWxlY3RlZEluZGV4ID09PSAtMSkge1xuICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBudWxsO1xuXG4gICAgICAgIHJldHVybiB0aGlzLmNhbGNUb3AoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gc2VsZWN0ZWRJbmRleDtcbiAgICAgIHZhciBhY3RpbmdJbmRleCA9IHNlbGVjdGVkSW5kZXg7XG5cbiAgICAgIHZhciBvZmZzZXRQYWRkaW5nID0gLSh0aGlzLmRlZmF1bHRPZmZzZXQgKiAyKTtcbiAgICAgIC8vICM3MDggU3RvcCBpbmRleCBzaG91bGQgdmFyeSBieSB0aWxlIGxlbmd0aFxuICAgICAgdGhpcy5zdG9wSW5kZXggPSB0aGlzLnRpbGVzLmxlbmd0aCA+IDQgPyB0aGlzLnRpbGVzLmxlbmd0aCAtIDQgOiB0aGlzLnRpbGVzLmxlbmd0aDtcblxuICAgICAgaWYgKHNlbGVjdGVkSW5kZXggPiB0aGlzLnN0YXJ0SW5kZXggJiYgc2VsZWN0ZWRJbmRleCA8IHRoaXMuc3RvcEluZGV4KSB7XG4gICAgICAgIGFjdGluZ0luZGV4ID0gMjtcbiAgICAgICAgb2Zmc2V0UGFkZGluZyA9IHRoaXMuZGVmYXVsdE9mZnNldCAqIDM7XG4gICAgICB9IGVsc2UgaWYgKHNlbGVjdGVkSW5kZXggPj0gdGhpcy5zdG9wSW5kZXgpIHtcbiAgICAgICAgb2Zmc2V0UGFkZGluZyA9IC10aGlzLmRlZmF1bHRPZmZzZXQ7XG4gICAgICAgIGFjdGluZ0luZGV4ID0gc2VsZWN0ZWRJbmRleCAtIHRoaXMuc3RvcEluZGV4O1xuICAgICAgfVxuXG4gICAgICAvLyBJcyBhbHdheXMgb2ZmIGJ5IDEgcGl4ZWwsIHNlbmQgaGVscCAo4pSb4LKgX+CyoCnilJvlvaHilLvilIHilLtcbiAgICAgIG9mZnNldFBhZGRpbmctLTtcblxuICAgICAgcmV0dXJuIHRoaXMuY2FsY1RvcCgpICsgb2Zmc2V0UGFkZGluZyAtIGFjdGluZ0luZGV4ICogKHRoaXMuZGVmYXVsdE9mZnNldCAqIDYpO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTIyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuXG5cbi8qKlxuICogU2VsZWN0IGF1dG9jb21wbGV0ZVxuICpcbiAqIEBtaXhpblxuICpcbiAqIEhhbmRsZXMgbG9naWMgd2hlbiB1c2luZyB0aGUgXCJhdXRvY29tcGxldGVcIiBwcm9wXG4gKi9cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBwcm9wczoge1xuICAgIGZpbHRlcjoge1xuICAgICAgdHlwZTogRnVuY3Rpb24sXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdChpdGVtLCBxdWVyeVRleHQsIGl0ZW1UZXh0KSB7XG4gICAgICAgIHZhciBoYXNWYWx1ZSA9IGZ1bmN0aW9uIGhhc1ZhbHVlKHZhbCkge1xuICAgICAgICAgIHJldHVybiB2YWwgIT0gbnVsbCA/IHZhbCA6ICcnO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZhciB0ZXh0ID0gaGFzVmFsdWUoaXRlbVRleHQpO1xuICAgICAgICB2YXIgcXVlcnkgPSBoYXNWYWx1ZShxdWVyeVRleHQpO1xuXG4gICAgICAgIHJldHVybiB0ZXh0LnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKS5pbmRleE9mKHF1ZXJ5LnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSkgPiAtMTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGZpbHRlclNlYXJjaDogZnVuY3Rpb24gZmlsdGVyU2VhcmNoKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKCF0aGlzLmlzQXV0b2NvbXBsZXRlKSByZXR1cm4gdGhpcy5jb21wdXRlZEl0ZW1zO1xuXG4gICAgICByZXR1cm4gdGhpcy5jb21wdXRlZEl0ZW1zLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gX3RoaXMuZmlsdGVyKGksIF90aGlzLnNlYXJjaFZhbHVlLCBfdGhpcy5nZXRUZXh0KGkpKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2VuRmlsdGVyZWQ6IGZ1bmN0aW9uIGdlbkZpbHRlcmVkKHRleHQpIHtcbiAgICAgIHRleHQgPSAodGV4dCB8fCAnJykudG9TdHJpbmcoKTtcblxuICAgICAgaWYgKCF0aGlzLmlzQXV0b2NvbXBsZXRlIHx8ICF0aGlzLnNlYXJjaFZhbHVlIHx8IHRoaXMuZmlsdGVyZWRJdGVtcy5sZW5ndGggPCAxKSByZXR1cm4gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJmXCIgLyogZXNjYXBlSFRNTCAqL10pKHRleHQpO1xuXG4gICAgICB2YXIgX2dldE1hc2tlZENoYXJhY3RlcnMgPSB0aGlzLmdldE1hc2tlZENoYXJhY3RlcnModGV4dCksXG4gICAgICAgICAgc3RhcnQgPSBfZ2V0TWFza2VkQ2hhcmFjdGVycy5zdGFydCxcbiAgICAgICAgICBtaWRkbGUgPSBfZ2V0TWFza2VkQ2hhcmFjdGVycy5taWRkbGUsXG4gICAgICAgICAgZW5kID0gX2dldE1hc2tlZENoYXJhY3RlcnMuZW5kO1xuXG4gICAgICByZXR1cm4gJycgKyBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImZcIiAvKiBlc2NhcGVIVE1MICovXSkoc3RhcnQpICsgdGhpcy5nZW5IaWdobGlnaHQobWlkZGxlKSArIE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZlwiIC8qIGVzY2FwZUhUTUwgKi9dKShlbmQpO1xuICAgIH0sXG4gICAgZ2VuSGlnaGxpZ2h0OiBmdW5jdGlvbiBnZW5IaWdobGlnaHQodGV4dCkge1xuICAgICAgaWYgKHRoaXMuaXNOb3RGaWx0ZXJpbmcpIHJldHVybiBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImZcIiAvKiBlc2NhcGVIVE1MICovXSkodGV4dCk7XG5cbiAgICAgIHJldHVybiAnPHNwYW4gY2xhc3M9XCJsaXN0X190aWxlX19tYXNrXCI+JyArIE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiZlwiIC8qIGVzY2FwZUhUTUwgKi9dKSh0ZXh0KSArICc8L3NwYW4+JztcbiAgICB9LFxuICAgIGdldE1hc2tlZENoYXJhY3RlcnM6IGZ1bmN0aW9uIGdldE1hc2tlZENoYXJhY3RlcnModGV4dCkge1xuICAgICAgdmFyIHNlYXJjaFZhbHVlID0gKHRoaXMuc2VhcmNoVmFsdWUgfHwgJycpLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgIHZhciBpbmRleCA9IHRleHQudG9Mb3dlckNhc2UoKS5pbmRleE9mKHNlYXJjaFZhbHVlKTtcblxuICAgICAgaWYgKGluZGV4IDwgMCkgcmV0dXJuIHsgc3RhcnQ6ICcnLCBtaWRkbGU6IHRleHQsIGVuZDogJycgfTtcblxuICAgICAgdmFyIHN0YXJ0ID0gdGV4dC5zbGljZSgwLCBpbmRleCk7XG4gICAgICB2YXIgbWlkZGxlID0gdGV4dC5zbGljZShpbmRleCwgaW5kZXggKyBzZWFyY2hWYWx1ZS5sZW5ndGgpO1xuICAgICAgdmFyIGVuZCA9IHRleHQuc2xpY2UoaW5kZXggKyBzZWFyY2hWYWx1ZS5sZW5ndGgpO1xuICAgICAgcmV0dXJuIHsgc3RhcnQ6IHN0YXJ0LCBtaWRkbGU6IG1pZGRsZSwgZW5kOiBlbmQgfTtcbiAgICB9LFxuICAgIGdldEN1cnJlbnRUYWc6IGZ1bmN0aW9uIGdldEN1cnJlbnRUYWcoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pc01lbnVJdGVtU2VsZWN0ZWQoKSA/IHRoaXMuZmlsdGVyZWRJdGVtc1t0aGlzLmdldE1lbnVJbmRleCgpXSA6IHRoaXMuaXNBbnlWYWx1ZUFsbG93ZWQgPyB0aGlzLnNlYXJjaFZhbHVlIDogbnVsbDtcbiAgICB9LFxuICAgIHRhYk91dDogZnVuY3Rpb24gdGFiT3V0KCkge1xuICAgICAgdGhpcy5ibHVyKCk7XG5cbiAgICAgIC8vIFNpbmdsZSAobm90IG11bHRpcGxlKSBhdXRvY29tcGxldGUgc2VsZWN0IHdpdGggYW5cbiAgICAgIC8vIGVtcHR5IHNlYXJjaCB2YWx1ZSB0aGF0IGlzIG5vdCBhIGNvbWJvYm94IHNob3VsZFxuICAgICAgLy8gY2xlYXIgdGhlIGlucHV0IHZhbHVlXG4gICAgICBpZiAodGhpcy5pc0F1dG9jb21wbGV0ZSAmJiAhdGhpcy5pc011bHRpcGxlICYmICF0aGlzLnNlYXJjaFZhbHVlICYmICF0aGlzLmNvbWJvYm94KSB7XG4gICAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9IG51bGw7XG4gICAgICB9XG4gICAgfSxcbiAgICBvblRhYkRvd246IGZ1bmN0aW9uIG9uVGFiRG93bihlKSB7XG4gICAgICAvLyBJZiB0YWJiaW5nIHRocm91Z2ggaW5wdXRzIGFuZFxuICAgICAgLy8gYW5kIHRoZXJlIGlzIG5vIG5lZWQgZm9yIGFuXG4gICAgICAvLyB1cGRhdGUsIGJsdXIgdGhlIHYtc2VsZWN0XG4gICAgICBpZiAoIXRoaXMuaXNBdXRvY29tcGxldGUgfHwgIXRoaXMuZ2V0Q3VycmVudFRhZygpIHx8IHRoaXMuY29tYm9ib3gpIHJldHVybiB0aGlzLnRhYk91dCgpO1xuXG4gICAgICAvLyBXaGVuIGFkZGluZyB0YWdzLCBpZiBzZWFyY2hpbmcgYW5kXG4gICAgICAvLyB0aGVyZSBpcyBub3QgYSBmaWx0ZXJlZCBvcHRpb25zLFxuICAgICAgLy8gYWRkIHRoZSB2YWx1ZSB0byB0aGUgdGFncyBsaXN0XG4gICAgICBpZiAodGhpcy50YWdzICYmIHRoaXMuc2VhcmNoVmFsdWUgJiYgIXRoaXMuZmlsdGVyZWRJdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIHJldHVybiB0aGlzLnVwZGF0ZVRhZ3ModGhpcy5zZWFyY2hWYWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIEFuIGl0ZW0gdGhhdCBpcyBzZWxlY3RlZCBieVxuICAgICAgLy8gbWVudS1pbmRleCBzaG91bGQgdG9nZ2xlZFxuICAgICAgaWYgKHRoaXMubWVudUlzQWN0aXZlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5zZWxlY3RMaXN0VGlsZSh0aGlzLmdldE1lbnVJbmRleCgpKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uRW50ZXJEb3duOiBmdW5jdGlvbiBvbkVudGVyRG93bigpIHtcbiAgICAgIHRoaXMudXBkYXRlVGFncyh0aGlzLmdldEN1cnJlbnRUYWcoKSk7XG4gICAgfSxcbiAgICBvbkVzY0Rvd246IGZ1bmN0aW9uIG9uRXNjRG93bihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLm1lbnVJc0FjdGl2ZSA9IGZhbHNlO1xuICAgIH0sXG4gICAgb25LZXlEb3duOiBmdW5jdGlvbiBvbktleURvd24oZSkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIC8vIElmIGVudGVyLCBzcGFjZSwgdXAsIG9yIGRvd24gaXMgcHJlc3NlZCwgb3BlbiBtZW51XG4gICAgICBpZiAoIXRoaXMubWVudUlzQWN0aXZlICYmIFsxMywgMzIsIDM4LCA0MF0uaW5jbHVkZXMoZS5rZXlDb2RlKSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHJldHVybiB0aGlzLnNob3dNZW51KCk7XG4gICAgICB9XG5cbiAgICAgIC8vIElmIGVzY2FwZSBkZWFjdGl2YXRlIHRoZSBtZW51XG4gICAgICBpZiAoZS5rZXlDb2RlID09PSAyNykgcmV0dXJuIHRoaXMub25Fc2NEb3duKGUpO1xuXG4gICAgICAvLyBJZiB0YWIgLSBzZWxlY3QgaXRlbSBvciBjbG9zZSBtZW51XG4gICAgICBpZiAoZS5rZXlDb2RlID09PSA5KSByZXR1cm4gdGhpcy5vblRhYkRvd24oZSk7XG5cbiAgICAgIGlmICghdGhpcy5pc0F1dG9jb21wbGV0ZSB8fCAhWzMyXS5pbmNsdWRlcyhlLmtleUNvZGUpIC8vIHNwYWNlXG4gICAgICApIHRoaXMuJHJlZnMubWVudS5jaGFuZ2VMaXN0SW5kZXgoZSk7XG5cbiAgICAgIC8vIFVwIG9yIGRvd25cbiAgICAgIGlmIChbMzgsIDQwXS5pbmNsdWRlcyhlLmtleUNvZGUpKSB0aGlzLnNlbGVjdGVkSW5kZXggPSAtMTtcblxuICAgICAgaWYgKHRoaXMuaXNBdXRvY29tcGxldGUgJiYgIXRoaXMuaGlkZVNlbGVjdGlvbnMgJiYgIXRoaXMuc2VhcmNoVmFsdWUpIHRoaXMuY2hhbmdlU2VsZWN0ZWRJbmRleChlLmtleUNvZGUpO1xuXG4gICAgICBpZiAoIXRoaXMuaXNBbnlWYWx1ZUFsbG93ZWQgfHwgIXRoaXMuc2VhcmNoVmFsdWUpIHJldHVybjtcblxuICAgICAgLy8gRW50ZXJcbiAgICAgIGlmIChlLmtleUNvZGUgPT09IDEzKSByZXR1cm4gdGhpcy5vbkVudGVyRG93bigpO1xuXG4gICAgICAvLyBMZWZ0IGFycm93XG4gICAgICBpZiAoZS5rZXlDb2RlID09PSAzNyAmJiB0aGlzLiRyZWZzLmlucHV0LnNlbGVjdGlvblN0YXJ0ID09PSAwICYmIHRoaXMuc2VsZWN0ZWRJdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy51cGRhdGVUYWdzKHRoaXMuc2VhcmNoVmFsdWUpO1xuICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3RoaXMyLnNlbGVjdGVkSW5kZXggPSBNYXRoLm1heChfdGhpczIuc2VsZWN0ZWRJdGVtcy5sZW5ndGggLSAyLCAwKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIC8vIFJpZ2h0IGFycm93XG4gICAgICBpZiAoZS5rZXlDb2RlID09PSAzOSAmJiB0aGlzLiRyZWZzLmlucHV0LnNlbGVjdGlvbkVuZCA9PT0gdGhpcy5zZWFyY2hWYWx1ZS5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy5yZXNldE1lbnVJbmRleCgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2VsZWN0TGlzdFRpbGU6IGZ1bmN0aW9uIHNlbGVjdExpc3RUaWxlKGluZGV4KSB7XG4gICAgICBpZiAoIXRoaXMuJHJlZnMubWVudS50aWxlc1tpbmRleF0pIHJldHVybjtcblxuICAgICAgdGhpcy4kcmVmcy5tZW51LnRpbGVzW2luZGV4XS5jbGljaygpO1xuICAgIH0sXG4gICAgdXBkYXRlVGFnczogZnVuY3Rpb24gdXBkYXRlVGFncyhjb250ZW50KSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgLy8gQXZvaWQgZGlyZWN0IG11dGF0aW9uXG4gICAgICAvLyBmb3IgdnVleCBzdHJpY3QgbW9kZVxuICAgICAgdmFyIHNlbGVjdGVkSXRlbXMgPSB0aGlzLnNlbGVjdGVkSXRlbXMuc2xpY2UoKTtcblxuICAgICAgLy8gSWYgYSBkdXBsaWNhdGUgaXRlbVxuICAgICAgLy8gZXhpc3RzLCByZW1vdmUgaXRcbiAgICAgIGlmIChzZWxlY3RlZEl0ZW1zLmluY2x1ZGVzKGNvbnRlbnQpKSB7XG4gICAgICAgIHRoaXMuJGRlbGV0ZShzZWxlY3RlZEl0ZW1zLCBzZWxlY3RlZEl0ZW1zLmluZGV4T2YoY29udGVudCkpO1xuICAgICAgfVxuXG4gICAgICAvLyBXaGVuIHVwZGF0aW5nIHRhZ3MgZW5zdXJlXG4gICAgICAvLyB0aGF0IHRoYXQgdGhlIHNlYXJjaCB0ZXh0XG4gICAgICAvLyBpcyBwb3B1bGF0ZWQgaWYgbmVlZGVkXG4gICAgICB2YXIgc2VhcmNoVmFsdWUgPSBudWxsO1xuICAgICAgaWYgKHRoaXMuY29tYm9ib3gpIHtcbiAgICAgICAgc2VsZWN0ZWRJdGVtcyA9IFtjb250ZW50XTtcbiAgICAgICAgc2VhcmNoVmFsdWUgPSB0aGlzLmNoaXBzID8gbnVsbCA6IGNvbnRlbnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWxlY3RlZEl0ZW1zLnB1c2goY29udGVudCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2VsZWN0ZWRJdGVtcyA9IHNlbGVjdGVkSXRlbXM7XG5cbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMzLnNlYXJjaFZhbHVlID0gc2VhcmNoVmFsdWU7XG4gICAgICAgIF90aGlzMy4kZW1pdCgnaW5wdXQnLCBfdGhpczMuY29tYm9ib3ggPyBjb250ZW50IDogX3RoaXMzLnNlbGVjdGVkSXRlbXMpO1xuXG4gICAgICAgIC8vIENvbWJvYm94IHNob3VsZCBjbG9zZSBpdHMgbWVudSB3aGVuIHRhZ3MgYXJlIHVwZGF0ZWRcbiAgICAgICAgX3RoaXMzLm1lbnVJc0FjdGl2ZSA9ICFfdGhpczMuY29tYm9ib3g7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEyMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qKlxuICogU2VsZWN0IGNvbXB1dGVkIHByb3BlcnRpZXNcbiAqXG4gKiBAbWl4aW5cbiAqXG4gKiBDb21wdXRlZCBwcm9wZXJ0aWVzIGZvclxuICogdGhlIHYtc2VsZWN0IGNvbXBvbmVudFxuICovXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgdmFyIGNsYXNzZXMgPSB7XG4gICAgICAgICdpbnB1dC1ncm91cC0tdGV4dC1maWVsZCBpbnB1dC1ncm91cC0tc2VsZWN0JzogdHJ1ZSxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1hdXRvJzogdGhpcy5hdXRvLFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLW92ZXJmbG93JzogdGhpcy5vdmVyZmxvdyxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1zZWdtZW50ZWQnOiB0aGlzLnNlZ21lbnRlZCxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1lZGl0YWJsZSc6IHRoaXMuZWRpdGFibGUsXG4gICAgICAgICdpbnB1dC1ncm91cC0tYXV0b2NvbXBsZXRlJzogdGhpcy5pc0F1dG9jb21wbGV0ZSxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1zaW5nbGUtbGluZSc6IHRoaXMuc2luZ2xlTGluZSB8fCB0aGlzLmlzRHJvcGRvd24sXG4gICAgICAgICdpbnB1dC1ncm91cC0tbXVsdGktbGluZSc6IHRoaXMubXVsdGlMaW5lLFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLWNoaXBzJzogdGhpcy5jaGlwcyxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1zb2xvJzogdGhpcy5zb2xvLFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLW11bHRpcGxlJzogdGhpcy5tdWx0aXBsZSxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1vcGVuJzogdGhpcy5tZW51SXNWaXNpYmxlXG4gICAgICB9O1xuXG4gICAgICBpZiAodGhpcy5oYXNFcnJvcikge1xuICAgICAgICBjbGFzc2VzWydlcnJvci0tdGV4dCddID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFkZFRleHRDb2xvckNsYXNzQ2hlY2tzKGNsYXNzZXMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY2xhc3NlcztcbiAgICB9LFxuICAgIGNvbXB1dGVkQ29udGVudENsYXNzOiBmdW5jdGlvbiBjb21wdXRlZENvbnRlbnRDbGFzcygpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IFsnbWVudV9fY29udGVudC0tc2VsZWN0JywgdGhpcy5hdXRvID8gJ21lbnVfX2NvbnRlbnQtLWF1dG8nIDogJycsIHRoaXMuaXNEcm9wZG93biA/ICdtZW51X19jb250ZW50LS1kcm9wZG93bicgOiAnJywgdGhpcy5pc0F1dG9jb21wbGV0ZSA/ICdtZW51X19jb250ZW50LS1hdXRvY29tcGxldGUnIDogJycsIHRoaXMuY29udGVudENsYXNzIHx8ICcnXTtcblxuICAgICAgcmV0dXJuIGNoaWxkcmVuLmpvaW4oJyAnKTtcbiAgICB9LFxuICAgIGNvbXB1dGVkSXRlbXM6IGZ1bmN0aW9uIGNvbXB1dGVkSXRlbXMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5maWx0ZXJEdXBsaWNhdGVzKHRoaXMuY2FjaGVkSXRlbXMuY29uY2F0KHRoaXMuaXRlbXMpKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogVGhlIHJhbmdlIG9mIHRoZSBjdXJyZW50IGlucHV0IHRleHRcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge051bWJlcn1cbiAgICAgKi9cbiAgICBjdXJyZW50UmFuZ2U6IGZ1bmN0aW9uIGN1cnJlbnRSYW5nZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldFRleHQodGhpcy5zZWxlY3RlZEl0ZW0gfHwgJycpLmxlbmd0aDtcbiAgICB9LFxuICAgIGZpbHRlcmVkSXRlbXM6IGZ1bmN0aW9uIGZpbHRlcmVkSXRlbXMoKSB7XG4gICAgICAvLyBJZiB3ZSBhcmUgbm90IGFjdGl2ZWx5IGZpbHRlcmluZ1xuICAgICAgLy8gU2hvdyBhbGwgYXZhaWxhYmxlIGl0ZW1zXG4gICAgICB2YXIgaXRlbXMgPSB0aGlzLmlzTm90RmlsdGVyaW5nID8gdGhpcy5jb21wdXRlZEl0ZW1zIDogdGhpcy5maWx0ZXJTZWFyY2goKTtcblxuICAgICAgcmV0dXJuICF0aGlzLmF1dG8gPyBpdGVtcy5zbGljZSgwLCB0aGlzLmxhc3RJdGVtKSA6IGl0ZW1zO1xuICAgIH0sXG4gICAgaGlkZVNlbGVjdGlvbnM6IGZ1bmN0aW9uIGhpZGVTZWxlY3Rpb25zKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaXNBdXRvY29tcGxldGUgJiYgIXRoaXMuaXNNdWx0aXBsZSAmJiB0aGlzLmlzRm9jdXNlZCAmJiAhdGhpcy5jaGlwcyAmJiAhdGhpcy4kc2NvcGVkU2xvdHMuc2VsZWN0aW9uO1xuICAgIH0sXG4gICAgaXNOb3RGaWx0ZXJpbmc6IGZ1bmN0aW9uIGlzTm90RmlsdGVyaW5nKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaXNBdXRvY29tcGxldGUgJiYgdGhpcy5pc0RpcnR5ICYmIHRoaXMuc2VhcmNoVmFsdWUgPT09IHRoaXMuZ2V0VGV4dCh0aGlzLnNlbGVjdGVkSXRlbSk7XG4gICAgfSxcbiAgICBpc0hpZGluZ1NlbGVjdGVkOiBmdW5jdGlvbiBpc0hpZGluZ1NlbGVjdGVkKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaGlkZVNlbGVjdGVkICYmIHRoaXMuaXNBdXRvY29tcGxldGUgJiYgdGhpcy5pc011bHRpcGxlO1xuICAgIH0sXG4gICAgaXNBdXRvY29tcGxldGU6IGZ1bmN0aW9uIGlzQXV0b2NvbXBsZXRlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuYXV0b2NvbXBsZXRlIHx8IHRoaXMuZWRpdGFibGUgfHwgdGhpcy50YWdzIHx8IHRoaXMuY29tYm9ib3g7XG4gICAgfSxcbiAgICBpc0RpcnR5OiBmdW5jdGlvbiBpc0RpcnR5KCkge1xuICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRJdGVtcy5sZW5ndGggPiAwIHx8IHRoaXMuaXNBdXRvY29tcGxldGUgJiYgdGhpcy5zZWFyY2hWYWx1ZTtcbiAgICB9LFxuICAgIGlzRHJvcGRvd246IGZ1bmN0aW9uIGlzRHJvcGRvd24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5zZWdtZW50ZWQgfHwgdGhpcy5vdmVyZmxvdyB8fCB0aGlzLmVkaXRhYmxlIHx8IHRoaXMuc29sbztcbiAgICB9LFxuICAgIGlzTXVsdGlwbGU6IGZ1bmN0aW9uIGlzTXVsdGlwbGUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tdWx0aXBsZSB8fCB0aGlzLnRhZ3M7XG4gICAgfSxcbiAgICBpc0FueVZhbHVlQWxsb3dlZDogZnVuY3Rpb24gaXNBbnlWYWx1ZUFsbG93ZWQoKSB7XG4gICAgICByZXR1cm4gdGhpcy50YWdzIHx8IHRoaXMuY29tYm9ib3g7XG4gICAgfSxcbiAgICBtZW51SXNWaXNpYmxlOiBmdW5jdGlvbiBtZW51SXNWaXNpYmxlKCkge1xuICAgICAgcmV0dXJuIHRoaXMubWVudUlzQWN0aXZlICYmIHRoaXMuY29tcHV0ZWRJdGVtcy5sZW5ndGggPiAwICYmICghdGhpcy5pc0FueVZhbHVlQWxsb3dlZCB8fCB0aGlzLmZpbHRlcmVkSXRlbXMubGVuZ3RoID4gMCk7XG4gICAgfSxcbiAgICBtZW51SXRlbXM6IGZ1bmN0aW9uIG1lbnVJdGVtcygpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiB0aGlzLmlzSGlkaW5nU2VsZWN0ZWQgPyB0aGlzLmZpbHRlcmVkSXRlbXMuZmlsdGVyKGZ1bmN0aW9uIChvKSB7XG4gICAgICAgIHJldHVybiAoX3RoaXMuc2VsZWN0ZWRJdGVtcyB8fCBbXSkuaW5kZXhPZihvKSA9PT0gLTE7XG4gICAgICB9KSA6IHRoaXMuZmlsdGVyZWRJdGVtcztcbiAgICB9LFxuICAgIG51ZGdlVG9wOiBmdW5jdGlvbiBudWRnZVRvcCgpIHtcbiAgICAgIHZhciBudWRnZVRvcCA9IC0xODtcblxuICAgICAgaWYgKHRoaXMuc29sbykgbnVkZ2VUb3AgPSAwO2Vsc2UgaWYgKHRoaXMuc2hvdWxkT2Zmc2V0KSB7XG4gICAgICAgIG51ZGdlVG9wICs9IDQ0O1xuXG4gICAgICAgIG51ZGdlVG9wICs9IHRoaXMuaGlkZURldGFpbHMgPyAtMjQgOiAwO1xuICAgICAgICBudWRnZVRvcCArPSB0aGlzLmlzQXV0b2NvbXBsZXRlICYmICF0aGlzLmlzRHJvcGRvd24gPyAtMiA6IDA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWRnZVRvcDtcbiAgICB9LFxuXG4gICAgc2VhcmNoVmFsdWU6IHtcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sYXp5U2VhcmNoO1xuICAgICAgfSxcbiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbCkge1xuICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgICBpZiAoIXRoaXMuaXNBdXRvY29tcGxldGUgfHwgdGhpcy5zZWxlY3RlZEluZGV4ID4gLTEpIHJldHVybjtcblxuICAgICAgICB0aGlzLmxhenlTZWFyY2ggPSB2YWw7XG5cbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuc2VhcmNoVGltZW91dCk7XG5cbiAgICAgICAgdGhpcy5zZWFyY2hUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3RoaXMyLiRlbWl0KCd1cGRhdGU6c2VhcmNoSW5wdXQnLCB2YWwpO1xuICAgICAgICB9LCB0aGlzLmRlYm91bmNlU2VhcmNoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNlbGVjdGVkSXRlbTogZnVuY3Rpb24gc2VsZWN0ZWRJdGVtKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLmlzTXVsdGlwbGUpIHJldHVybiBudWxsO1xuXG4gICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZEl0ZW1zLmZpbmQoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMy5nZXRWYWx1ZShpKSA9PT0gX3RoaXMzLmdldFZhbHVlKF90aGlzMy5pbnB1dFZhbHVlKTtcbiAgICAgIH0pIHx8IG51bGw7XG4gICAgfSxcbiAgICBzaG91bGRPZmZzZXQ6IGZ1bmN0aW9uIHNob3VsZE9mZnNldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmlzQXV0b2NvbXBsZXRlIHx8IHRoaXMuaXNEcm9wZG93bjtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEyNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbi8qKlxuICogU2VsZWN0IGV2ZW50c1xuICpcbiAqIEBtaXhpblxuICpcbiAqIEV2ZW50IGJhc2VkIG1ldGhvZHMgZm9yXG4gKiB0aGUgdi1zZWxlY3QgY29tcG9uZW50XG4gKi9cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBtZXRob2RzOiB7XG4gICAgYmx1cjogZnVuY3Rpb24gYmx1cigpIHtcbiAgICAgIHRoaXMuZGVhY3RpdmF0ZUlucHV0KCk7XG4gICAgICB0aGlzLm1lbnVJc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnYmx1cicpO1xuICAgIH0sXG4gICAgZm9jdXM6IGZ1bmN0aW9uIGZvY3VzKCkge1xuICAgICAgdGhpcy5zaG93TWVudSgpO1xuXG4gICAgICB0aGlzLiRlbWl0KCdmb2N1cycpO1xuICAgIH0sXG4gICAgZm9jdXNJbnB1dDogZnVuY3Rpb24gZm9jdXNJbnB1dCgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLiRyZWZzLmlucHV0ICYmIHRoaXMuaXNBdXRvY29tcGxldGUpIHtcbiAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC5mb2N1cygpO1xuXG4gICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpcy4kcmVmcy5pbnB1dC5zZWxlY3QoKTtcbiAgICAgICAgICBfdGhpcy5zaG91bGRCcmVhayAmJiAoX3RoaXMuJHJlZnMuaW5wdXQuc2Nyb2xsTGVmdCA9IF90aGlzLiRyZWZzLmlucHV0LnNjcm9sbFdpZHRoKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAhdGhpcy5pc0ZvY3VzZWQgJiYgdGhpcy4kZWwuZm9jdXMoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdlbkxpc3RlbmVyczogZnVuY3Rpb24gZ2VuTGlzdGVuZXJzKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBsaXN0ZW5lcnMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLiRsaXN0ZW5lcnMpO1xuICAgICAgZGVsZXRlIGxpc3RlbmVycy5pbnB1dDtcblxuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBsaXN0ZW5lcnMsIHtcbiAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkge1xuICAgICAgICAgIGlmIChfdGhpczIuZGlzYWJsZWQgfHwgX3RoaXMyLnJlYWRvbmx5KSByZXR1cm47XG5cbiAgICAgICAgICBpZiAoX3RoaXMyLmlzRm9jdXNlZCAmJiAhX3RoaXMyLm1lbnVJc1Zpc2libGUpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczIuc2hvd01lbnVJdGVtcygpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF90aGlzMi5mb2N1cygpO1xuICAgICAgICB9LFxuICAgICAgICBmb2N1czogZnVuY3Rpb24gZm9jdXMoZSkge1xuICAgICAgICAgIGlmIChfdGhpczIuZGlzYWJsZWQgfHwgX3RoaXMyLnJlYWRvbmx5IHx8IF90aGlzMi5pc0ZvY3VzZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpczIuYWN0aXZhdGVJbnB1dCgpO1xuICAgICAgICAgIF90aGlzMi4kbmV4dFRpY2soX3RoaXMyLmZvY3VzSW5wdXQpO1xuICAgICAgICB9LFxuICAgICAgICBrZXlkb3duOiB0aGlzLm9uS2V5RG93biAvLyBMb2NhdGVkIGluIG1peGlucy9zZWxlY3QtYXV0b2NvbXBsZXRlLmpzXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEyNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gZWxzZSB7IHJldHVybiBBcnJheS5mcm9tKGFycik7IH0gfVxuXG5cblxuLyoqXG4gKiBTZWxlY3QgZ2VuZXJhdG9yc1xuICpcbiAqIEBtaXhpblxuICpcbiAqIFVzZWQgZm9yIGNyZWF0aW5nIHRoZSBET00gZWxlbWVudHMgZm9yIFZTZWxlY3RcbiAqL1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG1ldGhvZHM6IHtcbiAgICBnZW5NZW51OiBmdW5jdGlvbiBnZW5NZW51KCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIHJlZjogJ21lbnUnLFxuICAgICAgICBwcm9wczoge1xuICAgICAgICAgIGFjdGl2YXRvcjogdGhpcy4kZWwsXG4gICAgICAgICAgYXV0bzogdGhpcy5hdXRvLFxuICAgICAgICAgIGNsb3NlT25DbGljazogZmFsc2UsXG4gICAgICAgICAgY2xvc2VPbkNvbnRlbnRDbGljazogIXRoaXMuaXNNdWx0aXBsZSxcbiAgICAgICAgICBjb250ZW50Q2xhc3M6IHRoaXMuY29tcHV0ZWRDb250ZW50Q2xhc3MsXG4gICAgICAgICAgZGlzYWJsZWQ6IHRoaXMuZGlzYWJsZWQsXG4gICAgICAgICAgbWF4SGVpZ2h0OiB0aGlzLm1heEhlaWdodCxcbiAgICAgICAgICBudWRnZVRvcDogdGhpcy5udWRnZVRvcCxcbiAgICAgICAgICBvZmZzZXRZOiB0aGlzLnNob3VsZE9mZnNldCxcbiAgICAgICAgICBvZmZzZXRPdmVyZmxvdzogdGhpcy5pc0F1dG9jb21wbGV0ZSxcbiAgICAgICAgICBvcGVuT25DbGljazogZmFsc2UsXG4gICAgICAgICAgdmFsdWU6IHRoaXMubWVudUlzVmlzaWJsZSxcbiAgICAgICAgICB6SW5kZXg6IHRoaXMubWVudVpJbmRleFxuICAgICAgICB9LFxuICAgICAgICBvbjoge1xuICAgICAgICAgIGlucHV0OiBmdW5jdGlvbiBpbnB1dCh2YWwpIHtcbiAgICAgICAgICAgIGlmICghdmFsKSB7XG4gICAgICAgICAgICAgIF90aGlzLm1lbnVJc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMuaXNBdXRvY29tcGxldGUpIGRhdGEucHJvcHMudHJhbnNpdGlvbiA9ICcnO1xuXG4gICAgICB0aGlzLm1pbldpZHRoICYmIChkYXRhLnByb3BzLm1pbldpZHRoID0gdGhpcy5taW5XaWR0aCk7XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LW1lbnUnLCBkYXRhLCBbdGhpcy5nZW5MaXN0KCldKTtcbiAgICB9LFxuICAgIGdldE1lbnVJbmRleDogZnVuY3Rpb24gZ2V0TWVudUluZGV4KCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHJlZnMubWVudSA/IHRoaXMuJHJlZnMubWVudS5saXN0SW5kZXggOiAtMTtcbiAgICB9LFxuICAgIHNldE1lbnVJbmRleDogZnVuY3Rpb24gc2V0TWVudUluZGV4KGluZGV4KSB7XG4gICAgICB0aGlzLiRyZWZzLm1lbnUgJiYgKHRoaXMuJHJlZnMubWVudS5saXN0SW5kZXggPSBpbmRleCk7XG4gICAgfSxcbiAgICByZXNldE1lbnVJbmRleDogZnVuY3Rpb24gcmVzZXRNZW51SW5kZXgoKSB7XG4gICAgICB0aGlzLnNldE1lbnVJbmRleCgtMSk7XG4gICAgfSxcbiAgICBpc01lbnVJdGVtU2VsZWN0ZWQ6IGZ1bmN0aW9uIGlzTWVudUl0ZW1TZWxlY3RlZCgpIHtcbiAgICAgIHJldHVybiB0aGlzLm1lbnVJc0FjdGl2ZSAmJiB0aGlzLm1lbnVJdGVtcy5sZW5ndGggJiYgdGhpcy5nZXRNZW51SW5kZXgoKSA+IC0xO1xuICAgIH0sXG4gICAgZ2VuU2VsZWN0aW9uc0FuZFNlYXJjaDogZnVuY3Rpb24gZ2VuU2VsZWN0aW9uc0FuZFNlYXJjaCgpIHtcbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgICdjbGFzcyc6ICdpbnB1dC1ncm91cF9fc2VsZWN0aW9ucycsXG4gICAgICAgIHN0eWxlOiB7ICdvdmVyZmxvdyc6ICdoaWRkZW4nIH0sXG4gICAgICAgIHJlZjogJ2FjdGl2YXRvcidcbiAgICAgIH0sIFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5nZW5TZWxlY3Rpb25zKCkpLCBbdGhpcy5nZW5TZWFyY2goKV0pKTtcbiAgICB9LFxuICAgIGdlblNlbGVjdGlvbnM6IGZ1bmN0aW9uIGdlblNlbGVjdGlvbnMoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMuaGlkZVNlbGVjdGlvbnMpIHJldHVybiBbXTtcblxuICAgICAgdmFyIGNoaWxkcmVuID0gW107XG4gICAgICB2YXIgY2hpcHMgPSB0aGlzLmNoaXBzO1xuICAgICAgdmFyIHNsb3RzID0gdGhpcy4kc2NvcGVkU2xvdHMuc2VsZWN0aW9uO1xuICAgICAgdmFyIGxlbmd0aCA9IHRoaXMuc2VsZWN0ZWRJdGVtcy5sZW5ndGg7XG4gICAgICB0aGlzLnNlbGVjdGVkSXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwgaSkge1xuICAgICAgICBpZiAoc2xvdHMpIHtcbiAgICAgICAgICBjaGlsZHJlbi5wdXNoKF90aGlzMi5nZW5TbG90U2VsZWN0aW9uKGl0ZW0sIGkpKTtcbiAgICAgICAgfSBlbHNlIGlmIChjaGlwcykge1xuICAgICAgICAgIGNoaWxkcmVuLnB1c2goX3RoaXMyLmdlbkNoaXBTZWxlY3Rpb24oaXRlbSwgaSkpO1xuICAgICAgICB9IGVsc2UgaWYgKF90aGlzMi5zZWdtZW50ZWQpIHtcbiAgICAgICAgICBjaGlsZHJlbi5wdXNoKF90aGlzMi5nZW5TZWdtZW50ZWRCdG4oaXRlbSwgaSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoaWxkcmVuLnB1c2goX3RoaXMyLmdlbkNvbW1hU2VsZWN0aW9uKGl0ZW0sIGkgPCBsZW5ndGggLSAxLCBpKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gY2hpbGRyZW47XG4gICAgfSxcbiAgICBnZW5TZWFyY2g6IGZ1bmN0aW9uIGdlblNlYXJjaCgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgZGF0YSA9IHtcbiAgICAgICAgc3RhdGljQ2xhc3M6ICdpbnB1dC1ncm91cC0tc2VsZWN0X19hdXRvY29tcGxldGUnLFxuICAgICAgICAnY2xhc3MnOiB7XG4gICAgICAgICAgJ2lucHV0LWdyb3VwLS1zZWxlY3RfX2F1dG9jb21wbGV0ZS0taW5kZXgnOiB0aGlzLnNlbGVjdGVkSW5kZXggPiAtMVxuICAgICAgICB9LFxuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIGZsZXg6IHRoaXMuc2hvdWxkQnJlYWsgPyAnMSAwIDEwMCUnIDogbnVsbFxuICAgICAgICB9LFxuICAgICAgICBhdHRyczogX2V4dGVuZHMoe30sIHRoaXMuJGF0dHJzLCB7XG4gICAgICAgICAgZGlzYWJsZWQ6IHRoaXMuZGlzYWJsZWQgfHwgIXRoaXMuaXNBdXRvY29tcGxldGUsXG4gICAgICAgICAgcmVhZG9ubHk6IHRoaXMucmVhZG9ubHksXG4gICAgICAgICAgdGFiaW5kZXg6IHRoaXMuZGlzYWJsZWQgfHwgIXRoaXMuaXNBdXRvY29tcGxldGUgPyAtMSA6IHRoaXMudGFiaW5kZXhcbiAgICAgICAgfSksXG4gICAgICAgIGRvbVByb3BzOiB7XG4gICAgICAgICAgdmFsdWU6IHRoaXMubWFza1RleHQodGhpcy5sYXp5U2VhcmNoIHx8ICcnKVxuICAgICAgICB9LFxuICAgICAgICBkaXJlY3RpdmVzOiBbe1xuICAgICAgICAgIG5hbWU6ICdzaG93JyxcbiAgICAgICAgICB2YWx1ZTogdGhpcy5pc0F1dG9jb21wbGV0ZSB8fCB0aGlzLnBsYWNlaG9sZGVyICYmICF0aGlzLnNlbGVjdGVkSXRlbXMubGVuZ3RoXG4gICAgICAgIH1dLFxuICAgICAgICByZWY6ICdpbnB1dCcsXG4gICAgICAgIGtleTogJ2lucHV0J1xuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMuaXNBdXRvY29tcGxldGUpIHtcbiAgICAgICAgZGF0YS5hdHRycy5yb2xlID0gJ2NvbWJvYm94JztcbiAgICAgICAgZGF0YS5kb21Qcm9wcy5hdXRvY29tcGxldGUgPSB0aGlzLmJyb3dzZXJBdXRvY29tcGxldGU7XG5cbiAgICAgICAgZGF0YS5vbiA9IF9leHRlbmRzKHt9LCB0aGlzLmdlbkxpc3RlbmVycygpLCB7XG4gICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uIGlucHV0KGUpIHtcbiAgICAgICAgICAgIF90aGlzMy5zZWFyY2hWYWx1ZSA9IF90aGlzMy51bm1hc2tUZXh0KGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICh0aGlzLmNvbWJvYm94KSB7XG4gICAgICAgICAgLy8gV2hlbiB1c2luZyB0aGUgY29tYm9ib3hcbiAgICAgICAgICAvLyB1cGRhdGUgaW5wdXRWYWx1ZSBhbmRcbiAgICAgICAgICAvLyBzZXQgdGhlIG1lbnUgc3RhdHVzXG4gICAgICAgICAgZGF0YS5vbi5ibHVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIC8vIElmIHVzZXIgY2xlYXJzIGlucHV0XG4gICAgICAgICAgICAvLyB2YWx1ZSB3aWxsIGJlIGZhbHNleVxuICAgICAgICAgICAgLy8gYnV0IG5vdCBudWxsXG4gICAgICAgICAgICBpZiAoX3RoaXMzLmxhenlTZWFyY2ggPT0gbnVsbCB8fFxuICAgICAgICAgICAgLy8gSWYgYmx1ciB3YXMgY2F1c2VkIGJ5IGNsaWNraW5nXG4gICAgICAgICAgICAvLyBhIG1lbnUgbGlzdCB0aWxlLCBkbyBub3RoaW5nXG4gICAgICAgICAgICBfdGhpczMuY29udGVudCAmJiBfdGhpczMuY29udGVudC5jb250YWlucyhlLnJlbGF0ZWRUYXJnZXQpIHx8IF90aGlzMy4kZWwgJiYgX3RoaXMzLiRlbC5jb250YWlucyhlLnJlbGF0ZWRUYXJnZXQpKSByZXR1cm47XG5cbiAgICAgICAgICAgIF90aGlzMy5pbnB1dFZhbHVlID0gX3RoaXMzLmxhenlTZWFyY2g7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRhdGEuZGlyZWN0aXZlcyA9IGRhdGEuZGlyZWN0aXZlcy5jb25jYXQodGhpcy5nZW5EaXJlY3RpdmVzKCkpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5wbGFjZWhvbGRlcikgZGF0YS5kb21Qcm9wcy5wbGFjZWhvbGRlciA9IHRoaXMucGxhY2Vob2xkZXI7XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdpbnB1dCcsIGRhdGEpO1xuICAgIH0sXG4gICAgZ2VuU2VnbWVudGVkQnRuOiBmdW5jdGlvbiBnZW5TZWdtZW50ZWRCdG4oaXRlbSkge1xuICAgICAgaWYgKCFpdGVtLnRleHQgfHwgIWl0ZW0uY2FsbGJhY2spIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdbVnVldGlmeV0gV2FybjogV2hlbiB1c2luZyB0aGUgdi1zZWxlY3QgY29tcG9uZW50IHdpdGggXFwnc2VnbWVudGVkXFwnIHByb3Agd2l0aG91dCBhIHNlbGVjdGlvbiBzbG90LCBpdGVtcyBtdXN0IGNvbnRhaW4gYm90aCBhIHRleHQgYW5kIGNhbGxiYWNrIHByb3BlcnR5Jyk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndi1idG4nLCB7XG4gICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgZmxhdDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBvbjoge1xuICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgaXRlbS5jYWxsYmFjayhlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sIFtpdGVtLnRleHRdKTtcbiAgICB9LFxuICAgIGdlblNsb3RTZWxlY3Rpb246IGZ1bmN0aW9uIGdlblNsb3RTZWxlY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgICAgIHJldHVybiB0aGlzLiRzY29wZWRTbG90cy5zZWxlY3Rpb24oe1xuICAgICAgICBwYXJlbnQ6IHRoaXMsXG4gICAgICAgIGl0ZW06IGl0ZW0sXG4gICAgICAgIGluZGV4OiBpbmRleCxcbiAgICAgICAgc2VsZWN0ZWQ6IGluZGV4ID09PSB0aGlzLnNlbGVjdGVkSW5kZXgsXG4gICAgICAgIGRpc2FibGVkOiB0aGlzLmRpc2FibGVkIHx8IHRoaXMucmVhZG9ubHlcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2VuQ2hpcFNlbGVjdGlvbjogZnVuY3Rpb24gZ2VuQ2hpcFNlbGVjdGlvbihpdGVtLCBpbmRleCkge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHZhciBpc0Rpc2FibGVkID0gdGhpcy5kaXNhYmxlZCB8fCB0aGlzLnJlYWRvbmx5O1xuICAgICAgdmFyIGNsaWNrID0gZnVuY3Rpb24gY2xpY2soZSkge1xuICAgICAgICBpZiAoaXNEaXNhYmxlZCkgcmV0dXJuO1xuXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIF90aGlzNC5mb2N1c0lucHV0KCk7XG4gICAgICAgIF90aGlzNC5zZWxlY3RlZEluZGV4ID0gaW5kZXg7XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndi1jaGlwJywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ2NoaXAtLXNlbGVjdC1tdWx0aScsXG4gICAgICAgIGF0dHJzOiB7IHRhYmluZGV4OiAnLTEnIH0sXG4gICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgY2xvc2U6IHRoaXMuZGVsZXRhYmxlQ2hpcHMgJiYgIWlzRGlzYWJsZWQsXG4gICAgICAgICAgZGFyazogdGhpcy5kYXJrLFxuICAgICAgICAgIGRpc2FibGVkOiBpc0Rpc2FibGVkLFxuICAgICAgICAgIHNlbGVjdGVkOiBpbmRleCA9PT0gdGhpcy5zZWxlY3RlZEluZGV4XG4gICAgICAgIH0sXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY2xpY2s6IGNsaWNrLFxuICAgICAgICAgIGZvY3VzOiBjbGljayxcbiAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gaW5wdXQoKSB7XG4gICAgICAgICAgICBpZiAoX3RoaXM0LmlzTXVsdGlwbGUpIF90aGlzNC5zZWxlY3RJdGVtKGl0ZW0pO2Vsc2UgX3RoaXM0LmlucHV0VmFsdWUgPSBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAga2V5OiB0aGlzLmdldFZhbHVlKGl0ZW0pXG4gICAgICB9LCB0aGlzLmdldFRleHQoaXRlbSkpO1xuICAgIH0sXG4gICAgZ2VuQ29tbWFTZWxlY3Rpb246IGZ1bmN0aW9uIGdlbkNvbW1hU2VsZWN0aW9uKGl0ZW0sIGNvbW1hLCBpbmRleCkge1xuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6ICdpbnB1dC1ncm91cF9fc2VsZWN0aW9uc19fY29tbWEnLFxuICAgICAgICAnY2xhc3MnOiB7XG4gICAgICAgICAgJ2lucHV0LWdyb3VwX19zZWxlY3Rpb25zX19jb21tYS0tYWN0aXZlJzogaW5kZXggPT09IHRoaXMuc2VsZWN0ZWRJbmRleFxuICAgICAgICB9LFxuICAgICAgICBrZXk6IEpTT04uc3RyaW5naWZ5KHRoaXMuZ2V0VmFsdWUoaXRlbSkpIC8vIEl0ZW0gbWF5IGJlIGFuIG9iamVjdFxuICAgICAgfSwgJycgKyB0aGlzLmdldFRleHQoaXRlbSkgKyAoY29tbWEgPyAnLCAnIDogJycpKTtcbiAgICB9LFxuICAgIGdlbkxpc3Q6IGZ1bmN0aW9uIGdlbkxpc3QoKSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5tZW51SXRlbXMubWFwKGZ1bmN0aW9uIChvKSB7XG4gICAgICAgIGlmIChvLmhlYWRlcikgcmV0dXJuIF90aGlzNS5nZW5IZWFkZXIobyk7XG4gICAgICAgIGlmIChvLmRpdmlkZXIpIHJldHVybiBfdGhpczUuZ2VuRGl2aWRlcihvKTtlbHNlIHJldHVybiBfdGhpczUuZ2VuVGlsZShvKTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIWNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICB2YXIgbm9EYXRhID0gdGhpcy4kc2xvdHNbJ25vLWRhdGEnXTtcbiAgICAgICAgaWYgKG5vRGF0YSkge1xuICAgICAgICAgIGNoaWxkcmVuLnB1c2gobm9EYXRhKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuVGlsZSh0aGlzLm5vRGF0YVRleHQsIHRydWUpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndi1jYXJkJywgW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3YtbGlzdCcsIHtcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICBkZW5zZTogdGhpcy5kZW5zZVxuICAgICAgICB9LFxuICAgICAgICByZWY6ICdsaXN0J1xuICAgICAgfSwgY2hpbGRyZW4pXSk7XG4gICAgfSxcbiAgICBnZW5IZWFkZXI6IGZ1bmN0aW9uIGdlbkhlYWRlcihpdGVtKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndi1zdWJoZWFkZXInLCB7XG4gICAgICAgIHByb3BzOiBpdGVtXG4gICAgICB9LCBpdGVtLmhlYWRlcik7XG4gICAgfSxcbiAgICBnZW5EaXZpZGVyOiBmdW5jdGlvbiBnZW5EaXZpZGVyKGl0ZW0pIHtcbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWRpdmlkZXInLCB7XG4gICAgICAgIHByb3BzOiBpdGVtXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdlbkxhYmVsOiBmdW5jdGlvbiBnZW5MYWJlbCgpIHtcbiAgICAgIHZhciBzaW5nbGVMaW5lID0gdGhpcy5zaW5nbGVMaW5lIHx8IHRoaXMuaXNEcm9wZG93bjtcblxuICAgICAgaWYgKHNpbmdsZUxpbmUgJiYgdGhpcy5pc0RpcnR5IHx8IHNpbmdsZUxpbmUgJiYgdGhpcy5pc0ZvY3VzZWQgJiYgdGhpcy5zZWFyY2hWYWx1ZSkgcmV0dXJuIG51bGw7XG5cbiAgICAgIHZhciBkYXRhID0ge307XG5cbiAgICAgIGlmICh0aGlzLmlkKSBkYXRhLmF0dHJzID0geyBmb3I6IHRoaXMuaWQgfTtcblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2xhYmVsJywgZGF0YSwgdGhpcy4kc2xvdHMubGFiZWwgfHwgdGhpcy5sYWJlbCk7XG4gICAgfSxcbiAgICBnZW5UaWxlOiBmdW5jdGlvbiBnZW5UaWxlKGl0ZW0sIGRpc2FibGVkKSB7XG4gICAgICB2YXIgX3RoaXM2ID0gdGhpcztcblxuICAgICAgdmFyIGFjdGl2ZSA9IHRoaXMuc2VsZWN0ZWRJdGVtcy5pbmRleE9mKGl0ZW0pICE9PSAtMTtcblxuICAgICAgaWYgKHR5cGVvZiBkaXNhYmxlZCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgZGlzYWJsZWQgPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImdcIiAvKiBnZXRPYmplY3RWYWx1ZUJ5UGF0aCAqL10pKGl0ZW0sIHRoaXMuaXRlbURpc2FibGVkKTtcbiAgICAgIH1cblxuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKGUpIHtcbiAgICAgICAgICAgIGlmIChkaXNhYmxlZCkgcmV0dXJuO1xuXG4gICAgICAgICAgICBfdGhpczYuc2VsZWN0SXRlbShpdGVtKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgYXZhdGFyOiBpdGVtID09PSBPYmplY3QoaXRlbSkgJiYgdGhpcy5pdGVtQXZhdGFyIGluIGl0ZW0sXG4gICAgICAgICAgcmlwcGxlOiB0cnVlLFxuICAgICAgICAgIHZhbHVlOiBhY3RpdmVcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICAgIGRhdGEucHJvcHMuZGlzYWJsZWQgPSBkaXNhYmxlZDtcbiAgICAgIH1cblxuICAgICAgZGF0YS5wcm9wcy5hY3RpdmVDbGFzcyA9IE9iamVjdC5rZXlzKHRoaXMuYWRkVGV4dENvbG9yQ2xhc3NDaGVja3MoKSkuam9pbignICcpO1xuXG4gICAgICBpZiAodGhpcy4kc2NvcGVkU2xvdHMuaXRlbSkge1xuICAgICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndi1saXN0LXRpbGUnLCBkYXRhLCBbdGhpcy4kc2NvcGVkU2xvdHMuaXRlbSh7IHBhcmVudDogdGhpcywgaXRlbTogaXRlbSB9KV0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndi1saXN0LXRpbGUnLCBkYXRhLCBbdGhpcy5nZW5BY3Rpb24oaXRlbSwgYWN0aXZlKSwgdGhpcy5nZW5Db250ZW50KGl0ZW0pXSk7XG4gICAgfSxcbiAgICBnZW5BY3Rpb246IGZ1bmN0aW9uIGdlbkFjdGlvbihpdGVtLCBhY3RpdmUpIHtcbiAgICAgIHZhciBfdGhpczcgPSB0aGlzO1xuXG4gICAgICBpZiAoIXRoaXMuaXNNdWx0aXBsZSB8fCB0aGlzLmlzSGlkaW5nU2VsZWN0ZWQpIHJldHVybiBudWxsO1xuXG4gICAgICB2YXIgZGF0YSA9IHtcbiAgICAgICAgc3RhdGljQ2xhc3M6ICdsaXN0X190aWxlX19hY3Rpb24tLXNlbGVjdC1tdWx0aScsXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKGUpIHtcbiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICBfdGhpczcuc2VsZWN0SXRlbShpdGVtKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWxpc3QtdGlsZS1hY3Rpb24nLCBkYXRhLCBbdGhpcy4kY3JlYXRlRWxlbWVudCgndi1jaGVja2JveCcsIHtcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICBjb2xvcjogdGhpcy5jb21wdXRlZENvbG9yLFxuICAgICAgICAgIGlucHV0VmFsdWU6IGFjdGl2ZVxuICAgICAgICB9XG4gICAgICB9KV0pO1xuICAgIH0sXG4gICAgZ2VuQ29udGVudDogZnVuY3Rpb24gZ2VuQ29udGVudChpdGVtKSB7XG4gICAgICB2YXIgdGV4dCA9IHRoaXMuZ2V0VGV4dChpdGVtKTtcblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3YtbGlzdC10aWxlLWNvbnRlbnQnLCBbdGhpcy4kY3JlYXRlRWxlbWVudCgndi1saXN0LXRpbGUtdGl0bGUnLCB7XG4gICAgICAgIGRvbVByb3BzOiB7XG4gICAgICAgICAgaW5uZXJIVE1MOiB0aGlzLmdlbkZpbHRlcmVkKHRleHQpXG4gICAgICAgIH1cbiAgICAgIH0pXSk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMjYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG4vLyBIZWxwZXJzXG5cblxuLyoqXG4gKiBTZWxlY3QgaGVscGVyc1xuICpcbiAqIEBtaXhpblxuICpcbiAqIEhlbHBlciBtZXRob2RzIGZvciB0aGVcbiAqIHYtc2VsZWN0IGNvbXBvbmVudFxuICovXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbWV0aG9kczoge1xuICAgIGdldFRleHQ6IGZ1bmN0aW9uIGdldFRleHQoaXRlbSkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlGcm9tSXRlbShpdGVtLCB0aGlzLml0ZW1UZXh0KTtcbiAgICB9LFxuICAgIGdldFZhbHVlOiBmdW5jdGlvbiBnZXRWYWx1ZShpdGVtKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eUZyb21JdGVtKGl0ZW0sIHRoaXMuaXRlbVZhbHVlKTtcbiAgICB9LFxuICAgIGdldFByb3BlcnR5RnJvbUl0ZW06IGZ1bmN0aW9uIGdldFByb3BlcnR5RnJvbUl0ZW0oaXRlbSwgZmllbGQpIHtcbiAgICAgIGlmIChpdGVtICE9PSBPYmplY3QoaXRlbSkpIHJldHVybiBpdGVtO1xuXG4gICAgICB2YXIgdmFsdWUgPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImdcIiAvKiBnZXRPYmplY3RWYWx1ZUJ5UGF0aCAqL10pKGl0ZW0sIGZpZWxkKTtcblxuICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcgPyBpdGVtIDogdmFsdWU7XG4gICAgfSxcbiAgICBjb21wYXJlT2JqZWN0czogZnVuY3Rpb24gY29tcGFyZU9iamVjdHMoYSwgYikge1xuICAgICAgdmFyIGFQcm9wcyA9IE9iamVjdC5rZXlzKGEpO1xuICAgICAgdmFyIGJQcm9wcyA9IE9iamVjdC5rZXlzKGIpO1xuXG4gICAgICBpZiAoYVByb3BzLmxlbmd0aCAhPT0gYlByb3BzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gYVByb3BzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBwcm9wTmFtZSA9IGFQcm9wc1tpXTtcblxuICAgICAgICBpZiAoYVtwcm9wTmFtZV0gIT09IGJbcHJvcE5hbWVdKSByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTI3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBTZWxlY3QgbWVudSBtZXRob2RzXG4gKlxuICogQG1peGluXG4gKlxuICogTWVudSBiYXNlZCBtZXRob2RzIGZvclxuICogdGhlIHYtc2VsZWN0IGNvbXBvbmVudFxuICovXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbWV0aG9kczoge1xuICAgIGFjdGl2YXRlSW5wdXQ6IGZ1bmN0aW9uIGFjdGl2YXRlSW5wdXQoKSB7XG4gICAgICB0aGlzLmlzQWN0aXZlID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNGb2N1c2VkID0gdHJ1ZTtcbiAgICB9LFxuICAgIGRlYWN0aXZhdGVJbnB1dDogZnVuY3Rpb24gZGVhY3RpdmF0ZUlucHV0KCkge1xuICAgICAgdGhpcy5pc0ZvY3VzZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IC0xO1xuICAgIH0sXG4gICAgaGlkZU1lbnU6IGZ1bmN0aW9uIGhpZGVNZW51KCkge1xuICAgICAgdGhpcy5tZW51SXNBY3RpdmUgPSBmYWxzZTtcbiAgICB9LFxuICAgIHNob3dNZW51OiBmdW5jdGlvbiBzaG93TWVudSgpIHtcbiAgICAgIHRoaXMuYWN0aXZhdGVJbnB1dCgpO1xuICAgICAgdGhpcy5zaG93TWVudUl0ZW1zKCk7XG4gICAgICB0aGlzLmlzTXVsdGlwbGUgJiYgdGhpcy5yZXNldE1lbnVJbmRleCgpO1xuICAgIH0sXG4gICAgc2hvd01lbnVJdGVtczogZnVuY3Rpb24gc2hvd01lbnVJdGVtcygpIHtcbiAgICAgIHRoaXMubWVudUlzQWN0aXZlID0gdHJ1ZTtcbiAgICB9LFxuICAgIHRvZ2dsZU1lbnU6IGZ1bmN0aW9uIHRvZ2dsZU1lbnUoKSB7XG4gICAgICBpZiAodGhpcy5kaXNhYmxlZCB8fCB0aGlzLnJlYWRvbmx5IHx8IHRoaXMubWVudUlzVmlzaWJsZSkgcmV0dXJuIHRoaXMuaGlkZU1lbnUoKTtcblxuICAgICAgdGhpcy5zaG93TWVudSgpO1xuICAgICAgdGhpcy5mb2N1c0lucHV0KCk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMjggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgcHJvcHM6IHtcbiAgICBhcHBlbmRJY29uOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnYXJyb3dfZHJvcF9kb3duJ1xuICAgIH0sXG4gICAgYXBwZW5kSWNvbkNiOiBGdW5jdGlvbixcbiAgICBhdXRvOiBCb29sZWFuLFxuICAgIGF1dG9jb21wbGV0ZTogQm9vbGVhbixcbiAgICBicm93c2VyQXV0b2NvbXBsZXRlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnb24nXG4gICAgfSxcbiAgICBjYWNoZUl0ZW1zOiBCb29sZWFuLFxuICAgIGNoaXBzOiBCb29sZWFuLFxuICAgIGNsZWFyYWJsZTogQm9vbGVhbixcbiAgICBjb21ib2JveDogQm9vbGVhbixcbiAgICBjb250ZW50Q2xhc3M6IFN0cmluZyxcbiAgICBkZWJvdW5jZVNlYXJjaDoge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6IDIwMFxuICAgIH0sXG4gICAgZGVsZXRhYmxlQ2hpcHM6IEJvb2xlYW4sXG4gICAgZGVuc2U6IEJvb2xlYW4sXG4gICAgZWRpdGFibGU6IEJvb2xlYW4sXG4gICAgaGlkZVNlbGVjdGVkOiBCb29sZWFuLFxuICAgIGl0ZW1zOiB7XG4gICAgICB0eXBlOiBBcnJheSxcbiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG4gICAgfSxcbiAgICBpdGVtQXZhdGFyOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnYXZhdGFyJ1xuICAgIH0sXG4gICAgaXRlbURpc2FibGVkOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnZGlzYWJsZWQnXG4gICAgfSxcbiAgICBpdGVtVGV4dDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ3RleHQnXG4gICAgfSxcbiAgICBpdGVtVmFsdWU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICd2YWx1ZSdcbiAgICB9LFxuICAgIG1heEhlaWdodDoge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6IDMwMFxuICAgIH0sXG4gICAgbWluV2lkdGg6IHtcbiAgICAgIHR5cGU6IFtCb29sZWFuLCBOdW1iZXIsIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH0sXG4gICAgbXVsdGlwbGU6IEJvb2xlYW4sXG4gICAgbXVsdGlMaW5lOiBCb29sZWFuLFxuICAgIG9wZW5PbkNsZWFyOiBCb29sZWFuLFxuICAgIG92ZXJmbG93OiBCb29sZWFuLFxuICAgIHJldHVybk9iamVjdDogQm9vbGVhbixcbiAgICBzZWFyY2hJbnB1dDoge1xuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH0sXG4gICAgc2VnbWVudGVkOiBCb29sZWFuLFxuICAgIHNpbmdsZUxpbmU6IEJvb2xlYW4sXG4gICAgc29sbzogQm9vbGVhbixcbiAgICB0YWdzOiBCb29sZWFuXG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEyOSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qKlxuICogU2VsZWN0IHdhdGNoZXJzXG4gKlxuICogQG1peGluXG4gKlxuICogV2F0Y2hlcnMgZm9yIHRoZVxuICogdi1zZWxlY3QgY29tcG9uZW50XG4gKi9cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICB3YXRjaDoge1xuICAgIGZpbHRlcmVkSXRlbXM6IGZ1bmN0aW9uIGZpbHRlcmVkSXRlbXMoKSB7XG4gICAgICB0aGlzLiRyZWZzLm1lbnUgJiYgdGhpcy4kcmVmcy5tZW51LnVwZGF0ZURpbWVuc2lvbnMoKTtcbiAgICB9LFxuICAgIGlucHV0VmFsdWU6IGZ1bmN0aW9uIGlucHV0VmFsdWUodmFsKSB7XG4gICAgICAvLyBQb3B1bGF0ZSBzZWxlY3RlZCBpdGVtc1xuICAgICAgdGhpcy5nZW5TZWxlY3RlZEl0ZW1zKHZhbCk7XG5cbiAgICAgIC8vIE9ubHkgZmlyZSBhbiB1cGRhdGVcbiAgICAgIC8vIGlmIHZhbHVlcyBkbyBub3RcbiAgICAgIC8vIG1hdGNoXG4gICAgICB2YWwgIT09IHRoaXMudmFsdWUgJiYgdGhpcy4kZW1pdCgnaW5wdXQnLCB2YWwpO1xuXG4gICAgICAvLyBXaGVuIGlucHV0VmFsdWUgaXMgY2hhbmdlZFxuICAgICAgLy8gYW5kIGNvbWJvYm94IGlzIHRydWUgc2V0XG4gICAgICAvLyBtZW51IHByb3BlcnR5IHRvIGZhbHNlXG4gICAgICBpZiAodGhpcy5jb21ib2JveCkgdGhpcy5tZW51SXNBY3RpdmUgPSBmYWxzZTtcbiAgICB9LFxuICAgIGlzQWN0aXZlOiBmdW5jdGlvbiBpc0FjdGl2ZSh2YWwpIHtcbiAgICAgIGlmICh2YWwpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNoaXBzICYmICF0aGlzLiRzY29wZWRTbG90cy5zZWxlY3Rpb24pIHtcbiAgICAgICAgICB0aGlzLnNlYXJjaFZhbHVlID0gdGhpcy5nZXRUZXh0KHRoaXMuc2VsZWN0ZWRJdGVtKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYmx1cigpO1xuXG4gICAgICBpZiAodGhpcy50YWdzICYmIHRoaXMuc2VhcmNoVmFsdWUpIHtcbiAgICAgICAgdGhpcy51cGRhdGVUYWdzKHRoaXMuc2VhcmNoVmFsdWUpO1xuICAgICAgfVxuXG4gICAgICAvLyBPbmx5IHNldCBzZWFyY2ggdmFsdWUgaWZcbiAgICAgIC8vIHRoZXJlIGlzIGEgdmFsdWUgdG8gc2V0XG4gICAgICB0aGlzLnNlYXJjaFZhbHVlICYmICh0aGlzLnNlYXJjaFZhbHVlID0gbnVsbCk7XG4gICAgfSxcbiAgICBpc0Jvb3RlZDogZnVuY3Rpb24gaXNCb290ZWQoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfdGhpcy5jb250ZW50ICYmIF90aGlzLmNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAgIF90aGlzLmNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgX3RoaXMub25TY3JvbGwsIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBpdGVtczogZnVuY3Rpb24gaXRlbXModmFsKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMuY2FjaGVJdGVtcykge1xuICAgICAgICB0aGlzLmNhY2hlZEl0ZW1zID0gdGhpcy5maWx0ZXJEdXBsaWNhdGVzKHRoaXMuY2FjaGVkSXRlbXMuY29uY2F0KHZhbCkpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnJlc2V0TWVudUluZGV4KCk7XG5cbiAgICAgIC8vIFRhZ3MgYW5kIGNvbWJvYm94IHNob3VsZCBub3RcbiAgICAgIC8vIHByZS1zZWxlY3QgdGhlIGZpcnN0IGVudHJ5XG4gICAgICBpZiAodGhpcy5zZWFyY2hWYWx1ZSAmJiAhdGhpcy5pc0FueVZhbHVlQWxsb3dlZCkge1xuICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5zZXRNZW51SW5kZXgoMCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmdlblNlbGVjdGVkSXRlbXMoKTtcbiAgICB9LFxuICAgIG1lbnVJc0FjdGl2ZTogZnVuY3Rpb24gbWVudUlzQWN0aXZlKHZhbCkge1xuICAgICAgaWYgKCF2YWwpIHJldHVybjtcblxuICAgICAgdGhpcy5pc0Jvb3RlZCA9IHRydWU7XG4gICAgfSxcbiAgICBpc011bHRpcGxlOiBmdW5jdGlvbiBpc011bHRpcGxlKHZhbCkge1xuICAgICAgdGhpcy5pbnB1dFZhbHVlID0gdmFsID8gW10gOiBudWxsO1xuICAgIH0sXG4gICAgc2VhcmNoSW5wdXQ6IGZ1bmN0aW9uIHNlYXJjaElucHV0KHZhbCkge1xuICAgICAgdGhpcy5zZWFyY2hWYWx1ZSA9IHZhbDtcbiAgICB9LFxuICAgIHNlYXJjaFZhbHVlOiBmdW5jdGlvbiBzZWFyY2hWYWx1ZSh2YWwsIHByZXYpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICAvLyBXcmFwIGlucHV0IHRvIG5leHQgbGluZSBpZiBvdmVyZmxvd2luZ1xuICAgICAgaWYgKHRoaXMuJHJlZnMuaW5wdXQuc2Nyb2xsV2lkdGggPiB0aGlzLiRyZWZzLmlucHV0LmNsaWVudFdpZHRoKSB7XG4gICAgICAgIHRoaXMuc2hvdWxkQnJlYWsgPSB0cnVlO1xuICAgICAgICB0aGlzLiRuZXh0VGljayh0aGlzLiRyZWZzLm1lbnUudXBkYXRlRGltZW5zaW9ucyk7XG4gICAgICB9IGVsc2UgaWYgKHZhbCA9PT0gbnVsbCkge1xuICAgICAgICB0aGlzLnNob3VsZEJyZWFrID0gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8vIEFjdGl2YXRlIG1lbnUgaWYgaW5hY3RpdmUgYW5kIHNlYXJjaGluZ1xuICAgICAgaWYgKHRoaXMuaXNBY3RpdmUgJiYgIXRoaXMubWVudUlzQWN0aXZlICYmIHZhbCAhPT0gdGhpcy5nZXRWYWx1ZSh0aGlzLnNlbGVjdGVkSXRlbSkpIHtcbiAgICAgICAgdGhpcy5tZW51SXNBY3RpdmUgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICAvLyBPbmx5IHJlc2V0IGxpc3QgaW5kZXhcbiAgICAgIC8vIGlmIHR5cGluZyBpbiBzZWFyY2hcbiAgICAgIHZhbCB8fCBwcmV2ICYmIHRoaXMucmVzZXRNZW51SW5kZXgoKTtcblxuICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodmFsICYmICFfdGhpczMuaXNBbnlWYWx1ZUFsbG93ZWQpIHtcbiAgICAgICAgICBfdGhpczMuc2V0TWVudUluZGV4KDApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHNlbGVjdGVkSXRlbXM6IGZ1bmN0aW9uIHNlbGVjdGVkSXRlbXMoKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5zZWFyY2hUaW1lb3V0KTtcblxuICAgICAgaWYgKHRoaXMuaXNBdXRvY29tcGxldGUpIHtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2sodGhpcy4kcmVmcy5tZW51LnVwZGF0ZURpbWVuc2lvbnMpO1xuICAgICAgfVxuICAgIH0sXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKHZhbCkge1xuICAgICAgdGhpcy5pbnB1dFZhbHVlID0gdmFsO1xuICAgICAgdGhpcy52YWxpZGF0ZSgpO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTMwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfSBlbHNlIHsgcmV0dXJuIEFycmF5LmZyb20oYXJyKTsgfSB9XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBtZXRob2RzOiB7XG4gICAgZ2VuVEhlYWQ6IGZ1bmN0aW9uIGdlblRIZWFkKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMuaGlkZUhlYWRlcnMpIHJldHVybjsgLy8gRXhpdCBFYXJseSBzaW5jZSBubyBoZWFkZXJzIGFyZSBuZWVkZWQuXG5cbiAgICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuXG4gICAgICBpZiAodGhpcy4kc2NvcGVkU2xvdHMuaGVhZGVycykge1xuICAgICAgICB2YXIgcm93ID0gdGhpcy4kc2NvcGVkU2xvdHMuaGVhZGVycyh7XG4gICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgIGluZGV0ZXJtaW5hdGU6IHRoaXMuaW5kZXRlcm1pbmF0ZSxcbiAgICAgICAgICBhbGw6IHRoaXMuYWxsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNoaWxkcmVuID0gW3RoaXMubmVlZHNUUihyb3cpID8gdGhpcy5nZW5UUihyb3cpIDogcm93LCB0aGlzLmdlblRQcm9ncmVzcygpXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBfcm93ID0gdGhpcy5oZWFkZXJzLm1hcChmdW5jdGlvbiAobykge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5nZW5IZWFkZXIobyk7XG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgY2hlY2tib3ggPSB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWNoZWNrYm94Jywge1xuICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICBkYXJrOiB0aGlzLmRhcmssXG4gICAgICAgICAgICBsaWdodDogdGhpcy5saWdodCxcbiAgICAgICAgICAgIGNvbG9yOiB0aGlzLnNlbGVjdEFsbCA9PT0gdHJ1ZSA/ICcnIDogdGhpcy5zZWxlY3RBbGwsXG4gICAgICAgICAgICBoaWRlRGV0YWlsczogdHJ1ZSxcbiAgICAgICAgICAgIGlucHV0VmFsdWU6IHRoaXMuYWxsLFxuICAgICAgICAgICAgaW5kZXRlcm1pbmF0ZTogdGhpcy5pbmRldGVybWluYXRlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbjogeyBjaGFuZ2U6IHRoaXMudG9nZ2xlIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5oYXNTZWxlY3RBbGwgJiYgX3Jvdy51bnNoaWZ0KHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RoJywgW2NoZWNrYm94XSkpO1xuXG4gICAgICAgIGNoaWxkcmVuID0gW3RoaXMuZ2VuVFIoX3JvdyksIHRoaXMuZ2VuVFByb2dyZXNzKCldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndGhlYWQnLCBbY2hpbGRyZW5dKTtcbiAgICB9LFxuICAgIGdlbkhlYWRlcjogZnVuY3Rpb24gZ2VuSGVhZGVyKGhlYWRlcikge1xuICAgICAgdmFyIGFycmF5ID0gW3RoaXMuJHNjb3BlZFNsb3RzLmhlYWRlckNlbGwgPyB0aGlzLiRzY29wZWRTbG90cy5oZWFkZXJDZWxsKHsgaGVhZGVyOiBoZWFkZXIgfSkgOiBoZWFkZXJbdGhpcy5oZWFkZXJUZXh0XV07XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50LmFwcGx5KHRoaXMsIFsndGgnXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuZ2VuSGVhZGVyRGF0YShoZWFkZXIsIGFycmF5KSkpKTtcbiAgICB9LFxuICAgIGdlbkhlYWRlckRhdGE6IGZ1bmN0aW9uIGdlbkhlYWRlckRhdGEoaGVhZGVyLCBjaGlsZHJlbikge1xuICAgICAgdmFyIGNsYXNzZXMgPSBbJ2NvbHVtbiddO1xuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgcm9sZTogJ2NvbHVtbmhlYWRlcicsXG4gICAgICAgICAgc2NvcGU6ICdjb2wnLFxuICAgICAgICAgIHdpZHRoOiBoZWFkZXIud2lkdGggfHwgbnVsbCxcbiAgICAgICAgICAnYXJpYS1sYWJlbCc6IGhlYWRlclt0aGlzLmhlYWRlclRleHRdIHx8ICcnLFxuICAgICAgICAgICdhcmlhLXNvcnQnOiAnbm9uZSdcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgaWYgKCdzb3J0YWJsZScgaW4gaGVhZGVyICYmIGhlYWRlci5zb3J0YWJsZSB8fCAhKCdzb3J0YWJsZScgaW4gaGVhZGVyKSkge1xuICAgICAgICB0aGlzLmdlbkhlYWRlclNvcnRpbmdEYXRhKGhlYWRlciwgY2hpbGRyZW4sIGRhdGEsIGNsYXNzZXMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGF0YS5hdHRyc1snYXJpYS1sYWJlbCddICs9ICc6IE5vdCBzb3J0ZWQuJzsgLy8gVE9ETzogTG9jYWxpemF0aW9uXG4gICAgICB9XG5cbiAgICAgIGNsYXNzZXMucHVzaCgndGV4dC14cy0nICsgKGhlYWRlci5hbGlnbiB8fCAncmlnaHQnKSk7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShoZWFkZXIuY2xhc3MpKSB7XG4gICAgICAgIGNsYXNzZXMucHVzaC5hcHBseShjbGFzc2VzLCBfdG9Db25zdW1hYmxlQXJyYXkoaGVhZGVyLmNsYXNzKSk7XG4gICAgICB9IGVsc2UgaWYgKGhlYWRlci5jbGFzcykge1xuICAgICAgICBjbGFzc2VzLnB1c2goaGVhZGVyLmNsYXNzKTtcbiAgICAgIH1cbiAgICAgIGRhdGEuY2xhc3MgPSBjbGFzc2VzO1xuXG4gICAgICByZXR1cm4gW2RhdGEsIGNoaWxkcmVuXTtcbiAgICB9LFxuICAgIGdlbkhlYWRlclNvcnRpbmdEYXRhOiBmdW5jdGlvbiBnZW5IZWFkZXJTb3J0aW5nRGF0YShoZWFkZXIsIGNoaWxkcmVuLCBkYXRhLCBjbGFzc2VzKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgaWYgKCEoJ3ZhbHVlJyBpbiBoZWFkZXIpKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignRGF0YSB0YWJsZSBoZWFkZXJzIG11c3QgaGF2ZSBhIHZhbHVlIHByb3BlcnR5IHRoYXQgY29ycmVzcG9uZHMgdG8gYSB2YWx1ZSBpbiB0aGUgdi1tb2RlbCBhcnJheScpO1xuICAgICAgfVxuXG4gICAgICBkYXRhLmF0dHJzLnRhYkluZGV4ID0gMDtcbiAgICAgIGRhdGEub24gPSB7XG4gICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHtcbiAgICAgICAgICBfdGhpczIuZXhwYW5kZWQgPSB7fTtcbiAgICAgICAgICBfdGhpczIuc29ydChoZWFkZXIudmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBrZXlkb3duOiBmdW5jdGlvbiBrZXlkb3duKGUpIHtcbiAgICAgICAgICAvLyBjaGVjayBmb3Igc3BhY2VcbiAgICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAzMikge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgX3RoaXMyLnNvcnQoaGVhZGVyLnZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIGNsYXNzZXMucHVzaCgnc29ydGFibGUnKTtcbiAgICAgIHZhciBpY29uID0gdGhpcy4kY3JlYXRlRWxlbWVudCgndi1pY29uJywgJ2Fycm93X3Vwd2FyZCcpO1xuICAgICAgaWYgKGhlYWRlci5hbGlnbiAmJiBoZWFkZXIuYWxpZ24gPT09ICdsZWZ0Jykge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKGljb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2hpbGRyZW4udW5zaGlmdChpY29uKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHBhZ2luYXRpb24gPSB0aGlzLmNvbXB1dGVkUGFnaW5hdGlvbjtcbiAgICAgIHZhciBiZWluZ1NvcnRlZCA9IHBhZ2luYXRpb24uc29ydEJ5ID09PSBoZWFkZXIudmFsdWU7XG4gICAgICBpZiAoYmVpbmdTb3J0ZWQpIHtcbiAgICAgICAgY2xhc3Nlcy5wdXNoKCdhY3RpdmUnKTtcbiAgICAgICAgaWYgKHBhZ2luYXRpb24uZGVzY2VuZGluZykge1xuICAgICAgICAgIGNsYXNzZXMucHVzaCgnZGVzYycpO1xuICAgICAgICAgIGRhdGEuYXR0cnNbJ2FyaWEtc29ydCddID0gJ2Rlc2NlbmRpbmcnO1xuICAgICAgICAgIGRhdGEuYXR0cnNbJ2FyaWEtbGFiZWwnXSArPSAnOiBTb3J0ZWQgZGVzY2VuZGluZy4gQWN0aXZhdGUgdG8gcmVtb3ZlIHNvcnRpbmcuJzsgLy8gVE9ETzogTG9jYWxpemF0aW9uXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2xhc3Nlcy5wdXNoKCdhc2MnKTtcbiAgICAgICAgICBkYXRhLmF0dHJzWydhcmlhLXNvcnQnXSA9ICdhc2NlbmRpbmcnO1xuICAgICAgICAgIGRhdGEuYXR0cnNbJ2FyaWEtbGFiZWwnXSArPSAnOiBTb3J0ZWQgYXNjZW5kaW5nLiBBY3RpdmF0ZSB0byBzb3J0IGRlc2NlbmRpbmcuJzsgLy8gVE9ETzogTG9jYWxpemF0aW9uXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRhdGEuYXR0cnNbJ2FyaWEtbGFiZWwnXSArPSAnOiBOb3Qgc29ydGVkLiBBY3RpdmF0ZSB0byBzb3J0IGFzY2VuZGluZy4nOyAvLyBUT0RPOiBMb2NhbGl6YXRpb25cbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEzMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3RyYW5zaXRpb25zX2V4cGFuZF90cmFuc2l0aW9uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMwKTtcblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbWV0aG9kczoge1xuICAgIGdlblRCb2R5OiBmdW5jdGlvbiBnZW5UQm9keSgpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuXG4gICAgICBpZiAoIXRoaXMuaXRlbXNMZW5ndGggJiYgIXRoaXMuaXRlbXMubGVuZ3RoKSB7XG4gICAgICAgIHZhciBub0RhdGEgPSB0aGlzLiRzbG90c1snbm8tZGF0YSddIHx8IHRoaXMubm9EYXRhVGV4dDtcbiAgICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkVtcHR5Qm9keShub0RhdGEpKTtcbiAgICAgIH0gZWxzZSBpZiAoIXRoaXMuZmlsdGVyZWRJdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgdmFyIG5vUmVzdWx0cyA9IHRoaXMuJHNsb3RzWyduby1yZXN1bHRzJ10gfHwgdGhpcy5ub1Jlc3VsdHNUZXh0O1xuICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuRW1wdHlCb2R5KG5vUmVzdWx0cykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkZpbHRlcmVkSXRlbXMoKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0Ym9keScsIGNoaWxkcmVuKTtcbiAgICB9LFxuICAgIGdlbkV4cGFuZGVkUm93OiBmdW5jdGlvbiBnZW5FeHBhbmRlZFJvdyhwcm9wcykge1xuICAgICAgdmFyIGNoaWxkcmVuID0gW107XG5cbiAgICAgIGlmICh0aGlzLmlzRXhwYW5kZWQocHJvcHMuaXRlbSkpIHtcbiAgICAgICAgdmFyIGV4cGFuZCA9IHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgICBjbGFzczogJ2RhdGF0YWJsZV9fZXhwYW5kLWNvbnRlbnQnLFxuICAgICAgICAgIGtleTogcHJvcHMuaXRlbVt0aGlzLml0ZW1LZXldXG4gICAgICAgIH0sIHRoaXMuJHNjb3BlZFNsb3RzLmV4cGFuZChwcm9wcykpO1xuXG4gICAgICAgIGNoaWxkcmVuLnB1c2goZXhwYW5kKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHRyYW5zaXRpb24gPSB0aGlzLiRjcmVhdGVFbGVtZW50KCd0cmFuc2l0aW9uLWdyb3VwJywge1xuICAgICAgICBjbGFzczogJ2RhdGF0YWJsZV9fZXhwYW5kLWNvbCcsXG4gICAgICAgIGF0dHJzOiB7IGNvbHNwYW46ICcxMDAlJyB9LFxuICAgICAgICBwcm9wczoge1xuICAgICAgICAgIHRhZzogJ3RkJ1xuICAgICAgICB9LFxuICAgICAgICBvbjogT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdHJhbnNpdGlvbnNfZXhwYW5kX3RyYW5zaXRpb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXSkoJ2RhdGF0YWJsZV9fZXhwYW5kLWNvbC0tZXhwYW5kZWQnKVxuICAgICAgfSwgY2hpbGRyZW4pO1xuXG4gICAgICByZXR1cm4gdGhpcy5nZW5UUihbdHJhbnNpdGlvbl0sIHsgY2xhc3M6ICdkYXRhdGFibGVfX2V4cGFuZC1yb3cnIH0pO1xuICAgIH0sXG4gICAgY3JlYXRlUHJvcHM6IGZ1bmN0aW9uIGNyZWF0ZVByb3BzKGl0ZW0sIGluZGV4KSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgcHJvcHMgPSB7IGl0ZW06IGl0ZW0sIGluZGV4OiBpbmRleCB9O1xuICAgICAgdmFyIGtleSA9IHRoaXMuaXRlbUtleTtcblxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3BzLCAnc2VsZWN0ZWQnLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5zZWxlY3RlZFtpdGVtW190aGlzLml0ZW1LZXldXTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiBzZXQodmFsdWUpIHtcbiAgICAgICAgICB2YXIgc2VsZWN0ZWQgPSBfdGhpcy52YWx1ZS5zbGljZSgpO1xuICAgICAgICAgIGlmICh2YWx1ZSkgc2VsZWN0ZWQucHVzaChpdGVtKTtlbHNlIHNlbGVjdGVkID0gc2VsZWN0ZWQuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgICByZXR1cm4gaVtrZXldICE9PSBpdGVtW2tleV07XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgX3RoaXMuJGVtaXQoJ2lucHV0Jywgc2VsZWN0ZWQpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3BzLCAnZXhwYW5kZWQnLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5leHBhbmRlZFtpdGVtW190aGlzLml0ZW1LZXldXTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiBzZXQodmFsdWUpIHtcbiAgICAgICAgICBpZiAoIV90aGlzLmV4cGFuZCkge1xuICAgICAgICAgICAgT2JqZWN0LmtleXMoX3RoaXMuZXhwYW5kZWQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICBfdGhpcy4kc2V0KF90aGlzLmV4cGFuZGVkLCBrZXksIGZhbHNlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfdGhpcy4kc2V0KF90aGlzLmV4cGFuZGVkLCBpdGVtW190aGlzLml0ZW1LZXldLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gcHJvcHM7XG4gICAgfSxcbiAgICBnZW5GaWx0ZXJlZEl0ZW1zOiBmdW5jdGlvbiBnZW5GaWx0ZXJlZEl0ZW1zKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciByb3dzID0gW107XG4gICAgICB0aGlzLmZpbHRlcmVkSXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgICAgdmFyIHByb3BzID0gX3RoaXMyLmNyZWF0ZVByb3BzKGl0ZW0sIGluZGV4KTtcbiAgICAgICAgdmFyIHJvdyA9IF90aGlzMi4kc2NvcGVkU2xvdHMuaXRlbXMgPyBfdGhpczIuJHNjb3BlZFNsb3RzLml0ZW1zKHByb3BzKSA6IFtdO1xuXG4gICAgICAgIHJvd3MucHVzaChfdGhpczIubmVlZHNUUihyb3cpID8gX3RoaXMyLmdlblRSKHJvdywge1xuICAgICAgICAgIGF0dHJzOiB7IGFjdGl2ZTogX3RoaXMyLmlzU2VsZWN0ZWQoaXRlbSkgfVxuICAgICAgICB9KSA6IHJvdyk7XG5cbiAgICAgICAgaWYgKF90aGlzMi4kc2NvcGVkU2xvdHMuZXhwYW5kKSB7XG4gICAgICAgICAgdmFyIGV4cGFuZFJvdyA9IF90aGlzMi5nZW5FeHBhbmRlZFJvdyhwcm9wcyk7XG4gICAgICAgICAgcm93cy5wdXNoKGV4cGFuZFJvdyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gcm93cztcbiAgICB9LFxuICAgIGdlbkVtcHR5Qm9keTogZnVuY3Rpb24gZ2VuRW1wdHlCb2R5KGNvbnRlbnQpIHtcbiAgICAgIHJldHVybiB0aGlzLmdlblRSKFt0aGlzLiRjcmVhdGVFbGVtZW50KCd0ZCcsIHtcbiAgICAgICAgJ2NsYXNzJzogJ3RleHQteHMtY2VudGVyJyxcbiAgICAgICAgYXR0cnM6IHsgY29sc3BhbjogJzEwMCUnIH1cbiAgICAgIH0sIGNvbnRlbnQpXSk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMzIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbWV0aG9kczoge1xuICAgIGdlblByZXZJY29uOiBmdW5jdGlvbiBnZW5QcmV2SWNvbigpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWJ0bicsIHtcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICBkaXNhYmxlZDogdGhpcy5jb21wdXRlZFBhZ2luYXRpb24ucGFnZSA9PT0gMSxcbiAgICAgICAgICBpY29uOiB0cnVlLFxuICAgICAgICAgIGZsYXQ6IHRydWUsXG4gICAgICAgICAgZGFyazogdGhpcy5kYXJrLFxuICAgICAgICAgIGxpZ2h0OiB0aGlzLmxpZ2h0XG4gICAgICAgIH0sXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkge1xuICAgICAgICAgICAgdmFyIHBhZ2UgPSBfdGhpcy5jb21wdXRlZFBhZ2luYXRpb24ucGFnZTtcbiAgICAgICAgICAgIF90aGlzLnVwZGF0ZVBhZ2luYXRpb24oeyBwYWdlOiBwYWdlIC0gMSB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgJ2FyaWEtbGFiZWwnOiAnUHJldmlvdXMgcGFnZScgLy8gVE9ETzogTG9jYWxpemF0aW9uXG4gICAgICAgIH1cbiAgICAgIH0sIFt0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWljb24nLCAnY2hldnJvbl9sZWZ0JyldKTtcbiAgICB9LFxuICAgIGdlbk5leHRJY29uOiBmdW5jdGlvbiBnZW5OZXh0SWNvbigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgcGFnaW5hdGlvbiA9IHRoaXMuY29tcHV0ZWRQYWdpbmF0aW9uO1xuICAgICAgdmFyIGRpc2FibGVkID0gcGFnaW5hdGlvbi5yb3dzUGVyUGFnZSA8IDAgfHwgcGFnaW5hdGlvbi5wYWdlICogcGFnaW5hdGlvbi5yb3dzUGVyUGFnZSA+PSB0aGlzLml0ZW1zTGVuZ3RoIHx8IHRoaXMucGFnZVN0b3AgPCAwO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndi1idG4nLCB7XG4gICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgZGlzYWJsZWQ6IGRpc2FibGVkLFxuICAgICAgICAgIGljb246IHRydWUsXG4gICAgICAgICAgZmxhdDogdHJ1ZSxcbiAgICAgICAgICBkYXJrOiB0aGlzLmRhcmssXG4gICAgICAgICAgbGlnaHQ6IHRoaXMubGlnaHRcbiAgICAgICAgfSxcbiAgICAgICAgb246IHtcbiAgICAgICAgICBjbGljazogZnVuY3Rpb24gY2xpY2soKSB7XG4gICAgICAgICAgICB2YXIgcGFnZSA9IF90aGlzMi5jb21wdXRlZFBhZ2luYXRpb24ucGFnZTtcbiAgICAgICAgICAgIF90aGlzMi51cGRhdGVQYWdpbmF0aW9uKHsgcGFnZTogcGFnZSArIDEgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhdHRyczoge1xuICAgICAgICAgICdhcmlhLWxhYmVsJzogJ05leHQgcGFnZScgLy8gVE9ETzogTG9jYWxpemF0aW9uXG4gICAgICAgIH1cbiAgICAgIH0sIFt0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWljb24nLCAnY2hldnJvbl9yaWdodCcpXSk7XG4gICAgfSxcbiAgICBnZW5TZWxlY3Q6IGZ1bmN0aW9uIGdlblNlbGVjdCgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgICAgICAnY2xhc3MnOiAnZGF0YXRhYmxlX19hY3Rpb25zX19zZWxlY3QnXG4gICAgICB9LCBbdGhpcy5yb3dzUGVyUGFnZVRleHQsIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3Ytc2VsZWN0Jywge1xuICAgICAgICBhdHRyczoge1xuICAgICAgICAgICdhcmlhLWxhYmVsJzogdGhpcy5yb3dzUGVyUGFnZVRleHRcbiAgICAgICAgfSxcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICBpdGVtczogdGhpcy5yb3dzUGVyUGFnZUl0ZW1zLFxuICAgICAgICAgIHZhbHVlOiB0aGlzLmNvbXB1dGVkUGFnaW5hdGlvbi5yb3dzUGVyUGFnZSxcbiAgICAgICAgICBoaWRlRGV0YWlsczogdHJ1ZSxcbiAgICAgICAgICBhdXRvOiB0cnVlLFxuICAgICAgICAgIG1pbldpZHRoOiAnNzVweCdcbiAgICAgICAgfSxcbiAgICAgICAgb246IHtcbiAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gaW5wdXQodmFsKSB7XG4gICAgICAgICAgICBfdGhpczMudXBkYXRlUGFnaW5hdGlvbih7XG4gICAgICAgICAgICAgIHBhZ2U6IDEsXG4gICAgICAgICAgICAgIHJvd3NQZXJQYWdlOiB2YWxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSldKTtcbiAgICB9LFxuICAgIGdlblBhZ2luYXRpb246IGZ1bmN0aW9uIGdlblBhZ2luYXRpb24oKSB7XG4gICAgICB2YXIgcGFnaW5hdGlvbiA9ICfigJMnO1xuXG4gICAgICBpZiAodGhpcy5pdGVtc0xlbmd0aCkge1xuICAgICAgICB2YXIgc3RvcCA9IHRoaXMuaXRlbXNMZW5ndGggPCB0aGlzLnBhZ2VTdG9wIHx8IHRoaXMucGFnZVN0b3AgPCAwID8gdGhpcy5pdGVtc0xlbmd0aCA6IHRoaXMucGFnZVN0b3A7XG5cbiAgICAgICAgcGFnaW5hdGlvbiA9IHRoaXMuJHNjb3BlZFNsb3RzLnBhZ2VUZXh0ID8gdGhpcy4kc2NvcGVkU2xvdHMucGFnZVRleHQoe1xuICAgICAgICAgIHBhZ2VTdGFydDogdGhpcy5wYWdlU3RhcnQgKyAxLFxuICAgICAgICAgIHBhZ2VTdG9wOiBzdG9wLFxuICAgICAgICAgIGl0ZW1zTGVuZ3RoOiB0aGlzLml0ZW1zTGVuZ3RoXG4gICAgICAgIH0pIDogdGhpcy5wYWdlU3RhcnQgKyAxICsgJy0nICsgc3RvcCArICcgb2YgJyArIHRoaXMuaXRlbXNMZW5ndGg7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgICdjbGFzcyc6ICdkYXRhdGFibGVfX2FjdGlvbnNfX3BhZ2luYXRpb24nXG4gICAgICB9LCBbcGFnaW5hdGlvbl0pO1xuICAgIH0sXG4gICAgZ2VuQWN0aW9uczogZnVuY3Rpb24gZ2VuQWN0aW9ucygpIHtcbiAgICAgIHJldHVybiBbdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgICAgICAnY2xhc3MnOiAnZGF0YXRhYmxlX19hY3Rpb25zJ1xuICAgICAgfSwgW3RoaXMucm93c1BlclBhZ2VJdGVtcy5sZW5ndGggPiAxID8gdGhpcy5nZW5TZWxlY3QoKSA6IG51bGwsIHRoaXMuZ2VuUGFnaW5hdGlvbigpLCB0aGlzLmdlblByZXZJY29uKCksIHRoaXMuZ2VuTmV4dEljb24oKV0pXTtcbiAgICB9LFxuICAgIGdlblRGb290OiBmdW5jdGlvbiBnZW5URm9vdCgpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuXG4gICAgICBpZiAodGhpcy4kc2xvdHMuZm9vdGVyKSB7XG4gICAgICAgIHZhciBmb290ZXIgPSB0aGlzLiRzbG90cy5mb290ZXI7XG4gICAgICAgIHZhciByb3cgPSB0aGlzLm5lZWRzVFIoZm9vdGVyKSA/IHRoaXMuZ2VuVFIoZm9vdGVyKSA6IGZvb3RlcjtcblxuICAgICAgICBjaGlsZHJlbi5wdXNoKHJvdyk7XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy5oaWRlQWN0aW9ucykge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuVFIoW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RkJywge1xuICAgICAgICAgIGF0dHJzOiB7IGNvbHNwYW46ICcxMDAlJyB9XG4gICAgICAgIH0sIHRoaXMuZ2VuQWN0aW9ucygpKV0pKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFjaGlsZHJlbi5sZW5ndGgpIHJldHVybiBudWxsO1xuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3Rmb290JywgY2hpbGRyZW4pO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTMzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG1ldGhvZHM6IHtcbiAgICBnZW5UUHJvZ3Jlc3M6IGZ1bmN0aW9uIGdlblRQcm9ncmVzcygpIHtcbiAgICAgIHZhciBjb2wgPSB0aGlzLiRjcmVhdGVFbGVtZW50KCd0aCcsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6ICdjb2x1bW4nLFxuICAgICAgICBhdHRyczoge1xuICAgICAgICAgIGNvbHNwYW46ICcxMDAlJ1xuICAgICAgICB9XG4gICAgICB9LCBbdGhpcy5nZW5Qcm9ncmVzcygpXSk7XG5cbiAgICAgIHJldHVybiB0aGlzLmdlblRSKFtjb2xdLCB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAnZGF0YXRhYmxlX19wcm9ncmVzcydcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTM0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxMzUpO1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtZWRpdC1kaWFsb2cnLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzQWN0aXZlOiBmYWxzZSxcbiAgICAgIGlzU2F2aW5nOiBmYWxzZVxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGNhbmNlbFRleHQ6IHtcbiAgICAgIGRlZmF1bHQ6ICdDYW5jZWwnXG4gICAgfSxcbiAgICBsYXJnZTogQm9vbGVhbixcbiAgICBsYXp5OiBCb29sZWFuLFxuICAgIHNhdmVUZXh0OiB7XG4gICAgICBkZWZhdWx0OiAnU2F2ZSdcbiAgICB9LFxuICAgIHRyYW5zaXRpb246IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdzbGlkZS14LXJldmVyc2UtdHJhbnNpdGlvbidcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUodmFsKSB7XG4gICAgICB2YWwgJiYgdGhpcy4kZW1pdCgnb3BlbicpICYmIHNldFRpbWVvdXQodGhpcy5mb2N1cywgNTApOyAvLyBHaXZlIERPTSB0aW1lIHRvIHBhaW50XG5cbiAgICAgIGlmICghdmFsKSB7XG4gICAgICAgICF0aGlzLmlzU2F2aW5nICYmIHRoaXMuJGVtaXQoJ2NhbmNlbCcpO1xuICAgICAgICB0aGlzLmlzU2F2aW5nICYmIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7XG4gICAgICAgIHRoaXMuaXNTYXZpbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGNhbmNlbDogZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgICAgdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgIH0sXG4gICAgZm9jdXM6IGZ1bmN0aW9uIGZvY3VzKCkge1xuICAgICAgdmFyIGlucHV0ID0gdGhpcy4kcmVmcy5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XG4gICAgICBpbnB1dCAmJiBpbnB1dC5mb2N1cygpO1xuICAgIH0sXG4gICAgc2F2ZTogZnVuY3Rpb24gc2F2ZSgpIHtcbiAgICAgIHRoaXMuaXNTYXZpbmcgPSB0cnVlO1xuICAgICAgdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnc2F2ZScpO1xuICAgIH0sXG4gICAgZ2VuQnV0dG9uOiBmdW5jdGlvbiBnZW5CdXR0b24oZm4sIHRleHQpIHtcbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWJ0bicsIHtcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICBmbGF0OiB0cnVlLFxuICAgICAgICAgIGNvbG9yOiAncHJpbWFyeScsXG4gICAgICAgICAgbGlnaHQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgb246IHsgY2xpY2s6IGZuIH1cbiAgICAgIH0sIHRleHQpO1xuICAgIH0sXG4gICAgZ2VuQWN0aW9uczogZnVuY3Rpb24gZ2VuQWN0aW9ucygpIHtcbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgICdjbGFzcyc6ICdzbWFsbC1kaWFsb2dfX2FjdGlvbnMnXG4gICAgICB9LCBbdGhpcy5nZW5CdXR0b24odGhpcy5jYW5jZWwsIHRoaXMuY2FuY2VsVGV4dCksIHRoaXMuZ2VuQnV0dG9uKHRoaXMuc2F2ZSwgdGhpcy5zYXZlVGV4dCldKTtcbiAgICB9LFxuICAgIGdlbkNvbnRlbnQ6IGZ1bmN0aW9uIGdlbkNvbnRlbnQoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgICAgICBvbjoge1xuICAgICAgICAgIGtleWRvd246IGZ1bmN0aW9uIGtleWRvd24oZSkge1xuICAgICAgICAgICAgZS5rZXlDb2RlID09PSAyNyAmJiBfdGhpcy5jYW5jZWwoKTtcbiAgICAgICAgICAgIGUua2V5Q29kZSA9PT0gMTMgJiYgX3RoaXMuc2F2ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcmVmOiAnY29udGVudCdcbiAgICAgIH0sIFt0aGlzLiRzbG90cy5pbnB1dF0pO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICByZXR1cm4gaCgndi1tZW51Jywge1xuICAgICAgJ2NsYXNzJzogJ3NtYWxsLWRpYWxvZycsXG4gICAgICBwcm9wczoge1xuICAgICAgICBjb250ZW50Q2xhc3M6ICdzbWFsbC1kaWFsb2dfX2NvbnRlbnQnLFxuICAgICAgICB0cmFuc2l0aW9uOiB0aGlzLnRyYW5zaXRpb24sXG4gICAgICAgIG9yaWdpbjogJ3RvcCByaWdodCcsXG4gICAgICAgIHJpZ2h0OiB0cnVlLFxuICAgICAgICB2YWx1ZTogdGhpcy5pc0FjdGl2ZSxcbiAgICAgICAgY2xvc2VPbkNvbnRlbnRDbGljazogZmFsc2UsXG4gICAgICAgIGxhenk6IHRoaXMubGF6eVxuICAgICAgfSxcbiAgICAgIG9uOiB7XG4gICAgICAgIGlucHV0OiBmdW5jdGlvbiBpbnB1dCh2YWwpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLmlzQWN0aXZlID0gdmFsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwgW2goJ2EnLCB7XG4gICAgICBzbG90OiAnYWN0aXZhdG9yJ1xuICAgIH0sIHRoaXMuJHNsb3RzLmRlZmF1bHQpLCB0aGlzLmdlbkNvbnRlbnQoKSwgdGhpcy5sYXJnZSA/IHRoaXMuZ2VuQWN0aW9ucygpIDogbnVsbF0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxMzUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAxMzYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRGF0ZVBpY2tlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMzcpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZEYXRlUGlja2VyX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRGF0ZVBpY2tlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkRhdGVQaWNrZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkRhdGVQaWNrZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogMTM3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2RhdGVfeWVhcnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTM5KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc19kYXRlX3RpdGxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE0MCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19taXhpbnNfZGF0ZV9oZWFkZXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTQxKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX21peGluc19kYXRlX3RhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE0Mik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19taXhpbnNfbW9udGhfdGFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTQzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX21peGluc19waWNrZXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNDUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fVkJ0bl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19WQ2FyZF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19WSWNvbl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX19kaXJlY3RpdmVzX3RvdWNoX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcpO1xudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDQ0KTtcbl9fd2VicGFja19yZXF1aXJlX18oMTM4KTtcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbnZhciBwYWQgPSBmdW5jdGlvbiBwYWQobikge1xuICByZXR1cm4gbiAqIDEgPCAxMCA/ICcwJyArIG4gKiAxIDogJycgKyBuO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWRhdGUtcGlja2VyJyxcblxuICBjb21wb25lbnRzOiB7XG4gICAgVkJ0bjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19WQnRuX19bXCJhXCIgLyogZGVmYXVsdCAqL10sXG4gICAgVkNhcmQ6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fVkNhcmRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSxcbiAgICBWSWNvbjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19WSWNvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXG4gIH0sXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19taXhpbnNfcGlja2VyX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2RhdGVfeWVhcnNfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfZGF0ZV90aXRsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc19kYXRlX2hlYWRlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX21peGluc19kYXRlX3RhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fbWl4aW5zX21vbnRoX3RhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRpcmVjdGl2ZXM6IHsgVG91Y2g6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX2RpcmVjdGl2ZXNfdG91Y2hfX1tcImFcIiAvKiBkZWZhdWx0ICovXSB9LFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjdGl2ZVBpY2tlcjogdGhpcy50eXBlLnRvVXBwZXJDYXNlKCksXG4gICAgICBjdXJyZW50RGF5OiBudWxsLFxuICAgICAgY3VycmVudE1vbnRoOiBudWxsLFxuICAgICAgY3VycmVudFllYXI6IG51bGwsXG4gICAgICBpc1JldmVyc2luZzogZmFsc2UsXG4gICAgICBvcmlnaW5hbERhdGU6IHRoaXMudmFsdWUsXG4gICAgICAvLyB0YWJsZURhdGUgaXMgYSBzdHJpbmcgaW4gJ1lZWVknIC8gJ1lZWVktTScgZm9ybWF0IChsZWFkaW5nIHplcm8gZm9yIG1vbnRoIGlzIG5vdCByZXF1aXJlZClcbiAgICAgIHRhYmxlRGF0ZTogdGhpcy50eXBlID09PSAnbW9udGgnID8gJycgKyBub3cuZ2V0RnVsbFllYXIoKSA6IG5vdy5nZXRGdWxsWWVhcigpICsgJy0nICsgKG5vdy5nZXRNb250aCgpICsgMSlcbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICBhbGxvd2VkRGF0ZXM6IHtcbiAgICAgIHR5cGU6IFtBcnJheSwgT2JqZWN0LCBGdW5jdGlvbl0sXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfSxcbiAgICAvLyBGdW5jdGlvbiBmb3JtYXR0aW5nIHRoZSBkYXkgaW4gZGF0ZSBwaWNrZXIgdGFibGVcbiAgICBkYXlGb3JtYXQ6IHtcbiAgICAgIHR5cGU6IEZ1bmN0aW9uLFxuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH0sXG4gICAgZmlyc3REYXlPZldlZWs6IHtcbiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sXG4gICAgICBkZWZhdWx0OiAwXG4gICAgfSxcbiAgICAvLyBGdW5jdGlvbiBmb3JtYXR0aW5nIHRoZSB0YWJsZURhdGUgaW4gdGhlIGRheS9tb250aCB0YWJsZSBoZWFkZXJcbiAgICBoZWFkZXJEYXRlRm9ybWF0OiB7XG4gICAgICB0eXBlOiBGdW5jdGlvbixcbiAgICAgIGRlZmF1bHQ6IG51bGxcbiAgICB9LFxuICAgIGxvY2FsZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2VuLXVzJ1xuICAgIH0sXG4gICAgLy8gRnVuY3Rpb24gZm9ybWF0dGluZyBtb250aCBpbiB0aGUgbW9udGhzIHRhYmxlXG4gICAgbW9udGhGb3JtYXQ6IHtcbiAgICAgIHR5cGU6IEZ1bmN0aW9uLFxuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH0sXG4gICAgLy8gRnVuY3Rpb24gZm9ybWF0dGluZyBjdXJyZW50bHkgc2VsZWN0ZWQgZGF0ZSBpbiB0aGUgcGlja2VyIHRpdGxlXG4gICAgdGl0bGVEYXRlRm9ybWF0OiB7XG4gICAgICB0eXBlOiBGdW5jdGlvbixcbiAgICAgIGRlZmF1bHQ6IG51bGxcbiAgICB9LFxuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdkYXRlJyxcbiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIFsnZGF0ZScsICdtb250aCcgLyosICd5ZWFyJyovXS5pbmNsdWRlcyh0eXBlKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHZhbHVlOiBTdHJpbmcsXG4gICAgLy8gRnVuY3Rpb24gZm9ybWF0dGluZyB0aGUgeWVhciBpbiB0YWJsZSBoZWFkZXIgYW5kIHBpY2t1cCB0aXRsZVxuICAgIHllYXJGb3JtYXQ6IHtcbiAgICAgIHR5cGU6IEZ1bmN0aW9uLFxuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH0sXG4gICAgeWVhckljb246IFN0cmluZ1xuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgd2Vla0RheXM6IGZ1bmN0aW9uIHdlZWtEYXlzKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIGZpcnN0ID0gcGFyc2VJbnQodGhpcy5maXJzdERheU9mV2VlaywgMTApO1xuXG4gICAgICByZXR1cm4gdGhpcy5mb3JtYXR0ZXJzLndlZWtEYXkgPyBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImNcIiAvKiBjcmVhdGVSYW5nZSAqL10pKDcpLm1hcChmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gX3RoaXMuZm9ybWF0dGVycy53ZWVrRGF5KCcyMDE3LTAxLScgKyAoZmlyc3QgKyBpICsgMTUpKTtcbiAgICAgIH0pIC8vIDIwMTctMDEtMTUgaXMgU3VuZGF5XG4gICAgICA6IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiY1wiIC8qIGNyZWF0ZVJhbmdlICovXSkoNykubWFwKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgIHJldHVybiBbJ1MnLCAnTScsICdUJywgJ1cnLCAnVCcsICdGJywgJ1MnXVsoaSArIGZpcnN0KSAlIDddO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBmaXJzdEFsbG93ZWREYXRlOiBmdW5jdGlvbiBmaXJzdEFsbG93ZWREYXRlKCkge1xuICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgICB2YXIgeWVhciA9IG5vdy5nZXRGdWxsWWVhcigpO1xuICAgICAgdmFyIG1vbnRoID0gbm93LmdldE1vbnRoKCk7XG5cbiAgICAgIGlmICh0aGlzLmFsbG93ZWREYXRlcykge1xuICAgICAgICBmb3IgKHZhciBkYXRlID0gbm93LmdldERhdGUoKTsgZGF0ZSA8PSAzMTsgZGF0ZSsrKSB7XG4gICAgICAgICAgdmFyIGRhdGVTdHJpbmcgPSB5ZWFyICsgJy0nICsgKG1vbnRoICsgMSkgKyAnLScgKyBkYXRlO1xuICAgICAgICAgIGlmIChpc05hTihuZXcgRGF0ZShkYXRlU3RyaW5nKS5nZXREYXRlKCkpKSBicmVhaztcblxuICAgICAgICAgIHZhciBzYW5pdGl6ZWREYXRlU3RyaW5nID0gdGhpcy5zYW5pdGl6ZURhdGVTdHJpbmcoZGF0ZVN0cmluZywgJ2RhdGUnKTtcbiAgICAgICAgICBpZiAodGhpcy5pc0FsbG93ZWQoc2FuaXRpemVkRGF0ZVN0cmluZykpIHtcbiAgICAgICAgICAgIHJldHVybiBzYW5pdGl6ZWREYXRlU3RyaW5nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5zYW5pdGl6ZURhdGVTdHJpbmcoeWVhciArICctJyArIChtb250aCArIDEpICsgJy0nICsgbm93LmdldERhdGUoKSwgJ2RhdGUnKTtcbiAgICB9LFxuICAgIGZpcnN0QWxsb3dlZE1vbnRoOiBmdW5jdGlvbiBmaXJzdEFsbG93ZWRNb250aCgpIHtcbiAgICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgdmFyIHllYXIgPSBub3cuZ2V0RnVsbFllYXIoKTtcblxuICAgICAgaWYgKHRoaXMuYWxsb3dlZERhdGVzKSB7XG4gICAgICAgIGZvciAodmFyIG1vbnRoID0gbm93LmdldE1vbnRoKCk7IG1vbnRoIDwgMTI7IG1vbnRoKyspIHtcbiAgICAgICAgICB2YXIgZGF0ZVN0cmluZyA9IHllYXIgKyAnLScgKyAobW9udGggKyAxKTtcbiAgICAgICAgICB2YXIgc2FuaXRpemVkRGF0ZVN0cmluZyA9IHRoaXMuc2FuaXRpemVEYXRlU3RyaW5nKGRhdGVTdHJpbmcsICdtb250aCcpO1xuICAgICAgICAgIGlmICh0aGlzLmlzQWxsb3dlZChzYW5pdGl6ZWREYXRlU3RyaW5nKSkge1xuICAgICAgICAgICAgcmV0dXJuIHNhbml0aXplZERhdGVTdHJpbmc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnNhbml0aXplRGF0ZVN0cmluZyh5ZWFyICsgJy0nICsgKG5vdy5nZXRNb250aCgpICsgMSksICdtb250aCcpO1xuICAgIH0sXG5cbiAgICAvLyBpbnB1dERhdGUgTVVTVCBiZSBhIHN0cmluZyBpbiBJU08gODYwMSBmb3JtYXQgKGluY2x1ZGluZyBsZWFkaW5nIHplcm8gZm9yIG1vbnRoL2RheSlcbiAgICAvLyBZWVlZLU1NIGZvciBtb250aCBwaWNrZXJcbiAgICAvLyBZWVlZLU1NLUREIGZvciBkYXRlIHBpY2tlclxuICAgIGlucHV0RGF0ZToge1xuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIGlmICh0aGlzLnZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuc2FuaXRpemVEYXRlU3RyaW5nKHRoaXMudmFsdWUsIHRoaXMudHlwZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy50eXBlID09PSAnbW9udGgnID8gdGhpcy5maXJzdEFsbG93ZWRNb250aCA6IHRoaXMuZmlyc3RBbGxvd2VkRGF0ZTtcbiAgICAgIH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWx1ZSkge1xuICAgICAgICB2YXIgZGF0ZSA9IHZhbHVlID09IG51bGwgPyB0aGlzLm9yaWdpbmFsRGF0ZSA6IHRoaXMuc2FuaXRpemVEYXRlU3RyaW5nKHZhbHVlLCB0aGlzLnR5cGUpO1xuICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIGRhdGUpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZGF5OiBmdW5jdGlvbiBkYXkoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pbnB1dERhdGUuc3BsaXQoJy0nKVsyXSAqIDE7XG4gICAgfSxcbiAgICBtb250aDogZnVuY3Rpb24gbW9udGgoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pbnB1dERhdGUuc3BsaXQoJy0nKVsxXSAtIDE7XG4gICAgfSxcbiAgICB5ZWFyOiBmdW5jdGlvbiB5ZWFyKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5wdXREYXRlLnNwbGl0KCctJylbMF0gKiAxO1xuICAgIH0sXG4gICAgdGFibGVNb250aDogZnVuY3Rpb24gdGFibGVNb250aCgpIHtcbiAgICAgIHJldHVybiB0aGlzLnRhYmxlRGF0ZS5zcGxpdCgnLScpWzFdIC0gMTtcbiAgICB9LFxuICAgIHRhYmxlWWVhcjogZnVuY3Rpb24gdGFibGVZZWFyKCkge1xuICAgICAgcmV0dXJuIHRoaXMudGFibGVEYXRlLnNwbGl0KCctJylbMF0gKiAxO1xuICAgIH0sXG4gICAgY29tcHV0ZWRUcmFuc2l0aW9uOiBmdW5jdGlvbiBjb21wdXRlZFRyYW5zaXRpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5pc1JldmVyc2luZyA/ICd0YWItcmV2ZXJzZS10cmFuc2l0aW9uJyA6ICd0YWItdHJhbnNpdGlvbic7XG4gICAgfSxcbiAgICBmb3JtYXR0ZXJzOiBmdW5jdGlvbiBmb3JtYXR0ZXJzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGF5OiB0aGlzLmRheUZvcm1hdCB8fCB0aGlzLmNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlcih0aGlzLmxvY2FsZSwgeyBkYXk6ICdudW1lcmljJywgdGltZVpvbmU6ICdVVEMnIH0sIHsgc3RhcnQ6IDgsIGxlbmd0aDogMiB9KSxcbiAgICAgICAgaGVhZGVyRGF0ZTogdGhpcy5oZWFkZXJEYXRlRm9ybWF0IHx8IHRoaXMuY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyKHRoaXMubG9jYWxlLCB7IG1vbnRoOiAnbG9uZycsIHllYXI6ICdudW1lcmljJywgdGltZVpvbmU6ICdVVEMnIH0sIHsgbGVuZ3RoOiA3IH0pLFxuICAgICAgICBtb250aDogdGhpcy5tb250aEZvcm1hdCB8fCB0aGlzLmNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlcih0aGlzLmxvY2FsZSwgeyBtb250aDogJ3Nob3J0JywgdGltZVpvbmU6ICdVVEMnIH0sIHsgc3RhcnQ6IDUsIGxlbmd0aDogMiB9KSxcbiAgICAgICAgeWVhcjogdGhpcy55ZWFyRm9ybWF0IHx8IHRoaXMuY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyKHRoaXMubG9jYWxlLCB7IHllYXI6ICdudW1lcmljJywgdGltZVpvbmU6ICdVVEMnIH0sIHsgbGVuZ3RoOiA0IH0pLFxuICAgICAgICB3ZWVrRGF5OiB0aGlzLmNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlcih0aGlzLmxvY2FsZSwgeyB3ZWVrZGF5OiAnbmFycm93JywgdGltZVpvbmU6ICdVVEMnIH0pLFxuICAgICAgICB0aXRsZURhdGU6IHRoaXMudGl0bGVEYXRlRm9ybWF0IHx8IHRoaXMuZGVmYXVsdFRpdGxlRGF0ZUZvcm1hdHRlclxuICAgICAgfTtcbiAgICB9LFxuICAgIGRlZmF1bHRUaXRsZURhdGVGb3JtYXR0ZXI6IGZ1bmN0aW9uIGRlZmF1bHRUaXRsZURhdGVGb3JtYXR0ZXIoKSB7XG4gICAgICB2YXIgdGl0bGVGb3JtYXRzID0ge1xuICAgICAgICB5ZWFyOiB7IHllYXI6ICdudW1lcmljJywgdGltZVpvbmU6ICdVVEMnIH0sXG4gICAgICAgIG1vbnRoOiB7IG1vbnRoOiAnbG9uZycsIHRpbWVab25lOiAnVVRDJyB9LFxuICAgICAgICBkYXRlOiB7IHdlZWtkYXk6ICdzaG9ydCcsIG1vbnRoOiAnc2hvcnQnLCBkYXk6ICdudW1lcmljJywgdGltZVpvbmU6ICdVVEMnIH1cbiAgICAgIH07XG5cbiAgICAgIHZhciB0aXRsZURhdGVGb3JtYXR0ZXIgPSB0aGlzLmNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlcih0aGlzLmxvY2FsZSwgdGl0bGVGb3JtYXRzW3RoaXMudHlwZV0sIHtcbiAgICAgICAgc3RhcnQ6IDAsXG4gICAgICAgIGxlbmd0aDogeyBkYXRlOiAxMCwgbW9udGg6IDcsIHllYXI6IDQgfVt0aGlzLnR5cGVdXG4gICAgICB9KTtcblxuICAgICAgdmFyIGxhbmRzY2FwZUZvcm1hdHRlciA9IGZ1bmN0aW9uIGxhbmRzY2FwZUZvcm1hdHRlcihkYXRlKSB7XG4gICAgICAgIHJldHVybiB0aXRsZURhdGVGb3JtYXR0ZXIoZGF0ZSkucmVwbGFjZSgvKFteXFxkXFxzXSkoW1xcZF0pL2csIGZ1bmN0aW9uIChtYXRjaCwgbm9uRGlnaXQsIGRpZ2l0KSB7XG4gICAgICAgICAgcmV0dXJuIG5vbkRpZ2l0ICsgJyAnICsgZGlnaXQ7XG4gICAgICAgIH0pLnJlcGxhY2UoJywgJywgJyw8YnI+Jyk7XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gdGhpcy5sYW5kc2NhcGUgPyBsYW5kc2NhcGVGb3JtYXR0ZXIgOiB0aXRsZURhdGVGb3JtYXR0ZXI7XG4gICAgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgYWN0aXZlUGlja2VyOiBmdW5jdGlvbiBhY3RpdmVQaWNrZXIodmFsLCBwcmV2KSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgaWYgKHZhbCAhPT0gJ1lFQVInKSByZXR1cm47XG5cbiAgICAgIC8vIFRoYXQncyBhIHF1aXJrLCBzZXR0aW5nIHRpbWVvdXQgc3RvcHBlZCB3b3JraW5nIGFmdGVyIGZpeGluZyAjMTY0OVxuICAgICAgLy8gSXQgd29ya2VkIGJ1dCBmb3IgdGltZW91dHMgc2lnbmlmaWNhbnRseSBsb25nZXIgdGhhbiB0aGUgdHJhbnNpdGlvbiBkdXJhdGlvblxuICAgICAgdmFyIGludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoX3RoaXMyLiRyZWZzLnllYXJzKSB7XG4gICAgICAgICAgX3RoaXMyLiRyZWZzLnllYXJzLnNjcm9sbFRvcCA9IF90aGlzMi4kcmVmcy55ZWFycy5zY3JvbGxIZWlnaHQgLyAyIC0gMTI1O1xuICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuICAgICAgICB9XG4gICAgICB9LCAxMDApO1xuICAgIH0sXG4gICAgdGFibGVEYXRlOiBmdW5jdGlvbiB0YWJsZURhdGUodmFsLCBwcmV2KSB7XG4gICAgICAvLyBNYWtlIGEgSVNPIDg2MDEgc3RyaW5ncyBmcm9tIHZhbCBhbmQgcHJldiBmb3IgY29tcGFyaXNpb24sIG90aGVyd2lzZSBpdCB3aWxsIGluY29ycmVjdGx5XG4gICAgICAvLyBjb21wYXJlIGZvciBleGFtcGxlICcyMDAwLTknIGFuZCAnMjAwMC0xMCdcbiAgICAgIHZhciBzYW5pdGl6ZVR5cGUgPSB0aGlzLnR5cGUgPT09ICdtb250aCcgPyAneWVhcicgOiAnbW9udGgnO1xuICAgICAgdGhpcy5pc1JldmVyc2luZyA9IHRoaXMuc2FuaXRpemVEYXRlU3RyaW5nKHZhbCwgc2FuaXRpemVUeXBlKSA8IHRoaXMuc2FuaXRpemVEYXRlU3RyaW5nKHByZXYsIHNhbml0aXplVHlwZSk7XG4gICAgfSxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUodmFsKSB7XG4gICAgICBpZiAodmFsKSB7XG4gICAgICAgIHRoaXMudGFibGVEYXRlID0gdGhpcy50eXBlID09PSAnbW9udGgnID8gJycgKyB0aGlzLnllYXIgOiB0aGlzLnllYXIgKyAnLScgKyAodGhpcy5tb250aCArIDEpO1xuICAgICAgfVxuICAgIH0sXG4gICAgdHlwZTogZnVuY3Rpb24gdHlwZSh2YWwpIHtcbiAgICAgIGlmICh2YWwgPT09ICdtb250aCcgJiYgdGhpcy5hY3RpdmVQaWNrZXIgPT09ICdEQVRFJykge1xuICAgICAgICB0aGlzLmFjdGl2ZVBpY2tlciA9ICdNT05USCc7XG4gICAgICB9IGVsc2UgaWYgKHZhbCA9PT0gJ3llYXInKSB7XG4gICAgICAgIHRoaXMuYWN0aXZlUGlja2VyID0gJ1lFQVInO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgc2F2ZTogZnVuY3Rpb24gc2F2ZSgpIHtcbiAgICAgIGlmICh0aGlzLm9yaWdpbmFsRGF0ZSkge1xuICAgICAgICB0aGlzLm9yaWdpbmFsRGF0ZSA9IHRoaXMudmFsdWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm9yaWdpbmFsRGF0ZSA9IHRoaXMuaW5wdXREYXRlO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy4kcGFyZW50ICYmIHRoaXMuJHBhcmVudC5pc0FjdGl2ZSkgdGhpcy4kcGFyZW50LmlzQWN0aXZlID0gZmFsc2U7XG4gICAgfSxcbiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbCgpIHtcbiAgICAgIHRoaXMuaW5wdXREYXRlID0gdGhpcy5vcmlnaW5hbERhdGU7XG4gICAgICBpZiAodGhpcy4kcGFyZW50ICYmIHRoaXMuJHBhcmVudC5pc0FjdGl2ZSkgdGhpcy4kcGFyZW50LmlzQWN0aXZlID0gZmFsc2U7XG4gICAgfSxcbiAgICBpc0FsbG93ZWQ6IGZ1bmN0aW9uIGlzQWxsb3dlZChkYXRlKSB7XG4gICAgICBpZiAoIXRoaXMuYWxsb3dlZERhdGVzKSByZXR1cm4gdHJ1ZTtcblxuICAgICAgLy8gZGF0ZSBwYXJhbWV0ZXIgbXVzdCBiZSBpbiBJU08gODYwMSBmb3JtYXQgd2l0aCBsZWFkaW5nIHplcm9cbiAgICAgIC8vIElmIGFsbG93ZWREYXRlcyBpcyBhbiBhcnJheSBpdHMgdmFsdWVzIG11c3QgYmUgaW4gSVNPIDg2MDEgZm9ybWF0IHdpdGggbGVhZGluZyB6ZXJvXG4gICAgICAvLyBJZiBhbGxvd2VkRGF0ZXMgaXMgb24gb2JqZWN0IGl0cyBtaW4vbWF4IHByb3BlcnRpZXMgbXVzdCBiZSBpbiBJU08gODYwMSB3aXRoIGxlYWRpbmcgemVyb1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGhpcy5hbGxvd2VkRGF0ZXMpKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFsbG93ZWREYXRlcy5pbmRleE9mKGRhdGUpID4gLTE7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuYWxsb3dlZERhdGVzIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWxsb3dlZERhdGVzKGRhdGUpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmFsbG93ZWREYXRlcyBpbnN0YW5jZW9mIE9iamVjdCkge1xuICAgICAgICB2YXIgbWluID0gdGhpcy5hbGxvd2VkRGF0ZXMubWluO1xuICAgICAgICB2YXIgbWF4ID0gdGhpcy5hbGxvd2VkRGF0ZXMubWF4O1xuICAgICAgICByZXR1cm4gKCFtaW4gfHwgbWluIDw9IGRhdGUpICYmICghbWF4IHx8IG1heCA+PSBkYXRlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgICBnZW5UYWJsZVRvdWNoOiBmdW5jdGlvbiBnZW5UYWJsZVRvdWNoKHRvdWNoQ2FsbGJhY2spIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6ICd0b3VjaCcsXG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgbGVmdDogZnVuY3Rpb24gbGVmdChlKSB7XG4gICAgICAgICAgICByZXR1cm4gZS5vZmZzZXRYIDwgLTE1ICYmIHRvdWNoQ2FsbGJhY2soMSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICByaWdodDogZnVuY3Rpb24gcmlnaHQoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGUub2Zmc2V0WCA+IDE1ICYmIHRvdWNoQ2FsbGJhY2soLTEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9LFxuICAgIGdlblRhYmxlOiBmdW5jdGlvbiBnZW5UYWJsZSh0YWJsZUNoaWxkcmVuLCB0b3VjaENhbGxiYWNrKSB7XG4gICAgICB2YXIgd2hlZWwgPSB0aGlzLmFjdGl2ZVBpY2tlciA9PT0gJ01PTlRIJyA/IHRoaXMubW9udGhXaGVlbFNjcm9sbCA6IHRoaXMuZGF0ZVdoZWVsU2Nyb2xsO1xuICAgICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAncGlja2VyLS1kYXRlX190YWJsZScsXG4gICAgICAgICdjbGFzcyc6IHtcbiAgICAgICAgICAncGlja2VyLS1tb250aF9fdGFibGUnOiB0aGlzLmFjdGl2ZVBpY2tlciA9PT0gJ01PTlRIJ1xuICAgICAgICB9LFxuICAgICAgICBvbjogdGhpcy5zY3JvbGxhYmxlID8geyB3aGVlbDogd2hlZWwgfSA6IHVuZGVmaW5lZCxcbiAgICAgICAgZGlyZWN0aXZlczogW3RoaXMuZ2VuVGFibGVUb3VjaCh0b3VjaENhbGxiYWNrKV1cbiAgICAgIH07XG5cbiAgICAgIHZhciB0YWJsZSA9IHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RhYmxlJywge1xuICAgICAgICBrZXk6IHRoaXMuYWN0aXZlUGlja2VyID09PSAnTU9OVEgnID8gdGhpcy50YWJsZVllYXIgOiB0aGlzLnRhYmxlTW9udGhcbiAgICAgIH0sIHRhYmxlQ2hpbGRyZW4pO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywgb3B0aW9ucywgW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RyYW5zaXRpb24nLCB7XG4gICAgICAgIHByb3BzOiB7IG5hbWU6IHRoaXMuY29tcHV0ZWRUcmFuc2l0aW9uIH1cbiAgICAgIH0sIFt0YWJsZV0pXSk7XG4gICAgfSxcbiAgICBnZW5QaWNrZXJCb2R5OiBmdW5jdGlvbiBnZW5QaWNrZXJCb2R5KGgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgcGlja2VyQm9keUNoaWxkcmVuID0gW107XG4gICAgICBpZiAodGhpcy5hY3RpdmVQaWNrZXIgPT09ICdEQVRFJykge1xuICAgICAgICBwaWNrZXJCb2R5Q2hpbGRyZW4ucHVzaChoKCdkaXYnLCB7IHN0YXRpY0NsYXNzOiAncGlja2VyLS1kYXRlX19oZWFkZXInIH0sIFt0aGlzLmdlblNlbGVjdG9yKCldKSk7XG4gICAgICAgIHBpY2tlckJvZHlDaGlsZHJlbi5wdXNoKHRoaXMuZ2VuVGFibGUoW3RoaXMuZGF0ZUdlblRIZWFkKCksIHRoaXMuZGF0ZUdlblRCb2R5KCldLCBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMzLnVwZGF0ZVRhYmxlTW9udGgoX3RoaXMzLnRhYmxlTW9udGggKyB2YWx1ZSk7XG4gICAgICAgIH0pKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVQaWNrZXIgPT09ICdNT05USCcpIHtcbiAgICAgICAgcGlja2VyQm9keUNoaWxkcmVuLnB1c2goaCgnZGl2JywgeyBzdGF0aWNDbGFzczogJ3BpY2tlci0tZGF0ZV9faGVhZGVyJyB9LCBbdGhpcy5nZW5TZWxlY3RvcigpXSkpO1xuICAgICAgICBwaWNrZXJCb2R5Q2hpbGRyZW4ucHVzaCh0aGlzLmdlblRhYmxlKFt0aGlzLm1vbnRoR2VuVEJvZHkoKV0sIGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBfdGhpczMudGFibGVEYXRlID0gJycgKyAoX3RoaXMzLnRhYmxlWWVhciArIHZhbHVlKTtcbiAgICAgICAgfSkpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZVBpY2tlciA9PT0gJ1lFQVInKSB7XG4gICAgICAgIHBpY2tlckJvZHlDaGlsZHJlbi5wdXNoKHRoaXMuZ2VuWWVhcnMoKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwaWNrZXJCb2R5Q2hpbGRyZW47XG4gICAgfSxcbiAgICBjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXI6IGZ1bmN0aW9uIGNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlcihsb2NhbGUsIG9wdGlvbnMpIHtcbiAgICAgIHZhciBfcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7IHN0YXJ0OiAwLCBsZW5ndGg6IDAgfSxcbiAgICAgICAgICBzdGFydCA9IF9yZWYuc3RhcnQsXG4gICAgICAgICAgbGVuZ3RoID0gX3JlZi5sZW5ndGg7XG5cbiAgICAgIHZhciBtYWtlSXNvU3RyaW5nID0gZnVuY3Rpb24gbWFrZUlzb1N0cmluZyhkYXRlU3RyaW5nKSB7XG4gICAgICAgIHZhciBfZGF0ZVN0cmluZyR0cmltJHNwbGkgPSBkYXRlU3RyaW5nLnRyaW0oKS5zcGxpdCgnICcpWzBdLnNwbGl0KCctJyksXG4gICAgICAgICAgICBfZGF0ZVN0cmluZyR0cmltJHNwbGkyID0gX3NsaWNlZFRvQXJyYXkoX2RhdGVTdHJpbmckdHJpbSRzcGxpLCAzKSxcbiAgICAgICAgICAgIHllYXIgPSBfZGF0ZVN0cmluZyR0cmltJHNwbGkyWzBdLFxuICAgICAgICAgICAgbW9udGggPSBfZGF0ZVN0cmluZyR0cmltJHNwbGkyWzFdLFxuICAgICAgICAgICAgZGF0ZSA9IF9kYXRlU3RyaW5nJHRyaW0kc3BsaTJbMl07XG5cbiAgICAgICAgcmV0dXJuIFt5ZWFyLCBwYWQobW9udGggfHwgMSksIHBhZChkYXRlIHx8IDEpXS5qb2luKCctJyk7XG4gICAgICB9O1xuXG4gICAgICB0cnkge1xuICAgICAgICB2YXIgaW50bEZvcm1hdHRlciA9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KGxvY2FsZSB8fCB1bmRlZmluZWQsIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGRhdGVTdHJpbmcpIHtcbiAgICAgICAgICByZXR1cm4gaW50bEZvcm1hdHRlci5mb3JtYXQobmV3IERhdGUobWFrZUlzb1N0cmluZyhkYXRlU3RyaW5nKSArICdUMDA6MDA6MDArMDA6MDAnKSk7XG4gICAgICAgIH07XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBzdGFydCB8fCBsZW5ndGggPyBmdW5jdGlvbiAoZGF0ZVN0cmluZykge1xuICAgICAgICAgIHJldHVybiBtYWtlSXNvU3RyaW5nKGRhdGVTdHJpbmcpLnN1YnN0cihzdGFydCwgbGVuZ3RoKTtcbiAgICAgICAgfSA6IG51bGw7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIEFkZHMgbGVhZGluZyB6ZXJvIHRvIG1vbnRoL2RheSBpZiBuZWNlc3NhcnksIHJldHVybnMgJ1lZWVknIGlmIHR5cGUgPSAneWVhcicsXG4gICAgLy8gJ1lZWVktTU0nIGlmICdtb250aCcgYW5kICdZWVlZLU1NLUREJyBpZiAnZGF0ZSdcbiAgICBzYW5pdGl6ZURhdGVTdHJpbmc6IGZ1bmN0aW9uIHNhbml0aXplRGF0ZVN0cmluZyhkYXRlU3RyaW5nLCB0eXBlKSB7XG4gICAgICB2YXIgX2RhdGVTdHJpbmckc3BsaXQgPSBkYXRlU3RyaW5nLnNwbGl0KCctJyksXG4gICAgICAgICAgX2RhdGVTdHJpbmckc3BsaXQyID0gX3NsaWNlZFRvQXJyYXkoX2RhdGVTdHJpbmckc3BsaXQsIDMpLFxuICAgICAgICAgIHllYXIgPSBfZGF0ZVN0cmluZyRzcGxpdDJbMF0sXG4gICAgICAgICAgbW9udGggPSBfZGF0ZVN0cmluZyRzcGxpdDJbMV0sXG4gICAgICAgICAgZGF0ZSA9IF9kYXRlU3RyaW5nJHNwbGl0MlsyXTtcblxuICAgICAgcmV0dXJuICh5ZWFyICsgJy0nICsgcGFkKG1vbnRoKSArICctJyArIHBhZChkYXRlKSkuc3Vic3RyKDAsIHsgZGF0ZTogMTAsIG1vbnRoOiA3LCB5ZWFyOiA0IH1bdHlwZV0pO1xuICAgIH0sXG5cbiAgICAvLyBGb3IgbW9udGggPSAxMiBpdCBzZXRzIHRoZSB0YWJsZURhdGUgdG8gSmFudWFyeSBuZXh0IHllYXJcbiAgICAvLyBGb3IgbW9udGggPSAtMSBpdCBzZXRzIHRoZSB0YWJsZURhdGUgdG8gRGVjZW1iZXIgcHJldmlvdXMgeWVhclxuICAgIC8vIE90aGVyd2lzZSBpdCBqdXN0IGNoYW5nZXMgdGhlIHRhYmxlIG1vbnRoXG4gICAgdXBkYXRlVGFibGVNb250aDogZnVuY3Rpb24gdXBkYXRlVGFibGVNb250aChtb250aCAvKiAtMS4uMTIgKi8pIHtcbiAgICAgIGlmIChtb250aCA9PT0gMTIpIHtcbiAgICAgICAgdGhpcy50YWJsZURhdGUgPSB0aGlzLnRhYmxlWWVhciArIDEgKyAnLTAxJztcbiAgICAgIH0gZWxzZSBpZiAobW9udGggPT09IC0xKSB7XG4gICAgICAgIHRoaXMudGFibGVEYXRlID0gdGhpcy50YWJsZVllYXIgLSAxICsgJy0xMic7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRhYmxlRGF0ZSA9IHRoaXMudGFibGVZZWFyICsgJy0nICsgKG1vbnRoICsgMSk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7XG4gICAgdGhpcy50YWJsZURhdGUgPSB0aGlzLnR5cGUgPT09ICdtb250aCcgPyAnJyArIHRoaXMueWVhciA6IHRoaXMueWVhciArICctJyArICh0aGlzLm1vbnRoICsgMSk7XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgIHRoaXMuY3VycmVudERheSA9IGRhdGUuZ2V0RGF0ZSgpO1xuICAgIHRoaXMuY3VycmVudE1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgIHRoaXMuY3VycmVudFllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBbXTtcblxuICAgICF0aGlzLm5vVGl0bGUgJiYgY2hpbGRyZW4ucHVzaCh0aGlzLmdlblRpdGxlKHRoaXMuZm9ybWF0dGVycy50aXRsZURhdGUodGhpcy5pbnB1dERhdGUpKSk7XG5cbiAgICBjaGlsZHJlbi5wdXNoKGgoJ3RyYW5zaXRpb24nLCB7XG4gICAgICBwcm9wczoge1xuICAgICAgICBvcmlnaW46ICdjZW50ZXIgY2VudGVyJyxcbiAgICAgICAgbW9kZTogJ291dC1pbicsXG4gICAgICAgIG5hbWU6ICdzY2FsZS10cmFuc2l0aW9uJ1xuICAgICAgfVxuICAgIH0sIFtoKCdkaXYnLCB7XG4gICAgICBzdGF0aWNDbGFzczogJ3BpY2tlcl9fYm9keScsXG4gICAgICBrZXk6IHRoaXMuYWN0aXZlUGlja2VyXG4gICAgfSwgdGhpcy5nZW5QaWNrZXJCb2R5KGgpKV0pKTtcblxuICAgIHRoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQgJiYgY2hpbGRyZW4ucHVzaCh0aGlzLmdlblNsb3QoKSk7XG5cbiAgICByZXR1cm4gaCgndi1jYXJkJywge1xuICAgICAgc3RhdGljQ2xhc3M6ICdwaWNrZXIgcGlja2VyLS1kYXRlJyxcbiAgICAgICdjbGFzcyc6IF9leHRlbmRzKHtcbiAgICAgICAgJ3BpY2tlci0tbGFuZHNjYXBlJzogdGhpcy5sYW5kc2NhcGVcbiAgICAgIH0sIHRoaXMudGhlbWVDbGFzc2VzKVxuICAgIH0sIGNoaWxkcmVuKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTM4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogMTM5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG1ldGhvZHM6IHtcbiAgICBnZW5ZZWFyczogZnVuY3Rpb24gZ2VuWWVhcnMoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndWwnLCB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAncGlja2VyLS1kYXRlX195ZWFycycsXG4gICAgICAgIGtleTogJ3llYXInLFxuICAgICAgICByZWY6ICd5ZWFycydcbiAgICAgIH0sIHRoaXMuZ2VuWWVhckl0ZW1zKCkpO1xuICAgIH0sXG4gICAgeWVhckNsaWNrOiBmdW5jdGlvbiB5ZWFyQ2xpY2soeWVhcikge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMudHlwZSA9PT0gJ3llYXInKSB7XG4gICAgICAgIHRoaXMuaW5wdXREYXRlID0gJycgKyB5ZWFyO1xuICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLmF1dG9zYXZlICYmIF90aGlzLnNhdmUoKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMudHlwZSA9PT0gJ21vbnRoJykge1xuICAgICAgICB2YXIgZGF0ZSA9IHRoaXMuc2FuaXRpemVEYXRlU3RyaW5nKHllYXIgKyAnLScgKyAodGhpcy5tb250aCArIDEpLCAnbW9udGgnKTtcbiAgICAgICAgaWYgKHRoaXMuaXNBbGxvd2VkKGRhdGUpKSB0aGlzLmlucHV0RGF0ZSA9IGRhdGU7XG4gICAgICAgIHRoaXMudGFibGVEYXRlID0gJycgKyB5ZWFyO1xuICAgICAgICB0aGlzLmFjdGl2ZVBpY2tlciA9ICdNT05USCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX2RhdGUgPSB0aGlzLnNhbml0aXplRGF0ZVN0cmluZyh5ZWFyICsgJy0nICsgKHRoaXMudGFibGVNb250aCArIDEpICsgJy0nICsgdGhpcy5kYXksICdkYXRlJyk7XG4gICAgICAgIGlmICh0aGlzLmlzQWxsb3dlZChfZGF0ZSkpIHRoaXMuaW5wdXREYXRlID0gX2RhdGU7XG4gICAgICAgIHRoaXMudGFibGVEYXRlID0geWVhciArICctJyArICh0aGlzLnRhYmxlTW9udGggKyAxKTtcbiAgICAgICAgdGhpcy5hY3RpdmVQaWNrZXIgPSAnTU9OVEgnO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2VuWWVhckl0ZW1zOiBmdW5jdGlvbiBnZW5ZZWFySXRlbXMoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIGNoaWxkcmVuID0gW107XG5cbiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKHllYXIsIGxlbmd0aCkge1xuICAgICAgICB2YXIgYnV0dG9uVGV4dCA9IF90aGlzMi5mb3JtYXR0ZXJzLnllYXIoJycgKyB5ZWFyKTtcblxuICAgICAgICBjaGlsZHJlbi5wdXNoKF90aGlzMi4kY3JlYXRlRWxlbWVudCgnbGknLCB7XG4gICAgICAgICAgJ2NsYXNzJzogX3RoaXMyLnllYXIgPT09IHllYXIgPyBfdGhpczIuYWRkVGV4dENvbG9yQ2xhc3NDaGVja3MoeyBhY3RpdmU6IHRydWUgfSkgOiB7fSxcbiAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkge1xuICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLnllYXJDbGljayh5ZWFyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIGJ1dHRvblRleHQpKTtcbiAgICAgIH07XG5cbiAgICAgIGZvciAodmFyIHllYXIgPSB0aGlzLnllYXIgKyAxMDAsIGxlbmd0aCA9IHRoaXMueWVhciAtIDEwMDsgeWVhciA+IGxlbmd0aDsgeWVhci0tKSB7XG4gICAgICAgIF9sb29wKHllYXIsIGxlbmd0aCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY2hpbGRyZW47XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxNDAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBtZXRob2RzOiB7XG4gICAgZ2VuWWVhckljb246IGZ1bmN0aW9uIGdlblllYXJJY29uKCkge1xuICAgICAgcmV0dXJuIHRoaXMueWVhckljb24gPyB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWljb24nLCB7XG4gICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgZGFyazogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9LCB0aGlzLnllYXJJY29uKSA6IG51bGw7XG4gICAgfSxcbiAgICBnZXRZZWFyQnRuOiBmdW5jdGlvbiBnZXRZZWFyQnRuKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgJ2NsYXNzJzoge1xuICAgICAgICAgICdwaWNrZXItLWRhdGVfX3RpdGxlLXllYXInOiB0cnVlLFxuICAgICAgICAgICdhY3RpdmUnOiB0aGlzLmFjdGl2ZVBpY2tlciA9PT0gJ1lFQVInXG4gICAgICAgIH0sXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKGUpIHtcbiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICBfdGhpcy5hY3RpdmVQaWNrZXIgPSAnWUVBUic7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBbdGhpcy5mb3JtYXR0ZXJzLnllYXIoJycgKyB0aGlzLnllYXIpLCB0aGlzLmdlblllYXJJY29uKCldKTtcbiAgICB9LFxuICAgIGdlblRpdGxlVGV4dDogZnVuY3Rpb24gZ2VuVGl0bGVUZXh0KHRpdGxlKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndHJhbnNpdGlvbicsIHtcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICBuYW1lOiAnc2xpZGUteS1yZXZlcnNlLXRyYW5zaXRpb24nLFxuICAgICAgICAgIG1vZGU6ICdvdXQtaW4nXG4gICAgICAgIH1cbiAgICAgIH0sIFt0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgIGRvbVByb3BzOiB7IGlubmVySFRNTDogdGl0bGUgfSxcbiAgICAgICAga2V5OiB0aXRsZVxuICAgICAgfSldKTtcbiAgICB9LFxuICAgIGdlblRpdGxlRGF0ZTogZnVuY3Rpb24gZ2VuVGl0bGVEYXRlKHRpdGxlKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6ICdwaWNrZXItLWRhdGVfX3RpdGxlLWRhdGUnLFxuICAgICAgICAnY2xhc3MnOiB7XG4gICAgICAgICAgJ2FjdGl2ZSc6IHRoaXMuYWN0aXZlUGlja2VyID09PSB0aGlzLnR5cGUudG9VcHBlckNhc2UoKVxuICAgICAgICB9LFxuICAgICAgICBvbjoge1xuICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgX3RoaXMyLmFjdGl2ZVBpY2tlciA9IF90aGlzMi50eXBlLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBbdGhpcy5nZW5UaXRsZVRleHQodGl0bGUpXSk7XG4gICAgfSxcbiAgICBnZW5UaXRsZTogZnVuY3Rpb24gZ2VuVGl0bGUodGl0bGUpIHtcbiAgICAgIHJldHVybiB0aGlzLmdlblBpY2tlclRpdGxlKFt0aGlzLmdldFllYXJCdG4oKSwgdGhpcy5nZW5UaXRsZURhdGUodGl0bGUpXSk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxNDEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbWV0aG9kczoge1xuICAgIGdlbkJ0bjogZnVuY3Rpb24gZ2VuQnRuKGNoYW5nZSwgY2hpbGRyZW4pIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWJ0bicsIHtcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICBkYXJrOiB0aGlzLmRhcmssXG4gICAgICAgICAgaWNvbjogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBuYXRpdmVPbjoge1xuICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgaWYgKF90aGlzLmFjdGl2ZVBpY2tlciA9PT0gJ0RBVEUnKSB7XG4gICAgICAgICAgICAgIF90aGlzLnVwZGF0ZVRhYmxlTW9udGgoY2hhbmdlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMuYWN0aXZlUGlja2VyID09PSAnTU9OVEgnKSB7XG4gICAgICAgICAgICAgIF90aGlzLnRhYmxlRGF0ZSA9ICcnICsgY2hhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgY2hpbGRyZW4pO1xuICAgIH0sXG4gICAgZ2VuSGVhZGVyOiBmdW5jdGlvbiBnZW5IZWFkZXIoa2V5VmFsdWUsIHNlbGVjdG9yVGV4dCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBoZWFkZXIgPSB0aGlzLiRjcmVhdGVFbGVtZW50KCdzdHJvbmcnLCB7XG4gICAgICAgICdjbGFzcyc6IHRoaXMuYWRkVGV4dENvbG9yQ2xhc3NDaGVja3MoKSxcbiAgICAgICAga2V5OiBrZXlWYWx1ZSxcbiAgICAgICAgb246IHtcbiAgICAgICAgICBjbGljazogZnVuY3Rpb24gY2xpY2soKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMyLmFjdGl2ZVBpY2tlciA9IF90aGlzMi5hY3RpdmVQaWNrZXIgPT09ICdEQVRFJyA/ICdNT05USCcgOiAnWUVBUic7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBzZWxlY3RvclRleHQpO1xuXG4gICAgICB2YXIgdHJhbnNpdGlvbiA9IHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RyYW5zaXRpb24nLCB7XG4gICAgICAgIHByb3BzOiB7IG5hbWU6IHRoaXMuY29tcHV0ZWRUcmFuc2l0aW9uIH1cbiAgICAgIH0sIFtoZWFkZXJdKTtcblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgJ2NsYXNzJzogJ3BpY2tlci0tZGF0ZV9faGVhZGVyLXNlbGVjdG9yLWRhdGUnXG4gICAgICB9LCBbdHJhbnNpdGlvbl0pO1xuICAgIH0sXG4gICAgZ2VuU2VsZWN0b3I6IGZ1bmN0aW9uIGdlblNlbGVjdG9yKCkge1xuICAgICAgdmFyIGtleVZhbHVlID0gdGhpcy5hY3RpdmVQaWNrZXIgPT09ICdEQVRFJyA/IHRoaXMudGFibGVNb250aCA6IHRoaXMudGFibGVZZWFyO1xuICAgICAgLy8gR2VuZXJhdGVzIHRoZSB0ZXh0IG9mIHRoZSBidXR0b24gc3dpdGNoaW5nIHRoZSBhY3RpdmUgcGlja2VyIGluIHRoZSB0YWJsZSBoZWFkZXIuXG4gICAgICAvLyBGb3IgZGF0ZSBwaWNrZXIgaXQgdXNlcyBoZWFkZXJEYXRlRm9ybWF0IGZvcm1hdHRpbmcgZnVuY3Rpb24gKGRlZmluZWQgYnkgZGV2IG9yXG4gICAgICAvLyBkZWZhdWx0KS4gRm9yIG1vbnRoIHBpY2tlciBpdCB1c2VzIERhdGU6OnRvTG9jYWxlRGF0ZVN0cmluZyB0byBnZXQgdGhlIHllYXJcbiAgICAgIC8vIGluIHRoZSBjdXJyZW50IGxvY2FsZSBvciBqdXN0IGEgeWVhciBudW1lcmljIHZhbHVlIGlmIERhdGU6OnRvTG9jYWxlRGF0ZVN0cmluZ1xuICAgICAgLy8gaXMgbm90IHN1cHBvcnRlZFxuICAgICAgdmFyIHNlbGVjdG9yVGV4dCA9IHRoaXMuYWN0aXZlUGlja2VyID09PSAnREFURScgPyB0aGlzLmZvcm1hdHRlcnMuaGVhZGVyRGF0ZSh0aGlzLnRhYmxlWWVhciArICctJyArICh0aGlzLnRhYmxlTW9udGggKyAxKSkgOiB0aGlzLmZvcm1hdHRlcnMueWVhcignJyArIHRoaXMudGFibGVZZWFyKTtcblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgJ2NsYXNzJzogJ3BpY2tlci0tZGF0ZV9faGVhZGVyLXNlbGVjdG9yJ1xuICAgICAgfSwgW3RoaXMuZ2VuQnRuKGtleVZhbHVlIC0gMSwgW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3YtaWNvbicsICdjaGV2cm9uX2xlZnQnKV0pLCB0aGlzLmdlbkhlYWRlcihrZXlWYWx1ZSwgc2VsZWN0b3JUZXh0KSwgdGhpcy5nZW5CdG4oa2V5VmFsdWUgKyAxLCBbdGhpcy4kY3JlYXRlRWxlbWVudCgndi1pY29uJywgJ2NoZXZyb25fcmlnaHQnKV0pXSk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxNDIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbWV0aG9kczoge1xuICAgIGRhdGVXaGVlbFNjcm9sbDogZnVuY3Rpb24gZGF0ZVdoZWVsU2Nyb2xsKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgdGhpcy51cGRhdGVUYWJsZU1vbnRoKGUuZGVsdGFZIDwgMCA/IHRoaXMudGFibGVNb250aCArIDEgOiB0aGlzLnRhYmxlTW9udGggLSAxKTtcbiAgICB9LFxuICAgIGRhdGVHZW5USGVhZDogZnVuY3Rpb24gZGF0ZUdlblRIZWFkKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIGRheXMgPSB0aGlzLndlZWtEYXlzLm1hcChmdW5jdGlvbiAoZGF5KSB7XG4gICAgICAgIHJldHVybiBfdGhpcy4kY3JlYXRlRWxlbWVudCgndGgnLCBkYXkpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndGhlYWQnLCB0aGlzLmRhdGVHZW5UUihkYXlzKSk7XG4gICAgfSxcbiAgICBkYXRlQ2xpY2s6IGZ1bmN0aW9uIGRhdGVDbGljayhkYXkpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLmlucHV0RGF0ZSA9IHRoaXMuc2FuaXRpemVEYXRlU3RyaW5nKHRoaXMudGFibGVZZWFyICsgJy0nICsgKHRoaXMudGFibGVNb250aCArIDEpICsgJy0nICsgZGF5LCAnZGF0ZScpO1xuICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXMyLmF1dG9zYXZlICYmIF90aGlzMi5zYXZlKCk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGRhdGVHZW5URDogZnVuY3Rpb24gZGF0ZUdlblREKGRheSkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciBkYXRlID0gdGhpcy5zYW5pdGl6ZURhdGVTdHJpbmcodGhpcy50YWJsZVllYXIgKyAnLScgKyAodGhpcy50YWJsZU1vbnRoICsgMSkgKyAnLScgKyBkYXksICdkYXRlJyk7XG4gICAgICB2YXIgYnV0dG9uVGV4dCA9IHRoaXMuZm9ybWF0dGVycy5kYXkoZGF0ZSk7XG4gICAgICB2YXIgaXNBY3RpdmUgPSB0aGlzLmRhdGVJc0FjdGl2ZShkYXkpO1xuICAgICAgdmFyIGlzQ3VycmVudCA9IHRoaXMuZGF0ZUlzQ3VycmVudChkYXkpO1xuICAgICAgdmFyIGNsYXNzZXMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgJ2J0bi0tYWN0aXZlJzogaXNBY3RpdmUsXG4gICAgICAgICdidG4tLW91dGxpbmUnOiBpc0N1cnJlbnQgJiYgIWlzQWN0aXZlLFxuICAgICAgICAnYnRuLS1kaXNhYmxlZCc6ICF0aGlzLmlzQWxsb3dlZChkYXRlKVxuICAgICAgfSwgdGhpcy50aGVtZUNsYXNzZXMpO1xuXG4gICAgICB2YXIgYnV0dG9uID0gdGhpcy4kY3JlYXRlRWxlbWVudCgnYnV0dG9uJywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ2J0biBidG4tLXJhaXNlZCBidG4tLWljb24nLFxuICAgICAgICAnY2xhc3MnOiBpc0FjdGl2ZSB8fCBpc0N1cnJlbnQgPyB0aGlzLmFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzKGNsYXNzZXMpIDogY2xhc3NlcyxcbiAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICB0eXBlOiAnYnV0dG9uJ1xuICAgICAgICB9LFxuICAgICAgICBkb21Qcm9wczoge1xuICAgICAgICAgIGlubmVySFRNTDogJzxzcGFuIGNsYXNzPVwiYnRuX19jb250ZW50XCI+JyArIGJ1dHRvblRleHQgKyAnPC9zcGFuPidcbiAgICAgICAgfSxcbiAgICAgICAgb246IHtcbiAgICAgICAgICBjbGljazogZnVuY3Rpb24gY2xpY2soKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMzLmRhdGVDbGljayhkYXkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0ZCcsIFtidXR0b25dKTtcbiAgICB9LFxuXG4gICAgLy8gUmV0dXJucyBudW1iZXIgb2YgdGhlIGRheXMgZnJvbSB0aGUgZmlyc3REYXlPZldlZWsgdG8gdGhlIGZpcnN0IGRheSBvZiB0aGUgY3VycmVudCBtb250aFxuICAgIHdlZWtEYXlzQmVmb3JlRmlyc3REYXlPZlRoZU1vbnRoOiBmdW5jdGlvbiB3ZWVrRGF5c0JlZm9yZUZpcnN0RGF5T2ZUaGVNb250aCgpIHtcbiAgICAgIHZhciBwYWQgPSBmdW5jdGlvbiBwYWQobikge1xuICAgICAgICByZXR1cm4gbiAqIDEgPCAxMCA/ICcwJyArIG4gKiAxIDogJycgKyBuO1xuICAgICAgfTtcbiAgICAgIHZhciBmaXJzdERheU9mVGhlTW9udGggPSBuZXcgRGF0ZSh0aGlzLnRhYmxlWWVhciArICctJyArIHBhZCh0aGlzLnRhYmxlTW9udGggKyAxKSArICctMDFUMDA6MDA6MDArMDA6MDAnKTtcbiAgICAgIHZhciB3ZWVrRGF5ID0gZmlyc3REYXlPZlRoZU1vbnRoLmdldFVUQ0RheSgpO1xuICAgICAgcmV0dXJuICh3ZWVrRGF5IC0gcGFyc2VJbnQodGhpcy5maXJzdERheU9mV2VlaykgKyA3KSAlIDc7XG4gICAgfSxcbiAgICBkYXRlR2VuVEJvZHk6IGZ1bmN0aW9uIGRhdGVHZW5UQm9keSgpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuICAgICAgdmFyIGRheXNJbk1vbnRoID0gbmV3IERhdGUodGhpcy50YWJsZVllYXIsIHRoaXMudGFibGVNb250aCArIDEsIDApLmdldERhdGUoKTtcbiAgICAgIHZhciByb3dzID0gW107XG4gICAgICB2YXIgZGF5ID0gdGhpcy53ZWVrRGF5c0JlZm9yZUZpcnN0RGF5T2ZUaGVNb250aCgpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRheTsgaSsrKSB7XG4gICAgICAgIHJvd3MucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KCd0ZCcpKTtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8PSBkYXlzSW5Nb250aDsgX2krKykge1xuICAgICAgICByb3dzLnB1c2godGhpcy5kYXRlR2VuVEQoX2kpKTtcblxuICAgICAgICBpZiAocm93cy5sZW5ndGggJSA3ID09PSAwKSB7XG4gICAgICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLmRhdGVHZW5UUihyb3dzKSk7XG4gICAgICAgICAgcm93cyA9IFtdO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChyb3dzLmxlbmd0aCkge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuZGF0ZUdlblRSKHJvd3MpKTtcbiAgICAgIH1cblxuICAgICAgY2hpbGRyZW4ubGVuZ3RoIDwgNiAmJiBjaGlsZHJlbi5wdXNoKHRoaXMuZGF0ZUdlblRSKFt0aGlzLiRjcmVhdGVFbGVtZW50KCd0ZCcsIHsgZG9tUHJvcHM6IHsgaW5uZXJIVE1MOiAnJm5ic3A7JyB9IH0pXSkpO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndGJvZHknLCBjaGlsZHJlbik7XG4gICAgfSxcbiAgICBkYXRlR2VuVFI6IGZ1bmN0aW9uIGRhdGVHZW5UUigpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107XG4gICAgICB2YXIgZGF0YSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgICAgIHJldHVybiBbdGhpcy4kY3JlYXRlRWxlbWVudCgndHInLCBkYXRhLCBjaGlsZHJlbildO1xuICAgIH0sXG4gICAgZGF0ZUlzQWN0aXZlOiBmdW5jdGlvbiBkYXRlSXNBY3RpdmUoaSkge1xuICAgICAgcmV0dXJuIHRoaXMudGFibGVZZWFyID09PSB0aGlzLnllYXIgJiYgdGhpcy50YWJsZU1vbnRoID09PSB0aGlzLm1vbnRoICYmIHRoaXMuZGF5ID09PSBpO1xuICAgIH0sXG4gICAgZGF0ZUlzQ3VycmVudDogZnVuY3Rpb24gZGF0ZUlzQ3VycmVudChpKSB7XG4gICAgICByZXR1cm4gdGhpcy5jdXJyZW50WWVhciA9PT0gdGhpcy50YWJsZVllYXIgJiYgdGhpcy5jdXJyZW50TW9udGggPT09IHRoaXMudGFibGVNb250aCAmJiB0aGlzLmN1cnJlbnREYXkgPT09IGk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxNDMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbWV0aG9kczoge1xuICAgIG1vbnRoV2hlZWxTY3JvbGw6IGZ1bmN0aW9uIG1vbnRoV2hlZWxTY3JvbGwoZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICB2YXIgeWVhciA9IHRoaXMudGFibGVZZWFyO1xuXG4gICAgICBpZiAoZS5kZWx0YVkgPCAwKSB5ZWFyKys7ZWxzZSB5ZWFyLS07XG5cbiAgICAgIHRoaXMudGFibGVEYXRlID0gJycgKyB5ZWFyO1xuICAgIH0sXG4gICAgbW9udGhDbGljazogZnVuY3Rpb24gbW9udGhDbGljayhtb250aCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgLy8gVXBkYXRlcyBpbnB1dERhdGUgc2V0dGluZyAnWVlZWS1NTScgb3IgJ1lZWVktTU0tREQnIGZvcm1hdCwgZGVwZW5kaW5nIG9uIHRoZSBwaWNrZXIgdHlwZVxuICAgICAgaWYgKHRoaXMudHlwZSA9PT0gJ2RhdGUnKSB7XG4gICAgICAgIHZhciBkYXRlID0gdGhpcy5zYW5pdGl6ZURhdGVTdHJpbmcodGhpcy50YWJsZVllYXIgKyAnLScgKyAobW9udGggKyAxKSArICctJyArIHRoaXMuZGF5LCAnZGF0ZScpO1xuICAgICAgICBpZiAodGhpcy5pc0FsbG93ZWQoZGF0ZSkpIHRoaXMuaW5wdXREYXRlID0gZGF0ZTtcbiAgICAgICAgdGhpcy51cGRhdGVUYWJsZU1vbnRoKG1vbnRoKTtcbiAgICAgICAgdGhpcy5hY3RpdmVQaWNrZXIgPSAnREFURSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmlucHV0RGF0ZSA9IHRoaXMuc2FuaXRpemVEYXRlU3RyaW5nKHRoaXMudGFibGVZZWFyICsgJy0nICsgKG1vbnRoICsgMSksICdtb250aCcpO1xuICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLmF1dG9zYXZlICYmIF90aGlzLnNhdmUoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBtb250aEdlblREOiBmdW5jdGlvbiBtb250aEdlblREKG1vbnRoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIHBhZCA9IGZ1bmN0aW9uIHBhZChuKSB7XG4gICAgICAgIHJldHVybiBuICogMSA8IDEwID8gJzAnICsgbiAqIDEgOiAnJyArIG47XG4gICAgICB9O1xuICAgICAgdmFyIGRhdGUgPSB0aGlzLnRhYmxlWWVhciArICctJyArIHBhZChtb250aCArIDEpO1xuICAgICAgdmFyIG1vbnRoTmFtZSA9IHRoaXMuZm9ybWF0dGVycy5tb250aChkYXRlKTtcbiAgICAgIHZhciBpc0FjdGl2ZSA9IHRoaXMubW9udGhJc0FjdGl2ZShtb250aCk7XG4gICAgICB2YXIgaXNDdXJyZW50ID0gdGhpcy5tb250aElzQ3VycmVudChtb250aCk7XG4gICAgICB2YXIgY2xhc3NlcyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAnYnRuLS1mbGF0JzogIWlzQWN0aXZlLFxuICAgICAgICAnYnRuLS1hY3RpdmUnOiBpc0FjdGl2ZSxcbiAgICAgICAgJ2J0bi0tb3V0bGluZSc6IGlzQ3VycmVudCAmJiAhaXNBY3RpdmUsXG4gICAgICAgICdidG4tLWRpc2FibGVkJzogdGhpcy50eXBlID09PSAnbW9udGgnICYmICF0aGlzLmlzQWxsb3dlZChkYXRlKVxuICAgICAgfSwgdGhpcy50aGVtZUNsYXNzZXMpO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndGQnLCBbdGhpcy4kY3JlYXRlRWxlbWVudCgnYnV0dG9uJywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ2J0bicsXG4gICAgICAgICdjbGFzcyc6IGlzQWN0aXZlIHx8IGlzQ3VycmVudCA/IHRoaXMuYWRkQmFja2dyb3VuZENvbG9yQ2xhc3NDaGVja3MoY2xhc3NlcykgOiBjbGFzc2VzLFxuICAgICAgICBhdHRyczoge1xuICAgICAgICAgIHR5cGU6ICdidXR0b24nXG4gICAgICAgIH0sXG4gICAgICAgIGRvbVByb3BzOiB7XG4gICAgICAgICAgaW5uZXJIVE1MOiAnPHNwYW4gY2xhc3M9XCJidG5fX2NvbnRlbnRcIj4nICsgbW9udGhOYW1lICsgJzwvc3Bhbj4nXG4gICAgICAgIH0sXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5tb250aENsaWNrKG1vbnRoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXSk7XG4gICAgfSxcbiAgICBtb250aEdlblRCb2R5OiBmdW5jdGlvbiBtb250aEdlblRCb2R5KCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuICAgICAgdmFyIGNvbHMgPSBBcnJheSgzKS5maWxsKG51bGwpO1xuICAgICAgdmFyIHJvd3MgPSAxMiAvIGNvbHMubGVuZ3RoO1xuXG4gICAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChyb3cpIHtcbiAgICAgICAgY2hpbGRyZW4ucHVzaChfdGhpczMuJGNyZWF0ZUVsZW1lbnQoJ3RyJywgY29scy5tYXAoZnVuY3Rpb24gKF8sIGNvbCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczMubW9udGhHZW5URChyb3cgKiBjb2xzLmxlbmd0aCArIGNvbCk7XG4gICAgICAgIH0pKSk7XG4gICAgICB9O1xuXG4gICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCByb3dzOyByb3crKykge1xuICAgICAgICBfbG9vcChyb3cpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndGJvZHknLCBjaGlsZHJlbik7XG4gICAgfSxcbiAgICBtb250aElzQWN0aXZlOiBmdW5jdGlvbiBtb250aElzQWN0aXZlKGkpIHtcbiAgICAgIHJldHVybiB0aGlzLnRhYmxlWWVhciA9PT0gdGhpcy55ZWFyICYmICh0aGlzLnR5cGUgPT09ICdtb250aCcgPyB0aGlzLm1vbnRoIDogdGhpcy50YWJsZU1vbnRoKSA9PT0gaTtcbiAgICB9LFxuICAgIG1vbnRoSXNDdXJyZW50OiBmdW5jdGlvbiBtb250aElzQ3VycmVudChpKSB7XG4gICAgICByZXR1cm4gdGhpcy5jdXJyZW50WWVhciA9PT0gdGhpcy50YWJsZVllYXIgJiYgdGhpcy5jdXJyZW50TW9udGggPT09IGk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxNDQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRGlhbG9nX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI2KTtcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRGlhbG9nX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRGlhbG9nX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRGlhbG9nX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZEaWFsb2dfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogMTQ1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkRpdmlkZXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTQ2KTtcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRGl2aWRlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkRpdmlkZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZEaXZpZGVyX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZEaXZpZGVyX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDE0NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc190aGVtZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE0Nyk7XG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtZGl2aWRlcicsXG5cbiAgZnVuY3Rpb25hbDogdHJ1ZSxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc190aGVtZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgcHJvcHM6IHtcbiAgICBpbnNldDogQm9vbGVhblxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIF9yZWYpIHtcbiAgICB2YXIgcHJvcHMgPSBfcmVmLnByb3BzLFxuICAgICAgICBkYXRhID0gX3JlZi5kYXRhLFxuICAgICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW47XG5cbiAgICBkYXRhLnN0YXRpY0NsYXNzID0gKCdkaXZpZGVyICcgKyAoZGF0YS5zdGF0aWNDbGFzcyB8fCAnJykpLnRyaW0oKTtcblxuICAgIGlmIChwcm9wcy5pbnNldCkgZGF0YS5zdGF0aWNDbGFzcyArPSAnIGRpdmlkZXItLWluc2V0JztcbiAgICBpZiAocHJvcHMubGlnaHQpIGRhdGEuc3RhdGljQ2xhc3MgKz0gJyB0aGVtZS0tbGlnaHQnO1xuICAgIGlmIChwcm9wcy5kYXJrKSBkYXRhLnN0YXRpY0NsYXNzICs9ICcgdGhlbWUtLWRhcmsnO1xuXG4gICAgcmV0dXJuIGgoJ2hyJywgZGF0YSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE0NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDE0OCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZFeHBhbnNpb25QYW5lbF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNDkpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkV4cGFuc2lvblBhbmVsQ29udGVudF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNTEpO1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVkV4cGFuc2lvblBhbmVsICovXG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWRXhwYW5zaW9uUGFuZWxDb250ZW50ICovXG5cblxuXG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkV4cGFuc2lvblBhbmVsX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRXhwYW5zaW9uUGFuZWxfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZFeHBhbnNpb25QYW5lbF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZFeHBhbnNpb25QYW5lbENvbnRlbnRfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZFeHBhbnNpb25QYW5lbENvbnRlbnRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkV4cGFuc2lvblBhbmVsX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDE0OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc190aGVtZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE1MCk7XG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtZXhwYW5zaW9uLXBhbmVsJyxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc190aGVtZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgcHJvdmlkZTogZnVuY3Rpb24gcHJvdmlkZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGFuZWxDbGljazogdGhpcy5wYW5lbENsaWNrLFxuICAgICAgZm9jdXNhYmxlOiB0aGlzLmZvY3VzYWJsZVxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGV4cGFuZDogQm9vbGVhbixcbiAgICBmb2N1c2FibGU6IEJvb2xlYW4sXG4gICAgaW5zZXQ6IEJvb2xlYW4sXG4gICAgcG9wb3V0OiBCb29sZWFuXG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGdldENoaWxkcmVuOiBmdW5jdGlvbiBnZXRDaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiB0aGlzLiRjaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgaWYgKCFjLiRvcHRpb25zKSByZXR1cm47XG5cbiAgICAgICAgcmV0dXJuIGMuJG9wdGlvbnMubmFtZSA9PT0gJ3YtZXhwYW5zaW9uLXBhbmVsLWNvbnRlbnQnO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBwYW5lbENsaWNrOiBmdW5jdGlvbiBwYW5lbENsaWNrKHVpZCkge1xuICAgICAgaWYgKCF0aGlzLmV4cGFuZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRDaGlsZHJlbigpLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICByZXR1cm4gZS50b2dnbGUodWlkKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwYW5lbCA9IHRoaXMuJGNoaWxkcmVuLmZpbmQoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgcmV0dXJuIGUuX3VpZCA9PT0gdWlkO1xuICAgICAgfSk7XG5cbiAgICAgIHBhbmVsICYmIHBhbmVsLnRvZ2dsZSh1aWQpO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgcmV0dXJuIGgoJ3VsJywge1xuICAgICAgc3RhdGljQ2xhc3M6ICdleHBhbnNpb24tcGFuZWwnLFxuICAgICAgJ2NsYXNzJzogX2V4dGVuZHMoe1xuICAgICAgICAnZXhwYW5zaW9uLXBhbmVsLS1mb2N1c2FibGUnOiB0aGlzLmZvY3VzYWJsZSxcbiAgICAgICAgJ2V4cGFuc2lvbi1wYW5lbC0tcG9wb3V0JzogdGhpcy5wb3BvdXQsXG4gICAgICAgICdleHBhbnNpb24tcGFuZWwtLWluc2V0JzogdGhpcy5pbnNldFxuICAgICAgfSwgdGhpcy50aGVtZUNsYXNzZXMpXG4gICAgfSwgdGhpcy4kc2xvdHMuZGVmYXVsdCk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE1MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDE1MSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3RyYW5zaXRpb25zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2Jvb3RhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190b2dnbGVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fVkljb25fXyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19kaXJlY3RpdmVzX3JpcHBsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX2RpcmVjdGl2ZXNfY2xpY2tfb3V0c2lkZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcblxuXG5cblxuXG5cblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LWV4cGFuc2lvbi1wYW5lbC1jb250ZW50JyxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19ib290YWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190b2dnbGVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGNvbXBvbmVudHM6IHtcbiAgICBWSWNvbjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19WSWNvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXG4gIH0sXG5cbiAgZGlyZWN0aXZlczoge1xuICAgIFJpcHBsZTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19kaXJlY3RpdmVzX3JpcHBsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLFxuICAgIENsaWNrT3V0c2lkZTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXVxuICB9LFxuXG4gIGluamVjdDogWydmb2N1c2FibGUnLCAncGFuZWxDbGljayddLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhlaWdodDogJ2F1dG8nXG4gICAgfTtcbiAgfSxcblxuXG4gIHByb3BzOiB7XG4gICAgaGlkZUFjdGlvbnM6IEJvb2xlYW4sXG4gICAgcmlwcGxlOiBCb29sZWFuXG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGdlbkJvZHk6IGZ1bmN0aW9uIGdlbkJvZHkoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgICAgICByZWY6ICdib2R5JyxcbiAgICAgICAgY2xhc3M6ICdleHBhbnNpb24tcGFuZWxfX2JvZHknLFxuICAgICAgICBkaXJlY3RpdmVzOiBbe1xuICAgICAgICAgIG5hbWU6ICdzaG93JyxcbiAgICAgICAgICB2YWx1ZTogdGhpcy5pc0FjdGl2ZVxuICAgICAgICB9XVxuICAgICAgfSwgdGhpcy5zaG93TGF6eUNvbnRlbnQodGhpcy4kc2xvdHMuZGVmYXVsdCkpO1xuICAgIH0sXG4gICAgZ2VuSGVhZGVyOiBmdW5jdGlvbiBnZW5IZWFkZXIoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ2V4cGFuc2lvbi1wYW5lbF9faGVhZGVyJyxcbiAgICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgICBuYW1lOiAncmlwcGxlJyxcbiAgICAgICAgICB2YWx1ZTogdGhpcy5yaXBwbGVcbiAgICAgICAgfV0sXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnBhbmVsQ2xpY2soX3RoaXMuX3VpZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBbdGhpcy4kc2xvdHMuaGVhZGVyLCB0aGlzLmdlbkljb24oKV0pO1xuICAgIH0sXG4gICAgZ2VuSWNvbjogZnVuY3Rpb24gZ2VuSWNvbihoKSB7XG4gICAgICBpZiAodGhpcy5oaWRlQWN0aW9ucykgcmV0dXJuIG51bGw7XG5cbiAgICAgIHZhciBpY29uID0gdGhpcy4kc2xvdHMuYWN0aW9ucyB8fCB0aGlzLiRjcmVhdGVFbGVtZW50KCd2LWljb24nLCAna2V5Ym9hcmRfYXJyb3dfZG93bicpO1xuXG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ2hlYWRlcl9faWNvbidcbiAgICAgIH0sIFtpY29uXSk7XG4gICAgfSxcbiAgICB0b2dnbGU6IGZ1bmN0aW9uIHRvZ2dsZSh1aWQpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgaXNBY3RpdmUgPSB0aGlzLl91aWQgPT09IHVpZCAmJiAhdGhpcy5pc0FjdGl2ZTtcblxuICAgICAgaWYgKGlzQWN0aXZlKSB0aGlzLmlzQm9vdGVkID0gdHJ1ZTtcblxuICAgICAgLy8gV2UgdHJlYXQgYm9vdGFibGUgZGlmZmVyZW50bHlcbiAgICAgIC8vIE5lZWRzIHRpbWUgdG8gY2FsYyBoZWlnaHRcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi5pc0FjdGl2ZSA9IGlzQWN0aXZlO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuXG4gICAgdGhpcy4kc2xvdHMuaGVhZGVyICYmIGNoaWxkcmVuLnB1c2godGhpcy5nZW5IZWFkZXIoKSk7XG4gICAgY2hpbGRyZW4ucHVzaChoKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdHJhbnNpdGlvbnNfX1tcImFcIiAvKiBWRXhwYW5kVHJhbnNpdGlvbiAqL10sIFt0aGlzLmdlbkJvZHkoKV0pKTtcblxuICAgIHJldHVybiBoKCdsaScsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiAnZXhwYW5zaW9uLXBhbmVsX19jb250YWluZXInLFxuICAgICAgJ2NsYXNzJzoge1xuICAgICAgICAnZXhwYW5zaW9uLXBhbmVsX19jb250YWluZXItLWFjdGl2ZSc6IHRoaXMuaXNBY3RpdmVcbiAgICAgIH0sXG4gICAgICBhdHRyczoge1xuICAgICAgICB0YWJpbmRleDogMFxuICAgICAgfSxcbiAgICAgIG9uOiB7XG4gICAgICAgIGtleWRvd246IGZ1bmN0aW9uIGtleWRvd24oZSkge1xuICAgICAgICAgIC8vIEVuc3VyZSBlbGVtZW50IGlzIGZvY3VzYWJsZSBhbmQgdGhlIGFjdGl2ZUVsZW1lbnRcbiAgICAgICAgICBpZiAoX3RoaXMzLmZvY3VzYWJsZSAmJiBfdGhpczMuJGVsID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmIGUua2V5Q29kZSA9PT0gMTMpIF90aGlzMy5wYW5lbENsaWNrKF90aGlzMy5fdWlkKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIGNoaWxkcmVuKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTUyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkZvb3Rlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNTMpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZGb290ZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZGb290ZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZGb290ZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkZvb3Rlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAxNTMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfYXBwbGljYXRpb25hYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDExKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19jb2xvcmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfdGhlbWVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxNTQpO1xuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1mb290ZXInLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2FwcGxpY2F0aW9uYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19jb2xvcmFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfdGhlbWVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIHByb3BzOiB7XG4gICAgYWJzb2x1dGU6IEJvb2xlYW4sXG4gICAgZml4ZWQ6IEJvb2xlYW5cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIHBhZGRpbmdMZWZ0OiBmdW5jdGlvbiBwYWRkaW5nTGVmdCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmZpeGVkIHx8ICF0aGlzLmFwcCA/IDAgOiB0aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uLmxlZnQ7XG4gICAgfSxcbiAgICBwYWRkaW5nUmlnaHQ6IGZ1bmN0aW9uIHBhZGRpbmdSaWdodCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmZpeGVkIHx8ICF0aGlzLmFwcCA/IDAgOiB0aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uLnJpZ2h0O1xuICAgIH1cbiAgfSxcblxuICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHtcbiAgICBpZiAodGhpcy5hcHApIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYm90dG9tID0gMDtcbiAgfSxcblxuXG4gIG1ldGhvZHM6IHtcbiAgICB1cGRhdGVBcHBsaWNhdGlvbjogZnVuY3Rpb24gdXBkYXRlQXBwbGljYXRpb24oKSB7XG4gICAgICBpZiAoIXRoaXMuYXBwKSByZXR1cm47XG5cbiAgICAgIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYm90dG9tID0gdGhpcy5maXhlZCA/IHRoaXMuJGVsICYmIHRoaXMuJGVsLmNsaWVudEhlaWdodCA6IDA7XG4gICAgfVxuICB9LFxuXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy51cGRhdGVBcHBsaWNhdGlvbigpO1xuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdGhpcy51cGRhdGVBcHBsaWNhdGlvbigpO1xuXG4gICAgdmFyIGRhdGEgPSB7XG4gICAgICBzdGF0aWNDbGFzczogJ2Zvb3RlcicsXG4gICAgICAnY2xhc3MnOiB0aGlzLmFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzKHtcbiAgICAgICAgJ2Zvb3Rlci0tYWJzb2x1dGUnOiB0aGlzLmFic29sdXRlLFxuICAgICAgICAnZm9vdGVyLS1maXhlZCc6IHRoaXMuZml4ZWQsXG4gICAgICAgICd0aGVtZS0tZGFyayc6IHRoaXMuZGFyayxcbiAgICAgICAgJ3RoZW1lLS1saWdodCc6IHRoaXMubGlnaHRcbiAgICAgIH0pLFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgcGFkZGluZ0xlZnQ6IHRoaXMucGFkZGluZ0xlZnQgKyAncHgnLFxuICAgICAgICBwYWRkaW5nUmlnaHQ6IHRoaXMucGFkZGluZ1JpZ2h0ICsgJ3B4J1xuICAgICAgfSxcbiAgICAgIHJlZjogJ2NvbnRlbnQnXG4gICAgfTtcblxuICAgIHJldHVybiBoKCdmb290ZXInLCBkYXRhLCB0aGlzLiRzbG90cy5kZWZhdWx0KTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTU0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogMTU1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkZvcm1fXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTU2KTtcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WRm9ybV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVkZvcm1fX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZGb3JtX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZGb3JtX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDE1NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1mb3JtJyxcblxuICBpbmhlcml0QXR0cnM6IGZhbHNlLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlucHV0czogW10sXG4gICAgICBlcnJvckJhZzoge31cbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICB2YWx1ZTogQm9vbGVhbixcbiAgICBsYXp5VmFsaWRhdGlvbjogQm9vbGVhblxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgZXJyb3JCYWc6IHtcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7XG4gICAgICAgIHZhciBlcnJvcnMgPSBPYmplY3QudmFsdWVzKHRoaXMuZXJyb3JCYWcpLmluY2x1ZGVzKHRydWUpO1xuXG4gICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgIWVycm9ycyk7XG5cbiAgICAgICAgcmV0dXJuICFlcnJvcnM7XG4gICAgICB9LFxuXG4gICAgICBkZWVwOiB0cnVlXG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBnZXRJbnB1dHM6IGZ1bmN0aW9uIGdldElucHV0cygpIHtcbiAgICAgIHZhciByZXN1bHRzID0gW107XG5cbiAgICAgIHZhciBzZWFyY2ggPSBmdW5jdGlvbiBzZWFyY2goY2hpbGRyZW4pIHtcbiAgICAgICAgdmFyIGRlcHRoID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwO1xuICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7XG4gICAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlO1xuICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBjaGlsZHJlbltTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSAoX3N0ZXAgPSBfaXRlcmF0b3IubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWUpIHtcbiAgICAgICAgICAgIHZhciBjaGlsZCA9IF9zdGVwLnZhbHVlO1xuXG4gICAgICAgICAgICBpZiAoY2hpbGQuZXJyb3JCdWNrZXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICByZXN1bHRzLnB1c2goY2hpbGQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc2VhcmNoKGNoaWxkLiRjaGlsZHJlbiwgZGVwdGggKyAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHtcbiAgICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRlcHRoID09PSAwKSByZXR1cm4gcmVzdWx0cztcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBzZWFyY2godGhpcy4kY2hpbGRyZW4pO1xuICAgIH0sXG4gICAgd2F0Y2hJbnB1dHM6IGZ1bmN0aW9uIHdhdGNoSW5wdXRzKCkge1xuICAgICAgdmFyIGlucHV0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogdGhpcy5nZXRJbnB1dHMoKTtcbiAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWU7XG4gICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IyID0gZmFsc2U7XG4gICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IyID0gdW5kZWZpbmVkO1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IyID0gaW5wdXRzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXAyOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gKF9zdGVwMiA9IF9pdGVyYXRvcjIubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlKSB7XG4gICAgICAgICAgdmFyIGNoaWxkID0gX3N0ZXAyLnZhbHVlO1xuXG4gICAgICAgICAgaWYgKHRoaXMuaW5wdXRzLmluY2x1ZGVzKGNoaWxkKSkge1xuICAgICAgICAgICAgY29udGludWU7IC8vIFdlIGFscmVhZHkga25vdyBhYm91dCB0aGlzIGlucHV0XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhpcy5pbnB1dHMucHVzaChjaGlsZCk7XG4gICAgICAgICAgdGhpcy53YXRjaENoaWxkKGNoaWxkKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9kaWRJdGVyYXRvckVycm9yMiA9IHRydWU7XG4gICAgICAgIF9pdGVyYXRvckVycm9yMiA9IGVycjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiAmJiBfaXRlcmF0b3IyLnJldHVybikge1xuICAgICAgICAgICAgX2l0ZXJhdG9yMi5yZXR1cm4oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMikge1xuICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3IyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgd2F0Y2hDaGlsZDogZnVuY3Rpb24gd2F0Y2hDaGlsZChjaGlsZCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIHdhdGNoZXIgPSBmdW5jdGlvbiB3YXRjaGVyKGNoaWxkKSB7XG4gICAgICAgIGNoaWxkLiR3YXRjaCgndmFsaWQnLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgX3RoaXMuJHNldChfdGhpcy5lcnJvckJhZywgY2hpbGQuX3VpZCwgIXZhbCk7XG4gICAgICAgIH0sIHsgaW1tZWRpYXRlOiB0cnVlIH0pO1xuICAgICAgfTtcblxuICAgICAgaWYgKCF0aGlzLmxhenlWYWxpZGF0aW9uKSByZXR1cm4gd2F0Y2hlcihjaGlsZCk7XG5cbiAgICAgIC8vIE9ubHkgc3RhcnQgd2F0Y2hpbmcgaW5wdXRzIGlmIHdlIG5lZWQgdG9cbiAgICAgIGNoaWxkLiR3YXRjaCgnc2hvdWxkVmFsaWRhdGUnLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgIGlmICghdmFsKSByZXR1cm47XG5cbiAgICAgICAgLy8gT25seSB3YXRjaCBpZiB3ZSdyZSBub3QgYWxyZWFkeSBkb2luZyBpdFxuICAgICAgICBpZiAoX3RoaXMuZXJyb3JCYWcuaGFzT3duUHJvcGVydHkoY2hpbGQuX3VpZCkpIHJldHVybjtcblxuICAgICAgICB3YXRjaGVyKGNoaWxkKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgdmFsaWRhdGU6IGZ1bmN0aW9uIHZhbGlkYXRlKCkge1xuICAgICAgdmFyIGVycm9ycyA9IHRoaXMuaW5wdXRzLmZpbHRlcihmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuICFpbnB1dC52YWxpZGF0ZSh0cnVlKTtcbiAgICAgIH0pLmxlbmd0aDtcbiAgICAgIHJldHVybiAhZXJyb3JzO1xuICAgIH0sXG4gICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHRoaXMuaW5wdXRzLmZvckVhY2goZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBpbnB1dC5yZXNldCgpO1xuICAgICAgfSk7XG4gICAgICBpZiAodGhpcy5sYXp5VmFsaWRhdGlvbikge1xuICAgICAgICBPYmplY3Qua2V5cyh0aGlzLmVycm9yQmFnKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLiRkZWxldGUoX3RoaXMyLmVycm9yQmFnLCBrZXkpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLndhdGNoSW5wdXRzKCk7XG4gIH0sXG4gIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7XG4gICAgdmFyIGlucHV0cyA9IHRoaXMuZ2V0SW5wdXRzKCk7XG5cbiAgICBpZiAoaW5wdXRzLmxlbmd0aCA8IHRoaXMuaW5wdXRzLmxlbmd0aCkge1xuICAgICAgLy8gU29tZXRoaW5nIHdhcyByZW1vdmVkLCB3ZSBkb24ndCB3YW50IGl0IGluIHRoZSBlcnJvckJhZyBhbnkgbW9yZVxuICAgICAgdmFyIHJlbW92ZWQgPSB0aGlzLmlucHV0cy5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgcmV0dXJuICFpbnB1dHMuaW5jbHVkZXMoaSk7XG4gICAgICB9KTtcblxuICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zID0gdHJ1ZTtcbiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjMgPSBmYWxzZTtcbiAgICAgIHZhciBfaXRlcmF0b3JFcnJvcjMgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjMgPSByZW1vdmVkW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXAzOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zID0gKF9zdGVwMyA9IF9pdGVyYXRvcjMubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgPSB0cnVlKSB7XG4gICAgICAgICAgdmFyIGlucHV0ID0gX3N0ZXAzLnZhbHVlO1xuXG4gICAgICAgICAgdGhpcy4kZGVsZXRlKHRoaXMuZXJyb3JCYWcsIGlucHV0Ll91aWQpO1xuICAgICAgICAgIHRoaXMuJGRlbGV0ZSh0aGlzLmlucHV0cywgdGhpcy5pbnB1dHMuaW5kZXhPZihpbnB1dCkpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IzID0gdHJ1ZTtcbiAgICAgICAgX2l0ZXJhdG9yRXJyb3IzID0gZXJyO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zICYmIF9pdGVyYXRvcjMucmV0dXJuKSB7XG4gICAgICAgICAgICBfaXRlcmF0b3IzLnJldHVybigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IzKSB7XG4gICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjM7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy53YXRjaElucHV0cyhpbnB1dHMpO1xuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICByZXR1cm4gaCgnZm9ybScsIHtcbiAgICAgIGF0dHJzOiBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgbm92YWxpZGF0ZTogdHJ1ZVxuICAgICAgfSwgdGhpcy4kYXR0cnMpLFxuICAgICAgb246IHtcbiAgICAgICAgc3VibWl0OiBmdW5jdGlvbiBzdWJtaXQoZSkge1xuICAgICAgICAgIHJldHVybiBfdGhpczMuJGVtaXQoJ3N1Ym1pdCcsIGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwgdGhpcy4kc2xvdHMuZGVmYXVsdCk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE1NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIHVudXNlZCBoYXJtb255IGV4cG9ydCBWU3BhY2VyICovXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WQ29udGVudF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNTgpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fVkNvbnRhaW5lcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNjApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fVkZsZXhfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTYxKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1ZMYXlvdXRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTYyKTtcbi8qIHVudXNlZCBoYXJtb255IHJlZXhwb3J0IFZDb250YWluZXIgKi9cbi8qIHVudXNlZCBoYXJtb255IHJlZXhwb3J0IFZDb250ZW50ICovXG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWRmxleCAqL1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVkxheW91dCAqL1xuXG5cblxuXG5cblxudmFyIFZTcGFjZXIgPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImRcIiAvKiBjcmVhdGVTaW1wbGVGdW5jdGlvbmFsICovXSkoJ3NwYWNlcicpO1xuXG5cblxudmFyIFZHcmlkID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5WR3JpZC5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZDb250ZW50X19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WQ29udGVudF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZDb250YWluZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZDb250YWluZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19WRmxleF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fVkZsZXhfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19WTGF5b3V0X19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19WTGF5b3V0X19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuY29tcG9uZW50KFZTcGFjZXIubmFtZSwgVlNwYWNlcik7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKFZHcmlkKTtcblxuLyoqKi8gfSksXG4vKiAxNTggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE1OSk7XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1jb250ZW50JyxcblxuICBwcm9wczoge1xuICAgIHRhZzoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ21haW4nXG4gICAgfVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgc3R5bGVzOiBmdW5jdGlvbiBzdHlsZXMoKSB7XG4gICAgICB2YXIgXyR2dWV0aWZ5JGFwcGxpY2F0aW9uID0gdGhpcy4kdnVldGlmeS5hcHBsaWNhdGlvbixcbiAgICAgICAgICBiYXIgPSBfJHZ1ZXRpZnkkYXBwbGljYXRpb24uYmFyLFxuICAgICAgICAgIHRvcCA9IF8kdnVldGlmeSRhcHBsaWNhdGlvbi50b3AsXG4gICAgICAgICAgcmlnaHQgPSBfJHZ1ZXRpZnkkYXBwbGljYXRpb24ucmlnaHQsXG4gICAgICAgICAgYm90dG9tID0gXyR2dWV0aWZ5JGFwcGxpY2F0aW9uLmJvdHRvbSxcbiAgICAgICAgICBsZWZ0ID0gXyR2dWV0aWZ5JGFwcGxpY2F0aW9uLmxlZnQ7XG5cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcGFkZGluZ1RvcDogdG9wICsgYmFyICsgJ3B4JyxcbiAgICAgICAgcGFkZGluZ1JpZ2h0OiByaWdodCArICdweCcsXG4gICAgICAgIHBhZGRpbmdCb3R0b206IGJvdHRvbSArICdweCcsXG4gICAgICAgIHBhZGRpbmdMZWZ0OiBsZWZ0ICsgJ3B4J1xuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICAvLyBUT0RPOiBEZXByZWNhdGVcbiAgICBpZiAodGhpcy4kZWwucGFyZW50RWxlbWVudC50YWdOYW1lID09PSAnTUFJTicpIHtcbiAgICAgIGNvbnNvbGUud2Fybigndi1jb250ZW50IG5vIGxvbmdlciBuZWVkcyB0byBiZSB3cmFwcGVkIGluIGEgPG1haW4+IHRhZycsIHRoaXMuJGVsLnBhcmVudEVsZW1lbnQpO1xuICAgIH1cbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgc3RhdGljQ2xhc3M6ICdjb250ZW50JyxcbiAgICAgIHN0eWxlOiB0aGlzLnN0eWxlcyxcbiAgICAgIHJlZjogJ2NvbnRlbnQnXG4gICAgfTtcblxuICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICBzdGF0aWNDbGFzczogJ2NvbnRlbnQtLXdyYXAnXG4gICAgfSwgW2godGhpcy50YWcsIGRhdGEsIHRoaXMuJHNsb3RzLmRlZmF1bHQpXSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE1OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDE2MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2dyaWRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjQpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygyMyk7XG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2dyaWRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSkoJ2NvbnRhaW5lcicpKTtcblxuLyoqKi8gfSksXG4vKiAxNjEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19ncmlkX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI0KTtcbl9fd2VicGFja19yZXF1aXJlX18oMjMpO1xuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19ncmlkX19bXCJhXCIgLyogZGVmYXVsdCAqL10pKCdmbGV4JykpO1xuXG4vKioqLyB9KSxcbi8qIDE2MiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2dyaWRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjQpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygyMyk7XG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2dyaWRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSkoJ2xheW91dCcpKTtcblxuLyoqKi8gfSksXG4vKiAxNjMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WTmF2aWdhdGlvbkRyYXdlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNjQpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZOYXZpZ2F0aW9uRHJhd2VyX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WTmF2aWdhdGlvbkRyYXdlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVk5hdmlnYXRpb25EcmF3ZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVk5hdmlnYXRpb25EcmF3ZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogMTY0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2FwcGxpY2F0aW9uYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfb3ZlcmxheWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjcpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX3RoZW1lYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX2RpcmVjdGl2ZXNfY2xpY2tfb3V0c2lkZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX2RpcmVjdGl2ZXNfcmVzaXplX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fZGlyZWN0aXZlc190b3VjaF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcbl9fd2VicGFja19yZXF1aXJlX18oMTY1KTtcblxuXG5cblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1uYXZpZ2F0aW9uLWRyYXdlcicsXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfYXBwbGljYXRpb25hYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX292ZXJsYXlhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX3RoZW1lYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBkaXJlY3RpdmVzOiB7XG4gICAgQ2xpY2tPdXRzaWRlOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX2RpcmVjdGl2ZXNfY2xpY2tfb3V0c2lkZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLFxuICAgIFJlc2l6ZTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19kaXJlY3RpdmVzX3Jlc2l6ZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLFxuICAgIFRvdWNoOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX2RpcmVjdGl2ZXNfdG91Y2hfX1tcImFcIiAvKiBkZWZhdWx0ICovXVxuICB9LFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzQWN0aXZlOiBmYWxzZSxcbiAgICAgIHRvdWNoQXJlYToge1xuICAgICAgICBsZWZ0OiAwLFxuICAgICAgICByaWdodDogMFxuICAgICAgfVxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGFic29sdXRlOiBCb29sZWFuLFxuICAgIGNsaXBwZWQ6IEJvb2xlYW4sXG4gICAgZGlzYWJsZVJvdXRlV2F0Y2hlcjogQm9vbGVhbixcbiAgICBkaXNhYmxlUmVzaXplV2F0Y2hlcjogQm9vbGVhbixcbiAgICBoZWlnaHQ6IFN0cmluZyxcbiAgICBmaXhlZDogQm9vbGVhbixcbiAgICBmbG9hdGluZzogQm9vbGVhbixcbiAgICBtaW5pVmFyaWFudDogQm9vbGVhbixcbiAgICBtaW5pVmFyaWFudFdpZHRoOiB7XG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgZGVmYXVsdDogODBcbiAgICB9LFxuICAgIG1vYmlsZUJyZWFrUG9pbnQ6IHtcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiAxMjY0XG4gICAgfSxcbiAgICBwZXJtYW5lbnQ6IEJvb2xlYW4sXG4gICAgcmlnaHQ6IEJvb2xlYW4sXG4gICAgc3RhdGVsZXNzOiBCb29sZWFuLFxuICAgIHRlbXBvcmFyeTogQm9vbGVhbixcbiAgICB0b3VjaGxlc3M6IEJvb2xlYW4sXG4gICAgd2lkdGg6IHtcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiAzMDBcbiAgICB9LFxuICAgIHZhbHVlOiB7IHJlcXVpcmVkOiBmYWxzZSB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjYWxjdWxhdGVkSGVpZ2h0OiBmdW5jdGlvbiBjYWxjdWxhdGVkSGVpZ2h0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuaGVpZ2h0IHx8ICcxMDAlJztcbiAgICB9LFxuICAgIGNhbGN1bGF0ZWRXaWR0aDogZnVuY3Rpb24gY2FsY3VsYXRlZFdpZHRoKCkge1xuICAgICAgcmV0dXJuIHRoaXMubWluaVZhcmlhbnQgPyB0aGlzLm1pbmlWYXJpYW50V2lkdGggOiB0aGlzLndpZHRoO1xuICAgIH0sXG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICduYXZpZ2F0aW9uLWRyYXdlcic6IHRydWUsXG4gICAgICAgICduYXZpZ2F0aW9uLWRyYXdlci0tYWJzb2x1dGUnOiB0aGlzLmFic29sdXRlLFxuICAgICAgICAnbmF2aWdhdGlvbi1kcmF3ZXItLWNsaXBwZWQnOiB0aGlzLmNsaXBwZWQsXG4gICAgICAgICduYXZpZ2F0aW9uLWRyYXdlci0tY2xvc2UnOiAhdGhpcy5pc0FjdGl2ZSxcbiAgICAgICAgJ25hdmlnYXRpb24tZHJhd2VyLS1maXhlZCc6IHRoaXMuZml4ZWQsXG4gICAgICAgICduYXZpZ2F0aW9uLWRyYXdlci0tZmxvYXRpbmcnOiB0aGlzLmZsb2F0aW5nLFxuICAgICAgICAnbmF2aWdhdGlvbi1kcmF3ZXItLWlzLW1vYmlsZSc6IHRoaXMuaXNNb2JpbGUsXG4gICAgICAgICduYXZpZ2F0aW9uLWRyYXdlci0tbWluaS12YXJpYW50JzogdGhpcy5taW5pVmFyaWFudCxcbiAgICAgICAgJ25hdmlnYXRpb24tZHJhd2VyLS1vcGVuJzogdGhpcy5pc0FjdGl2ZSxcbiAgICAgICAgJ25hdmlnYXRpb24tZHJhd2VyLS1yaWdodCc6IHRoaXMucmlnaHQsXG4gICAgICAgICduYXZpZ2F0aW9uLWRyYXdlci0tdGVtcG9yYXJ5JzogdGhpcy50ZW1wb3JhcnksXG4gICAgICAgICd0aGVtZS0tZGFyayc6IHRoaXMuZGFyayxcbiAgICAgICAgJ3RoZW1lLS1saWdodCc6IHRoaXMubGlnaHRcbiAgICAgIH07XG4gICAgfSxcbiAgICBpc01vYmlsZTogZnVuY3Rpb24gaXNNb2JpbGUoKSB7XG4gICAgICByZXR1cm4gIXRoaXMucGVybWFuZW50ICYmICF0aGlzLnRlbXBvcmFyeSAmJiB0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQud2lkdGggPCBwYXJzZUludCh0aGlzLm1vYmlsZUJyZWFrUG9pbnQsIDEwKTtcbiAgICB9LFxuICAgIG1hcmdpblRvcDogZnVuY3Rpb24gbWFyZ2luVG9wKCkge1xuICAgICAgaWYgKCF0aGlzLmFwcCkgcmV0dXJuIDA7XG4gICAgICB2YXIgbWFyZ2luVG9wID0gdGhpcy4kdnVldGlmeS5hcHBsaWNhdGlvbi5iYXI7XG5cbiAgICAgIG1hcmdpblRvcCArPSB0aGlzLmNsaXBwZWQgPyB0aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uLnRvcCA6IDA7XG5cbiAgICAgIHJldHVybiBtYXJnaW5Ub3A7XG4gICAgfSxcbiAgICBtYXhIZWlnaHQ6IGZ1bmN0aW9uIG1heEhlaWdodCgpIHtcbiAgICAgIGlmICghdGhpcy5hcHApIHJldHVybiAnMTAwJSc7XG5cbiAgICAgIHJldHVybiB0aGlzLmNsaXBwZWQgPyB0aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uLnRvcCArIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYm90dG9tIDogdGhpcy4kdnVldGlmeS5hcHBsaWNhdGlvbi5ib3R0b207XG4gICAgfSxcbiAgICByZWFjdHNUb0NsaWNrOiBmdW5jdGlvbiByZWFjdHNUb0NsaWNrKCkge1xuICAgICAgcmV0dXJuICF0aGlzLnN0YXRlbGVzcyAmJiAhdGhpcy5wZXJtYW5lbnQgJiYgKHRoaXMuaXNNb2JpbGUgfHwgdGhpcy50ZW1wb3JhcnkpO1xuICAgIH0sXG4gICAgcmVhY3RzVG9Nb2JpbGU6IGZ1bmN0aW9uIHJlYWN0c1RvTW9iaWxlKCkge1xuICAgICAgcmV0dXJuICF0aGlzLmRpc2FibGVSZXNpemVXYXRjaGVyICYmICF0aGlzLnN0YXRlbGVzcyAmJiAhdGhpcy5wZXJtYW5lbnQgJiYgIXRoaXMudGVtcG9yYXJ5O1xuICAgIH0sXG4gICAgcmVhY3RzVG9Sb3V0ZTogZnVuY3Rpb24gcmVhY3RzVG9Sb3V0ZSgpIHtcbiAgICAgIHJldHVybiAhdGhpcy5kaXNhYmxlUm91dGVXYXRjaGVyICYmICF0aGlzLnN0YXRlbGVzcyAmJiAhdGhpcy5wZXJtYW5lbnQ7XG4gICAgfSxcbiAgICByZXNpemVJc0Rpc2FibGVkOiBmdW5jdGlvbiByZXNpemVJc0Rpc2FibGVkKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZGlzYWJsZVJlc2l6ZVdhdGNoZXIgfHwgdGhpcy5zdGF0ZWxlc3M7XG4gICAgfSxcbiAgICBzaG93T3ZlcmxheTogZnVuY3Rpb24gc2hvd092ZXJsYXkoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pc0FjdGl2ZSAmJiAodGhpcy50ZW1wb3JhcnkgfHwgdGhpcy5pc01vYmlsZSk7XG4gICAgfSxcbiAgICBzdHlsZXM6IGZ1bmN0aW9uIHN0eWxlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGhlaWdodDogdGhpcy5jYWxjdWxhdGVkSGVpZ2h0LFxuICAgICAgICBtYXJnaW5Ub3A6IHRoaXMubWFyZ2luVG9wICsgJ3B4JyxcbiAgICAgICAgbWF4SGVpZ2h0OiAnY2FsYygxMDAlIC0gJyArIHRoaXMubWF4SGVpZ2h0ICsgJ3B4KScsXG4gICAgICAgIHdpZHRoOiB0aGlzLmNhbGN1bGF0ZWRXaWR0aCArICdweCdcbiAgICAgIH07XG4gICAgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgJHJvdXRlOiBmdW5jdGlvbiAkcm91dGUoKSB7XG4gICAgICBpZiAodGhpcy5yZWFjdHNUb1JvdXRlKSB7XG4gICAgICAgIHRoaXMuaXNBY3RpdmUgPSAhdGhpcy5jbG9zZUNvbmRpdGlvbmFsKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUodmFsKSB7XG4gICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbCk7XG5cbiAgICAgIGlmICh0aGlzLnRlbXBvcmFyeSB8fCB0aGlzLmlzTW9iaWxlKSB7XG4gICAgICAgIHRoaXMudHJ5T3ZlcmxheSgpO1xuICAgICAgICB0aGlzLiRlbCAmJiAodGhpcy4kZWwuc2Nyb2xsVG9wID0gMCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudXBkYXRlQXBwbGljYXRpb24oKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogV2hlbiBtb2JpbGUgY2hhbmdlcywgYWRqdXN0XG4gICAgICogdGhlIGFjdGl2ZSBzdGF0ZSBvbmx5IHdoZW5cbiAgICAgKiB0aGVyZSBoYXMgYmVlbiBhIHByZXZpb3VzXG4gICAgICogdmFsdWVcbiAgICAgKi9cbiAgICBpc01vYmlsZTogZnVuY3Rpb24gaXNNb2JpbGUodmFsLCBwcmV2KSB7XG4gICAgICAhdmFsICYmIHRoaXMuaXNBY3RpdmUgJiYgIXRoaXMudGVtcG9yYXJ5ICYmIHRoaXMucmVtb3ZlT3ZlcmxheSgpO1xuXG4gICAgICBpZiAocHJldiA9PSBudWxsIHx8IHRoaXMucmVzaXplSXNEaXNhYmxlZCB8fCAhdGhpcy5yZWFjdHNUb01vYmlsZSkgcmV0dXJuO1xuXG4gICAgICB0aGlzLmlzQWN0aXZlID0gIXZhbDtcbiAgICAgIHRoaXMudXBkYXRlQXBwbGljYXRpb24oKTtcbiAgICB9LFxuICAgIG1pbmlWYXJpYW50OiBmdW5jdGlvbiBtaW5pVmFyaWFudCgpIHtcbiAgICAgIHRoaXMudXBkYXRlQXBwbGljYXRpb24oKTtcbiAgICB9LFxuICAgIHBlcm1hbmVudDogZnVuY3Rpb24gcGVybWFuZW50KHZhbCkge1xuICAgICAgLy8gSWYgZW5hYmxpbmcgcHJvcFxuICAgICAgLy8gZW5hYmxlIHRoZSBkcmF3ZXJcbiAgICAgIGlmICh2YWwpIHtcbiAgICAgICAgdGhpcy5pc0FjdGl2ZSA9IHRydWU7XG4gICAgICB9XG4gICAgICB0aGlzLnVwZGF0ZUFwcGxpY2F0aW9uKCk7XG4gICAgfSxcbiAgICByaWdodDogZnVuY3Rpb24gcmlnaHQodmFsLCBwcmV2KSB7XG4gICAgICAvLyBXaGVuIHRoZSB2YWx1ZSBjaGFuZ2VzXG4gICAgICAvLyByZXNldCBwcmV2aW91cyBkaXJlY3Rpb25cbiAgICAgIGlmIChwcmV2ICE9IG51bGwpIHtcbiAgICAgICAgdmFyIGRpciA9IHZhbCA/ICdsZWZ0JyA6ICdyaWdodCc7XG4gICAgICAgIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb25bZGlyXSA9IDA7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudXBkYXRlQXBwbGljYXRpb24oKTtcbiAgICB9LFxuICAgIHRlbXBvcmFyeTogZnVuY3Rpb24gdGVtcG9yYXJ5KHZhbCkge1xuICAgICAgdGhpcy50cnlPdmVybGF5KCk7XG4gICAgICB0aGlzLnVwZGF0ZUFwcGxpY2F0aW9uKCk7XG4gICAgfSxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUodmFsKSB7XG4gICAgICBpZiAodGhpcy5wZXJtYW5lbnQpIHJldHVybjtcblxuICAgICAgaWYgKHZhbCAhPT0gdGhpcy5pc0FjdGl2ZSkgdGhpcy5pc0FjdGl2ZSA9IHZhbDtcbiAgICB9XG4gIH0sXG5cbiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHtcbiAgICBpZiAodGhpcy5wZXJtYW5lbnQpIHtcbiAgICAgIHRoaXMuaXNBY3RpdmUgPSB0cnVlO1xuICAgIH0gZWxzZSBpZiAodGhpcy5zdGF0ZWxlc3MgfHwgdGhpcy52YWx1ZSAhPSBudWxsKSB7XG4gICAgICB0aGlzLmlzQWN0aXZlID0gdGhpcy52YWx1ZTtcbiAgICB9IGVsc2UgaWYgKCF0aGlzLnRlbXBvcmFyeSkge1xuICAgICAgdGhpcy5pc0FjdGl2ZSA9ICF0aGlzLmlzTW9iaWxlO1xuICAgIH1cbiAgfSxcbiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7XG4gICAgaWYgKHRoaXMuYXBwKSB7XG4gICAgICB0aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uW3RoaXMucmlnaHQgPyAncmlnaHQnIDogJ2xlZnQnXSA9IDA7XG4gICAgfVxuICB9LFxuXG5cbiAgbWV0aG9kczoge1xuICAgIGNhbGN1bGF0ZVRvdWNoQXJlYTogZnVuY3Rpb24gY2FsY3VsYXRlVG91Y2hBcmVhKCkge1xuICAgICAgaWYgKCF0aGlzLiRlbC5wYXJlbnROb2RlKSByZXR1cm47XG4gICAgICB2YXIgcGFyZW50UmVjdCA9IHRoaXMuJGVsLnBhcmVudE5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgIHRoaXMudG91Y2hBcmVhID0ge1xuICAgICAgICBsZWZ0OiBwYXJlbnRSZWN0LmxlZnQgKyA1MCxcbiAgICAgICAgcmlnaHQ6IHBhcmVudFJlY3QucmlnaHQgLSA1MFxuICAgICAgfTtcbiAgICB9LFxuICAgIGNsb3NlQ29uZGl0aW9uYWw6IGZ1bmN0aW9uIGNsb3NlQ29uZGl0aW9uYWwoKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZWFjdHNUb0NsaWNrO1xuICAgIH0sXG4gICAgZ2VuRGlyZWN0aXZlczogZnVuY3Rpb24gZ2VuRGlyZWN0aXZlcygpIHtcbiAgICAgIHZhciBkaXJlY3RpdmVzID0gW3sgbmFtZTogJ2NsaWNrLW91dHNpZGUnLCB2YWx1ZTogdGhpcy5jbG9zZUNvbmRpdGlvbmFsIH1dO1xuXG4gICAgICAhdGhpcy50b3VjaGxlc3MgJiYgZGlyZWN0aXZlcy5wdXNoKHtcbiAgICAgICAgbmFtZTogJ3RvdWNoJyxcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICBwYXJlbnQ6IHRydWUsXG4gICAgICAgICAgbGVmdDogdGhpcy5zd2lwZUxlZnQsXG4gICAgICAgICAgcmlnaHQ6IHRoaXMuc3dpcGVSaWdodFxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGRpcmVjdGl2ZXM7XG4gICAgfSxcbiAgICBzd2lwZVJpZ2h0OiBmdW5jdGlvbiBzd2lwZVJpZ2h0KGUpIHtcbiAgICAgIGlmICh0aGlzLmlzQWN0aXZlICYmICF0aGlzLnJpZ2h0KSByZXR1cm47XG4gICAgICB0aGlzLmNhbGN1bGF0ZVRvdWNoQXJlYSgpO1xuXG4gICAgICBpZiAoTWF0aC5hYnMoZS50b3VjaGVuZFggLSBlLnRvdWNoc3RhcnRYKSA8IDEwMCkgcmV0dXJuO2Vsc2UgaWYgKCF0aGlzLnJpZ2h0ICYmIGUudG91Y2hzdGFydFggPD0gdGhpcy50b3VjaEFyZWEubGVmdCkgdGhpcy5pc0FjdGl2ZSA9IHRydWU7ZWxzZSBpZiAodGhpcy5yaWdodCAmJiB0aGlzLmlzQWN0aXZlKSB0aGlzLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgfSxcbiAgICBzd2lwZUxlZnQ6IGZ1bmN0aW9uIHN3aXBlTGVmdChlKSB7XG4gICAgICBpZiAodGhpcy5pc0FjdGl2ZSAmJiB0aGlzLnJpZ2h0KSByZXR1cm47XG4gICAgICB0aGlzLmNhbGN1bGF0ZVRvdWNoQXJlYSgpO1xuXG4gICAgICBpZiAoTWF0aC5hYnMoZS50b3VjaGVuZFggLSBlLnRvdWNoc3RhcnRYKSA8IDEwMCkgcmV0dXJuO2Vsc2UgaWYgKHRoaXMucmlnaHQgJiYgZS50b3VjaHN0YXJ0WCA+PSB0aGlzLnRvdWNoQXJlYS5yaWdodCkgdGhpcy5pc0FjdGl2ZSA9IHRydWU7ZWxzZSBpZiAoIXRoaXMucmlnaHQgJiYgdGhpcy5pc0FjdGl2ZSkgdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgIH0sXG4gICAgdHJ5T3ZlcmxheTogZnVuY3Rpb24gdHJ5T3ZlcmxheSgpIHtcbiAgICAgIGlmICghdGhpcy5wZXJtYW5lbnQgJiYgdGhpcy5zaG93T3ZlcmxheSAmJiB0aGlzLmlzQWN0aXZlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdlbk92ZXJsYXkoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5yZW1vdmVPdmVybGF5KCk7XG4gICAgfSxcbiAgICB1cGRhdGVBcHBsaWNhdGlvbjogZnVuY3Rpb24gdXBkYXRlQXBwbGljYXRpb24oKSB7XG4gICAgICBpZiAoIXRoaXMuYXBwKSByZXR1cm47XG5cbiAgICAgIHZhciB3aWR0aCA9ICF0aGlzLmlzQWN0aXZlIHx8IHRoaXMudGVtcG9yYXJ5IHx8IHRoaXMuaXNNb2JpbGUgPyAwIDogdGhpcy5jYWxjdWxhdGVkV2lkdGg7XG5cbiAgICAgIGlmICh0aGlzLnJpZ2h0KSB7XG4gICAgICAgIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24ucmlnaHQgPSB3aWR0aDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24ubGVmdCA9IHdpZHRoO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciBkYXRhID0ge1xuICAgICAgJ2NsYXNzJzogdGhpcy5jbGFzc2VzLFxuICAgICAgc3R5bGU6IHRoaXMuc3R5bGVzLFxuICAgICAgZGlyZWN0aXZlczogdGhpcy5nZW5EaXJlY3RpdmVzKCksXG4gICAgICBvbjoge1xuICAgICAgICBjbGljazogZnVuY3Rpb24gY2xpY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLiRlbWl0KCd1cGRhdGU6bWluaVZhcmlhbnQnLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIGgoJ2FzaWRlJywgZGF0YSwgW3RoaXMuJHNsb3RzLmRlZmF1bHQsIGgoJ2RpdicsIHsgJ2NsYXNzJzogJ25hdmlnYXRpb24tZHJhd2VyX19ib3JkZXInIH0pXSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE2NSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDE2NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZQYWdpbmF0aW9uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE2Nyk7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlBhZ2luYXRpb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZQYWdpbmF0aW9uX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WUGFnaW5hdGlvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WUGFnaW5hdGlvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAxNjcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX2RpcmVjdGl2ZXNfcmVzaXplX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gZWxzZSB7IHJldHVybiBBcnJheS5mcm9tKGFycik7IH0gfVxuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE2OCk7XG5cblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1wYWdpbmF0aW9uJyxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc19jb2xvcmFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgZGlyZWN0aXZlczogeyBSZXNpemU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fZGlyZWN0aXZlc19yZXNpemVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSB9LFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1heEJ1dHRvbnM6IDAsXG4gICAgICBkZWZhdWx0Q29sb3I6ICdwcmltYXJ5J1xuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGNpcmNsZTogQm9vbGVhbixcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICBsZW5ndGg6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDAsXG4gICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpIHtcbiAgICAgICAgcmV0dXJuIHZhbCAlIDEgPT09IDA7XG4gICAgICB9XG4gICAgfSxcbiAgICB0b3RhbFZpc2libGU6IFtOdW1iZXIsIFN0cmluZ10sXG4gICAgbmV4dEljb246IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdjaGV2cm9uX3JpZ2h0J1xuICAgIH0sXG4gICAgcHJldkljb246IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdjaGV2cm9uX2xlZnQnXG4gICAgfSxcbiAgICB2YWx1ZToge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogMFxuICAgIH1cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAncGFnaW5hdGlvbic6IHRydWUsXG4gICAgICAgICdwYWdpbmF0aW9uLS1jaXJjbGUnOiB0aGlzLmNpcmNsZSxcbiAgICAgICAgJ3BhZ2luYXRpb24tLWRpc2FibGVkJzogdGhpcy5kaXNhYmxlZFxuICAgICAgfTtcbiAgICB9LFxuICAgIGl0ZW1zOiBmdW5jdGlvbiBpdGVtcygpIHtcbiAgICAgIHZhciBtYXhMZW5ndGggPSB0aGlzLnRvdGFsVmlzaWJsZSB8fCB0aGlzLm1heEJ1dHRvbnM7XG4gICAgICBpZiAodGhpcy5sZW5ndGggPD0gbWF4TGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJhbmdlKDEsIHRoaXMubGVuZ3RoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIGV2ZW4gPSBtYXhMZW5ndGggJSAyID09PSAwID8gMSA6IDA7XG4gICAgICB2YXIgbGVmdCA9IE1hdGguZmxvb3IobWF4TGVuZ3RoIC8gMik7XG4gICAgICB2YXIgcmlnaHQgPSB0aGlzLmxlbmd0aCAtIGxlZnQgKyAxICsgZXZlbjtcblxuICAgICAgaWYgKHRoaXMudmFsdWUgPj0gbGVmdCAmJiB0aGlzLnZhbHVlIDw9IHJpZ2h0KSB7XG4gICAgICAgIHZhciBzdGFydCA9IHRoaXMudmFsdWUgLSBsZWZ0ICsgMjtcbiAgICAgICAgdmFyIGVuZCA9IHRoaXMudmFsdWUgKyBsZWZ0IC0gMiAtIGV2ZW47XG5cbiAgICAgICAgcmV0dXJuIFsxLCAnLi4uJ10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnJhbmdlKHN0YXJ0LCBlbmQpKSwgWycuLi4nLCB0aGlzLmxlbmd0aF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5yYW5nZSgxLCBsZWZ0KSksIFsnLi4uJ10sIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnJhbmdlKHRoaXMubGVuZ3RoIC0gbGVmdCArIDEgKyBldmVuLCB0aGlzLmxlbmd0aCkpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUoKSB7XG4gICAgICB0aGlzLmluaXQoKTtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmluaXQoKTtcbiAgfSxcblxuXG4gIG1ldGhvZHM6IHtcbiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdGhpcy5zZWxlY3RlZCA9IG51bGw7XG5cbiAgICAgIC8vIFRPRE86IENoYW5nZSB0aGlzIChmNzVkZWUzYSwgY2JkZjdjYWEpXG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLnNlbGVjdGVkID0gX3RoaXMudmFsdWU7XG4gICAgICB9LCAxMDApO1xuICAgIH0sXG4gICAgb25SZXNpemU6IGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuICAgICAgdmFyIHdpZHRoID0gdGhpcy4kZWwgJiYgdGhpcy4kZWwucGFyZW50Tm9kZSA/IHRoaXMuJGVsLnBhcmVudE5vZGUuY2xpZW50V2lkdGggOiB3aW5kb3cuaW5uZXJXaWR0aDtcblxuICAgICAgdGhpcy5tYXhCdXR0b25zID0gTWF0aC5mbG9vcigod2lkdGggLSA5NikgLyA0Mik7XG4gICAgfSxcbiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy52YWx1ZSArIDEpO1xuICAgICAgdGhpcy4kZW1pdCgnbmV4dCcpO1xuICAgIH0sXG4gICAgcHJldmlvdXM6IGZ1bmN0aW9uIHByZXZpb3VzKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy52YWx1ZSAtIDEpO1xuICAgICAgdGhpcy4kZW1pdCgncHJldmlvdXMnKTtcbiAgICB9LFxuICAgIHJhbmdlOiBmdW5jdGlvbiByYW5nZShmcm9tLCB0bykge1xuICAgICAgdmFyIHJhbmdlID0gW107XG5cbiAgICAgIGZyb20gPSBmcm9tID4gMCA/IGZyb20gOiAxO1xuXG4gICAgICBmb3IgKHZhciBpID0gZnJvbTsgaSA8PSB0bzsgaSsrKSB7XG4gICAgICAgIHJhbmdlLnB1c2goaSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByYW5nZTtcbiAgICB9LFxuICAgIGdlbkljb246IGZ1bmN0aW9uIGdlbkljb24oaCwgaWNvbiwgZGlzYWJsZWQsIGZuKSB7XG4gICAgICByZXR1cm4gaCgnbGknLCBbaCgnYnV0dG9uJywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ3BhZ2luYXRpb25fX25hdmlnYXRpb24nLFxuICAgICAgICBjbGFzczoge1xuICAgICAgICAgICdwYWdpbmF0aW9uX19uYXZpZ2F0aW9uLS1kaXNhYmxlZCc6IGRpc2FibGVkXG4gICAgICAgIH0sXG4gICAgICAgIG9uOiBkaXNhYmxlZCA/IHt9IDogeyBjbGljazogZm4gfVxuICAgICAgfSwgW2goX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBbaWNvbl0pXSldKTtcbiAgICB9LFxuICAgIGdlbkl0ZW06IGZ1bmN0aW9uIGdlbkl0ZW0oaCwgaSkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBoKCdidXR0b24nLCB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAncGFnaW5hdGlvbl9faXRlbScsXG4gICAgICAgIGNsYXNzOiBpID09PSB0aGlzLnZhbHVlID8gdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyh7XG4gICAgICAgICAgJ3BhZ2luYXRpb25fX2l0ZW0tLWFjdGl2ZSc6IHRydWVcbiAgICAgICAgfSkgOiB7fSxcbiAgICAgICAgb246IHtcbiAgICAgICAgICBjbGljazogZnVuY3Rpb24gY2xpY2soKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRlbWl0KCdpbnB1dCcsIGkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgW2ldKTtcbiAgICB9LFxuICAgIGdlbkl0ZW1zOiBmdW5jdGlvbiBnZW5JdGVtcyhoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgcmV0dXJuIHRoaXMuaXRlbXMubWFwKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgIHJldHVybiBoKCdsaScsIFtpc05hTihpKSAmJiBoKCdzcGFuJywgeyBjbGFzczogJ3BhZ2luYXRpb25fX21vcmUnIH0sIFtpXSkgfHwgX3RoaXMzLmdlbkl0ZW0oaCwgaSldKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gW3RoaXMuZ2VuSWNvbihoLCB0aGlzLnByZXZJY29uLCB0aGlzLnZhbHVlIDw9IDEsIHRoaXMucHJldmlvdXMpLCB0aGlzLmdlbkl0ZW1zKGgpLCB0aGlzLmdlbkljb24oaCwgdGhpcy5uZXh0SWNvbiwgdGhpcy52YWx1ZSA+PSB0aGlzLmxlbmd0aCwgdGhpcy5uZXh0KV07XG5cbiAgICByZXR1cm4gaCgndWwnLCB7XG4gICAgICBkaXJlY3RpdmVzOiBbeyBuYW1lOiAncmVzaXplJywgdmFsdWU6IHRoaXMub25SZXNpemUgfV0sXG4gICAgICBjbGFzczogdGhpcy5jbGFzc2VzXG4gICAgfSwgY2hpbGRyZW4pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxNjggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAxNjkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WUGFyYWxsYXhfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTcwKTtcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WUGFyYWxsYXhfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZQYXJhbGxheF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlBhcmFsbGF4X19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZQYXJhbGxheF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAxNzAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfdHJhbnNsYXRhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE3Mik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE3MSk7XG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtcGFyYWxsYXgnLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX3RyYW5zbGF0YWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc0Jvb3RlZDogZmFsc2VcbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICBhbHQ6IFN0cmluZyxcbiAgICBoZWlnaHQ6IHtcbiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sXG4gICAgICBkZWZhdWx0OiA1MDBcbiAgICB9LFxuICAgIGp1bWJvdHJvbjogQm9vbGVhbixcbiAgICBzcmM6IFN0cmluZ1xuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgc3R5bGVzOiBmdW5jdGlvbiBzdHlsZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgICAgICBvcGFjaXR5OiB0aGlzLmlzQm9vdGVkID8gMSA6IDAsXG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgtNTAlLCAnICsgKHRoaXMuanVtYm90cm9uID8gMCA6IHRoaXMucGFyYWxsYXggKyAncHgnKSArICcpJ1xuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBwYXJhbGxheDogZnVuY3Rpb24gcGFyYWxsYXgoKSB7XG4gICAgICB0aGlzLmlzQm9vdGVkID0gdHJ1ZTtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmluaXQoKTtcbiAgfSxcblxuXG4gIG1ldGhvZHM6IHtcbiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKCF0aGlzLiRyZWZzLmltZykgcmV0dXJuO1xuXG4gICAgICBpZiAodGhpcy4kcmVmcy5pbWcuY29tcGxldGUpIHtcbiAgICAgICAgdGhpcy50cmFuc2xhdGUoKTtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuJHJlZnMuaW1nLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3RoaXMudHJhbnNsYXRlKCk7XG4gICAgICAgICAgX3RoaXMubGlzdGVuZXJzKCk7XG4gICAgICAgIH0sIGZhbHNlKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9iakhlaWdodDogZnVuY3Rpb24gb2JqSGVpZ2h0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuaW1nLm5hdHVyYWxIZWlnaHQ7XG4gICAgfSxcbiAgICBlbE9mZnNldFRvcDogZnVuY3Rpb24gZWxPZmZzZXRUb3AoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kZWwub2Zmc2V0VG9wO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIGltZ0RhdGEgPSB7XG4gICAgICBzdGF0aWNDbGFzczogJ3BhcmFsbGF4X19pbWFnZScsXG4gICAgICAnY2xhc3MnOiB7XG4gICAgICAgICdwYXJhbGxheF9faW1hZ2UtLWp1bWJvdHJvbic6IHRoaXMuanVtYm90cm9uXG4gICAgICB9LFxuICAgICAgc3R5bGU6IHRoaXMuc3R5bGVzLFxuICAgICAgYXR0cnM6IHtcbiAgICAgICAgc3JjOiB0aGlzLnNyY1xuICAgICAgfSxcbiAgICAgIHJlZjogJ2ltZydcbiAgICB9O1xuXG4gICAgaWYgKHRoaXMuYWx0KSBpbWdEYXRhLmF0dHJzLmFsdCA9IHRoaXMuYWx0O1xuXG4gICAgdmFyIGNvbnRhaW5lciA9IGgoJ2RpdicsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiAncGFyYWxsYXhfX2ltYWdlLWNvbnRhaW5lcidcbiAgICB9LCBbaCgnaW1nJywgaW1nRGF0YSldKTtcblxuICAgIHZhciBjb250ZW50ID0gaCgnZGl2Jywge1xuICAgICAgc3RhdGljQ2xhc3M6ICdwYXJhbGxheF9fY29udGVudCdcbiAgICB9LCB0aGlzLiRzbG90cy5kZWZhdWx0KTtcblxuICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICBzdGF0aWNDbGFzczogJ3BhcmFsbGF4JyxcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGhlaWdodDogdGhpcy5qdW1ib3Ryb24gPyB0aGlzLm5vcm1hbGl6ZWRIZWlnaHQgOiB0aGlzLm5vcm1hbGl6ZWRIZWlnaHQgKyAncHgnXG4gICAgICB9LFxuICAgICAgb246IHRoaXMuJGxpc3RlbmVyc1xuICAgIH0sIFtjb250YWluZXIsIGNvbnRlbnRdKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTcxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogMTcyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhcmFsbGF4OiBudWxsLFxuICAgICAgcGFyYWxsYXhEaXN0OiBudWxsLFxuICAgICAgcGVyY2VudFNjcm9sbGVkOiBudWxsLFxuICAgICAgc2Nyb2xsVG9wOiBudWxsLFxuICAgICAgd2luZG93SGVpZ2h0OiBudWxsLFxuICAgICAgd2luZG93Qm90dG9tOiBudWxsXG4gICAgfTtcbiAgfSxcblxuXG4gIGNvbXB1dGVkOiB7XG4gICAgbm9ybWFsaXplZEhlaWdodDogZnVuY3Rpb24gbm9ybWFsaXplZEhlaWdodCgpIHtcbiAgICAgIGlmICh0aGlzLmp1bWJvdHJvbikge1xuICAgICAgICByZXR1cm4gaXNOYU4odGhpcy5oZWlnaHQpID8gdGhpcy5oZWlnaHQgOiB0aGlzLmhlaWdodCArICdweCc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBOdW1iZXIodGhpcy5oZWlnaHQudG9TdHJpbmcoKS5yZXBsYWNlKC8oXlswLTldKiQpLywgJyQxJykpO1xuICAgIH0sXG4gICAgaW1nSGVpZ2h0OiBmdW5jdGlvbiBpbWdIZWlnaHQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5vYmpIZWlnaHQoKTtcbiAgICB9XG4gIH0sXG5cbiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy50cmFuc2xhdGUsIGZhbHNlKTtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy50cmFuc2xhdGUsIGZhbHNlKTtcbiAgfSxcblxuXG4gIG1ldGhvZHM6IHtcbiAgICBsaXN0ZW5lcnM6IGZ1bmN0aW9uIGxpc3RlbmVycygpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLnRyYW5zbGF0ZSwgZmFsc2UpO1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMudHJhbnNsYXRlLCBmYWxzZSk7XG4gICAgfSxcbiAgICB0cmFuc2xhdGU6IGZ1bmN0aW9uIHRyYW5zbGF0ZSgpIHtcbiAgICAgIHRoaXMuY2FsY0RpbWVuc2lvbnMoKTtcblxuICAgICAgdGhpcy5wZXJjZW50U2Nyb2xsZWQgPSAodGhpcy53aW5kb3dCb3R0b20gLSB0aGlzLmVsT2Zmc2V0VG9wKSAvICh0aGlzLm5vcm1hbGl6ZWRIZWlnaHQgKyB0aGlzLndpbmRvd0hlaWdodCk7XG5cbiAgICAgIHRoaXMucGFyYWxsYXggPSBNYXRoLnJvdW5kKHRoaXMucGFyYWxsYXhEaXN0ICogdGhpcy5wZXJjZW50U2Nyb2xsZWQpO1xuXG4gICAgICBpZiAodGhpcy50cmFuc2xhdGVkKSB7XG4gICAgICAgIHRoaXMudHJhbnNsYXRlZCgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgY2FsY0RpbWVuc2lvbnM6IGZ1bmN0aW9uIGNhbGNEaW1lbnNpb25zKCkge1xuICAgICAgdmFyIG9mZnNldCA9IHRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgICB0aGlzLnNjcm9sbFRvcCA9IHdpbmRvdy5wYWdlWU9mZnNldDtcbiAgICAgIHRoaXMucGFyYWxsYXhEaXN0ID0gdGhpcy5pbWdIZWlnaHQgLSB0aGlzLm5vcm1hbGl6ZWRIZWlnaHQ7XG4gICAgICB0aGlzLmVsT2Zmc2V0VG9wID0gb2Zmc2V0LnRvcCArIHRoaXMuc2Nyb2xsVG9wO1xuICAgICAgdGhpcy53aW5kb3dIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgICB0aGlzLndpbmRvd0JvdHRvbSA9IHRoaXMuc2Nyb2xsVG9wICsgdGhpcy53aW5kb3dIZWlnaHQ7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxNzMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WUHJvZ3Jlc3NDaXJjdWxhcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNzQpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZQcm9ncmVzc0NpcmN1bGFyX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WUHJvZ3Jlc3NDaXJjdWxhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlByb2dyZXNzQ2lyY3VsYXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlByb2dyZXNzQ2lyY3VsYXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogMTc0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbl9fd2VicGFja19yZXF1aXJlX18oMTc1KTtcblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1wcm9ncmVzcy1jaXJjdWxhcicsXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfY29sb3JhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIHByb3BzOiB7XG4gICAgYnV0dG9uOiBCb29sZWFuLFxuXG4gICAgZmlsbDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmluZGV0ZXJtaW5hdGUgPyAnbm9uZScgOiAndHJhbnNwYXJlbnQnO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBpbmRldGVybWluYXRlOiBCb29sZWFuLFxuXG4gICAgcm90YXRlOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAwXG4gICAgfSxcblxuICAgIHNpemU6IHtcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiAzMlxuICAgIH0sXG5cbiAgICB3aWR0aDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogNFxuICAgIH0sXG5cbiAgICB2YWx1ZToge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogMFxuICAgIH1cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNhbGN1bGF0ZWRTaXplOiBmdW5jdGlvbiBjYWxjdWxhdGVkU2l6ZSgpIHtcbiAgICAgIHZhciBzaXplID0gTnVtYmVyKHRoaXMuc2l6ZSk7XG5cbiAgICAgIGlmICh0aGlzLmJ1dHRvbikge1xuICAgICAgICBzaXplICs9IDg7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzaXplO1xuICAgIH0sXG4gICAgY2lyY3VtZmVyZW5jZTogZnVuY3Rpb24gY2lyY3VtZmVyZW5jZSgpIHtcbiAgICAgIHJldHVybiAyICogTWF0aC5QSSAqIHRoaXMucmFkaXVzO1xuICAgIH0sXG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB0aGlzLmFkZFRleHRDb2xvckNsYXNzQ2hlY2tzKHtcbiAgICAgICAgJ3Byb2dyZXNzLWNpcmN1bGFyJzogdHJ1ZSxcbiAgICAgICAgJ3Byb2dyZXNzLWNpcmN1bGFyLS1pbmRldGVybWluYXRlJzogdGhpcy5pbmRldGVybWluYXRlLFxuICAgICAgICAncHJvZ3Jlc3MtY2lyY3VsYXItLWJ1dHRvbic6IHRoaXMuYnV0dG9uXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGN4eTogZnVuY3Rpb24gY3h5KCkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5kZXRlcm1pbmF0ZSAmJiAhdGhpcy5idXR0b24gPyA1MCA6IHRoaXMuY2FsY3VsYXRlZFNpemUgLyAyO1xuICAgIH0sXG4gICAgbm9ybWFsaXplZFZhbHVlOiBmdW5jdGlvbiBub3JtYWxpemVkVmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy52YWx1ZSA8IDApIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnZhbHVlID4gMTAwKSB7XG4gICAgICAgIHJldHVybiAxMDA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH0sXG4gICAgcmFkaXVzOiBmdW5jdGlvbiByYWRpdXMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pbmRldGVybWluYXRlICYmICF0aGlzLmJ1dHRvbiA/IDIwIDogKHRoaXMuY2FsY3VsYXRlZFNpemUgLSB0aGlzLndpZHRoKSAvIDI7XG4gICAgfSxcbiAgICBzdHJva2VEYXNoQXJyYXk6IGZ1bmN0aW9uIHN0cm9rZURhc2hBcnJheSgpIHtcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMuY2lyY3VtZmVyZW5jZSAqIDEwMDApIC8gMTAwMDtcbiAgICB9LFxuICAgIHN0cm9rZURhc2hPZmZzZXQ6IGZ1bmN0aW9uIHN0cm9rZURhc2hPZmZzZXQoKSB7XG4gICAgICByZXR1cm4gKDEwMCAtIHRoaXMubm9ybWFsaXplZFZhbHVlKSAvIDEwMCAqIHRoaXMuY2lyY3VtZmVyZW5jZSArICdweCc7XG4gICAgfSxcbiAgICBzdHlsZXM6IGZ1bmN0aW9uIHN0eWxlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGhlaWdodDogdGhpcy5jYWxjdWxhdGVkU2l6ZSArICdweCcsXG4gICAgICAgIHdpZHRoOiB0aGlzLmNhbGN1bGF0ZWRTaXplICsgJ3B4J1xuICAgICAgfTtcbiAgICB9LFxuICAgIHN2Z1NpemU6IGZ1bmN0aW9uIHN2Z1NpemUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pbmRldGVybWluYXRlID8gZmFsc2UgOiB0aGlzLmNhbGN1bGF0ZWRTaXplO1xuICAgIH0sXG4gICAgc3ZnU3R5bGVzOiBmdW5jdGlvbiBzdmdTdHlsZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoJyArIHRoaXMucm90YXRlICsgJ2RlZyknXG4gICAgICB9O1xuICAgIH0sXG4gICAgdmlld0JveDogZnVuY3Rpb24gdmlld0JveCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmluZGV0ZXJtaW5hdGUgPyAnMjUgMjUgNTAgNTAnIDogZmFsc2U7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBnZW5DaXJjbGU6IGZ1bmN0aW9uIGdlbkNpcmNsZShoLCBuYW1lLCBvZmZzZXQpIHtcbiAgICAgIHJldHVybiBoKCdjaXJjbGUnLCB7XG4gICAgICAgIGNsYXNzOiAncHJvZ3Jlc3MtY2lyY3VsYXJfXycgKyBuYW1lLFxuICAgICAgICBhdHRyczoge1xuICAgICAgICAgIGZpbGw6ICd0cmFuc3BhcmVudCcsXG4gICAgICAgICAgY3g6IHRoaXMuY3h5LFxuICAgICAgICAgIGN5OiB0aGlzLmN4eSxcbiAgICAgICAgICByOiB0aGlzLnJhZGl1cyxcbiAgICAgICAgICAnc3Ryb2tlLXdpZHRoJzogdGhpcy53aWR0aCxcbiAgICAgICAgICAnc3Ryb2tlLWRhc2hhcnJheSc6IHRoaXMuc3Ryb2tlRGFzaEFycmF5LFxuICAgICAgICAgICdzdHJva2UtZGFzaG9mZnNldCc6IG9mZnNldFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdlblN2ZzogZnVuY3Rpb24gZ2VuU3ZnKGgpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IFshdGhpcy5pbmRldGVybWluYXRlICYmIHRoaXMuZ2VuQ2lyY2xlKGgsICd1bmRlcmxheScsIDApLCB0aGlzLmdlbkNpcmNsZShoLCAnb3ZlcmxheScsIHRoaXMuc3Ryb2tlRGFzaE9mZnNldCldO1xuXG4gICAgICByZXR1cm4gaCgnc3ZnJywge1xuICAgICAgICBzdHlsZTogdGhpcy5zdmdTdHlsZXMsXG4gICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgeG1sbnM6ICdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsXG4gICAgICAgICAgaGVpZ2h0OiB0aGlzLnN2Z1NpemUsXG4gICAgICAgICAgd2lkdGg6IHRoaXMuc3ZnU2l6ZSxcbiAgICAgICAgICB2aWV3Qm94OiB0aGlzLnZpZXdCb3hcbiAgICAgICAgfVxuICAgICAgfSwgY2hpbGRyZW4pO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIGluZm8gPSBoKCdkaXYnLCB7IGNsYXNzOiAncHJvZ3Jlc3MtY2lyY3VsYXJfX2luZm8nIH0sIFt0aGlzLiRzbG90cy5kZWZhdWx0XSk7XG4gICAgdmFyIHN2ZyA9IHRoaXMuZ2VuU3ZnKGgpO1xuXG4gICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgIGNsYXNzOiB0aGlzLmNsYXNzZXMsXG4gICAgICBzdHlsZTogdGhpcy5zdHlsZXMsXG4gICAgICBvbjogdGhpcy4kbGlzdGVuZXJzXG4gICAgfSwgW3N2ZywgaW5mb10pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxNzUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAxNzYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WUmFkaW9Hcm91cF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNzcpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVlJhZGlvX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE3OSk7XG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWUmFkaW9Hcm91cCAqL1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVlJhZGlvICovXG5cblxuXG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlJhZGlvR3JvdXBfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZSYWRpb0dyb3VwX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WUmFkaW9Hcm91cF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZSYWRpb19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVlJhZGlvX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZSYWRpb0dyb3VwX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDE3NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19pbnB1dF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfcmVnaXN0cmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTgpO1xuLy8gU3R5bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE0KTtcbl9fd2VicGFja19yZXF1aXJlX18oMjEpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxNzgpO1xuXG4vLyBNaXhpbnNcblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1yYWRpby1ncm91cCcsXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfaW5wdXRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX3JlZ2lzdHJhYmxlX19bXCJiXCIgLyogcHJvdmlkZSAqL10pKCdyYWRpbycpXSxcblxuICBtb2RlbDoge1xuICAgIHByb3A6ICdpbnB1dFZhbHVlJyxcbiAgICBldmVudDogJ2NoYW5nZSdcbiAgfSxcblxuICBwcm92aWRlOiBmdW5jdGlvbiBwcm92aWRlKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgaXNNYW5kYXRvcnk6IGZ1bmN0aW9uIGlzTWFuZGF0b3J5KCkge1xuICAgICAgICByZXR1cm4gX3RoaXMubWFuZGF0b3J5O1xuICAgICAgfSxcbiAgICAgIG5hbWU6IGZ1bmN0aW9uIG5hbWUoKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5uYW1lO1xuICAgICAgfVxuICAgIH07XG4gIH0sXG5cblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbnRlcm5hbFRhYkluZGV4OiAtMSxcbiAgICAgIHJhZGlvczogW11cbiAgICB9O1xuICB9LFxuXG4gIHByb3BzOiB7XG4gICAgY29sdW1uOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgIH0sXG4gICAgaW5wdXRWYWx1ZTogbnVsbCxcbiAgICBtYW5kYXRvcnk6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlXG4gICAgfSxcbiAgICBuYW1lOiBTdHJpbmcsXG4gICAgcm93OiBCb29sZWFuXG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBoYXNFcnJvcjogZnVuY3Rpb24gaGFzRXJyb3IodmFsKSB7XG4gICAgICB0aGlzLnJhZGlvcy5mb3JFYWNoKGZ1bmN0aW9uIChyYWRpbykge1xuICAgICAgICByYWRpby5wYXJlbnRFcnJvciA9IHZhbDtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgaW5wdXRWYWx1ZTogZnVuY3Rpb24gaW5wdXRWYWx1ZSh2YWwpIHtcbiAgICAgIHRoaXMucmFkaW9zLmZvckVhY2goZnVuY3Rpb24gKHJhZGlvKSB7XG4gICAgICAgIHJhZGlvLmlzQWN0aXZlID0gdmFsID09PSByYWRpby52YWx1ZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAncmFkaW8tZ3JvdXAnOiB0cnVlLFxuICAgICAgICAncmFkaW8tZ3JvdXAtLWNvbHVtbic6IHRoaXMuY29sdW1uICYmICF0aGlzLnJvdyxcbiAgICAgICAgJ3JhZGlvLWdyb3VwLS1yb3cnOiB0aGlzLnJvdyxcbiAgICAgICAgJ2Vycm9yLS10ZXh0JzogdGhpcy5oYXNFcnJvclxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIHRvZ2dsZVJhZGlvOiBmdW5jdGlvbiB0b2dnbGVSYWRpbyh2YWx1ZSkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zaG91bGRWYWxpZGF0ZSA9IHRydWU7XG4gICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB2YWx1ZSk7XG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczIudmFsaWRhdGUoKTtcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLnJhZGlvcy5maWx0ZXIoZnVuY3Rpb24gKHIpIHtcbiAgICAgICAgcmV0dXJuIHIudmFsdWUgIT09IHZhbHVlO1xuICAgICAgfSkuZm9yRWFjaChmdW5jdGlvbiAocikge1xuICAgICAgICByZXR1cm4gci5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICByYWRpb0JsdXI6IGZ1bmN0aW9uIHJhZGlvQmx1cihlKSB7XG4gICAgICBpZiAoIWUucmVsYXRlZFRhcmdldCB8fCAhZS5yZWxhdGVkVGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncmFkaW8nKSkge1xuICAgICAgICB0aGlzLnNob3VsZFZhbGlkYXRlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy4kZW1pdCgnYmx1cicsIHRoaXMuaW5wdXRWYWx1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIocmFkaW8pIHtcbiAgICAgIHJhZGlvLmlzQWN0aXZlID0gdGhpcy5pbnB1dFZhbHVlID09PSByYWRpby52YWx1ZTtcbiAgICAgIHJhZGlvLiRlbC50YWJJbmRleCA9IHJhZGlvLiRlbC50YWJJbmRleCA+IDAgPyByYWRpby4kZWwudGFiSW5kZXggOiAwO1xuICAgICAgcmFkaW8uJG9uKCdjaGFuZ2UnLCB0aGlzLnRvZ2dsZVJhZGlvKTtcbiAgICAgIHJhZGlvLiRvbignYmx1cicsIHRoaXMucmFkaW9CbHVyKTtcbiAgICAgIHJhZGlvLiRvbignZm9jdXMnLCB0aGlzLnJhZGlvRm9jdXMpO1xuICAgICAgdGhpcy5yYWRpb3MucHVzaChyYWRpbyk7XG4gICAgfSxcbiAgICB1bnJlZ2lzdGVyOiBmdW5jdGlvbiB1bnJlZ2lzdGVyKHJhZGlvKSB7XG4gICAgICByYWRpby4kb2ZmKCdjaGFuZ2UnLCB0aGlzLnRvZ2dsZVJhZGlvKTtcbiAgICAgIHJhZGlvLiRvZmYoJ2JsdXInLCB0aGlzLnJhZGlvQmx1cik7XG4gICAgICByYWRpby4kb2ZmKCdmb2N1cycsIHRoaXMucmFkaW9Gb2N1cyk7XG5cbiAgICAgIHZhciBpbmRleCA9IHRoaXMucmFkaW9zLmZpbmRJbmRleChmdW5jdGlvbiAocikge1xuICAgICAgICByZXR1cm4gciA9PT0gcmFkaW87XG4gICAgICB9KTtcblxuICAgICAgaWYgKGluZGV4ID4gLTEpIHRoaXMucmFkaW9zLnNwbGljZShpbmRleCwgMSk7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgZGF0YSA9IHtcbiAgICAgIGF0dHJzOiB7XG4gICAgICAgIHJvbGU6ICdyYWRpb2dyb3VwJ1xuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMuZ2VuSW5wdXRHcm91cCh0aGlzLiRzbG90cy5kZWZhdWx0LCBkYXRhKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTc4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogMTc5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdHJhbnNpdGlvbnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WSWNvbl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc19jb2xvcmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19taXhpbnNfcmlwcGxlYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfdGFiX2ZvY3VzYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxODApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fbWl4aW5zX3RoZW1lYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX21peGluc19yZWdpc3RyYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOCk7XG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbi8vIENvbXBvbmVudHNcblxuXG5cbi8vIE1peGluc1xuXG5cblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LXJhZGlvJyxcblxuICBpbmhlcml0QXR0cnM6IGZhbHNlLFxuXG4gIGluamVjdDogWydpc01hbmRhdG9yeScsICduYW1lJ10sXG5cbiAgY29tcG9uZW50czoge1xuICAgIFZGYWRlVHJhbnNpdGlvbjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX190cmFuc2l0aW9uc19fW1wiYlwiIC8qIFZGYWRlVHJhbnNpdGlvbiAqL10sXG4gICAgVkljb246IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVkljb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXVxuICB9LFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc19yaXBwbGVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX21peGluc19yZWdpc3RyYWJsZV9fW1wiYVwiIC8qIGluamVjdCAqL10pKCdyYWRpbycsICd2LXJhZGlvJywgJ3YtcmFkaW8tZ3JvdXAnKSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfdGFiX2ZvY3VzYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX21peGluc190aGVtZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGVmYXVsdENvbG9yOiAnYWNjZW50JyxcbiAgICAgIGlzQWN0aXZlOiBmYWxzZSxcbiAgICAgIHBhcmVudEVycm9yOiBmYWxzZVxuICAgIH07XG4gIH0sXG5cbiAgcHJvcHM6IHtcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICB2YWx1ZTogbnVsbCxcbiAgICBsYWJlbDogU3RyaW5nXG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgdmFyIGNsYXNzZXMgPSB7XG4gICAgICAgICdpbnB1dC1ncm91cCc6IHRydWUsXG4gICAgICAgICdpbnB1dC1ncm91cC0tYWN0aXZlJzogdGhpcy5pc0FjdGl2ZSxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1kaXNhYmxlZCc6IHRoaXMuZGlzYWJsZWQsXG4gICAgICAgICdpbnB1dC1ncm91cC0tc2VsZWN0aW9uLWNvbnRyb2xzJzogdHJ1ZSxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS10YWItZm9jdXNlZCc6IHRoaXMudGFiRm9jdXNlZCxcbiAgICAgICAgJ3JhZGlvJzogdHJ1ZSxcbiAgICAgICAgJ3RoZW1lLS1kYXJrJzogdGhpcy5kYXJrLFxuICAgICAgICAndGhlbWUtLWxpZ2h0JzogdGhpcy5saWdodFxuICAgICAgfTtcblxuICAgICAgaWYgKCF0aGlzLnBhcmVudEVycm9yKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFkZFRleHRDb2xvckNsYXNzQ2hlY2tzKGNsYXNzZXMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY2xhc3NlcztcbiAgICB9LFxuICAgIGljb246IGZ1bmN0aW9uIGljb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5pc0FjdGl2ZSA/ICdyYWRpb19idXR0b25fY2hlY2tlZCcgOiAncmFkaW9fYnV0dG9uX3VuY2hlY2tlZCc7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBnZW5JbnB1dDogZnVuY3Rpb24gZ2VuSW5wdXQocmFkaW8pIHtcbiAgICAgIHZhciB2YWx1ZSA9IFsnc3RyaW5nJywgJ251bWJlciddLmluY2x1ZGVzKF90eXBlb2YodGhpcy52YWx1ZSkpID8gdGhpcy52YWx1ZSA6IEpTT04uc3RyaW5naWZ5KHRoaXMudmFsdWUpO1xuICAgICAgdmFyIGlucHV0ID0gdGhpcy4kY3JlYXRlRWxlbWVudCgnaW5wdXQnLCB7XG4gICAgICAgIHJlZjogJ2lucHV0JyxcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnbm9uZSdcbiAgICAgICAgfSxcbiAgICAgICAgYXR0cnM6IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSAmJiB0aGlzLm5hbWUoKSxcbiAgICAgICAgICBpZDogdGhpcy5pZCxcbiAgICAgICAgICB0eXBlOiAncmFkaW8nLFxuICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9LCB0aGlzLiRhdHRycylcbiAgICAgIH0sIFt2YWx1ZV0pO1xuXG4gICAgICByYWRpby5wdXNoKGlucHV0KTtcblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgY2xhc3M6ICdpbnB1dC1ncm91cF9faW5wdXQnXG4gICAgICB9LCByYWRpbyk7XG4gICAgfSxcbiAgICBnZW5XcmFwcGVyOiBmdW5jdGlvbiBnZW5XcmFwcGVyKHJhZGlvKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgY2hpbGRyZW4gPSBbXTtcblxuICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkxhYmVsKCkpO1xuICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLmdlbklucHV0KHJhZGlvKSk7XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgIGNsYXNzOiB0aGlzLmNsYXNzZXMsXG4gICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgcm9sZTogJ3JhZGlvJyxcbiAgICAgICAgICAnYXJpYS1jaGVja2VkJzogdGhpcy5pc0FjdGl2ZSAmJiAndHJ1ZScgfHwgJ2ZhbHNlJyxcbiAgICAgICAgICAnYXJpYS1sYWJlbCc6IHRoaXMubGFiZWxcbiAgICAgICAgfSxcbiAgICAgICAgb246IHtcbiAgICAgICAgICBrZXlkb3duOiBmdW5jdGlvbiBrZXlkb3duKGUpIHtcbiAgICAgICAgICAgIGlmIChbMTMsIDMyXS5pbmNsdWRlcyhlLmtleUNvZGUpKSB7XG4gICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgX3RoaXMudG9nZ2xlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBibHVyOiBmdW5jdGlvbiBibHVyKGUpIHtcbiAgICAgICAgICAgIF90aGlzLiRlbWl0KCdibHVyJywgZSk7XG4gICAgICAgICAgICBfdGhpcy50YWJGb2N1c2VkID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBjaGlsZHJlbik7XG4gICAgfSxcbiAgICBnZW5MYWJlbDogZnVuY3Rpb24gZ2VuTGFiZWwoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnbGFiZWwnLCB7XG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgY2xpY2s6IHRoaXMudG9nZ2xlXG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMuJHNsb3RzLmxhYmVsIHx8IHRoaXMubGFiZWwpO1xuICAgIH0sXG4gICAgdG9nZ2xlOiBmdW5jdGlvbiB0b2dnbGUoKSB7XG4gICAgICB2YXIgbWFuZGF0b3J5ID0gdGhpcy5pc01hbmRhdG9yeSAmJiB0aGlzLmlzTWFuZGF0b3J5KCkgfHwgZmFsc2U7XG5cbiAgICAgIGlmICghdGhpcy5kaXNhYmxlZCAmJiAoIXRoaXMuaXNBY3RpdmUgfHwgIW1hbmRhdG9yeSkpIHtcbiAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC5jaGVja2VkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5pc0FjdGl2ZSA9IHRydWU7XG4gICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHRoaXMudmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMucmFkaW8ucmVnaXN0ZXIodGhpcyk7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgdGhpcy5yYWRpby51bnJlZ2lzdGVyKHRoaXMpO1xuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIHRyYW5zaXRpb24gPSBoKCd2LWZhZGUtdHJhbnNpdGlvbicsIHt9LCBbaCgndi1pY29uJywge1xuICAgICAgc3RhdGljQ2xhc3M6ICdpY29uLS1zZWxlY3Rpb24tY29udHJvbCcsXG4gICAgICAnY2xhc3MnOiB7XG4gICAgICAgICdpY29uLS1yYWRpbyc6IHRoaXMuaXNBY3RpdmVcbiAgICAgIH0sXG4gICAgICBrZXk6IHRoaXMuaWNvbixcbiAgICAgIG9uOiBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgY2xpY2s6IHRoaXMudG9nZ2xlXG4gICAgICB9LCB0aGlzLiRsaXN0ZW5lcnMpXG4gICAgfSwgdGhpcy5pY29uKV0pO1xuXG4gICAgdmFyIHJpcHBsZSA9IHRoaXMucmlwcGxlID8gdGhpcy5nZW5SaXBwbGUoKSA6IG51bGw7XG5cbiAgICByZXR1cm4gdGhpcy5nZW5XcmFwcGVyKFt0cmFuc2l0aW9uLCByaXBwbGVdKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTgwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRhYkZvY3VzZWQ6IGZhbHNlXG4gICAgfTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTgxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlNsaWRlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxODIpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTbGlkZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTbGlkZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTbGlkZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlNsaWRlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAxODIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfY29sb3JhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX2lucHV0X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX2RpcmVjdGl2ZXNfY2xpY2tfb3V0c2lkZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcbl9fd2VicGFja19yZXF1aXJlX18oMTgzKTtcblxuXG5cblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3Ytc2xpZGVyJyxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19jb2xvcmFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfaW5wdXRfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgZGlyZWN0aXZlczogeyBDbGlja091dHNpZGU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fZGlyZWN0aXZlc19jbGlja19vdXRzaWRlX19bXCJhXCIgLyogZGVmYXVsdCAqL10gfSxcblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhcHA6IHt9LFxuICAgICAgZGVmYXVsdENvbG9yOiAncHJpbWFyeScsXG4gICAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgICBrZXlQcmVzc2VkOiAwXG4gICAgfTtcbiAgfSxcblxuXG4gIHByb3BzOiB7XG4gICAgbWluOiB7XG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgZGVmYXVsdDogMFxuICAgIH0sXG4gICAgbWF4OiB7XG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgZGVmYXVsdDogMTAwXG4gICAgfSxcbiAgICBzdGVwOiB7XG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgZGVmYXVsdDogMVxuICAgIH0sXG4gICAgdGlja3M6IEJvb2xlYW4sXG4gICAgdGh1bWJDb2xvcjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogbnVsbFxuICAgIH0sXG4gICAgdGh1bWJMYWJlbDogQm9vbGVhbixcbiAgICB0cmFja0NvbG9yOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiBudWxsXG4gICAgfSxcbiAgICB2YWx1ZTogW051bWJlciwgU3RyaW5nXVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICdpbnB1dC1ncm91cC0tc2xpZGVyJzogdHJ1ZSxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1hY3RpdmUnOiB0aGlzLmlzQWN0aXZlLFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLWRpcnR5JzogdGhpcy5pbnB1dFdpZHRoID4gMCxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1kaXNhYmxlZCc6IHRoaXMuZGlzYWJsZWQsXG4gICAgICAgICdpbnB1dC1ncm91cC0tdGlja3MnOiAhdGhpcy5kaXNhYmxlZCAmJiB0aGlzLnN0ZXBOdW1lcmljICYmIHRoaXMudGlja3NcbiAgICAgIH07XG4gICAgfSxcbiAgICBjb21wdXRlZENvbG9yOiBmdW5jdGlvbiBjb21wdXRlZENvbG9yKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZGlzYWJsZWQgPyBudWxsIDogdGhpcy5jb2xvciB8fCB0aGlzLmRlZmF1bHRDb2xvcjtcbiAgICB9LFxuICAgIGNvbXB1dGVkVHJhY2tDb2xvcjogZnVuY3Rpb24gY29tcHV0ZWRUcmFja0NvbG9yKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZGlzYWJsZWQgPyBudWxsIDogdGhpcy50cmFja0NvbG9yIHx8IG51bGw7XG4gICAgfSxcbiAgICBjb21wdXRlZFRodW1iQ29sb3I6IGZ1bmN0aW9uIGNvbXB1dGVkVGh1bWJDb2xvcigpIHtcbiAgICAgIHJldHVybiB0aGlzLmRpc2FibGVkIHx8ICF0aGlzLmlucHV0V2lkdGggPyBudWxsIDogdGhpcy50aHVtYkNvbG9yIHx8IHRoaXMuY29sb3IgfHwgdGhpcy5kZWZhdWx0Q29sb3I7XG4gICAgfSxcbiAgICBzdGVwTnVtZXJpYzogZnVuY3Rpb24gc3RlcE51bWVyaWMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdGVwID4gMCA/IHBhcnNlRmxvYXQodGhpcy5zdGVwKSA6IDA7XG4gICAgfSxcblxuICAgIGlucHV0VmFsdWU6IHtcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICAgIH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWwpIHtcbiAgICAgICAgdmFyIG1pbiA9IHRoaXMubWluLFxuICAgICAgICAgICAgbWF4ID0gdGhpcy5tYXg7XG5cbiAgICAgICAgdmFsID0gTWF0aC5taW4oTWF0aC5tYXgodmFsLCBtaW4pLCBtYXgpO1xuXG4gICAgICAgIC8vIFJvdW5kIHZhbHVlIHRvIGVuc3VyZSB0aGVcbiAgICAgICAgLy8gZW50aXJlIHNsaWRlciByYW5nZSBjYW5cbiAgICAgICAgLy8gYmUgc2VsZWN0ZWQgd2l0aCBzdGVwXG4gICAgICAgIHZhciB2YWx1ZSA9IHRoaXMucm91bmRWYWx1ZSh2YWwpO1xuICAgICAgICB0aGlzLmxhenlWYWx1ZSA9IHZhbHVlO1xuXG4gICAgICAgIGlmICh2YWx1ZSAhPT0gdGhpcy52YWx1ZSkge1xuICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBpbnRlcnZhbDogZnVuY3Rpb24gaW50ZXJ2YWwoKSB7XG4gICAgICByZXR1cm4gMTAwIC8gKHRoaXMubWF4IC0gdGhpcy5taW4pICogdGhpcy5zdGVwTnVtZXJpYztcbiAgICB9LFxuICAgIHRodW1iU3R5bGVzOiBmdW5jdGlvbiB0aHVtYlN0eWxlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRyYW5zaXRpb246IHRoaXMua2V5UHJlc3NlZCA+PSAyID8gJ25vbmUnIDogJycsXG4gICAgICAgIGxlZnQ6IHRoaXMuaW5wdXRXaWR0aCArICclJ1xuICAgICAgfTtcbiAgICB9LFxuICAgIHRpY2tDb250YWluZXJTdHlsZXM6IGZ1bmN0aW9uIHRpY2tDb250YWluZXJTdHlsZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoMCwgLTUwJSknXG4gICAgICB9O1xuICAgIH0sXG4gICAgdHJhY2tQYWRkaW5nOiBmdW5jdGlvbiB0cmFja1BhZGRpbmcoKSB7XG4gICAgICBpZiAodGhpcy50aHVtYkxhYmVsICYmIHRoaXMuaXNBY3RpdmUpIHJldHVybiAwO1xuXG4gICAgICByZXR1cm4gNiArICh0aGlzLmlzQWN0aXZlICYmICF0aGlzLmRpc2FibGVkID8gMyA6IDApO1xuICAgIH0sXG4gICAgdHJhY2tTdHlsZXM6IGZ1bmN0aW9uIHRyYWNrU3R5bGVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHJhbnNpdGlvbjogdGhpcy5rZXlQcmVzc2VkID49IDIgPyAnbm9uZScgOiAnJyxcbiAgICAgICAgbGVmdDogJ2NhbGMoJyArIHRoaXMuaW5wdXRXaWR0aCArICclICsgJyArIHRoaXMudHJhY2tQYWRkaW5nICsgJ3B4KScsXG4gICAgICAgIHdpZHRoOiAnY2FsYygnICsgKDEwMCAtIHRoaXMuaW5wdXRXaWR0aCkgKyAnJSAtICcgKyB0aGlzLnRyYWNrUGFkZGluZyArICdweCknXG4gICAgICB9O1xuICAgIH0sXG4gICAgdHJhY2tGaWxsU3R5bGVzOiBmdW5jdGlvbiB0cmFja0ZpbGxTdHlsZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0cmFuc2l0aW9uOiB0aGlzLmtleVByZXNzZWQgPj0gMiA/ICdub25lJyA6ICcnLFxuICAgICAgICB3aWR0aDogJ2NhbGMoJyArIHRoaXMuaW5wdXRXaWR0aCArICclIC0gJyArIHRoaXMudHJhY2tQYWRkaW5nICsgJ3B4KSdcbiAgICAgIH07XG4gICAgfSxcbiAgICBudW1UaWNrczogZnVuY3Rpb24gbnVtVGlja3MoKSB7XG4gICAgICByZXR1cm4gTWF0aC5jZWlsKCh0aGlzLm1heCAtIHRoaXMubWluKSAvIHRoaXMuc3RlcE51bWVyaWMpO1xuICAgIH0sXG4gICAgaW5wdXRXaWR0aDogZnVuY3Rpb24gaW5wdXRXaWR0aCgpIHtcbiAgICAgIHJldHVybiAodGhpcy5yb3VuZFZhbHVlKHRoaXMuaW5wdXRWYWx1ZSkgLSB0aGlzLm1pbikgLyAodGhpcy5tYXggLSB0aGlzLm1pbikgKiAxMDA7XG4gICAgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgaXNBY3RpdmU6IGZ1bmN0aW9uIGlzQWN0aXZlKHZhbCkge1xuICAgICAgdGhpcy5pc0ZvY3VzZWQgPSB2YWw7XG4gICAgfSxcbiAgICBtaW46IGZ1bmN0aW9uIG1pbih2YWwpIHtcbiAgICAgIHZhbCA+IHRoaXMuaW5wdXRWYWx1ZSAmJiB0aGlzLiRlbWl0KCdpbnB1dCcsIHBhcnNlRmxvYXQodmFsKSk7XG4gICAgfSxcbiAgICBtYXg6IGZ1bmN0aW9uIG1heCh2YWwpIHtcbiAgICAgIHZhbCA8IHRoaXMuaW5wdXRWYWx1ZSAmJiB0aGlzLiRlbWl0KCdpbnB1dCcsIHBhcnNlRmxvYXQodmFsKSk7XG4gICAgfSxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUodmFsKSB7XG4gICAgICB0aGlzLmlucHV0VmFsdWUgPSBwYXJzZUZsb2F0KHZhbCk7XG4gICAgfVxuICB9LFxuXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5pbnB1dFZhbHVlID0gdGhpcy52YWx1ZTtcblxuICAgIC8vIFdpdGhvdXQgYSB2LWFwcCwgaU9TIGRvZXMgbm90IHdvcmsgd2l0aCBib2R5IHNlbGVjdG9yc1xuICAgIHRoaXMuYXBwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtYXBwXScpIHx8IGNvbnNvbGUud2FybignVGhlIHYtc2xpZGVyIGNvbXBvbmVudCByZXF1aXJlcyB0aGUgcHJlc2VuY2Ugb2Ygdi1hcHAgb3IgYSBub24tYm9keSB3cmFwcGluZyBlbGVtZW50IHdpdGggdGhlIFtkYXRhLWFwcF0gYXR0cmlidXRlLicpO1xuICB9LFxuXG5cbiAgbWV0aG9kczoge1xuICAgIG9uTW91c2VEb3duOiBmdW5jdGlvbiBvbk1vdXNlRG93bihlKSB7XG4gICAgICB0aGlzLmtleVByZXNzZWQgPSAyO1xuICAgICAgdmFyIG9wdGlvbnMgPSB7IHBhc3NpdmU6IHRydWUgfTtcbiAgICAgIHRoaXMuaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgICBpZiAoJ3RvdWNoZXMnIGluIGUpIHtcbiAgICAgICAgdGhpcy5hcHAuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5vbk1vdXNlTW92ZSwgb3B0aW9ucyk7XG4gICAgICAgIE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiYVwiIC8qIGFkZE9uY2VFdmVudExpc3RlbmVyICovXSkodGhpcy5hcHAsICd0b3VjaGVuZCcsIHRoaXMub25Nb3VzZVVwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYXBwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMub25Nb3VzZU1vdmUsIG9wdGlvbnMpO1xuICAgICAgICBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImFcIiAvKiBhZGRPbmNlRXZlbnRMaXN0ZW5lciAqL10pKHRoaXMuYXBwLCAnbW91c2V1cCcsIHRoaXMub25Nb3VzZVVwKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uTW91c2VVcDogZnVuY3Rpb24gb25Nb3VzZVVwKCkge1xuICAgICAgdGhpcy5rZXlQcmVzc2VkID0gMDtcbiAgICAgIHZhciBvcHRpb25zID0geyBwYXNzaXZlOiB0cnVlIH07XG4gICAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgICB0aGlzLmFwcC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLm9uTW91c2VNb3ZlLCBvcHRpb25zKTtcbiAgICAgIHRoaXMuYXBwLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMub25Nb3VzZU1vdmUsIG9wdGlvbnMpO1xuICAgIH0sXG4gICAgb25Nb3VzZU1vdmU6IGZ1bmN0aW9uIG9uTW91c2VNb3ZlKGUpIHtcbiAgICAgIHZhciBfJHJlZnMkdHJhY2skZ2V0Qm91bmQgPSB0aGlzLiRyZWZzLnRyYWNrLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICAgIG9mZnNldExlZnQgPSBfJHJlZnMkdHJhY2skZ2V0Qm91bmQubGVmdCxcbiAgICAgICAgICB0cmFja1dpZHRoID0gXyRyZWZzJHRyYWNrJGdldEJvdW5kLndpZHRoO1xuXG4gICAgICB2YXIgY2xpZW50WCA9ICd0b3VjaGVzJyBpbiBlID8gZS50b3VjaGVzWzBdLmNsaWVudFggOiBlLmNsaWVudFg7XG4gICAgICB2YXIgbGVmdCA9IE1hdGgubWluKE1hdGgubWF4KChjbGllbnRYIC0gb2Zmc2V0TGVmdCkgLyB0cmFja1dpZHRoLCAwKSwgMSk7XG5cbiAgICAgIGlmIChjbGllbnRYID49IG9mZnNldExlZnQgLSA4ICYmIGNsaWVudFggPD0gb2Zmc2V0TGVmdCArIHRyYWNrV2lkdGggKyA4KSB7XG4gICAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9IHBhcnNlRmxvYXQodGhpcy5taW4pICsgbGVmdCAqICh0aGlzLm1heCAtIHRoaXMubWluKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uS2V5RG93bjogZnVuY3Rpb24gb25LZXlEb3duKGUpIHtcbiAgICAgIGlmICh0aGlzLmRpc2FibGVkIHx8ICFbMzMsIDM0LCAzNSwgMzYsIDM3LCAzOV0uaW5jbHVkZXMoZS5rZXlDb2RlKSkgcmV0dXJuO1xuXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB2YXIgc3RlcCA9IHRoaXMuc3RlcE51bWVyaWMgfHwgMTtcbiAgICAgIHZhciBzdGVwcyA9ICh0aGlzLm1heCAtIHRoaXMubWluKSAvIHN0ZXA7XG4gICAgICBpZiAoZS5rZXlDb2RlID09PSAzNyB8fCBlLmtleUNvZGUgPT09IDM5KSB7XG4gICAgICAgIC8vIExlZnQvcmlnaHRcbiAgICAgICAgdGhpcy5rZXlQcmVzc2VkICs9IDE7XG5cbiAgICAgICAgdmFyIGRpcmVjdGlvbiA9IGUua2V5Q29kZSA9PT0gMzcgPyAtMSA6IDE7XG4gICAgICAgIHZhciBtdWx0aXBsaWVyID0gZS5zaGlmdEtleSA/IDMgOiBlLmN0cmxLZXkgPyAyIDogMTtcblxuICAgICAgICB0aGlzLmlucHV0VmFsdWUgPSB0aGlzLmlucHV0VmFsdWUgKyBkaXJlY3Rpb24gKiBzdGVwICogbXVsdGlwbGllcjtcbiAgICAgIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09PSAzNikge1xuICAgICAgICAvLyBIb21lXG4gICAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9IHBhcnNlRmxvYXQodGhpcy5taW4pO1xuICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT09IDM1KSB7XG4gICAgICAgIC8vIEVuZFxuICAgICAgICB0aGlzLmlucHV0VmFsdWUgPSBwYXJzZUZsb2F0KHRoaXMubWF4KTtcbiAgICAgIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09PSAzMyB8fCBlLmtleUNvZGUgPT09IDM0KSB7XG4gICAgICAgIC8vIFBhZ2UgdXAvZG93blxuICAgICAgICB2YXIgX2RpcmVjdGlvbiA9IGUua2V5Q29kZSA9PT0gMzQgPyAtMSA6IDE7XG4gICAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9IHRoaXMuaW5wdXRWYWx1ZSAtIF9kaXJlY3Rpb24gKiBzdGVwICogKHN0ZXBzID4gMTAwID8gc3RlcHMgLyAxMCA6IDEwKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uS2V5VXA6IGZ1bmN0aW9uIG9uS2V5VXAoZSkge1xuICAgICAgdGhpcy5rZXlQcmVzc2VkID0gMDtcbiAgICB9LFxuICAgIHNsaWRlck1vdmU6IGZ1bmN0aW9uIHNsaWRlck1vdmUoZSkge1xuICAgICAgaWYgKCF0aGlzLmlzQWN0aXZlKSB7XG4gICAgICAgIHRoaXMub25Nb3VzZU1vdmUoZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBnZW5UaHVtYkxhYmVsOiBmdW5jdGlvbiBnZW5UaHVtYkxhYmVsKGgpIHtcbiAgICAgIHJldHVybiBoKCd2LXNjYWxlLXRyYW5zaXRpb24nLCB7XG4gICAgICAgIHByb3BzOiB7IG9yaWdpbjogJ2JvdHRvbSBjZW50ZXInIH1cbiAgICAgIH0sIFtoKCdkaXYnLCB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAnc2xpZGVyX190aHVtYi0tbGFiZWxfX2NvbnRhaW5lcicsXG4gICAgICAgIGRpcmVjdGl2ZXM6IFt7XG4gICAgICAgICAgbmFtZTogJ3Nob3cnLFxuICAgICAgICAgIHZhbHVlOiB0aGlzLmlzQWN0aXZlXG4gICAgICAgIH1dXG4gICAgICB9LCBbaCgnZGl2Jywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ3NsaWRlcl9fdGh1bWItLWxhYmVsJyxcbiAgICAgICAgJ2NsYXNzJzogdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyh7fSwgJ2NvbXB1dGVkVGh1bWJDb2xvcicpXG4gICAgICB9LCBbaCgnc3BhbicsIHt9LCB0aGlzLmlucHV0VmFsdWUpXSldKV0pO1xuICAgIH0sXG4gICAgcm91bmRWYWx1ZTogZnVuY3Rpb24gcm91bmRWYWx1ZSh2YWx1ZSkge1xuICAgICAgaWYgKCF0aGlzLnN0ZXBOdW1lcmljKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cblxuICAgICAgLy8gRm9ybWF0IGlucHV0IHZhbHVlIHVzaW5nIHRoZSBzYW1lIG51bWJlclxuICAgICAgLy8gb2YgZGVjaW1hbHMgcGxhY2VzIGFzIGluIHRoZSBzdGVwIHByb3BcbiAgICAgIHZhciB0cmltbWVkU3RlcCA9IHRoaXMuc3RlcC50b1N0cmluZygpLnRyaW0oKTtcbiAgICAgIHZhciBkZWNpbWFscyA9IHRyaW1tZWRTdGVwLmluZGV4T2YoJy4nKSA+IC0xID8gdHJpbW1lZFN0ZXAubGVuZ3RoIC0gdHJpbW1lZFN0ZXAuaW5kZXhPZignLicpIC0gMSA6IDA7XG4gICAgICByZXR1cm4gMSAqIChNYXRoLnJvdW5kKHZhbHVlIC8gdGhpcy5zdGVwTnVtZXJpYykgKiB0aGlzLnN0ZXBOdW1lcmljKS50b0ZpeGVkKGRlY2ltYWxzKTtcbiAgICB9LFxuICAgIGdlblRodW1iQ29udGFpbmVyOiBmdW5jdGlvbiBnZW5UaHVtYkNvbnRhaW5lcihoKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBbXTtcbiAgICAgIGNoaWxkcmVuLnB1c2goaCgnZGl2Jywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ3NsaWRlcl9fdGh1bWInLFxuICAgICAgICAnY2xhc3MnOiB0aGlzLmFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzKHt9LCAnY29tcHV0ZWRUaHVtYkNvbG9yJylcbiAgICAgIH0pKTtcblxuICAgICAgdGhpcy50aHVtYkxhYmVsICYmIGNoaWxkcmVuLnB1c2godGhpcy5nZW5UaHVtYkxhYmVsKGgpKTtcblxuICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6ICdzbGlkZXJfX3RodW1iLWNvbnRhaW5lcicsXG4gICAgICAgICdjbGFzcyc6IHtcbiAgICAgICAgICAnc2xpZGVyX190aHVtYi1jb250YWluZXItLWxhYmVsJzogdGhpcy50aHVtYkxhYmVsXG4gICAgICAgIH0sXG4gICAgICAgIHN0eWxlOiB0aGlzLnRodW1iU3R5bGVzLFxuICAgICAgICBvbjoge1xuICAgICAgICAgIHRvdWNoc3RhcnQ6IHRoaXMub25Nb3VzZURvd24sXG4gICAgICAgICAgbW91c2Vkb3duOiB0aGlzLm9uTW91c2VEb3duXG4gICAgICAgIH0sXG4gICAgICAgIHJlZjogJ3RodW1iJ1xuICAgICAgfSwgY2hpbGRyZW4pO1xuICAgIH0sXG4gICAgZ2VuU3RlcHM6IGZ1bmN0aW9uIGdlblN0ZXBzKGgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciB0aWNrcyA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fW1wiY1wiIC8qIGNyZWF0ZVJhbmdlICovXSkodGhpcy5udW1UaWNrcyArIDEpLm1hcChmdW5jdGlvbiAoaSkge1xuICAgICAgICB2YXIgc3BhbiA9IGgoJ3NwYW4nLCB7XG4gICAgICAgICAgc3RhdGljQ2xhc3M6ICdzbGlkZXJfX3RpY2snLFxuICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICBsZWZ0OiBpICogKDEwMCAvIF90aGlzLm51bVRpY2tzKSArICclJ1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHNwYW47XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6ICdzbGlkZXJfX3RpY2tzLWNvbnRhaW5lcicsXG4gICAgICAgIHN0eWxlOiB0aGlzLnRpY2tDb250YWluZXJTdHlsZXNcbiAgICAgIH0sIHRpY2tzKTtcbiAgICB9LFxuICAgIGdlblRyYWNrQ29udGFpbmVyOiBmdW5jdGlvbiBnZW5UcmFja0NvbnRhaW5lcihoKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBbaCgnZGl2Jywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ3NsaWRlcl9fdHJhY2snLFxuICAgICAgICAnY2xhc3MnOiB0aGlzLmFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzKHt9LCAnY29tcHV0ZWRUcmFja0NvbG9yJyksXG4gICAgICAgIHN0eWxlOiB0aGlzLnRyYWNrU3R5bGVzXG4gICAgICB9KSwgaCgnZGl2Jywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ3NsaWRlcl9fdHJhY2stZmlsbCcsXG4gICAgICAgICdjbGFzcyc6IHRoaXMuYWRkQmFja2dyb3VuZENvbG9yQ2xhc3NDaGVja3MoKSxcbiAgICAgICAgc3R5bGU6IHRoaXMudHJhY2tGaWxsU3R5bGVzXG4gICAgICB9KV07XG5cbiAgICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAnc2xpZGVyX190cmFja19fY29udGFpbmVyJyxcbiAgICAgICAgcmVmOiAndHJhY2snXG4gICAgICB9LCBjaGlsZHJlbik7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBbXTtcblxuICAgIGNoaWxkcmVuLnB1c2godGhpcy5nZW5UcmFja0NvbnRhaW5lcihoKSk7XG4gICAgdGhpcy5zdGVwICYmIHRoaXMudGlja3MgJiYgY2hpbGRyZW4ucHVzaCh0aGlzLmdlblN0ZXBzKGgpKTtcbiAgICBjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuVGh1bWJDb250YWluZXIoaCkpO1xuXG4gICAgdmFyIHNsaWRlciA9IGgoJ2RpdicsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiAnc2xpZGVyJ1xuICAgIH0sIGNoaWxkcmVuKTtcblxuICAgIHJldHVybiB0aGlzLmdlbklucHV0R3JvdXAoW3NsaWRlcl0sIHtcbiAgICAgIGF0dHJzOiB7XG4gICAgICAgIHJvbGU6ICdzbGlkZXInLFxuICAgICAgICB0YWJpbmRleDogdGhpcy5kaXNhYmxlZCA/IC0xIDogdGhpcy50YWJpbmRleFxuICAgICAgfSxcbiAgICAgIG9uOiBPYmplY3QuYXNzaWduKHt9LCB7XG4gICAgICAgIG1vdXNldXA6IHRoaXMuc2xpZGVyTW92ZSxcbiAgICAgICAga2V5ZG93bjogdGhpcy5vbktleURvd24sXG4gICAgICAgIGtleXVwOiB0aGlzLm9uS2V5VXBcbiAgICAgIH0sIHRoaXMuJGxpc3RlbmVycyksXG4gICAgICBkaXJlY3RpdmVzOiBbe1xuICAgICAgICBuYW1lOiAnY2xpY2stb3V0c2lkZSdcbiAgICAgIH1dXG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE4MyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDE4NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTbmFja2Jhcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxODUpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTbmFja2Jhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlNuYWNrYmFyX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WU25hY2tiYXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlNuYWNrYmFyX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDE4NSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3RyYW5zaXRpb25zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190b2dnbGVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxODYpO1xuXG5cblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LXNuYWNrYmFyJyxcblxuICBjb21wb25lbnRzOiB7XG4gICAgVlNsaWRlWVRyYW5zaXRpb246IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdHJhbnNpdGlvbnNfX1tcImVcIiAvKiBWU2xpZGVZVHJhbnNpdGlvbiAqL10sXG4gICAgVlNsaWRlWVJldmVyc2VUcmFuc2l0aW9uOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3RyYW5zaXRpb25zX19bXCJkXCIgLyogVlNsaWRlWVJldmVyc2VUcmFuc2l0aW9uICovXVxuICB9LFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190b2dnbGVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjdGl2ZVRpbWVvdXQ6IHt9XG4gICAgfTtcbiAgfSxcblxuXG4gIHByb3BzOiB7XG4gICAgYWJzb2x1dGU6IEJvb2xlYW4sXG4gICAgYm90dG9tOiBCb29sZWFuLFxuICAgIGxlZnQ6IEJvb2xlYW4sXG4gICAgbXVsdGlMaW5lOiBCb29sZWFuLFxuICAgIHJpZ2h0OiBCb29sZWFuLFxuICAgIHRvcDogQm9vbGVhbixcbiAgICAvLyBUT0RPOiBjaGFuZ2UgdGhpcyB0byBjbG9zZURlbGF5IHRvIG1hdGNoIG90aGVyIEFQSSBpbiBkZWxheWFibGUuanNcbiAgICB0aW1lb3V0OiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiA2MDAwXG4gICAgfSxcbiAgICB2ZXJ0aWNhbDogQm9vbGVhblxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB0aGlzLmFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzKHtcbiAgICAgICAgJ3NuYWNrLS1hY3RpdmUnOiB0aGlzLmlzQWN0aXZlLFxuICAgICAgICAnc25hY2stLWFic29sdXRlJzogdGhpcy5hYnNvbHV0ZSxcbiAgICAgICAgJ3NuYWNrLS1ib3R0b20nOiB0aGlzLmJvdHRvbSB8fCAhdGhpcy50b3AsXG4gICAgICAgICdzbmFjay0tbGVmdCc6IHRoaXMubGVmdCxcbiAgICAgICAgJ3NuYWNrLS1tdWx0aS1saW5lJzogdGhpcy5tdWx0aUxpbmUgJiYgIXRoaXMudmVydGljYWwsXG4gICAgICAgICdzbmFjay0tcmlnaHQnOiB0aGlzLnJpZ2h0LFxuICAgICAgICAnc25hY2stLXRvcCc6IHRoaXMudG9wLFxuICAgICAgICAnc25hY2stLXZlcnRpY2FsJzogdGhpcy52ZXJ0aWNhbFxuICAgICAgfSk7XG4gICAgfSxcbiAgICBjb21wdXRlZFRyYW5zaXRpb246IGZ1bmN0aW9uIGNvbXB1dGVkVHJhbnNpdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnRvcCA/ICd2LXNsaWRlLXktdHJhbnNpdGlvbicgOiAndi1zbGlkZS15LXJldmVyc2UtdHJhbnNpdGlvbic7XG4gICAgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgaXNBY3RpdmU6IGZ1bmN0aW9uIGlzQWN0aXZlKCkge1xuICAgICAgdGhpcy5zZXRUaW1lb3V0KCk7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBzZXRUaW1lb3V0OiBmdW5jdGlvbiAoX3NldFRpbWVvdXQpIHtcbiAgICAgIGZ1bmN0aW9uIHNldFRpbWVvdXQoKSB7XG4gICAgICAgIHJldHVybiBfc2V0VGltZW91dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuXG4gICAgICBzZXRUaW1lb3V0LnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3NldFRpbWVvdXQudG9TdHJpbmcoKTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBzZXRUaW1lb3V0O1xuICAgIH0oZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuYWN0aXZlVGltZW91dCk7XG5cbiAgICAgIGlmICh0aGlzLmlzQWN0aXZlICYmIHRoaXMudGltZW91dCkge1xuICAgICAgICB0aGlzLmFjdGl2ZVRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB9LCB0aGlzLnRpbWVvdXQpO1xuICAgICAgfVxuICAgIH0pXG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLnNldFRpbWVvdXQoKTtcbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuXG4gICAgaWYgKHRoaXMuaXNBY3RpdmUpIHtcbiAgICAgIGNoaWxkcmVuLnB1c2goaCgnZGl2Jywge1xuICAgICAgICBzdGF0aWNDbGFzczogJ3NuYWNrX19jb250ZW50J1xuICAgICAgfSwgdGhpcy4kc2xvdHMuZGVmYXVsdCkpO1xuICAgIH1cblxuICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICBzdGF0aWNDbGFzczogJ3NuYWNrJyxcbiAgICAgICdjbGFzcyc6IHRoaXMuY2xhc3NlcyxcbiAgICAgIG9uOiB0aGlzLiRsaXN0ZW5lcnNcbiAgICB9LCBbaCh0aGlzLmNvbXB1dGVkVHJhbnNpdGlvbiwgY2hpbGRyZW4pXSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE4NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDE4NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTcGVlZERpYWxfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTg4KTtcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WU3BlZWREaWFsX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WU3BlZWREaWFsX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WU3BlZWREaWFsX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTcGVlZERpYWxfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogMTg4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX3RvZ2dsZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfcG9zaXRpb25hYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2RpcmVjdGl2ZXNfY2xpY2tfb3V0c2lkZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbl9fd2VicGFja19yZXF1aXJlX18oMTg5KTtcblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1zcGVlZC1kaWFsJyxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19wb3NpdGlvbmFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfdG9nZ2xlYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBkaXJlY3RpdmVzOiB7IENsaWNrT3V0c2lkZTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSB9LFxuXG4gIHByb3BzOiB7XG4gICAgZGlyZWN0aW9uOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAndG9wJyxcbiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCkge1xuICAgICAgICByZXR1cm4gWyd0b3AnLCAncmlnaHQnLCAnYm90dG9tJywgJ2xlZnQnXS5pbmNsdWRlcyh2YWwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgaG92ZXI6IEJvb2xlYW4sXG4gICAgdHJhbnNpdGlvbjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ3NjYWxlLXRyYW5zaXRpb24nXG4gICAgfVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiBfZGVmaW5lUHJvcGVydHkoe1xuICAgICAgICAnc3BlZWQtZGlhbCc6IHRydWUsXG4gICAgICAgICdzcGVlZC1kaWFsLS10b3AnOiB0aGlzLnRvcCxcbiAgICAgICAgJ3NwZWVkLWRpYWwtLXJpZ2h0JzogdGhpcy5yaWdodCxcbiAgICAgICAgJ3NwZWVkLWRpYWwtLWJvdHRvbSc6IHRoaXMuYm90dG9tLFxuICAgICAgICAnc3BlZWQtZGlhbC0tbGVmdCc6IHRoaXMubGVmdCxcbiAgICAgICAgJ3NwZWVkLWRpYWwtLWFic29sdXRlJzogdGhpcy5hYnNvbHV0ZSxcbiAgICAgICAgJ3NwZWVkLWRpYWwtLWZpeGVkJzogdGhpcy5maXhlZFxuICAgICAgfSwgJ3NwZWVkLWRpYWwtLWRpcmVjdGlvbi0nICsgdGhpcy5kaXJlY3Rpb24sIHRydWUpO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgJ2NsYXNzJzogdGhpcy5jbGFzc2VzLFxuICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgbmFtZTogJ2NsaWNrLW91dHNpZGUnXG4gICAgICB9XSxcbiAgICAgIG9uOiB7XG4gICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMuaXNBY3RpdmUgPSAhX3RoaXMuaXNBY3RpdmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKHRoaXMuaG92ZXIpIHtcbiAgICAgIGRhdGEub24ubW91c2VlbnRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLmlzQWN0aXZlID0gdHJ1ZTtcbiAgICAgIH07XG4gICAgICBkYXRhLm9uLm1vdXNlbGVhdmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pc0FjdGl2ZSkge1xuICAgICAgY2hpbGRyZW4gPSAodGhpcy4kc2xvdHMuZGVmYXVsdCB8fCBbXSkubWFwKGZ1bmN0aW9uIChiLCBpKSB7XG4gICAgICAgIGIua2V5ID0gaTtcblxuICAgICAgICByZXR1cm4gYjtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHZhciBsaXN0ID0gaCgndHJhbnNpdGlvbi1ncm91cCcsIHtcbiAgICAgICdjbGFzcyc6ICdzcGVlZC1kaWFsX19saXN0JyxcbiAgICAgIHByb3BzOiB7XG4gICAgICAgIG5hbWU6IHRoaXMudHJhbnNpdGlvbixcbiAgICAgICAgdGFnOiAnZGl2J1xuICAgICAgfVxuICAgIH0sIGNoaWxkcmVuKTtcblxuICAgIHJldHVybiBoKCdkaXYnLCBkYXRhLCBbdGhpcy4kc2xvdHMuYWN0aXZhdG9yLCBsaXN0XSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE4OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDE5MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIHVudXNlZCBoYXJtb255IGV4cG9ydCBWU3RlcHBlckhlYWRlciAqL1xuLyogdW51c2VkIGhhcm1vbnkgZXhwb3J0IFZTdGVwcGVySXRlbXMgKi9cbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZTdGVwcGVyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE5MSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19WU3RlcHBlclN0ZXBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTkzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1ZTdGVwcGVyQ29udGVudF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOTQpO1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVlN0ZXBwZXIgKi9cbi8qIHVudXNlZCBoYXJtb255IHJlZXhwb3J0IFZTdGVwcGVyQ29udGVudCAqL1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVlN0ZXBwZXJTdGVwICovXG5cblxuXG5cblxudmFyIFZTdGVwcGVySGVhZGVyID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJkXCIgLyogY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCAqL10pKCdzdGVwcGVyX19oZWFkZXInKTtcbnZhciBWU3RlcHBlckl0ZW1zID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJkXCIgLyogY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCAqL10pKCdzdGVwcGVyX19pdGVtcycpO1xuXG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVlN0ZXBwZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZTdGVwcGVyX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WU3RlcHBlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1ZTdGVwcGVyQ29udGVudF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fVlN0ZXBwZXJDb250ZW50X19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fVlN0ZXBwZXJTdGVwX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19WU3RlcHBlclN0ZXBfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG4gIFZ1ZS5jb21wb25lbnQoVlN0ZXBwZXJIZWFkZXIubmFtZSwgVlN0ZXBwZXJIZWFkZXIpO1xuICBWdWUuY29tcG9uZW50KFZTdGVwcGVySXRlbXMubmFtZSwgVlN0ZXBwZXJJdGVtcyk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVlN0ZXBwZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogMTkxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX3RoZW1lYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbl9fd2VicGFja19yZXF1aXJlX18oMTkyKTtcblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1zdGVwcGVyJyxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc190aGVtZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgcHJvdmlkZTogZnVuY3Rpb24gcHJvdmlkZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RlcENsaWNrOiB0aGlzLnN0ZXBDbGlja1xuICAgIH07XG4gIH0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlucHV0VmFsdWU6IG51bGwsXG4gICAgICBpc0Jvb3RlZDogZmFsc2UsXG4gICAgICBzdGVwczogW10sXG4gICAgICBjb250ZW50OiBbXSxcbiAgICAgIGlzUmV2ZXJzZTogZmFsc2VcbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICBub25MaW5lYXI6IEJvb2xlYW4sXG4gICAgYWx0TGFiZWxzOiBCb29sZWFuLFxuICAgIHZlcnRpY2FsOiBCb29sZWFuLFxuICAgIHZhbHVlOiBbTnVtYmVyLCBTdHJpbmddXG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ3N0ZXBwZXInOiB0cnVlLFxuICAgICAgICAnc3RlcHBlci0taXMtYm9vdGVkJzogdGhpcy5pc0Jvb3RlZCxcbiAgICAgICAgJ3N0ZXBwZXItLXZlcnRpY2FsJzogdGhpcy52ZXJ0aWNhbCxcbiAgICAgICAgJ3N0ZXBwZXItLWFsdC1sYWJlbHMnOiB0aGlzLmFsdExhYmVscyxcbiAgICAgICAgJ3N0ZXBwZXItLW5vbi1saW5lYXInOiB0aGlzLm5vbkxpbmVhcixcbiAgICAgICAgJ3RoZW1lLS1kYXJrJzogdGhpcy5kYXJrLFxuICAgICAgICAndGhlbWUtLWxpZ2h0JzogdGhpcy5saWdodFxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBpbnB1dFZhbHVlOiBmdW5jdGlvbiBpbnB1dFZhbHVlKHZhbCwgcHJldikge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdGhpcy5pc1JldmVyc2UgPSBOdW1iZXIodmFsKSA8IE51bWJlcihwcmV2KTtcbiAgICAgIHRoaXMuc3RlcHMuZm9yRWFjaChmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gaS50b2dnbGUoX3RoaXMuaW5wdXRWYWx1ZSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuY29udGVudC5mb3JFYWNoKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgIHJldHVybiBpLnRvZ2dsZShfdGhpcy5pbnB1dFZhbHVlLCBfdGhpcy5pc1JldmVyc2UpO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5pbnB1dFZhbHVlKTtcbiAgICAgIHByZXYgJiYgKHRoaXMuaXNCb290ZWQgPSB0cnVlKTtcbiAgICB9LFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLmdldFN0ZXBzKCk7XG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczIuaW5wdXRWYWx1ZSA9IF90aGlzMi52YWx1ZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuZ2V0U3RlcHMoKTtcblxuICAgIHRoaXMuaW5wdXRWYWx1ZSA9IHRoaXMudmFsdWUgfHwgdGhpcy5zdGVwc1swXS5zdGVwIHx8IDE7XG4gIH0sXG5cblxuICBtZXRob2RzOiB7XG4gICAgZ2V0U3RlcHM6IGZ1bmN0aW9uIGdldFN0ZXBzKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHRoaXMuc3RlcHMgPSBbXTtcbiAgICAgIHRoaXMuY29udGVudCA9IFtdO1xuICAgICAgdGhpcy4kY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoaSkge1xuICAgICAgICBpZiAoaS4kb3B0aW9ucy5fY29tcG9uZW50VGFnID09PSAndi1zdGVwcGVyLXN0ZXAnKSB7XG4gICAgICAgICAgX3RoaXMzLnN0ZXBzLnB1c2goaSk7XG4gICAgICAgIH0gZWxzZSBpZiAoaS4kb3B0aW9ucy5fY29tcG9uZW50VGFnID09PSAndi1zdGVwcGVyLWNvbnRlbnQnKSB7XG4gICAgICAgICAgaS5pc1ZlcnRpY2FsID0gX3RoaXMzLnZlcnRpY2FsO1xuICAgICAgICAgIF90aGlzMy5jb250ZW50LnB1c2goaSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgc3RlcENsaWNrOiBmdW5jdGlvbiBzdGVwQ2xpY2soc3RlcCkge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHRoaXMuZ2V0U3RlcHMoKTtcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzNC5pbnB1dFZhbHVlID0gc3RlcDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICdjbGFzcyc6IHRoaXMuY2xhc3Nlc1xuICAgIH0sIHRoaXMuJHNsb3RzLmRlZmF1bHQpO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAxOTIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAxOTMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX2RpcmVjdGl2ZXNfcmlwcGxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LXN0ZXBwZXItc3RlcCcsXG5cbiAgY29tcG9uZW50czogeyBWSWNvbjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dIH0sXG5cbiAgZGlyZWN0aXZlczogeyBSaXBwbGU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fZGlyZWN0aXZlc19yaXBwbGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSB9LFxuXG4gIGluamVjdDogWydzdGVwQ2xpY2snXSxcblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgICBpc0luYWN0aXZlOiB0cnVlXG4gICAgfTtcbiAgfSxcblxuXG4gIHByb3BzOiB7XG4gICAgY29tcGxldGU6IEJvb2xlYW4sXG4gICAgY29tcGxldGVJY29uOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnY2hlY2snXG4gICAgfSxcbiAgICBlZGl0SWNvbjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2VkaXQnXG4gICAgfSxcbiAgICBlcnJvckljb246IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICd3YXJuaW5nJ1xuICAgIH0sXG4gICAgZWRpdGFibGU6IEJvb2xlYW4sXG4gICAgcnVsZXM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHN0ZXA6IFtOdW1iZXIsIFN0cmluZ11cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAnc3RlcHBlcl9fc3RlcCc6IHRydWUsXG4gICAgICAgICdzdGVwcGVyX19zdGVwLS1hY3RpdmUnOiB0aGlzLmlzQWN0aXZlLFxuICAgICAgICAnc3RlcHBlcl9fc3RlcC0tZWRpdGFibGUnOiB0aGlzLmVkaXRhYmxlLFxuICAgICAgICAnc3RlcHBlcl9fc3RlcC0taW5hY3RpdmUnOiB0aGlzLmlzSW5hY3RpdmUsXG4gICAgICAgICdzdGVwcGVyX19zdGVwLS1lcnJvcic6IHRoaXMuaGFzRXJyb3IsXG4gICAgICAgICdzdGVwcGVyX19zdGVwLS1jb21wbGV0ZSc6IHRoaXMuY29tcGxldGUsXG4gICAgICAgICdlcnJvci0tdGV4dCc6IHRoaXMuaGFzRXJyb3JcbiAgICAgIH07XG4gICAgfSxcbiAgICBoYXNFcnJvcjogZnVuY3Rpb24gaGFzRXJyb3IoKSB7XG4gICAgICByZXR1cm4gdGhpcy5ydWxlcy5zb21lKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgIHJldHVybiBpKCkgIT09IHRydWU7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICBpZiAodGhpcy5lZGl0YWJsZSkge1xuICAgICAgICB0aGlzLnN0ZXBDbGljayh0aGlzLnN0ZXApO1xuICAgICAgfVxuICAgIH0sXG4gICAgdG9nZ2xlOiBmdW5jdGlvbiB0b2dnbGUoc3RlcCkge1xuICAgICAgdGhpcy5pc0FjdGl2ZSA9IHN0ZXAudG9TdHJpbmcoKSA9PT0gdGhpcy5zdGVwLnRvU3RyaW5nKCk7XG4gICAgICB0aGlzLmlzSW5hY3RpdmUgPSBOdW1iZXIoc3RlcCkgPCBOdW1iZXIodGhpcy5zdGVwKTtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgJ2NsYXNzJzogdGhpcy5jbGFzc2VzLFxuICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgbmFtZTogJ3JpcHBsZScsXG4gICAgICAgIHZhbHVlOiB0aGlzLmVkaXRhYmxlXG4gICAgICB9XSxcbiAgICAgIG9uOiB7IGNsaWNrOiB0aGlzLmNsaWNrIH1cbiAgICB9O1xuICAgIHZhciBzdGVwQ29udGVudCA9IHZvaWQgMDtcblxuICAgIGlmICh0aGlzLmhhc0Vycm9yKSB7XG4gICAgICBzdGVwQ29udGVudCA9IFtoKCd2LWljb24nLCB7fSwgdGhpcy5lcnJvckljb24pXTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuY29tcGxldGUpIHtcbiAgICAgIGlmICh0aGlzLmVkaXRhYmxlKSB7XG4gICAgICAgIHN0ZXBDb250ZW50ID0gW2goJ3YtaWNvbicsIHt9LCB0aGlzLmVkaXRJY29uKV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdGVwQ29udGVudCA9IFtoKCd2LWljb24nLCB7fSwgdGhpcy5jb21wbGV0ZUljb24pXTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc3RlcENvbnRlbnQgPSB0aGlzLnN0ZXA7XG4gICAgfVxuXG4gICAgdmFyIHN0ZXAgPSBoKCdzcGFuJywge1xuICAgICAgc3RhdGljQ2xhc3M6ICdzdGVwcGVyX19zdGVwX19zdGVwJyxcbiAgICAgICdjbGFzcyc6IHtcbiAgICAgICAgJ3ByaW1hcnknOiAhdGhpcy5oYXNFcnJvciAmJiAodGhpcy5jb21wbGV0ZSB8fCB0aGlzLmlzQWN0aXZlKVxuICAgICAgfVxuICAgIH0sIHN0ZXBDb250ZW50KTtcblxuICAgIHZhciBsYWJlbCA9IGgoJ2RpdicsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiAnc3RlcHBlcl9fbGFiZWwnXG4gICAgfSwgdGhpcy4kc2xvdHMuZGVmYXVsdCk7XG5cbiAgICByZXR1cm4gaCgnZGl2JywgZGF0YSwgW3N0ZXAsIGxhYmVsXSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDE5NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3RyYW5zaXRpb25zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi1zdGVwcGVyLWNvbnRlbnQnLFxuXG4gIGNvbXBvbmVudHM6IHtcbiAgICBWVGFiVHJhbnNpdGlvbjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX190cmFuc2l0aW9uc19fW1wiZ1wiIC8qIFZUYWJUcmFuc2l0aW9uICovXSxcbiAgICBWVGFiUmV2ZXJzZVRyYW5zaXRpb246IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdHJhbnNpdGlvbnNfX1tcImZcIiAvKiBWVGFiUmV2ZXJzZVRyYW5zaXRpb24gKi9dXG4gIH0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGVpZ2h0OiAwLFxuICAgICAgaXNBY3RpdmU6IGZhbHNlLFxuICAgICAgaXNSZXZlcnNlOiBmYWxzZSxcbiAgICAgIGlzVmVydGljYWw6IGZhbHNlXG4gICAgfTtcbiAgfSxcblxuXG4gIHByb3BzOiB7XG4gICAgc3RlcDoge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICdzdGVwcGVyX19jb250ZW50JzogdHJ1ZVxuICAgICAgfTtcbiAgICB9LFxuICAgIGNvbXB1dGVkVHJhbnNpdGlvbjogZnVuY3Rpb24gY29tcHV0ZWRUcmFuc2l0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaXNSZXZlcnNlID8gJ3YtdGFiLXJldmVyc2UtdHJhbnNpdGlvbicgOiAndi10YWItdHJhbnNpdGlvbic7XG4gICAgfSxcbiAgICBzdHlsZXM6IGZ1bmN0aW9uIHN0eWxlcygpIHtcbiAgICAgIGlmICghdGhpcy5pc1ZlcnRpY2FsKSByZXR1cm4ge307XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGhlaWdodDogIWlzTmFOKHRoaXMuaGVpZ2h0KSA/IHRoaXMuaGVpZ2h0ICsgJ3B4JyA6IHRoaXMuaGVpZ2h0XG4gICAgICB9O1xuICAgIH0sXG4gICAgd3JhcHBlckNsYXNzZXM6IGZ1bmN0aW9uIHdyYXBwZXJDbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ3N0ZXBwZXJfX3dyYXBwZXInOiB0cnVlXG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIGlzQWN0aXZlOiBmdW5jdGlvbiBpc0FjdGl2ZSgpIHtcbiAgICAgIGlmICghdGhpcy5pc1ZlcnRpY2FsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuaXNBY3RpdmUpIHtcbiAgICAgICAgdGhpcy5lbnRlcigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5sZWF2ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuJHJlZnMud3JhcHBlci5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgdGhpcy5vblRyYW5zaXRpb24sIGZhbHNlKTtcbiAgfSxcbiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHtcbiAgICB0aGlzLiRyZWZzLndyYXBwZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIHRoaXMub25UcmFuc2l0aW9uLCBmYWxzZSk7XG4gIH0sXG5cblxuICBtZXRob2RzOiB7XG4gICAgb25UcmFuc2l0aW9uOiBmdW5jdGlvbiBvblRyYW5zaXRpb24oKSB7XG4gICAgICBpZiAoIXRoaXMuaXNBY3RpdmUpIHJldHVybjtcblxuICAgICAgdGhpcy5oZWlnaHQgPSAnYXV0byc7XG4gICAgfSxcbiAgICBlbnRlcjogZnVuY3Rpb24gZW50ZXIoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgc2Nyb2xsSGVpZ2h0ID0gMDtcblxuICAgICAgLy8gUmVuZGVyIGJ1ZyB3aXRoIGhlaWdodFxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNjcm9sbEhlaWdodCA9IF90aGlzLiRyZWZzLndyYXBwZXIuc2Nyb2xsSGVpZ2h0O1xuICAgICAgfSwgMCk7XG5cbiAgICAgIHRoaXMuaGVpZ2h0ID0gMDtcblxuICAgICAgLy8gR2l2ZSB0aGUgY29sbGFwc2luZyBlbGVtZW50IHRpbWUgdG8gY29sbGFwc2VcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXMuaGVpZ2h0ID0gc2Nyb2xsSGVpZ2h0IHx8ICdhdXRvJztcbiAgICAgIH0sIDQ1MCk7XG4gICAgfSxcbiAgICBsZWF2ZTogZnVuY3Rpb24gbGVhdmUoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdGhpcy5oZWlnaHQgPSB0aGlzLiRyZWZzLndyYXBwZXIuY2xpZW50SGVpZ2h0O1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczIuaGVpZ2h0ID0gMDtcbiAgICAgIH0sIDApO1xuICAgIH0sXG4gICAgdG9nZ2xlOiBmdW5jdGlvbiB0b2dnbGUoc3RlcCwgcmV2ZXJzZSkge1xuICAgICAgdGhpcy5pc0FjdGl2ZSA9IHN0ZXAudG9TdHJpbmcoKSA9PT0gdGhpcy5zdGVwLnRvU3RyaW5nKCk7XG4gICAgICB0aGlzLmlzUmV2ZXJzZSA9IHJldmVyc2U7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgY29udGVudERhdGEgPSB7XG4gICAgICAnY2xhc3MnOiB0aGlzLmNsYXNzZXNcbiAgICB9O1xuICAgIHZhciB3cmFwcGVyRGF0YSA9IHtcbiAgICAgICdjbGFzcyc6IHRoaXMud3JhcHBlckNsYXNzZXMsXG4gICAgICBzdHlsZTogdGhpcy5zdHlsZXMsXG4gICAgICByZWY6ICd3cmFwcGVyJ1xuICAgIH07XG5cbiAgICBpZiAoIXRoaXMuaXNWZXJ0aWNhbCkge1xuICAgICAgY29udGVudERhdGEuZGlyZWN0aXZlcyA9IFt7XG4gICAgICAgIG5hbWU6ICdzaG93JyxcbiAgICAgICAgdmFsdWU6IHRoaXMuaXNBY3RpdmVcbiAgICAgIH1dO1xuICAgIH1cblxuICAgIHZhciB3cmFwcGVyID0gaCgnZGl2Jywgd3JhcHBlckRhdGEsIFt0aGlzLiRzbG90cy5kZWZhdWx0XSk7XG4gICAgdmFyIGNvbnRlbnQgPSBoKCdkaXYnLCBjb250ZW50RGF0YSwgW3dyYXBwZXJdKTtcblxuICAgIHJldHVybiBoKHRoaXMuY29tcHV0ZWRUcmFuc2l0aW9uLCB7XG4gICAgICBvbjogdGhpcy4kbGlzdGVuZXJzXG4gICAgfSwgW2NvbnRlbnRdKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTk1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlN1YmhlYWRlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOTYpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTdWJoZWFkZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTdWJoZWFkZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTdWJoZWFkZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlN1YmhlYWRlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAxOTYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfdGhlbWVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxOTcpO1xuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LXN1YmhlYWRlcicsXG5cbiAgZnVuY3Rpb25hbDogdHJ1ZSxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc190aGVtZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgcHJvcHM6IHtcbiAgICBpbnNldDogQm9vbGVhblxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIF9yZWYpIHtcbiAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YSxcbiAgICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuLFxuICAgICAgICBwcm9wcyA9IF9yZWYucHJvcHM7XG5cbiAgICBkYXRhLnN0YXRpY0NsYXNzID0gKCdzdWJoZWFkZXIgJyArIChkYXRhLnN0YXRpY0NsYXNzIHx8ICcnKSkudHJpbSgpO1xuXG4gICAgaWYgKHByb3BzLmluc2V0KSBkYXRhLnN0YXRpY0NsYXNzICs9ICcgc3ViaGVhZGVyLS1pbnNldCc7XG4gICAgaWYgKHByb3BzLmxpZ2h0KSBkYXRhLnN0YXRpY0NsYXNzICs9ICcgdGhlbWUtLWxpZ2h0JztcbiAgICBpZiAocHJvcHMuZGFyaykgZGF0YS5zdGF0aWNDbGFzcyArPSAnIHRoZW1lLS1kYXJrJztcblxuICAgIHJldHVybiBoKCdsaScsIGRhdGEsIGNoaWxkcmVuKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTk3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogMTk4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlN3aXRjaF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOTkpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTd2l0Y2hfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTd2l0Y2hfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZTd2l0Y2hfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlN3aXRjaF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAxOTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfcmlwcGxlYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfc2VsZWN0YWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19kaXJlY3RpdmVzX3RvdWNoX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxNCk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDIxKTtcbl9fd2VicGFja19yZXF1aXJlX18oMjAwKTtcblxuLy8gTWl4aW5zXG5cblxuXG4vLyBEaXJlY3RpdmVzXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LXN3aXRjaCcsXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfcmlwcGxlYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19zZWxlY3RhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRpcmVjdGl2ZXM6IHsgVG91Y2g6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fZGlyZWN0aXZlc190b3VjaF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgdmFyIGNsYXNzZXMgPSB7XG4gICAgICAgICdpbnB1dC1ncm91cC0tc2VsZWN0aW9uLWNvbnRyb2xzIHN3aXRjaCc6IHRydWVcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLmhhc0Vycm9yKSB7XG4gICAgICAgIGNsYXNzZXNbJ2Vycm9yLS10ZXh0J10gPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWRkVGV4dENvbG9yQ2xhc3NDaGVja3MoY2xhc3Nlcyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjbGFzc2VzO1xuICAgIH0sXG4gICAgcmlwcGxlQ2xhc3NlczogZnVuY3Rpb24gcmlwcGxlQ2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICdpbnB1dC1ncm91cC0tc2VsZWN0aW9uLWNvbnRyb2xzX19yaXBwbGUnOiB0cnVlLFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLXNlbGVjdGlvbi1jb250cm9sc19fcmlwcGxlLS1hY3RpdmUnOiB0aGlzLmlzQWN0aXZlXG4gICAgICB9O1xuICAgIH0sXG4gICAgY29udGFpbmVyQ2xhc3NlczogZnVuY3Rpb24gY29udGFpbmVyQ2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICdpbnB1dC1ncm91cC0tc2VsZWN0aW9uLWNvbnRyb2xzX19jb250YWluZXInOiB0cnVlLFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLXNlbGVjdGlvbi1jb250cm9sc19fY29udGFpbmVyLS1saWdodCc6IHRoaXMubGlnaHQsXG4gICAgICAgICdpbnB1dC1ncm91cC0tc2VsZWN0aW9uLWNvbnRyb2xzX19jb250YWluZXItLWRpc2FibGVkJzogdGhpcy5kaXNhYmxlZFxuICAgICAgfTtcbiAgICB9LFxuICAgIHRvZ2dsZUNsYXNzZXM6IGZ1bmN0aW9uIHRvZ2dsZUNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAnaW5wdXQtZ3JvdXAtLXNlbGVjdGlvbi1jb250cm9sc19fdG9nZ2xlJzogdHJ1ZSxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1zZWxlY3Rpb24tY29udHJvbHNfX3RvZ2dsZS0tYWN0aXZlJzogdGhpcy5pc0FjdGl2ZVxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIG9uU3dpcGVMZWZ0OiBmdW5jdGlvbiBvblN3aXBlTGVmdCgpIHtcbiAgICAgIGlmICh0aGlzLmlzQWN0aXZlKSB0aGlzLnRvZ2dsZSgpO1xuICAgIH0sXG4gICAgb25Td2lwZVJpZ2h0OiBmdW5jdGlvbiBvblN3aXBlUmlnaHQoKSB7XG4gICAgICBpZiAoIXRoaXMuaXNBY3RpdmUpIHRoaXMudG9nZ2xlKCk7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgY29udGFpbmVyID0gaCgnZGl2Jywge1xuICAgICAgJ2NsYXNzJzogdGhpcy5jb250YWluZXJDbGFzc2VzXG4gICAgfSwgW2goJ2RpdicsIHsgJ2NsYXNzJzogdGhpcy50b2dnbGVDbGFzc2VzIH0pLCB0aGlzLmdlblJpcHBsZSh7XG4gICAgICBkaXJlY3RpdmVzOiBbe1xuICAgICAgICBuYW1lOiAndG91Y2gnLFxuICAgICAgICB2YWx1ZToge1xuICAgICAgICAgIGxlZnQ6IHRoaXMub25Td2lwZUxlZnQsXG4gICAgICAgICAgcmlnaHQ6IHRoaXMub25Td2lwZVJpZ2h0XG4gICAgICAgIH1cbiAgICAgIH1dXG4gICAgfSldKTtcblxuICAgIHJldHVybiB0aGlzLmdlbklucHV0R3JvdXAoW2NvbnRhaW5lcl0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyMDAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAyMDEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WU3lzdGVtQmFyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIwMik7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlN5c3RlbUJhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlN5c3RlbUJhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlN5c3RlbUJhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WU3lzdGVtQmFyX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDIwMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19hcHBsaWNhdGlvbmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTEpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190aGVtZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDIwMyk7XG5cblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LXN5c3RlbS1iYXInLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2FwcGxpY2F0aW9uYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19jb2xvcmFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfdGhlbWVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIHByb3BzOiB7XG4gICAgYWJzb2x1dGU6IEJvb2xlYW4sXG4gICAgZml4ZWQ6IEJvb2xlYW4sXG4gICAgbGlnaHRzT3V0OiBCb29sZWFuLFxuICAgIHN0YXR1czogQm9vbGVhbixcbiAgICB3aW5kb3c6IEJvb2xlYW5cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyhPYmplY3QuYXNzaWduKHtcbiAgICAgICAgJ3N5c3RlbS1iYXItLWxpZ2h0cy1vdXQnOiB0aGlzLmxpZ2h0c091dCxcbiAgICAgICAgJ3N5c3RlbS1iYXItLWFic29sdXRlJzogdGhpcy5hYnNvbHV0ZSxcbiAgICAgICAgJ3N5c3RlbS1iYXItLWZpeGVkJzogdGhpcy5maXhlZCxcbiAgICAgICAgJ3N5c3RlbS1iYXItLXN0YXR1cyc6IHRoaXMuc3RhdHVzLFxuICAgICAgICAnc3lzdGVtLWJhci0td2luZG93JzogdGhpcy53aW5kb3dcbiAgICAgIH0sIHRoaXMudGhlbWVDbGFzc2VzKSk7XG4gICAgfSxcbiAgICBjb21wdXRlZEhlaWdodDogZnVuY3Rpb24gY29tcHV0ZWRIZWlnaHQoKSB7XG4gICAgICByZXR1cm4gdGhpcy53aW5kb3cgPyAzMiA6IDI0O1xuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIHdpbmRvdzogZnVuY3Rpb24gd2luZG93KCkge1xuICAgICAgdGhpcy51cGRhdGVBcHBsaWNhdGlvbigpO1xuICAgIH0sXG4gICAgZml4ZWQ6IGZ1bmN0aW9uIGZpeGVkKCkge1xuICAgICAgdGhpcy51cGRhdGVBcHBsaWNhdGlvbigpO1xuICAgIH0sXG4gICAgYWJzb2x1dGU6IGZ1bmN0aW9uIGFic29sdXRlKCkge1xuICAgICAgdGhpcy51cGRhdGVBcHBsaWNhdGlvbigpO1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgdXBkYXRlQXBwbGljYXRpb246IGZ1bmN0aW9uIHVwZGF0ZUFwcGxpY2F0aW9uKCkge1xuICAgICAgaWYgKHRoaXMuYXBwICYmIHRoaXMuJHZ1ZXRpZnkpIHtcbiAgICAgICAgdGhpcy4kdnVldGlmeS5hcHBsaWNhdGlvbi5iYXIgPSB0aGlzLmZpeGVkIHx8IHRoaXMuYWJzb2x1dGUgPyB0aGlzLmNvbXB1dGVkSGVpZ2h0IDogMDtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7XG4gICAgaWYgKHRoaXMuYXBwICYmIHRoaXMuJHZ1ZXRpZnkpIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYmFyID0gMDtcbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgc3RhdGljQ2xhc3M6ICdzeXN0ZW0tYmFyJyxcbiAgICAgICdjbGFzcyc6IHRoaXMuY2xhc3NlcyxcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGhlaWdodDogdGhpcy5jb21wdXRlZEhlaWdodCArICdweCdcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIGgoJ2RpdicsIGRhdGEsIHRoaXMuJHNsb3RzLmRlZmF1bHQpO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyMDMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAyMDQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WVGFic19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMDUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVlRhYnNCYXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMjA3KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZUYWJzQ29udGVudF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMDgpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fVlRhYnNJdGVtX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIwOSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19WVGFic0l0ZW1zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19WVGFic1NsaWRlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMTEpO1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVlRhYnMgKi9cbi8qIHVudXNlZCBoYXJtb255IHJlZXhwb3J0IFZUYWJzQmFyICovXG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWVGFic0NvbnRlbnQgKi9cbi8qIHVudXNlZCBoYXJtb255IHJlZXhwb3J0IFZUYWJzSXRlbSAqL1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVlRhYnNJdGVtcyAqL1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVlRhYnNTbGlkZXIgKi9cblxuXG5cblxuXG5cblxuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZUYWJzX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WVGFic19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlRhYnNfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WVGFic0Jhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVlRhYnNCYXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19WVGFic0NvbnRlbnRfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZUYWJzQ29udGVudF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1ZUYWJzSXRlbV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fVlRhYnNJdGVtX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVlRhYnNJdGVtc19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fVlRhYnNJdGVtc19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1ZUYWJzU2xpZGVyX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19WVGFic1NsaWRlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WVGFic19fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAyMDUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19kaXJlY3RpdmVzX3Jlc2l6ZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcbl9fd2VicGFja19yZXF1aXJlX18oMjA2KTtcblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi10YWJzJyxcblxuICBkaXJlY3RpdmVzOiB7XG4gICAgUmVzaXplOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2RpcmVjdGl2ZXNfcmVzaXplX19bXCJhXCIgLyogZGVmYXVsdCAqL11cbiAgfSxcblxuICBwcm92aWRlOiBmdW5jdGlvbiBwcm92aWRlKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgcmVnaXN0ZXJDb250ZW50OiB0aGlzLnJlZ2lzdGVyQ29udGVudCxcbiAgICAgIHVucmVnaXN0ZXJDb250ZW50OiB0aGlzLnVucmVnaXN0ZXJDb250ZW50LFxuICAgICAgcmVnaXN0ZXJUYWJJdGVtOiB0aGlzLnJlZ2lzdGVyVGFiSXRlbSxcbiAgICAgIHVucmVnaXN0ZXJUYWJJdGVtOiB0aGlzLnVucmVnaXN0ZXJUYWJJdGVtLFxuICAgICAgbmV4dDogdGhpcy5uZXh0LFxuICAgICAgcHJldjogdGhpcy5wcmV2LFxuICAgICAgc2xpZGVyOiB0aGlzLnNsaWRlcixcbiAgICAgIHRhYkNsaWNrOiB0aGlzLnRhYkNsaWNrLFxuICAgICAgaXNTY3JvbGxhYmxlOiBmdW5jdGlvbiBpc1Njcm9sbGFibGUoKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5zY3JvbGxhYmxlO1xuICAgICAgfSxcbiAgICAgIGlzTW9iaWxlOiBmdW5jdGlvbiBpc01vYmlsZSgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLmlzTW9iaWxlO1xuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjdGl2ZUluZGV4OiBudWxsLFxuICAgICAgY29udGVudDogW10sXG4gICAgICBpc0Jvb3RlZDogZmFsc2UsXG4gICAgICByZXNpemVUaW1lb3V0OiBudWxsLFxuICAgICAgcmV2ZXJzZTogZmFsc2UsXG4gICAgICB0YWJJdGVtczogW10sXG4gICAgICB0YWJzQ29udGFpbmVyOiBudWxsLFxuICAgICAgdGFic1NsaWRlcjogbnVsbCxcbiAgICAgIHRhcmdldDogbnVsbCxcbiAgICAgIHRhcmdldEVsOiBudWxsLFxuICAgICAgdHJhbnNpdGlvblRpbWU6IDMwMFxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGNlbnRlcmVkOiBCb29sZWFuLFxuICAgIGZpeGVkOiBCb29sZWFuLFxuICAgIGdyb3c6IEJvb2xlYW4sXG4gICAgaWNvbnM6IEJvb2xlYW4sXG4gICAgbW9iaWxlQnJlYWtQb2ludDoge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6IDEyODBcbiAgICB9LFxuICAgIHZhbHVlOiBTdHJpbmcsXG4gICAgc2Nyb2xsYWJsZToge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ3RhYnMnOiB0cnVlLFxuICAgICAgICAndGFicy0tY2VudGVyZWQnOiB0aGlzLmNlbnRlcmVkLFxuICAgICAgICAndGFicy0tZml4ZWQnOiB0aGlzLmZpeGVkLFxuICAgICAgICAndGFicy0tZ3Jvdyc6IHRoaXMuZ3JvdyxcbiAgICAgICAgJ3RhYnMtLWljb25zJzogdGhpcy5pY29ucyxcbiAgICAgICAgJ3RhYnMtLW1vYmlsZSc6IHRoaXMuaXNNb2JpbGUsXG4gICAgICAgICd0YWJzLS1zY3JvbGwtYmFycyc6IHRoaXMuc2Nyb2xsYWJsZVxuICAgICAgfTtcbiAgICB9LFxuICAgIGlzTW9iaWxlOiBmdW5jdGlvbiBpc01vYmlsZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQud2lkdGggPCB0aGlzLm1vYmlsZUJyZWFrUG9pbnQ7XG4gICAgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKCkge1xuICAgICAgdGhpcy50YWJDbGljayh0aGlzLnZhbHVlKTtcbiAgICB9LFxuICAgIGFjdGl2ZUluZGV4OiBmdW5jdGlvbiBhY3RpdmVJbmRleCgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLnVwZGF0ZVRhYnMoKTtcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi5pc0Jvb3RlZCA9IHRydWU7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHRhYkl0ZW1zOiBmdW5jdGlvbiB0YWJJdGVtcyhuZXdJdGVtcywgb2xkSXRlbXMpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICAvLyBUYWIgaXRlbSB3YXMgcmVtb3ZlZCBhbmRcbiAgICAgIC8vIHRoZXJlIGFyZSBzdGlsbCBtb3JlXG4gICAgICBpZiAob2xkSXRlbXMubGVuZ3RoID4gbmV3SXRlbXMubGVuZ3RoICYmIG5ld0l0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgaWYgKCFuZXdJdGVtcy5maW5kKGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgcmV0dXJuIG8uaWQgPT09IF90aGlzMy50YXJnZXQ7XG4gICAgICAgIH0pKSB7XG4gICAgICAgICAgdmFyIGkgPSBvbGRJdGVtcy5maW5kSW5kZXgoZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICAgIHJldHVybiBvLmlkID09PSBfdGhpczMudGFyZ2V0O1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMzLmFjdGl2ZUluZGV4ID0gX3RoaXMzLnRhYkl0ZW1zW2kgPiAwID8gaSAtIDEgOiAwXS5pZDtcbiAgICAgICAgICAgIF90aGlzMy50YXJnZXQgPSBfdGhpczMuYWN0aXZlSW5kZXg7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuc2xpZGVyKCk7XG4gICAgfSxcbiAgICAnJHZ1ZXRpZnkuYXBwbGljYXRpb24ubGVmdCc6IGZ1bmN0aW9uICR2dWV0aWZ5QXBwbGljYXRpb25MZWZ0KCkge1xuICAgICAgdGhpcy5vbkNvbnRhaW5lclJlc2l6ZSgpO1xuICAgIH0sXG4gICAgJyR2dWV0aWZ5LmFwcGxpY2F0aW9uLnJpZ2h0JzogZnVuY3Rpb24gJHZ1ZXRpZnlBcHBsaWNhdGlvblJpZ2h0KCkge1xuICAgICAgdGhpcy5vbkNvbnRhaW5lclJlc2l6ZSgpO1xuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIC8vIFRoaXMgaXMgYSB3b3JrYXJvdW5kIHRvIGRldGVjdCBpZiBsaW5rIGlzIGFjdGl2ZVxuICAgIC8vIHdoZW4gYmVpbmcgdXNlZCBhcyBhIHJvdXRlciBvciBudXh0IGxpbmtcbiAgICB2YXIgaSA9IHRoaXMudGFiSXRlbXMuZmluZEluZGV4KGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICB2YXIgZWwgPSBfcmVmLmVsO1xuXG4gICAgICByZXR1cm4gZWwuZmlyc3RDaGlsZC5jbGFzc0xpc3QuY29udGFpbnMoJ3RhYnNfX2l0ZW0tLWFjdGl2ZScpO1xuICAgIH0pO1xuXG4gICAgdmFyIHRhYiA9IHRoaXMudmFsdWUgfHwgKHRoaXMudGFiSXRlbXNbaSAhPT0gLTEgPyBpIDogMF0gfHwge30pLmlkO1xuXG4gICAgdGFiICYmIHRoaXMudGFiQ2xpY2sodGFiKTtcbiAgfSxcblxuXG4gIG1ldGhvZHM6IHtcbiAgICByZWdpc3RlckNvbnRlbnQ6IGZ1bmN0aW9uIHJlZ2lzdGVyQ29udGVudChpZCwgdG9nZ2xlKSB7XG4gICAgICB0aGlzLmNvbnRlbnQucHVzaCh7IGlkOiBpZCwgdG9nZ2xlOiB0b2dnbGUgfSk7XG4gICAgfSxcbiAgICByZWdpc3RlclRhYkl0ZW06IGZ1bmN0aW9uIHJlZ2lzdGVyVGFiSXRlbShpZCwgdG9nZ2xlLCBlbCkge1xuICAgICAgdGhpcy50YWJJdGVtcy5wdXNoKHsgaWQ6IGlkLCB0b2dnbGU6IHRvZ2dsZSwgZWw6IGVsIH0pO1xuICAgIH0sXG4gICAgdW5yZWdpc3RlckNvbnRlbnQ6IGZ1bmN0aW9uIHVucmVnaXN0ZXJDb250ZW50KGlkKSB7XG4gICAgICB0aGlzLmNvbnRlbnQgPSB0aGlzLmNvbnRlbnQuZmlsdGVyKGZ1bmN0aW9uIChvKSB7XG4gICAgICAgIHJldHVybiBvLmlkICE9PSBpZDtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgdW5yZWdpc3RlclRhYkl0ZW06IGZ1bmN0aW9uIHVucmVnaXN0ZXJUYWJJdGVtKGlkKSB7XG4gICAgICB0aGlzLnRhYkl0ZW1zID0gdGhpcy50YWJJdGVtcy5maWx0ZXIoZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgcmV0dXJuIG8uaWQgIT09IGlkO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KGN5Y2xlKSB7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gdGhpcy5hY3RpdmVJbmRleCArIDE7XG5cbiAgICAgIGlmICghdGhpcy5jb250ZW50W25leHRJbmRleF0pIHtcbiAgICAgICAgaWYgKCFjeWNsZSkgcmV0dXJuO1xuICAgICAgICBuZXh0SW5kZXggPSAwO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnRhYkNsaWNrKHRoaXMudGFiSXRlbXNbbmV4dEluZGV4XS5pZCk7XG4gICAgfSxcbiAgICBwcmV2OiBmdW5jdGlvbiBwcmV2KGN5Y2xlKSB7XG4gICAgICB2YXIgcHJldkluZGV4ID0gdGhpcy5hY3RpdmVJbmRleCAtIDE7XG5cbiAgICAgIGlmICghdGhpcy5jb250ZW50W3ByZXZJbmRleF0pIHtcbiAgICAgICAgaWYgKCFjeWNsZSkgcmV0dXJuO1xuICAgICAgICBwcmV2SW5kZXggPSB0aGlzLmNvbnRlbnQubGVuZ3RoIC0gMTtcbiAgICAgIH1cblxuICAgICAgdGhpcy50YWJDbGljayh0aGlzLnRhYkl0ZW1zW3ByZXZJbmRleF0uaWQpO1xuICAgIH0sXG4gICAgb25SZXNpemU6IGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuICAgICAgdGhpcy5zbGlkZXIoKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogV2hlbiB2LW5hdmlnYXRpb24tZHJhd2VyIGNoYW5nZXMgdGhlXG4gICAgICogd2lkdGggb2YgdGhlIGNvbnRhaW5lciwgY2FsbCByZXNpemVcbiAgICAgKiBhZnRlciB0aGUgdHJhbnNpdGlvbiBpcyBjb21wbGV0ZVxuICAgICAqXG4gICAgICogQHJldHVybiB7Vm9pZH1cbiAgICAgKi9cbiAgICBvbkNvbnRhaW5lclJlc2l6ZTogZnVuY3Rpb24gb25Db250YWluZXJSZXNpemUoKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5yZXNpemVUaW1lb3V0KTtcbiAgICAgIHRoaXMucmVzaXplVGltZW91dCA9IHNldFRpbWVvdXQodGhpcy5vblJlc2l6ZSwgdGhpcy50cmFuc2l0aW9uVGltZSk7XG4gICAgfSxcbiAgICBzbGlkZXI6IGZ1bmN0aW9uIHNsaWRlcihlbCkge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHRoaXMudGFic1NsaWRlciA9IHRoaXMudGFic1NsaWRlciB8fCAhIXRoaXMuJGVsICYmIHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoJy50YWJzX19zbGlkZXInKTtcblxuICAgICAgdGhpcy50YWJzQ29udGFpbmVyID0gdGhpcy50YWJzQ29udGFpbmVyIHx8ICEhdGhpcy4kZWwgJiYgdGhpcy4kZWwucXVlcnlTZWxlY3RvcignLnRhYnNfX2NvbnRhaW5lcicpO1xuXG4gICAgICBpZiAoIXRoaXMudGFic1NsaWRlciB8fCAhdGhpcy50YWJzQ29udGFpbmVyKSByZXR1cm47XG5cbiAgICAgIHRoaXMudGFyZ2V0RWwgPSBlbCB8fCB0aGlzLnRhcmdldEVsO1xuXG4gICAgICBpZiAoIXRoaXMudGFyZ2V0RWwpIHJldHVybjtcblxuICAgICAgLy8gR2l2ZXMgRE9NIHRpbWUgdG8gcGFpbnQgd2hlblxuICAgICAgLy8gcHJvY2Vzc2luZyBzbGlkZXIgZm9yXG4gICAgICAvLyBkeW5hbWljIHRhYnNcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gIzY4NCBDYWxjdWxhdGUgd2lkdGggYXMgJVxuICAgICAgICB2YXIgd2lkdGggPSBfdGhpczQudGFyZ2V0RWwuc2Nyb2xsV2lkdGggLyBfdGhpczQudGFic0NvbnRhaW5lci5jbGllbnRXaWR0aCAqIDEwMDtcblxuICAgICAgICBfdGhpczQudGFic1NsaWRlci5zdHlsZS53aWR0aCA9IHdpZHRoICsgJyUnO1xuICAgICAgICBfdGhpczQudGFic1NsaWRlci5zdHlsZS5sZWZ0ID0gX3RoaXM0LnRhcmdldEVsLm9mZnNldExlZnQgKyAncHgnO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICB0YWJDbGljazogZnVuY3Rpb24gdGFiQ2xpY2sodGFyZ2V0KSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgICAgdmFyIHNldEFjdGl2ZUluZGV4ID0gZnVuY3Rpb24gc2V0QWN0aXZlSW5kZXgoaW5kZXgpIHtcbiAgICAgICAgaWYgKF90aGlzNS5hY3RpdmVJbmRleCA9PT0gaW5kZXgpIHtcbiAgICAgICAgICAvLyAjNzYyIHVwZGF0ZSB0YWJzIGRpc3BsYXlcbiAgICAgICAgICAvLyBJbiBjYXNlIHRhYnMgY291bnQgZ290IGNoYW5nZWQgYnV0IGFjdGl2ZUluZGV4IGRpZG4ndFxuICAgICAgICAgIF90aGlzNS51cGRhdGVUYWJzKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXM1LmFjdGl2ZUluZGV4ID0gaW5kZXg7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBuZXh0SW5kZXggPSBfdGhpczUuY29udGVudC5maW5kSW5kZXgoZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICByZXR1cm4gby5pZCA9PT0gdGFyZ2V0O1xuICAgICAgICB9KTtcbiAgICAgICAgX3RoaXM1LnJldmVyc2UgPSBuZXh0SW5kZXggPCBfdGhpczUuYWN0aXZlSW5kZXg7XG4gICAgICAgIHNldEFjdGl2ZUluZGV4KG5leHRJbmRleCk7XG5cbiAgICAgICAgX3RoaXM1LiRlbWl0KCdpbnB1dCcsIF90aGlzNS50YXJnZXQpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICB1cGRhdGVUYWJzOiBmdW5jdGlvbiB1cGRhdGVUYWJzKCkge1xuICAgICAgdmFyIF90aGlzNiA9IHRoaXM7XG5cbiAgICAgIHRoaXMuY29udGVudC5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmMikge1xuICAgICAgICB2YXIgdG9nZ2xlID0gX3JlZjIudG9nZ2xlO1xuXG4gICAgICAgIHRvZ2dsZShfdGhpczYudGFyZ2V0LCBfdGhpczYucmV2ZXJzZSwgX3RoaXM2LmlzQm9vdGVkKTtcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLnRhYkl0ZW1zLmZvckVhY2goZnVuY3Rpb24gKF9yZWYzKSB7XG4gICAgICAgIHZhciB0b2dnbGUgPSBfcmVmMy50b2dnbGU7XG5cbiAgICAgICAgdG9nZ2xlKF90aGlzNi50YXJnZXQpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgJ2NsYXNzJzogdGhpcy5jbGFzc2VzLFxuICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgbmFtZTogJ3Jlc2l6ZScsXG4gICAgICAgIHZhbHVlOiB0aGlzLm9uUmVzaXplXG4gICAgICB9XVxuICAgIH0sIHRoaXMuJHNsb3RzLmRlZmF1bHQpO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyMDYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuLyoqKi8gfSksXG4vKiAyMDcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19jb2xvcmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfdGhlbWVhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fZGlyZWN0aXZlc19yZXNpemVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19kaXJlY3RpdmVzX3RvdWNoX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcpO1xuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuLy8gQ29tcG9uZW50IGltcG9ydHNcblxuXG4vLyBNaXhpbnNcblxuXG5cbi8vIERpcmVjdGl2ZXNcblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi10YWJzLWJhcicsXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfY29sb3JhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX3RoZW1lYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBkaXJlY3RpdmVzOiB7XG4gICAgUmVzaXplOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX2RpcmVjdGl2ZXNfcmVzaXplX19bXCJhXCIgLyogZGVmYXVsdCAqL10sXG4gICAgVG91Y2g6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fZGlyZWN0aXZlc190b3VjaF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXG4gIH0sXG5cbiAgcHJvdmlkZTogZnVuY3Rpb24gcHJvdmlkZSgpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGFkZFRhYkl0ZW06IGZ1bmN0aW9uIGFkZFRhYkl0ZW0oYWN0aW9uLCB0b2dnbGUsIGVsKSB7XG4gICAgICAgIF90aGlzLnJlZ2lzdGVyVGFiSXRlbShhY3Rpb24sIHRvZ2dsZSwgZWwpO1xuICAgICAgICBfdGhpcy5vblJlc2l6ZSgpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZVRhYkl0ZW06IGZ1bmN0aW9uIHJlbW92ZVRhYkl0ZW0oYWN0aW9uKSB7XG4gICAgICAgIF90aGlzLnVucmVnaXN0ZXJUYWJJdGVtKGFjdGlvbik7XG4gICAgICAgIF90aGlzLm9uUmVzaXplKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfSxcblxuXG4gIGluamVjdDogWydpc1Njcm9sbGFibGUnLCAnaXNNb2JpbGUnLCAncmVnaXN0ZXJUYWJJdGVtJywgJ3VucmVnaXN0ZXJUYWJJdGVtJ10sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaXNPdmVyZmxvd2luZzogZmFsc2UsXG4gICAgICBpdGVtT2Zmc2V0OiAwLFxuICAgICAgc2Nyb2xsT2Zmc2V0OiAwLFxuICAgICAgc3RhcnRYOiAwXG4gICAgfTtcbiAgfSxcblxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICd0YWJzX19iYXInOiB0cnVlLFxuICAgICAgICAndGhlbWUtLWRhcmsnOiB0aGlzLmRhcmssXG4gICAgICAgICd0aGVtZS0tbGlnaHQnOiB0aGlzLmxpZ2h0XG4gICAgICB9O1xuICAgIH0sXG4gICAgY29udGFpbmVyQ2xhc3NlczogZnVuY3Rpb24gY29udGFpbmVyQ2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICd0YWJzX19jb250YWluZXInOiB0cnVlXG4gICAgICB9O1xuICAgIH0sXG4gICAgd3JhcHBlckNsYXNzZXM6IGZ1bmN0aW9uIHdyYXBwZXJDbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ3RhYnNfX3dyYXBwZXInOiB0cnVlLFxuICAgICAgICAndGFic19fd3JhcHBlci0tc2Nyb2xsYWJsZSc6IHRoaXMuaXNTY3JvbGxhYmxlKCksXG4gICAgICAgICd0YWJzX193cmFwcGVyLS1vdmVyZmxvdyc6IHRoaXMuaXNPdmVyZmxvd2luZ1xuICAgICAgfTtcbiAgICB9LFxuICAgIGNvbnRhaW5lclN0eWxlczogZnVuY3Rpb24gY29udGFpbmVyU3R5bGVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ3RyYW5zZm9ybSc6ICd0cmFuc2xhdGVYKCcgKyAtdGhpcy5zY3JvbGxPZmZzZXQgKyAncHgpJ1xuICAgICAgfTtcbiAgICB9LFxuICAgIGxlZnRJY29uVmlzaWJsZTogZnVuY3Rpb24gbGVmdEljb25WaXNpYmxlKCkge1xuICAgICAgcmV0dXJuICF0aGlzLmlzTW9iaWxlKCkgJiYgdGhpcy5pc1Njcm9sbGFibGUoKSAmJiB0aGlzLmlzT3ZlcmZsb3dpbmcgJiYgdGhpcy5zY3JvbGxPZmZzZXQgPiAwO1xuICAgIH0sXG4gICAgcmlnaHRJY29uVmlzaWJsZTogZnVuY3Rpb24gcmlnaHRJY29uVmlzaWJsZSgpIHtcbiAgICAgIGlmICh0aGlzLmlzTW9iaWxlKCkgfHwgIXRoaXMuaXNTY3JvbGxhYmxlKCkgfHwgIXRoaXMuaXNPdmVyZmxvd2luZykgcmV0dXJuO1xuXG4gICAgICAvLyBDaGVjayBvbmUgc2Nyb2xsIGFoZWFkIHRvIGtub3cgdGhlIHdpZHRoIG9mIHJpZ2h0LW1vc3QgaXRlbVxuICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuJHJlZnMuY29udGFpbmVyO1xuICAgICAgdmFyIGl0ZW0gPSB0aGlzLm5ld09mZnNldFJpZ2h0KHRoaXMuc2Nyb2xsT2Zmc2V0LCB0aGlzLml0ZW1PZmZzZXQpO1xuICAgICAgdmFyIGl0ZW1XaWR0aCA9IGl0ZW0gJiYgY29udGFpbmVyLmNoaWxkcmVuW2l0ZW0uaW5kZXhdLmNsaWVudFdpZHRoIHx8IDA7XG4gICAgICB2YXIgc2Nyb2xsT2Zmc2V0ID0gdGhpcy5zY3JvbGxPZmZzZXQgKyBjb250YWluZXIuY2xpZW50V2lkdGg7XG5cbiAgICAgIHJldHVybiBjb250YWluZXIuc2Nyb2xsV2lkdGggLSBzY3JvbGxPZmZzZXQgPiBpdGVtV2lkdGggKiAwLjMwO1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgZ2VuQ29udGFpbmVyOiBmdW5jdGlvbiBnZW5Db250YWluZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndWwnLCB7XG4gICAgICAgICdjbGFzcyc6IHRoaXMuY29udGFpbmVyQ2xhc3NlcyxcbiAgICAgICAgJ3N0eWxlJzogdGhpcy5jb250YWluZXJTdHlsZXMsXG4gICAgICAgIHJlZjogJ2NvbnRhaW5lcidcbiAgICAgIH0sIHRoaXMuJHNsb3RzLmRlZmF1bHQpO1xuICAgIH0sXG4gICAgZ2VuSWNvbjogZnVuY3Rpb24gZ2VuSWNvbihkaXJlY3Rpb24pIHtcbiAgICAgIHZhciBjYXBpdGFsaXplID0gZGlyZWN0aW9uLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgZGlyZWN0aW9uLnNsaWNlKDEpO1xuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WSWNvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCB7XG4gICAgICAgIHByb3BzOiBfZGVmaW5lUHJvcGVydHkoe30sICcnICsgZGlyZWN0aW9uLCB0cnVlKSxcbiAgICAgICAgc3R5bGU6IHsgZGlzcGxheTogJ2lubGluZS1mbGV4JyB9LFxuICAgICAgICBvbjoge1xuICAgICAgICAgIGNsaWNrOiB0aGlzWydzY3JvbGwnICsgY2FwaXRhbGl6ZV1cbiAgICAgICAgfVxuICAgICAgfSwgJ2NoZXZyb25fJyArIGRpcmVjdGlvbik7XG4gICAgfSxcbiAgICBnZW5XcmFwcGVyOiBmdW5jdGlvbiBnZW5XcmFwcGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgY2xhc3M6IHRoaXMud3JhcHBlckNsYXNzZXMsXG4gICAgICAgIGRpcmVjdGl2ZXM6IFt7XG4gICAgICAgICAgbmFtZTogJ3RvdWNoJyxcbiAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgc3RhcnQ6IHRoaXMuc3RhcnQsXG4gICAgICAgICAgICBtb3ZlOiB0aGlzLm1vdmUsXG4gICAgICAgICAgICBlbmQ6IHRoaXMuZW5kXG4gICAgICAgICAgfVxuICAgICAgICB9XVxuICAgICAgfSwgW3RoaXMuZ2VuQ29udGFpbmVyKCldKTtcbiAgICB9LFxuICAgIHN0YXJ0OiBmdW5jdGlvbiBzdGFydChlKSB7XG4gICAgICB0aGlzLnN0YXJ0WCA9IHRoaXMuc2Nyb2xsT2Zmc2V0ICsgZS50b3VjaHN0YXJ0WDtcbiAgICAgIHRoaXMuJHJlZnMuY29udGFpbmVyLnN0eWxlLnRyYW5zaXRpb24gPSAnbm9uZSc7XG4gICAgfSxcbiAgICBtb3ZlOiBmdW5jdGlvbiBtb3ZlKGUpIHtcbiAgICAgIHZhciBvZmZzZXQgPSB0aGlzLnN0YXJ0WCAtIGUudG91Y2htb3ZlWDtcbiAgICAgIHRoaXMuc2Nyb2xsT2Zmc2V0ID0gb2Zmc2V0O1xuICAgIH0sXG4gICAgZW5kOiBmdW5jdGlvbiBlbmQoZSkge1xuICAgICAgdGhpcy5vblJlc2l6ZSgpO1xuICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuJHJlZnMuY29udGFpbmVyO1xuICAgICAgdmFyIHNjcm9sbFdpZHRoID0gY29udGFpbmVyLnNjcm9sbFdpZHRoIC0gdGhpcy4kZWwuY2xpZW50V2lkdGggLyAyO1xuICAgICAgY29udGFpbmVyLnN0eWxlLnRyYW5zaXRpb24gPSBudWxsO1xuXG4gICAgICBpZiAodGhpcy5zY3JvbGxPZmZzZXQgPCAwIHx8ICF0aGlzLmlzT3ZlcmZsb3dpbmcpIHtcbiAgICAgICAgdGhpcy5zY3JvbGxPZmZzZXQgPSAwO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnNjcm9sbE9mZnNldCA+PSBzY3JvbGxXaWR0aCkge1xuICAgICAgICB2YXIgbGFzdEl0ZW0gPSBjb250YWluZXIuY2hpbGRyZW5bY29udGFpbmVyLmNoaWxkcmVuLmxlbmd0aCAtIDFdO1xuICAgICAgICB0aGlzLnNjcm9sbE9mZnNldCA9IHNjcm9sbFdpZHRoIC0gbGFzdEl0ZW0uY2xpZW50V2lkdGg7XG4gICAgICB9XG4gICAgfSxcbiAgICBzY3JvbGxMZWZ0OiBmdW5jdGlvbiBzY3JvbGxMZWZ0KCkge1xuICAgICAgdmFyIF9uZXdPZmZzZXQgPSB0aGlzLm5ld09mZnNldCgnTGVmdCcpLFxuICAgICAgICAgIG9mZnNldCA9IF9uZXdPZmZzZXQub2Zmc2V0LFxuICAgICAgICAgIGluZGV4ID0gX25ld09mZnNldC5pbmRleDtcblxuICAgICAgdGhpcy5zY3JvbGxPZmZzZXQgPSBvZmZzZXQ7XG4gICAgICB0aGlzLml0ZW1PZmZzZXQgPSBpbmRleDtcbiAgICB9LFxuICAgIHNjcm9sbFJpZ2h0OiBmdW5jdGlvbiBzY3JvbGxSaWdodCgpIHtcbiAgICAgIHZhciBfbmV3T2Zmc2V0MiA9IHRoaXMubmV3T2Zmc2V0KCdSaWdodCcpLFxuICAgICAgICAgIG9mZnNldCA9IF9uZXdPZmZzZXQyLm9mZnNldCxcbiAgICAgICAgICBpbmRleCA9IF9uZXdPZmZzZXQyLmluZGV4O1xuXG4gICAgICB0aGlzLnNjcm9sbE9mZnNldCA9IG9mZnNldDtcbiAgICAgIHRoaXMuaXRlbU9mZnNldCA9IGluZGV4O1xuICAgIH0sXG4gICAgb25SZXNpemU6IGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuICAgICAgaWYgKHRoaXMuX2lzRGVzdHJveWVkKSByZXR1cm47XG5cbiAgICAgIHZhciBjb250YWluZXIgPSB0aGlzLiRyZWZzLmNvbnRhaW5lcjtcbiAgICAgIHRoaXMuaXNPdmVyZmxvd2luZyA9IGNvbnRhaW5lci5jbGllbnRXaWR0aCA8IGNvbnRhaW5lci5zY3JvbGxXaWR0aDtcbiAgICB9LFxuICAgIG5ld09mZnNldDogZnVuY3Rpb24gbmV3T2Zmc2V0KGRpcmVjdGlvbikge1xuICAgICAgcmV0dXJuIHRoaXNbJ25ld09mZnNldCcgKyBkaXJlY3Rpb25dKHRoaXMuc2Nyb2xsT2Zmc2V0LCB0aGlzLml0ZW1PZmZzZXQpO1xuICAgIH0sXG4gICAgbmV3T2Zmc2V0TGVmdDogZnVuY3Rpb24gbmV3T2Zmc2V0TGVmdChjdXJyZW50T2Zmc2V0LCBjdXJyZW50SW5kZXgpIHtcbiAgICAgIHZhciBjb250YWluZXIgPSB0aGlzLiRyZWZzLmNvbnRhaW5lcjtcbiAgICAgIHZhciBpdGVtcyA9IGNvbnRhaW5lci5jaGlsZHJlbjtcbiAgICAgIHZhciBvZmZzZXQgPSAwO1xuXG4gICAgICBmb3IgKHZhciBpbmRleCA9IGN1cnJlbnRJbmRleCAtIDE7IGluZGV4ID49IDA7IGluZGV4LS0pIHtcbiAgICAgICAgaWYgKCFpdGVtc1tpbmRleF0uY2xhc3NMaXN0LmNvbnRhaW5zKCd0YWJzX19zbGlkZXInKSkge1xuICAgICAgICAgIHZhciBuZXdPZmZzZXQgPSBvZmZzZXQgKyBpdGVtc1tpbmRleF0uY2xpZW50V2lkdGg7XG4gICAgICAgICAgaWYgKG5ld09mZnNldCA+PSBjb250YWluZXIuY2xpZW50V2lkdGgpIHtcbiAgICAgICAgICAgIHJldHVybiB7IG9mZnNldDogY3VycmVudE9mZnNldCAtIG9mZnNldCwgaW5kZXg6IGluZGV4ICsgMSB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICBvZmZzZXQgPSBuZXdPZmZzZXQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHsgb2Zmc2V0OiAwLCBpbmRleDogMCB9O1xuICAgIH0sXG4gICAgbmV3T2Zmc2V0UmlnaHQ6IGZ1bmN0aW9uIG5ld09mZnNldFJpZ2h0KGN1cnJlbnRPZmZzZXQsIGN1cnJlbnRJbmRleCkge1xuICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuJHJlZnMuY29udGFpbmVyO1xuICAgICAgdmFyIGl0ZW1zID0gY29udGFpbmVyLmNoaWxkcmVuO1xuICAgICAgdmFyIG9mZnNldCA9IGN1cnJlbnRPZmZzZXQ7XG5cbiAgICAgIGZvciAodmFyIGluZGV4ID0gY3VycmVudEluZGV4OyBpbmRleCA8IGl0ZW1zLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICBpZiAoIWl0ZW1zW2luZGV4XS5jbGFzc0xpc3QuY29udGFpbnMoJ3RhYnNfX3NsaWRlcicpKSB7XG4gICAgICAgICAgdmFyIG5ld09mZnNldCA9IG9mZnNldCArIGl0ZW1zW2luZGV4XS5jbGllbnRXaWR0aDtcbiAgICAgICAgICBpZiAobmV3T2Zmc2V0ID4gY3VycmVudE9mZnNldCArIGNvbnRhaW5lci5jbGllbnRXaWR0aCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgb2Zmc2V0OiBvZmZzZXQsIGluZGV4OiBpbmRleCB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICBvZmZzZXQgPSBuZXdPZmZzZXQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgJ2NsYXNzJzogdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyh0aGlzLmNsYXNzZXMpLFxuICAgICAgZGlyZWN0aXZlczogW3tcbiAgICAgICAgbmFtZTogJ3Jlc2l6ZScsXG4gICAgICAgIHZhbHVlOiB0aGlzLm9uUmVzaXplXG4gICAgICB9XVxuICAgIH0sIFt0aGlzLmdlbldyYXBwZXIoKSwgdGhpcy5sZWZ0SWNvblZpc2libGUgPyB0aGlzLmdlbkljb24oJ2xlZnQnKSA6IG51bGwsIHRoaXMucmlnaHRJY29uVmlzaWJsZSA/IHRoaXMuZ2VuSWNvbigncmlnaHQnKSA6IG51bGxdKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMjA4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2Jvb3RhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3RyYW5zaXRpb25zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fZGlyZWN0aXZlc190b3VjaF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi10YWJzLWNvbnRlbnQnLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2Jvb3RhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGluamVjdDogWydyZWdpc3RlckNvbnRlbnQnLCAndW5yZWdpc3RlckNvbnRlbnQnXSxcblxuICBjb21wb25lbnRzOiB7XG4gICAgVlRhYlRyYW5zaXRpb246IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fdHJhbnNpdGlvbnNfX1tcImdcIiAvKiBWVGFiVHJhbnNpdGlvbiAqL10sXG4gICAgVlRhYlJldmVyc2VUcmFuc2l0aW9uOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3RyYW5zaXRpb25zX19bXCJmXCIgLyogVlRhYlJldmVyc2VUcmFuc2l0aW9uICovXVxuICB9LFxuXG4gIGRpcmVjdGl2ZXM6IHtcbiAgICBUb3VjaDogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19kaXJlY3RpdmVzX3RvdWNoX19bXCJhXCIgLyogZGVmYXVsdCAqL11cbiAgfSxcblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgICByZXZlcnNlOiBmYWxzZVxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGlkOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAgdHJhbnNpdGlvbjoge1xuICAgICAgdHlwZTogW0Jvb2xlYW4sIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiAndGFiLXRyYW5zaXRpb24nXG4gICAgfSxcbiAgICByZXZlcnNlVHJhbnNpdGlvbjoge1xuICAgICAgdHlwZTogW0Jvb2xlYW4sIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiAndGFiLXJldmVyc2UtdHJhbnNpdGlvbidcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjb21wdXRlZFRyYW5zaXRpb246IGZ1bmN0aW9uIGNvbXB1dGVkVHJhbnNpdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnJldmVyc2UgPyB0aGlzLnJldmVyc2VUcmFuc2l0aW9uIDogdGhpcy50cmFuc2l0aW9uO1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgdG9nZ2xlOiBmdW5jdGlvbiB0b2dnbGUodGFyZ2V0LCByZXZlcnNlLCBzaG93VHJhbnNpdGlvbikge1xuICAgICAgdGhpcy4kZWwuc3R5bGUudHJhbnNpdGlvbiA9ICFzaG93VHJhbnNpdGlvbiA/ICdub25lJyA6IG51bGw7XG4gICAgICB0aGlzLnJldmVyc2UgPSByZXZlcnNlO1xuICAgICAgdGhpcy5pc0FjdGl2ZSA9IHRoaXMuaWQgPT09IHRhcmdldDtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLnJlZ2lzdGVyQ29udGVudCh0aGlzLmlkLCB0aGlzLnRvZ2dsZSk7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgdGhpcy51bnJlZ2lzdGVyQ29udGVudCh0aGlzLmlkKTtcbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgc3RhdGljQ2xhc3M6ICd0YWJzX19jb250ZW50JyxcbiAgICAgIGRpcmVjdGl2ZXM6IFt7XG4gICAgICAgIG5hbWU6ICdzaG93JyxcbiAgICAgICAgdmFsdWU6IHRoaXMuaXNBY3RpdmVcbiAgICAgIH1dLFxuICAgICAgb246IHRoaXMuJGxpc3RlbmVyc1xuICAgIH07XG5cbiAgICBpZiAodGhpcy5pZCkgZGF0YS5kb21Qcm9wcyA9IHsgaWQ6IHRoaXMuaWQgfTtcblxuICAgIHZhciBkaXYgPSBoKCdkaXYnLCBkYXRhLCB0aGlzLnNob3dMYXp5Q29udGVudCh0aGlzLiRzbG90cy5kZWZhdWx0KSk7XG5cbiAgICBpZiAoIXRoaXMuY29tcHV0ZWRUcmFuc2l0aW9uKSByZXR1cm4gZGl2O1xuXG4gICAgcmV0dXJuIGgoJ3RyYW5zaXRpb24nLCB7XG4gICAgICBwcm9wczogeyBuYW1lOiB0aGlzLmNvbXB1dGVkVHJhbnNpdGlvbiB9XG4gICAgfSwgW2Rpdl0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyMDkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfcm91dGFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTMpO1xuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi10YWJzLWl0ZW0nLFxuXG4gIGluamVjdDogWydzbGlkZXInLCAndGFiQ2xpY2snLCAnYWRkVGFiSXRlbScsICdyZW1vdmVUYWJJdGVtJ10sXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfcm91dGFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaXNBY3RpdmU6IGZhbHNlXG4gICAgfTtcbiAgfSxcblxuXG4gIHByb3BzOiB7XG4gICAgYWN0aXZlQ2xhc3M6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICd0YWJzX19pdGVtLS1hY3RpdmUnXG4gICAgfVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHZhciBjbGFzc2VzID0ge1xuICAgICAgICAndGFic19faXRlbSc6IHRydWUsXG4gICAgICAgICd0YWJzX19pdGVtLS1kaXNhYmxlZCc6IHRoaXMuZGlzYWJsZWRcbiAgICAgIH07XG5cbiAgICAgIGNsYXNzZXNbdGhpcy5hY3RpdmVDbGFzc10gPSAhdGhpcy50byAmJiB0aGlzLmlzQWN0aXZlO1xuXG4gICAgICByZXR1cm4gY2xhc3NlcztcbiAgICB9LFxuICAgIGFjdGlvbjogZnVuY3Rpb24gYWN0aW9uKCkge1xuICAgICAgdmFyIHRvID0gdGhpcy50byB8fCB0aGlzLmhyZWY7XG5cbiAgICAgIGlmICghdG8gfHwgdG8gPT09IE9iamVjdCh0bykpIHJldHVybiB0aGlzLl91aWQ7XG5cbiAgICAgIHJldHVybiB0by5yZXBsYWNlKCcjJywgJycpO1xuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgICRyb3V0ZTogZnVuY3Rpb24gJHJvdXRlKCkge1xuICAgICAgdGhpcy50byAmJiB0aGlzLmNhbGxTbGlkZXIoKTtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmFkZFRhYkl0ZW0odGhpcy5hY3Rpb24sIHRoaXMudG9nZ2xlLCB0aGlzLiRlbCk7XG4gICAgdGhpcy5jYWxsU2xpZGVyKCk7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgdGhpcy5yZW1vdmVUYWJJdGVtKHRoaXMuYWN0aW9uKTtcbiAgfSxcblxuXG4gIG1ldGhvZHM6IHtcbiAgICBjYWxsU2xpZGVyOiBmdW5jdGlvbiBjYWxsU2xpZGVyKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLiRlbC5maXJzdENoaWxkLmNsYXNzTGlzdC5jb250YWlucygndGFic19faXRlbS0tYWN0aXZlJykgJiYgX3RoaXMuc2xpZGVyKF90aGlzLiRlbCk7XG4gICAgICB9LCAwKTtcbiAgICB9LFxuICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLiRlbWl0KCdjbGljaycsIGUpO1xuXG4gICAgICBpZiAoIXRoaXMudG8gJiYgIXRoaXMuaHJlZikgcmV0dXJuO1xuXG4gICAgICBpZiAoIXRoaXMudG8pIHtcbiAgICAgICAgdGhpcy50YWJDbGljayh0aGlzLmFjdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY2FsbFNsaWRlcigpO1xuICAgIH0sXG4gICAgdG9nZ2xlOiBmdW5jdGlvbiB0b2dnbGUoYWN0aW9uKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdGhpcy5pc0FjdGl2ZSA9IHRoaXMuYWN0aW9uID09PSBhY3Rpb247XG5cbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLmlzQWN0aXZlICYmIF90aGlzMi5zbGlkZXIoX3RoaXMyLiRlbCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBsaW5rID0gdGhpcy5nZW5lcmF0ZVJvdXRlTGluaygpO1xuICAgIHZhciBkYXRhID0gbGluay5kYXRhO1xuXG4gICAgLy8gSWYgZGlzYWJsZWQsIHVzZSBkaXYgYXMgYW5jaG9yIHRhZ3MgZG8gbm90IHN1cHBvcnRcbiAgICAvLyBiZWluZyBkaXNhYmxlZFxuXG4gICAgdmFyIHRhZyA9IHRoaXMuZGlzYWJsZWQgPyAnZGl2JyA6IGxpbmsudGFnO1xuXG4gICAgcmV0dXJuIGgoJ2xpJywge1xuICAgICAgJ2NsYXNzJzogJ3RhYnNfX2xpJ1xuICAgIH0sIFtoKHRhZywgZGF0YSwgdGhpcy4kc2xvdHMuZGVmYXVsdCldKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMjEwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fZGlyZWN0aXZlc190b3VjaF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtdGFicy1pdGVtcycsXG5cbiAgZGlyZWN0aXZlczogeyBUb3VjaDogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19kaXJlY3RpdmVzX3RvdWNoX19bXCJhXCIgLyogZGVmYXVsdCAqL10gfSxcblxuICBpbmplY3Q6IFsnbmV4dCcsICdwcmV2J10sXG5cbiAgcHJvcHM6IHtcbiAgICBjeWNsZTogQm9vbGVhbixcbiAgICB0b3VjaGxlc3M6IEJvb2xlYW5cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgc3dpcGVMZWZ0OiBmdW5jdGlvbiBzd2lwZUxlZnQoKSB7XG4gICAgICB0aGlzLm5leHQodGhpcy5jeWNsZSk7XG4gICAgfSxcbiAgICBzd2lwZVJpZ2h0OiBmdW5jdGlvbiBzd2lwZVJpZ2h0KCkge1xuICAgICAgdGhpcy5wcmV2KHRoaXMuY3ljbGUpO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgdmFyIGRhdGEgPSB7XG4gICAgICBzdGF0aWNDbGFzczogJ3RhYnNfX2l0ZW1zJyxcbiAgICAgIGRpcmVjdGl2ZXM6IFtdXG4gICAgfTtcblxuICAgICF0aGlzLnRvdWNobGVzcyAmJiBkYXRhLmRpcmVjdGl2ZXMucHVzaCh7XG4gICAgICBuYW1lOiAndG91Y2gnLFxuICAgICAgdmFsdWU6IHtcbiAgICAgICAgbGVmdDogdGhpcy5zd2lwZUxlZnQsXG4gICAgICAgIHJpZ2h0OiB0aGlzLnN3aXBlUmlnaHRcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBoKCdkaXYnLCBkYXRhLCB0aGlzLiRzbG90cy5kZWZhdWx0KTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMjExICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtdGFicy1zbGlkZXInLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBkZWZhdWx0Q29sb3I6ICdhY2NlbnQnXG4gICAgfTtcbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgcmV0dXJuIGgoJ2xpJywge1xuICAgICAgc3RhdGljQ2xhc3M6ICd0YWJzX19zbGlkZXInLFxuICAgICAgY2xhc3M6IHRoaXMuYWRkQmFja2dyb3VuZENvbG9yQ2xhc3NDaGVja3MoKVxuICAgIH0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyMTIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WVGV4dEZpZWxkX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxMyk7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlRleHRGaWVsZF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlRleHRGaWVsZF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlRleHRGaWVsZF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WVGV4dEZpZWxkX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKioqLyB9KSxcbi8qIDIxMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX21peGluc19jb2xvcmFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfaW5wdXRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX21hc2thYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX3V0aWxfbWFza19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0Myk7XG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE0KTtcbl9fd2VicGFja19yZXF1aXJlX18oMzYpO1xuXG5cblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LXRleHQtZmllbGQnLFxuXG4gIG1peGluczogW19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19pbnB1dF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc19tYXNrYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dXSxcblxuICBpbmhlcml0QXR0cnM6IGZhbHNlLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGluaXRpYWxWYWx1ZTogbnVsbCxcbiAgICAgIGlucHV0SGVpZ2h0OiBudWxsLFxuICAgICAgaW50ZXJuYWxDaGFuZ2U6IGZhbHNlLFxuICAgICAgYmFkSW5wdXQ6IGZhbHNlLFxuICAgICAgbGF6eVNlbGVjdGlvbjogMFxuICAgIH07XG4gIH0sXG5cblxuICBwcm9wczoge1xuICAgIGF1dG9mb2N1czogQm9vbGVhbixcbiAgICBhdXRvR3JvdzogQm9vbGVhbixcbiAgICBib3g6IEJvb2xlYW4sXG4gICAgY2xlYXJhYmxlOiBCb29sZWFuLFxuICAgIGNvbG9yOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAncHJpbWFyeSdcbiAgICB9LFxuICAgIGNvdW50ZXI6IFtCb29sZWFuLCBOdW1iZXIsIFN0cmluZ10sXG4gICAgZnVsbFdpZHRoOiBCb29sZWFuLFxuICAgIG11bHRpTGluZTogQm9vbGVhbixcbiAgICBwbGFjZWhvbGRlcjogU3RyaW5nLFxuICAgIHByZWZpeDogU3RyaW5nLFxuICAgIHJvd3M6IHtcbiAgICAgIGRlZmF1bHQ6IDVcbiAgICB9LFxuICAgIHNpbmdsZUxpbmU6IEJvb2xlYW4sXG4gICAgc29sbzogQm9vbGVhbixcbiAgICBzdWZmaXg6IFN0cmluZyxcbiAgICB0ZXh0YXJlYTogQm9vbGVhbixcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAndGV4dCdcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgdmFyIGNsYXNzZXMgPSB7XG4gICAgICAgICdpbnB1dC1ncm91cC0tdGV4dC1maWVsZCc6IHRydWUsXG4gICAgICAgICdpbnB1dC1ncm91cC0tdGV4dC1maWVsZC1ib3gnOiB0aGlzLmJveCxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1zaW5nbGUtbGluZSc6IHRoaXMuc2luZ2xlTGluZSB8fCB0aGlzLnNvbG8sXG4gICAgICAgICdpbnB1dC1ncm91cC0tc29sbyc6IHRoaXMuc29sbyxcbiAgICAgICAgJ2lucHV0LWdyb3VwLS1tdWx0aS1saW5lJzogdGhpcy5tdWx0aUxpbmUsXG4gICAgICAgICdpbnB1dC1ncm91cC0tZnVsbC13aWR0aCc6IHRoaXMuZnVsbFdpZHRoLFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLXByZWZpeCc6IHRoaXMucHJlZml4LFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLXN1ZmZpeCc6IHRoaXMuc3VmZml4LFxuICAgICAgICAnaW5wdXQtZ3JvdXAtLXRleHRhcmVhJzogdGhpcy50ZXh0YXJlYVxuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMuaGFzRXJyb3IpIHtcbiAgICAgICAgY2xhc3Nlc1snZXJyb3ItLXRleHQnXSA9IHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5hZGRUZXh0Q29sb3JDbGFzc0NoZWNrcyhjbGFzc2VzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNsYXNzZXM7XG4gICAgfSxcbiAgICBjb3VudDogZnVuY3Rpb24gY291bnQoKSB7XG4gICAgICB2YXIgaW5wdXRMZW5ndGggPSB2b2lkIDA7XG4gICAgICBpZiAodGhpcy5pbnB1dFZhbHVlKSBpbnB1dExlbmd0aCA9IHRoaXMuaW5wdXRWYWx1ZS50b1N0cmluZygpLmxlbmd0aDtlbHNlIGlucHV0TGVuZ3RoID0gMDtcblxuICAgICAgcmV0dXJuIGlucHV0TGVuZ3RoICsgJyAvICcgKyB0aGlzLmNvdW50ZXJMZW5ndGg7XG4gICAgfSxcbiAgICBjb3VudGVyTGVuZ3RoOiBmdW5jdGlvbiBjb3VudGVyTGVuZ3RoKCkge1xuICAgICAgdmFyIHBhcnNlZExlbmd0aCA9IHBhcnNlSW50KHRoaXMuY291bnRlciwgMTApO1xuICAgICAgcmV0dXJuIGlzTmFOKHBhcnNlZExlbmd0aCkgPyAyNSA6IHBhcnNlZExlbmd0aDtcbiAgICB9LFxuXG4gICAgaW5wdXRWYWx1ZToge1xuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxhenlWYWx1ZTtcbiAgICAgIH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWwpIHtcbiAgICAgICAgaWYgKHRoaXMubWFzaykge1xuICAgICAgICAgIHRoaXMubGF6eVZhbHVlID0gdGhpcy51bm1hc2tUZXh0KHRoaXMubWFza1RleHQodGhpcy51bm1hc2tUZXh0KHZhbCkpKTtcbiAgICAgICAgICB0aGlzLnNldFNlbGVjdGlvblJhbmdlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5sYXp5VmFsdWUgPSB2YWw7XG4gICAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLmxhenlWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGlzRGlydHk6IGZ1bmN0aW9uIGlzRGlydHkoKSB7XG4gICAgICByZXR1cm4gdGhpcy5sYXp5VmFsdWUgIT0gbnVsbCAmJiB0aGlzLmxhenlWYWx1ZS50b1N0cmluZygpLmxlbmd0aCA+IDAgfHwgdGhpcy5iYWRJbnB1dCB8fCBbJ3RpbWUnLCAnZGF0ZScsICdkYXRldGltZS1sb2NhbCcsICd3ZWVrJywgJ21vbnRoJ10uaW5jbHVkZXModGhpcy50eXBlKTtcbiAgICB9LFxuICAgIHNob3VsZEF1dG9Hcm93OiBmdW5jdGlvbiBzaG91bGRBdXRvR3JvdygpIHtcbiAgICAgIHJldHVybiAodGhpcy5tdWx0aUxpbmUgfHwgdGhpcy50ZXh0YXJlYSkgJiYgdGhpcy5hdXRvR3JvdztcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBpc0ZvY3VzZWQ6IGZ1bmN0aW9uIGlzRm9jdXNlZCh2YWwpIHtcbiAgICAgIGlmICh2YWwpIHtcbiAgICAgICAgdGhpcy5pbml0aWFsVmFsdWUgPSB0aGlzLmxhenlWYWx1ZTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5pbml0aWFsVmFsdWUgIT09IHRoaXMubGF6eVZhbHVlKSB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHRoaXMubGF6eVZhbHVlKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh2YWwpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLm1hc2sgJiYgIXRoaXMuaW50ZXJuYWxDaGFuZ2UpIHtcbiAgICAgICAgdmFyIG1hc2tlZCA9IHRoaXMubWFza1RleHQodGhpcy51bm1hc2tUZXh0KHZhbCkpO1xuICAgICAgICB0aGlzLmxhenlWYWx1ZSA9IHRoaXMudW5tYXNrVGV4dChtYXNrZWQpO1xuXG4gICAgICAgIC8vIEVtaXQgd2hlbiB0aGUgZXh0ZXJuYWxseSBzZXQgdmFsdWUgd2FzIG1vZGlmaWVkIGludGVybmFsbHlcbiAgICAgICAgU3RyaW5nKHZhbCkgIT09IHRoaXMubGF6eVZhbHVlICYmIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpcy4kcmVmcy5pbnB1dC52YWx1ZSA9IG1hc2tlZDtcbiAgICAgICAgICBfdGhpcy4kZW1pdCgnaW5wdXQnLCBfdGhpcy5sYXp5VmFsdWUpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB0aGlzLmxhenlWYWx1ZSA9IHZhbDtcblxuICAgICAgaWYgKHRoaXMuaW50ZXJuYWxDaGFuZ2UpIHRoaXMuaW50ZXJuYWxDaGFuZ2UgPSBmYWxzZTtcblxuICAgICAgIXRoaXMudmFsaWRhdGVPbkJsdXIgJiYgdGhpcy52YWxpZGF0ZSgpO1xuICAgICAgdGhpcy5zaG91bGRBdXRvR3JvdyAmJiB0aGlzLmNhbGN1bGF0ZUlucHV0SGVpZ2h0KCk7XG4gICAgfVxuICB9LFxuXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5zaG91bGRBdXRvR3JvdyAmJiB0aGlzLmNhbGN1bGF0ZUlucHV0SGVpZ2h0KCk7XG4gICAgdGhpcy5hdXRvZm9jdXMgJiYgdGhpcy5mb2N1cygpO1xuICB9LFxuXG5cbiAgbWV0aG9kczoge1xuICAgIGNhbGN1bGF0ZUlucHV0SGVpZ2h0OiBmdW5jdGlvbiBjYWxjdWxhdGVJbnB1dEhlaWdodCgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLmlucHV0SGVpZ2h0ID0gbnVsbDtcblxuICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaGVpZ2h0ID0gX3RoaXMyLiRyZWZzLmlucHV0ID8gX3RoaXMyLiRyZWZzLmlucHV0LnNjcm9sbEhlaWdodCA6IDA7XG4gICAgICAgIHZhciBtaW5IZWlnaHQgPSBfdGhpczIucm93cyAqIDI0O1xuICAgICAgICB2YXIgaW5wdXRIZWlnaHQgPSBoZWlnaHQgPCBtaW5IZWlnaHQgPyBtaW5IZWlnaHQgOiBoZWlnaHQ7XG4gICAgICAgIF90aGlzMi5pbnB1dEhlaWdodCA9IGlucHV0SGVpZ2h0ICsgKF90aGlzMi50ZXh0YXJlYSA/IDQgOiAwKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb25JbnB1dDogZnVuY3Rpb24gb25JbnB1dChlKSB7XG4gICAgICB0aGlzLm1hc2sgJiYgdGhpcy5yZXNldFNlbGVjdGlvbnMoZS50YXJnZXQpO1xuICAgICAgdGhpcy5pbnB1dFZhbHVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgICB0aGlzLmJhZElucHV0ID0gZS50YXJnZXQudmFsaWRpdHkgJiYgZS50YXJnZXQudmFsaWRpdHkuYmFkSW5wdXQ7XG4gICAgICB0aGlzLnNob3VsZEF1dG9Hcm93ICYmIHRoaXMuY2FsY3VsYXRlSW5wdXRIZWlnaHQoKTtcbiAgICB9LFxuICAgIGJsdXI6IGZ1bmN0aW9uIGJsdXIoZSkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2U7XG4gICAgICAvLyBSZXNldCBpbnRlcm5hbENoYW5nZSBzdGF0ZVxuICAgICAgLy8gdG8gYWxsb3cgZXh0ZXJuYWwgY2hhbmdlXG4gICAgICAvLyB0byBwZXJzaXN0XG4gICAgICB0aGlzLmludGVybmFsQ2hhbmdlID0gZmFsc2U7XG5cbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMzLnZhbGlkYXRlKCk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuJGVtaXQoJ2JsdXInLCBlKTtcbiAgICB9LFxuICAgIGZvY3VzOiBmdW5jdGlvbiBmb2N1cyhlKSB7XG4gICAgICBpZiAoIXRoaXMuJHJlZnMuaW5wdXQpIHJldHVybjtcblxuICAgICAgdGhpcy5pc0ZvY3VzZWQgPSB0cnVlO1xuICAgICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IHRoaXMuJHJlZnMuaW5wdXQpIHtcbiAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC5mb2N1cygpO1xuICAgICAgfVxuICAgICAgdGhpcy4kZW1pdCgnZm9jdXMnLCBlKTtcbiAgICB9LFxuICAgIGtleURvd246IGZ1bmN0aW9uIGtleURvd24oZSkge1xuICAgICAgLy8gUHJldmVudHMgY2xvc2luZyBvZiBhXG4gICAgICAvLyBkaWFsb2cgd2hlbiBwcmVzc2luZ1xuICAgICAgLy8gZW50ZXJcbiAgICAgIGlmICh0aGlzLm11bHRpTGluZSAmJiB0aGlzLmlzRm9jdXNlZCAmJiBlLmtleUNvZGUgPT09IDEzKSB7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaW50ZXJuYWxDaGFuZ2UgPSB0cnVlO1xuICAgIH0sXG4gICAgZ2VuQ291bnRlcjogZnVuY3Rpb24gZ2VuQ291bnRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgICdjbGFzcyc6IHtcbiAgICAgICAgICAnaW5wdXQtZ3JvdXBfX2NvdW50ZXInOiB0cnVlLFxuICAgICAgICAgICdpbnB1dC1ncm91cF9fY291bnRlci0tZXJyb3InOiB0aGlzLmhhc0Vycm9yXG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMuY291bnQpO1xuICAgIH0sXG4gICAgZ2VuSW5wdXQ6IGZ1bmN0aW9uIGdlbklucHV0KCkge1xuICAgICAgdmFyIHRhZyA9IHRoaXMubXVsdGlMaW5lIHx8IHRoaXMudGV4dGFyZWEgPyAndGV4dGFyZWEnIDogJ2lucHV0JztcbiAgICAgIHZhciBsaXN0ZW5lcnMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLiRsaXN0ZW5lcnMpO1xuICAgICAgZGVsZXRlIGxpc3RlbmVyc1snY2hhbmdlJ107IC8vIENoYW5nZSBzaG91bGQgbm90IGJlIGJvdW5kIGV4dGVybmFsbHlcblxuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIHN0eWxlOiB7fSxcbiAgICAgICAgZG9tUHJvcHM6IHtcbiAgICAgICAgICBhdXRvZm9jdXM6IHRoaXMuYXV0b2ZvY3VzLFxuICAgICAgICAgIGRpc2FibGVkOiB0aGlzLmRpc2FibGVkLFxuICAgICAgICAgIHJlcXVpcmVkOiB0aGlzLnJlcXVpcmVkLFxuICAgICAgICAgIHZhbHVlOiB0aGlzLm1hc2tUZXh0KHRoaXMubGF6eVZhbHVlKVxuICAgICAgICB9LFxuICAgICAgICBhdHRyczogX2V4dGVuZHMoe30sIHRoaXMuJGF0dHJzLCB7XG4gICAgICAgICAgcmVhZG9ubHk6IHRoaXMucmVhZG9ubHksXG4gICAgICAgICAgdGFiaW5kZXg6IHRoaXMudGFiaW5kZXgsXG4gICAgICAgICAgJ2FyaWEtbGFiZWwnOiAoIXRoaXMuJGF0dHJzIHx8ICF0aGlzLiRhdHRycy5pZCkgJiYgdGhpcy5sYWJlbCAvLyBMYWJlbCBgZm9yYCB3aWxsIGJlIHNldCBpZiB3ZSBoYXZlIGFuIGlkXG4gICAgICAgIH0pLFxuICAgICAgICBvbjogT2JqZWN0LmFzc2lnbihsaXN0ZW5lcnMsIHtcbiAgICAgICAgICBibHVyOiB0aGlzLmJsdXIsXG4gICAgICAgICAgaW5wdXQ6IHRoaXMub25JbnB1dCxcbiAgICAgICAgICBmb2N1czogdGhpcy5mb2N1cyxcbiAgICAgICAgICBrZXlkb3duOiB0aGlzLmtleURvd25cbiAgICAgICAgfSksXG4gICAgICAgIHJlZjogJ2lucHV0J1xuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMuc2hvdWxkQXV0b0dyb3cpIHtcbiAgICAgICAgZGF0YS5zdHlsZS5oZWlnaHQgPSB0aGlzLmlucHV0SGVpZ2h0ICYmIHRoaXMuaW5wdXRIZWlnaHQgKyAncHgnO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5wbGFjZWhvbGRlcikgZGF0YS5kb21Qcm9wcy5wbGFjZWhvbGRlciA9IHRoaXMucGxhY2Vob2xkZXI7XG5cbiAgICAgIGlmICghdGhpcy50ZXh0YXJlYSAmJiAhdGhpcy5tdWx0aUxpbmUpIHtcbiAgICAgICAgZGF0YS5kb21Qcm9wcy50eXBlID0gdGhpcy50eXBlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGF0YS5kb21Qcm9wcy5yb3dzID0gdGhpcy5yb3dzO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5tYXNrKSB7XG4gICAgICAgIGRhdGEuYXR0cnMubWF4bGVuZ3RoID0gdGhpcy5tYXNrZWQubGVuZ3RoO1xuICAgICAgfVxuXG4gICAgICB2YXIgY2hpbGRyZW4gPSBbdGhpcy4kY3JlYXRlRWxlbWVudCh0YWcsIGRhdGEpXTtcblxuICAgICAgdGhpcy5wcmVmaXggJiYgY2hpbGRyZW4udW5zaGlmdCh0aGlzLmdlbkZpeCgncHJlZml4JykpO1xuICAgICAgdGhpcy5zdWZmaXggJiYgY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkZpeCgnc3VmZml4JykpO1xuXG4gICAgICByZXR1cm4gY2hpbGRyZW47XG4gICAgfSxcbiAgICBnZW5GaXg6IGZ1bmN0aW9uIGdlbkZpeCh0eXBlKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnc3BhbicsIHtcbiAgICAgICAgJ2NsYXNzJzogJ2lucHV0LWdyb3VwLS10ZXh0LWZpZWxkX18nICsgdHlwZVxuICAgICAgfSwgdGhpc1t0eXBlXSk7XG4gICAgfSxcbiAgICBjbGVhcmFibGVDYWxsYmFjazogZnVuY3Rpb24gY2xlYXJhYmxlQ2FsbGJhY2soKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdGhpcy5pbnB1dFZhbHVlID0gbnVsbDtcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzNC4kcmVmcy5pbnB1dC5mb2N1cygpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICByZXNldFNlbGVjdGlvbnM6IGZ1bmN0aW9uIHJlc2V0U2VsZWN0aW9ucyhpbnB1dCkge1xuICAgICAgaWYgKCFpbnB1dC5zZWxlY3Rpb25FbmQpIHJldHVybjtcbiAgICAgIHRoaXMuc2VsZWN0aW9uID0gaW5wdXQuc2VsZWN0aW9uRW5kO1xuICAgICAgdGhpcy5sYXp5U2VsZWN0aW9uID0gMDtcblxuICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlO1xuICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGlucHV0LnZhbHVlLnN1YnN0cigwLCB0aGlzLnNlbGVjdGlvbilbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICAgICAgdmFyIGNoYXIgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgICAgIE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX3V0aWxfbWFza19fW1wiYVwiIC8qIGlzTWFza0RlbGltaXRlciAqL10pKGNoYXIpIHx8IHRoaXMubGF6eVNlbGVjdGlvbisrO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2VuSW5wdXRHcm91cCh0aGlzLmdlbklucHV0KCksIHsgYXR0cnM6IHsgdGFiaW5kZXg6IGZhbHNlIH0gfSk7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDIxNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZUaW1lUGlja2VyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxNSk7XG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlRpbWVQaWNrZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5pbnN0YWxsID0gZnVuY3Rpb24gaW5zdGFsbChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZUaW1lUGlja2VyX19bXCJhXCIgLyogZGVmYXVsdCAqL10ubmFtZSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WVGltZVBpY2tlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WVGltZVBpY2tlcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcblxuLyoqKi8gfSksXG4vKiAyMTUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WQ2FyZF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19taXhpbnNfcGlja2VyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQ1KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX21peGluc190aW1lX3RpdGxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxNyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfdGltZV9ib2R5X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxOCk7XG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDQ0KTtcbl9fd2VicGFja19yZXF1aXJlX18oMjE2KTtcblxuXG5cblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBuYW1lOiAndi10aW1lLXBpY2tlcicsXG5cbiAgY29tcG9uZW50czoge1xuICAgIFZDYXJkOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZDYXJkX19bXCJhXCIgLyogZGVmYXVsdCAqL11cbiAgfSxcblxuICBtaXhpbnM6IFtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc19waWNrZXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfdGltZV9ib2R5X19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fbWl4aW5zX3RpbWVfdGl0bGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaXNEcmFnZ2luZzogZmFsc2UsXG4gICAgICByb3RhdGU6IDAsXG4gICAgICBvcmlnaW5hbFRpbWU6IHRoaXMudmFsdWUsXG4gICAgICBwZXJpb2Q6ICdhbScsXG4gICAgICBzZWxlY3RpbmdIb3VyOiB0cnVlLFxuICAgICAgcmFuZ2VzOiB7XG4gICAgICAgIGhvdXJzOiBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImNcIiAvKiBjcmVhdGVSYW5nZSAqL10pKDI0KSxcbiAgICAgICAgbWludXRlczogT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJjXCIgLyogY3JlYXRlUmFuZ2UgKi9dKSg2MClcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICBmb3JtYXQ6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdhbXBtJyxcbiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCkge1xuICAgICAgICByZXR1cm4gWydhbXBtJywgJzI0aHInXS5pbmNsdWRlcyh2YWwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgYWxsb3dlZEhvdXJzOiB7XG4gICAgICB0eXBlOiBbQXJyYXksIE9iamVjdCwgRnVuY3Rpb25dLFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgIH0sXG4gICAgYWxsb3dlZE1pbnV0ZXM6IHtcbiAgICAgIHR5cGU6IFtBcnJheSwgT2JqZWN0LCBGdW5jdGlvbl0sXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgaXMyNGhyOiBmdW5jdGlvbiBpczI0aHIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JtYXQgIT09ICdhbXBtJztcbiAgICB9LFxuICAgIGlzMjRockFmdGVyMTI6IGZ1bmN0aW9uIGlzMjRockFmdGVyMTIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zZWxlY3RpbmdIb3VyICYmIHRoaXMuaXMyNGhyICYmIHRoaXMuaG91ciA+PSAxMjtcbiAgICB9LFxuICAgIGRpdmlkZXI6IGZ1bmN0aW9uIGRpdmlkZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zZWxlY3RpbmdIb3VyID8gMTIgOiA2MDtcbiAgICB9LFxuICAgIGRlZ3JlZXM6IGZ1bmN0aW9uIGRlZ3JlZXMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5kZWdyZWVzUGVyVW5pdCAqIE1hdGguUEkgLyAxODA7XG4gICAgfSxcbiAgICBkZWdyZWVzUGVyVW5pdDogZnVuY3Rpb24gZGVncmVlc1BlclVuaXQoKSB7XG4gICAgICByZXR1cm4gMzYwIC8gdGhpcy5kaXZpZGVyO1xuICAgIH0sXG5cbiAgICBpbnB1dFRpbWU6IHtcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICBpZiAodGhpcy52YWx1ZSAmJiAhKHRoaXMudmFsdWUgaW5zdGFuY2VvZiBEYXRlKSkge1xuICAgICAgICAgIGlmICghdGhpcy5pczI0aHIpIHtcbiAgICAgICAgICAgIHRoaXMucGVyaW9kID0gdGhpcy52YWx1ZS5tYXRjaCgvcG0vaSkgPyAncG0nIDogJ2FtJztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdmFsdWUgPSBuZXcgRGF0ZSgpO1xuXG4gICAgICAgIGlmICh0aGlzLnZhbHVlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICAgIHZhbHVlID0gdGhpcy52YWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBob3VyID0gdmFsdWUuZ2V0SG91cnMoKTtcbiAgICAgICAgdmFyIG1pbnV0ZSA9IHZhbHVlLmdldE1pbnV0ZXMoKTtcbiAgICAgICAgdmFyIHBlcmlvZCA9ICcnO1xuXG4gICAgICAgIGlmICghdGhpcy5pczI0aHIpIHtcbiAgICAgICAgICBwZXJpb2QgPSBob3VyID49IDEyID8gJ3BtJyA6ICdhbSc7XG4gICAgICAgICAgaG91ciA9IGhvdXIgPiAxMiA/IGhvdXIgLSAxMiA6IGhvdXI7XG4gICAgICAgICAgaG91ciA9IGhvdXIgPT09IDAgPyAxMiA6IGhvdXI7XG4gICAgICAgIH1cblxuICAgICAgICBwZXJpb2QgJiYgKHRoaXMucGVyaW9kID0gcGVyaW9kKTtcblxuICAgICAgICBob3VyID0gdGhpcy5maXJzdEFsbG93ZWQoJ2hvdXInLCBob3VyKTtcbiAgICAgICAgbWludXRlID0gdGhpcy5maXJzdEFsbG93ZWQoJ21pbnV0ZScsIG1pbnV0ZSk7XG5cbiAgICAgICAgbWludXRlID0gbWludXRlIDwgMTAgPyAnMCcgKyBtaW51dGUgOiBtaW51dGUgPiA1OSA/ICcwMCcgOiBtaW51dGU7XG5cbiAgICAgICAgcmV0dXJuIGhvdXIgKyAnOicgKyBtaW51dGUgKyBwZXJpb2Q7XG4gICAgICB9LFxuICAgICAgc2V0OiBmdW5jdGlvbiBzZXQodmFsKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbCk7XG4gICAgICB9XG4gICAgfSxcbiAgICB0aW1lQXJyYXk6IGZ1bmN0aW9uIHRpbWVBcnJheSgpIHtcbiAgICAgIHJldHVybiB0aGlzLmlucHV0VGltZS5yZXBsYWNlKC8oYW18cG0pLywgJycpLnNwbGl0KCc6Jyk7XG4gICAgfSxcblxuICAgIGhvdXI6IHtcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQodGhpcy50aW1lQXJyYXlbMF0pO1xuICAgICAgfSxcbiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbCkge1xuICAgICAgICBpZiAoIXRoaXMuaXMyNGhyKSB7XG4gICAgICAgICAgdmFsID0gdmFsID4gMTIgPyB2YWwgLSAxMiA6IHZhbCA8IDEgPyAxMiA6IHZhbDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWwgPSB2YWwgPCAxMCA/ICcwJyArIHZhbCA6IHZhbCA+IDIzID8gJzAwJyA6IHZhbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuaW5wdXRUaW1lID0gdmFsICsgJzonICsgdGhpcy5taW51dGUgKyAoIXRoaXMuaXMyNGhyID8gdGhpcy5wZXJpb2QgOiAnJyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBtaW51dGU6IHtcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICB2YXIgbWludXRlID0gcGFyc2VJbnQodGhpcy50aW1lQXJyYXlbMV0pO1xuXG4gICAgICAgIHJldHVybiBtaW51dGUgPCAxMCA/ICcwJyArIG1pbnV0ZSA6IG1pbnV0ZSA+IDU5ID8gJzAwJyA6IG1pbnV0ZTtcbiAgICAgIH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWwpIHtcbiAgICAgICAgdmFsID0gdmFsIDwgMTAgPyAnMCcgKyBwYXJzZUludCh2YWwpIDogdmFsID4gNTkgPyAnMDAnIDogdmFsO1xuICAgICAgICB2YXIgaG91ciA9IHRoaXMuaG91cjtcblxuICAgICAgICBpZiAodGhpcy5pczI0aHIgJiYgaG91ciA8IDEwKSB7XG4gICAgICAgICAgaG91ciA9ICcwJyArIGhvdXI7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmlucHV0VGltZSA9IGhvdXIgKyAnOicgKyB2YWwgKyAoIXRoaXMuaXMyNGhyID8gdGhpcy5wZXJpb2QgOiAnJyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBjbG9ja0hhbmQ6IGZ1bmN0aW9uIGNsb2NrSGFuZCgpIHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGluZ0hvdXIpIHJldHVybiB0aGlzLmRlZ3JlZXNQZXJVbml0ICogdGhpcy5ob3VyO1xuICAgICAgcmV0dXJuIHRoaXMuZGVncmVlc1BlclVuaXQgKiB0aGlzLm1pbnV0ZTtcbiAgICB9LFxuICAgIHJhZGl1czogZnVuY3Rpb24gcmFkaXVzKCkge1xuICAgICAgcmV0dXJuIHRoaXMuY2xvY2tTaXplIC8gMjtcbiAgICB9LFxuXG4gICAgY2xvY2tTaXplOiB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2l6ZTtcbiAgICAgIH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWwpIHtcbiAgICAgICAgdGhpcy5zaXplID0gdmFsO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2l6ZTogZnVuY3Rpb24gc2l6ZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLmxhbmRzY2FwZSA/IDI1MCA6IDI4MDtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBwZXJpb2Q6IGZ1bmN0aW9uIHBlcmlvZCh2YWwpIHtcbiAgICAgIHZhciBob3VyID0gISF0aGlzLmFsbG93ZWRIb3VycyAmJiB0aGlzLnNlbGVjdGluZ0hvdXIgPyB0aGlzLmZpcnN0QWxsb3dlZCgnaG91cicsIHRoaXMuaG91ciAtIDEpIDogdGhpcy5ob3VyO1xuICAgICAgdGhpcy5pbnB1dFRpbWUgPSBob3VyICsgJzonICsgdGhpcy5taW51dGUgKyB2YWw7XG4gICAgfSxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUodmFsKSB7XG4gICAgICBpZiAodGhpcy5pc1NhdmluZykge1xuICAgICAgICB0aGlzLm9yaWdpbmFsVGltZSA9IHRoaXMuaW5wdXRUaW1lO1xuICAgICAgICB0aGlzLmlzU2F2aW5nID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBzYXZlOiBmdW5jdGlvbiBzYXZlKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMub3JpZ2luYWxUaW1lKSB7XG4gICAgICAgIHRoaXMub3JpZ2luYWxUaW1lID0gdGhpcy52YWx1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaW5wdXRUaW1lID0gdGhpcy5pbnB1dFRpbWU7XG4gICAgICAgIHRoaXMub3JpZ2luYWxUaW1lID0gdGhpcy5pbnB1dFRpbWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLiRwYXJlbnQgJiYgdGhpcy4kcGFyZW50LmlzQWN0aXZlKSB0aGlzLiRwYXJlbnQuaXNBY3RpdmUgPSBmYWxzZTtcblxuICAgICAgLy8gRml4IGZvciAjMTgxOFxuICAgICAgLy8gV2FpdCBmb3IgZGF0YSB0byBwZXJzaXN0XG4gICAgICAvLyB0aGVuIHNldCBzZWxlY3RpbmdIb3VyXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5zZWxlY3RpbmdIb3VyID0gdHJ1ZTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgY2FuY2VsOiBmdW5jdGlvbiBjYW5jZWwoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdGhpcy5pbnB1dFRpbWUgPSB0aGlzLm9yaWdpbmFsVGltZTtcbiAgICAgIGlmICh0aGlzLiRwYXJlbnQgJiYgdGhpcy4kcGFyZW50LmlzQWN0aXZlKSB0aGlzLiRwYXJlbnQuaXNBY3RpdmUgPSBmYWxzZTtcblxuICAgICAgLy8gRml4IGZvciAjMTgxOFxuICAgICAgLy8gV2FpdCBmb3IgZGF0YSB0byBwZXJzaXN0XG4gICAgICAvLyB0aGVuIHNldCBzZWxlY3RpbmdIb3VyXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczIuc2VsZWN0aW5nSG91ciA9IHRydWU7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGlzQWxsb3dlZDogZnVuY3Rpb24gaXNBbGxvd2VkKHR5cGUsIHZhbHVlKSB7XG4gICAgICB2YXIgYWxsb3dlZCA9IHRoaXNbJ2FsbG93ZWQnICsgKHR5cGUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB0eXBlLnNsaWNlKDEpKSArICdzJ107XG4gICAgICB2YXIgdmFsID0gdHlwZSA9PT0gJ2hvdXInICYmICF0aGlzLmlzMjRociAmJiB0aGlzLnBlcmlvZCA9PT0gJ3BtJyA/IHZhbHVlICsgMTIgOiB2YWx1ZTtcblxuICAgICAgaWYgKCFhbGxvd2VkKSByZXR1cm4gdHJ1ZTtcblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYWxsb3dlZCkpIHtcbiAgICAgICAgcmV0dXJuICEhYWxsb3dlZC5zb21lKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgICAgcmV0dXJuIHYgPT09IHZhbHVlO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAoYWxsb3dlZCBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICAgIHJldHVybiBhbGxvd2VkKHZhbCk7XG4gICAgICB9IGVsc2UgaWYgKGFsbG93ZWQgPT09IE9iamVjdChhbGxvd2VkKSkge1xuICAgICAgICB2YXIgcmFuZ2UgPSB0eXBlID09PSAnbWludXRlJyA/IHRoaXMucmFuZ2VzLm1pbnV0ZXMgOiB0aGlzLnJhbmdlcy5ob3VycztcbiAgICAgICAgdmFyIG1vZCA9IHR5cGUgPT09ICdtaW51dGUnID8gNjAgOiAyNDtcblxuICAgICAgICBpZiAoYWxsb3dlZC5taW4gPT09IFN0cmluZyhhbGxvd2VkLm1pbikpIHtcbiAgICAgICAgICBhbGxvd2VkLm1pbiA9IHRoaXMuY29udmVydDEydG8yNGhyKGFsbG93ZWQubWluKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChhbGxvd2VkLm1heCA9PT0gU3RyaW5nKGFsbG93ZWQubWF4KSkge1xuICAgICAgICAgIGFsbG93ZWQubWF4ID0gdGhpcy5jb252ZXJ0MTJ0bzI0aHIoYWxsb3dlZC5tYXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHN0ZXBzID0gYWxsb3dlZC5tYXggLSBhbGxvd2VkLm1pbjtcbiAgICAgICAgdmFsdWUgPSB0eXBlID09PSAnaG91cicgJiYgIXRoaXMuaXMyNGhyICYmIHRoaXMucGVyaW9kID09PSAncG0nID8gdmFsdWUgKyAxMiA6IHZhbHVlO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDw9IHN0ZXBzOyBpKyspIHtcbiAgICAgICAgICB2YXIgaW5kZXggPSAoYWxsb3dlZC5taW4gKyBpKSAlIG1vZDtcbiAgICAgICAgICBpZiAocmFuZ2VbaW5kZXhdID09PSB2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgY29udmVydDEydG8yNGhyOiBmdW5jdGlvbiBjb252ZXJ0MTJ0bzI0aHIoaW5wdXQpIHtcbiAgICAgIGlucHV0ID0gaW5wdXQudG9Mb3dlckNhc2UoKTtcbiAgICAgIHZhciBwbSA9IGlucHV0LmluZGV4T2YoJ3BtJykgIT09IC0xO1xuICAgICAgdmFyIGhvdXIgPSBwYXJzZUludChpbnB1dC5zbGljZSgwLCBpbnB1dC5pbmRleE9mKHBtID8gJ3BtJyA6ICdhbScpKSk7XG5cbiAgICAgIHJldHVybiBwbSA/IGhvdXIgKyAxMiA6IGhvdXI7XG4gICAgfSxcbiAgICBnZW5lcmF0ZVJhbmdlOiBmdW5jdGlvbiBnZW5lcmF0ZVJhbmdlKHR5cGUsIHN0YXJ0KSB7XG4gICAgICB2YXIgcmFuZ2UgPSB0eXBlID09PSAnaG91cicgPyB0aGlzLnJhbmdlcy5ob3VycyA6IHRoaXMucmFuZ2VzLm1pbnV0ZXM7XG4gICAgICB2YXIgb2Zmc2V0ID0gMTtcblxuICAgICAgaWYgKHR5cGUgPT09ICdob3VyJyAmJiAhdGhpcy5pczI0aHIpIHtcbiAgICAgICAgcmFuZ2UgPSByYW5nZS5zbGljZSgxLCAxMyk7XG4gICAgICAgIG9mZnNldCA9IDA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByYW5nZS5zbGljZShzdGFydCArIG9mZnNldCwgcmFuZ2UubGVuZ3RoKS5jb25jYXQocmFuZ2Uuc2xpY2UoMCwgc3RhcnQgKyBvZmZzZXQpKTtcbiAgICB9LFxuICAgIGZpcnN0QWxsb3dlZDogZnVuY3Rpb24gZmlyc3RBbGxvd2VkKHR5cGUsIHZhbHVlKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIGFsbG93ZWQgPSB0aGlzWydhbGxvd2VkJyArICh0eXBlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgdHlwZS5zbGljZSgxKSkgKyAncyddO1xuXG4gICAgICBpZiAoIWFsbG93ZWQpIHJldHVybiB2YWx1ZTtcblxuICAgICAgdmFyIHJhbmdlID0gdGhpcy5nZW5lcmF0ZVJhbmdlKHR5cGUsIHZhbHVlKTtcblxuICAgICAgdmFyIGZpcnN0ID0gcmFuZ2UuZmluZChmdW5jdGlvbiAodikge1xuICAgICAgICByZXR1cm4gX3RoaXMzLmlzQWxsb3dlZCh0eXBlLCB2KTtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gZmlyc3QgfHwgdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBbdGhpcy5nZW5Cb2R5KCldO1xuXG4gICAgIXRoaXMubm9UaXRsZSAmJiBjaGlsZHJlbi51bnNoaWZ0KHRoaXMuZ2VuVGl0bGUoKSk7XG4gICAgdGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCAmJiBjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuU2xvdCgpKTtcblxuICAgIHJldHVybiBoKCd2LWNhcmQnLCB7XG4gICAgICAnY2xhc3MnOiBfZXh0ZW5kcyh7XG4gICAgICAgICdwaWNrZXIgcGlja2VyLS10aW1lJzogdHJ1ZSxcbiAgICAgICAgJ3BpY2tlci0tbGFuZHNjYXBlJzogdGhpcy5sYW5kc2NhcGUsXG4gICAgICAgICdwaWNrZXItLXRpbWUtLWhvdXJzJzogdGhpcy5zZWxlY3RpbmdIb3VyXG4gICAgICB9LCB0aGlzLnRoZW1lQ2xhc3NlcylcbiAgICB9LCBjaGlsZHJlbik7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDIxNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDIxNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoe1xuICBtZXRob2RzOiB7XG4gICAgZ2VuVGl0bGU6IGZ1bmN0aW9uIGdlblRpdGxlKCkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gW3RoaXMuZ2VuVGltZSgpXTtcblxuICAgICAgaWYgKHRoaXMuZm9ybWF0ID09PSAnYW1wbScpIHtcbiAgICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkFNUE0oKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmdlblBpY2tlclRpdGxlKGNoaWxkcmVuKTtcbiAgICB9LFxuICAgIGdlblRpbWU6IGZ1bmN0aW9uIGdlblRpbWUoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgaG91ciA9IHRoaXMuaG91cjtcblxuICAgICAgaWYgKHRoaXMuaXMyNGhyICYmIGhvdXIgPCAxMCkge1xuICAgICAgICBob3VyID0gJzAnICsgaG91cjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgJ2NsYXNzJzogJ3BpY2tlci0tdGltZV9fdGl0bGUnXG4gICAgICB9LCBbdGhpcy4kY3JlYXRlRWxlbWVudCgnc3BhbicsIHtcbiAgICAgICAgJ2NsYXNzJzogeyBhY3RpdmU6IHRoaXMuc2VsZWN0aW5nSG91ciB9LFxuICAgICAgICBvbjoge1xuICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5zZWxlY3RpbmdIb3VyID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sIGhvdXIpLCB0aGlzLiRjcmVhdGVFbGVtZW50KCdzcGFuJywge1xuICAgICAgICAnY2xhc3MnOiB7IGFjdGl2ZTogIXRoaXMuc2VsZWN0aW5nSG91ciB9LFxuICAgICAgICBvbjoge1xuICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5zZWxlY3RpbmdIb3VyID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCAnOicgKyB0aGlzLm1pbnV0ZSldKTtcbiAgICB9LFxuICAgIGdlbkFNUE06IGZ1bmN0aW9uIGdlbkFNUE0oKSB7XG4gICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JywgW3RoaXMuZ2VuUGVyaW9kKCdhbScpLCB0aGlzLmdlblBlcmlvZCgncG0nKV0pO1xuICAgIH0sXG4gICAgZ2VuUGVyaW9kOiBmdW5jdGlvbiBnZW5QZXJpb2QocGVyaW9kKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLCB7XG4gICAgICAgICdjbGFzcyc6IHsgYWN0aXZlOiB0aGlzLnBlcmlvZCA9PT0gcGVyaW9kIH0sXG4gICAgICAgIG9uOiB7IGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczIucGVyaW9kID0gcGVyaW9kO1xuICAgICAgICAgIH0gfVxuICAgICAgfSwgcGVyaW9kLnRvVXBwZXJDYXNlKCkpO1xuICAgIH1cbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMjE4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhhc0NoYW5nZWQ6IGZhbHNlXG4gICAgfTtcbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgZ2VuQm9keTogZnVuY3Rpb24gZ2VuQm9keSgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBjaGlsZHJlbiA9IFt0aGlzLmdlbkhhbmQodGhpcy5zZWxlY3RpbmdIb3VyID8gJ2hvdXInIDogJ21pbnV0ZScpXTtcbiAgICAgIHZhciBkYXRhID0ge1xuICAgICAgICAnY2xhc3MnOiAncGlja2VyLS10aW1lX19jbG9jaycsXG4gICAgICAgIG9uOiB7XG4gICAgICAgICAgbW91c2Vkb3duOiB0aGlzLm9uTW91c2VEb3duLFxuICAgICAgICAgIG1vdXNldXA6IHRoaXMub25Nb3VzZVVwLFxuICAgICAgICAgIG1vdXNlbGVhdmU6IGZ1bmN0aW9uIG1vdXNlbGVhdmUoKSB7XG4gICAgICAgICAgICBfdGhpcy5pc0RyYWdnaW5nICYmIF90aGlzLm9uTW91c2VVcCgpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgdG91Y2hzdGFydDogdGhpcy5vbk1vdXNlRG93bixcbiAgICAgICAgICB0b3VjaGVuZDogdGhpcy5vbk1vdXNlVXAsXG4gICAgICAgICAgbW91c2Vtb3ZlOiB0aGlzLm9uRHJhZ01vdmUsXG4gICAgICAgICAgdG91Y2htb3ZlOiB0aGlzLm9uRHJhZ01vdmVcbiAgICAgICAgfSxcbiAgICAgICAga2V5OiB0aGlzLnNlbGVjdGluZ0hvdXIgPyAnaG91cicgOiAnbWludXRlJyxcbiAgICAgICAgcmVmOiAnY2xvY2snXG4gICAgICB9O1xuXG4gICAgICB0aGlzLnNlbGVjdGluZ0hvdXIgJiYgY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkhvdXJzKCkpIHx8IGNoaWxkcmVuLnB1c2godGhpcy5nZW5NaW51dGVzKCkpO1xuXG4gICAgICBpZiAodGhpcy5zY3JvbGxhYmxlKSB7XG4gICAgICAgIGRhdGEub24ud2hlZWwgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgIHZhciBkaWZmID0gZS53aGVlbERlbHRhID4gMCA/IDEgOiAtMTtcbiAgICAgICAgICB2YXIgY2hhbmdpbmcgPSBfdGhpcy5zZWxlY3RpbmdIb3VyID8gJ2NoYW5nZUhvdXInIDogJ2NoYW5nZU1pbnV0ZSc7XG5cbiAgICAgICAgICBfdGhpc1tjaGFuZ2luZ10oZGlmZik7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgICdjbGFzcyc6ICdwaWNrZXJfX2JvZHknXG4gICAgICB9LCBbdGhpcy4kY3JlYXRlRWxlbWVudCgndHJhbnNpdGlvbicsIHtcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICBuYW1lOiAnZmFkZS10cmFuc2l0aW9uJyxcbiAgICAgICAgICBtb2RlOiAnb3V0LWluJ1xuICAgICAgICB9XG4gICAgICB9LCBbdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JywgZGF0YSwgY2hpbGRyZW4pXSldKTtcbiAgICB9LFxuICAgIGdlbkhhbmQ6IGZ1bmN0aW9uIGdlbkhhbmQodHlwZSkge1xuICAgICAgdmFyIHNjYWxlID0gdGhpcy5pczI0aHJBZnRlcjEyID8gJ3NjYWxlWSgwLjYpJyA6ICcnO1xuICAgICAgcmV0dXJuIFt0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICAgIHN0YXRpY0NsYXNzOiAncGlja2VyLS10aW1lX19jbG9jay1oYW5kJyxcbiAgICAgICAgJ2NsYXNzJzogdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyhfZGVmaW5lUHJvcGVydHkoe30sIHR5cGUsIHRydWUpKSxcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoJyArIHRoaXMuY2xvY2tIYW5kICsgJ2RlZykgJyArIHNjYWxlXG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9LFxuICAgIGdlbkhvdXJzOiBmdW5jdGlvbiBnZW5Ib3VycygpIHtcbiAgICAgIHZhciBob3VycyA9IHRoaXMuaXMyNGhyID8gMjQgOiAxMjtcbiAgICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuICAgICAgdmFyIHN0YXJ0ID0gMDtcblxuICAgICAgaWYgKGhvdXJzID09PSAxMikge1xuICAgICAgICBob3VycysrO1xuICAgICAgICBzdGFydCA9IDE7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGhvdXJzOyBpKyspIHtcbiAgICAgICAgdmFyIGNsYXNzZXMgPSB7XG4gICAgICAgICAgJ2FjdGl2ZSc6IGkgPT09IHRoaXMuaG91cixcbiAgICAgICAgICAnZGlzYWJsZWQnOiAhdGhpcy5pc0FsbG93ZWQoJ2hvdXInLCBpKVxuICAgICAgICB9O1xuICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLCB7XG4gICAgICAgICAgJ2NsYXNzJzogdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyhjbGFzc2VzLCBpID09PSB0aGlzLmhvdXIgPyAnY29tcHV0ZWRDb2xvcicgOiBudWxsKSxcbiAgICAgICAgICBzdHlsZTogdGhpcy5nZXRUcmFuc2Zvcm0oaSksXG4gICAgICAgICAgZG9tUHJvcHM6IHsgaW5uZXJIVE1MOiAnPHNwYW4+JyArIGkgKyAnPC9zcGFuPicgfVxuICAgICAgICB9KSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjaGlsZHJlbjtcbiAgICB9LFxuICAgIGdlbk1pbnV0ZXM6IGZ1bmN0aW9uIGdlbk1pbnV0ZXMoKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBbXTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA2MDsgaSA9IGkgKyA1KSB7XG4gICAgICAgIHZhciBudW0gPSBpO1xuXG4gICAgICAgIGlmIChudW0gPCAxMCkgbnVtID0gJzAnICsgbnVtO1xuICAgICAgICBpZiAobnVtID09PSA2MCkgbnVtID0gJzAwJztcblxuICAgICAgICB2YXIgY2xhc3NlcyA9IHtcbiAgICAgICAgICAnYWN0aXZlJzogbnVtLnRvU3RyaW5nKCkgPT09IHRoaXMubWludXRlLnRvU3RyaW5nKCksXG4gICAgICAgICAgJ2Rpc2FibGVkJzogIXRoaXMuaXNBbGxvd2VkKCdtaW51dGUnLCBpKVxuICAgICAgICB9O1xuICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLCB7XG4gICAgICAgICAgJ2NsYXNzJzogdGhpcy5hZGRCYWNrZ3JvdW5kQ29sb3JDbGFzc0NoZWNrcyhjbGFzc2VzLCBudW0udG9TdHJpbmcoKSA9PT0gdGhpcy5taW51dGUudG9TdHJpbmcoKSA/ICdjb21wdXRlZENvbG9yJyA6IG51bGwpLFxuICAgICAgICAgIHN0eWxlOiB0aGlzLmdldFRyYW5zZm9ybShpKSxcbiAgICAgICAgICBkb21Qcm9wczogeyBpbm5lckhUTUw6ICc8c3Bhbj4nICsgbnVtICsgJzwvc3Bhbj4nIH1cbiAgICAgICAgfSkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY2hpbGRyZW47XG4gICAgfSxcbiAgICBnZXRUcmFuc2Zvcm06IGZ1bmN0aW9uIGdldFRyYW5zZm9ybShpKSB7XG4gICAgICB2YXIgX2dldFBvc2l0aW9uID0gdGhpcy5nZXRQb3NpdGlvbihpKSxcbiAgICAgICAgICB4ID0gX2dldFBvc2l0aW9uLngsXG4gICAgICAgICAgeSA9IF9nZXRQb3NpdGlvbi55O1xuXG4gICAgICByZXR1cm4geyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoJyArIHggKyAncHgsICcgKyB5ICsgJ3B4KScgfTtcbiAgICB9LFxuICAgIGdldFBvc2l0aW9uOiBmdW5jdGlvbiBnZXRQb3NpdGlvbihpKSB7XG4gICAgICB2YXIgcmFkaXVzUGVyY2VudGFnZSA9IHRoaXMuc2VsZWN0aW5nSG91ciAmJiB0aGlzLmlzMjRociAmJiBpID49IDEyID8gMC41IDogMC44O1xuICAgICAgdmFyIHIgPSB0aGlzLnJhZGl1cyAqIHJhZGl1c1BlcmNlbnRhZ2U7XG4gICAgICBpID0gdGhpcy5zZWxlY3RpbmdIb3VyICYmIHRoaXMuaXMyNGhyID8gaSAlIDEyIDogaTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHg6IE1hdGgucm91bmQoTWF0aC5zaW4oaSAqIHRoaXMuZGVncmVlcykgKiByKSxcbiAgICAgICAgeTogTWF0aC5yb3VuZCgtTWF0aC5jb3MoaSAqIHRoaXMuZGVncmVlcykgKiByKVxuICAgICAgfTtcbiAgICB9LFxuICAgIGNoYW5nZUhvdXI6IGZ1bmN0aW9uIGNoYW5nZUhvdXIodGltZSkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciByYW5nZSA9IHRoaXMuZ2VuZXJhdGVSYW5nZSgnaG91cicsIHRoaXMuaG91cik7XG5cbiAgICAgIHRpbWUgPCAwICYmIChyYW5nZSA9IHJhbmdlLnJldmVyc2UoKS5zbGljZSgxKSk7XG4gICAgICB0aGlzLmhvdXIgPSByYW5nZS5maW5kKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczIuYWxsb3dlZEhvdXJzID8gX3RoaXMyLmlzQWxsb3dlZCgnaG91cicsIGgpIDogdHJ1ZTtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIGNoYW5nZU1pbnV0ZTogZnVuY3Rpb24gY2hhbmdlTWludXRlKHRpbWUpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgY3VycmVudCA9IE51bWJlcih0aGlzLm1pbnV0ZSk7XG4gICAgICB2YXIgcmFuZ2UgPSB0aGlzLmdlbmVyYXRlUmFuZ2UoJ21pbnV0ZScsIGN1cnJlbnQpO1xuXG4gICAgICB0aW1lIDwgMCAmJiAocmFuZ2UgPSByYW5nZS5yZXZlcnNlKCkuc2xpY2UoMSkpO1xuICAgICAgdmFyIG1pbnV0ZSA9IHJhbmdlLmZpbmQoZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMy5hbGxvd2VkTWludXRlcyA/IF90aGlzMy5pc0FsbG93ZWQoJ21pbnV0ZScsIG0pIDogdHJ1ZTtcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLm1pbnV0ZSA9IG1pbnV0ZSA8IDEwID8gJzAnICsgbWludXRlIDogbWludXRlO1xuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIG9uTW91c2VEb3duOiBmdW5jdGlvbiBvbk1vdXNlRG93bihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIHRoaXMuaXNEcmFnZ2luZyA9IHRydWU7XG4gICAgICB0aGlzLm9uRHJhZ01vdmUoZSk7XG4gICAgfSxcbiAgICBvbk1vdXNlVXA6IGZ1bmN0aW9uIG9uTW91c2VVcCgpIHtcbiAgICAgIHRoaXMuaXNEcmFnZ2luZyA9IGZhbHNlO1xuICAgICAgIXRoaXMuc2VsZWN0aW5nSG91ciAmJiB0aGlzLmF1dG9zYXZlICYmIHRoaXMuc2F2ZSgpO1xuICAgICAgaWYgKHRoaXMuaGFzQ2hhbmdlZCkge1xuICAgICAgICB0aGlzLnNlbGVjdGluZ0hvdXIgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5oYXNDaGFuZ2VkID0gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcbiAgICBvbkRyYWdNb3ZlOiBmdW5jdGlvbiBvbkRyYWdNb3ZlKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGlmICghdGhpcy5pc0RyYWdnaW5nICYmIGUudHlwZSAhPT0gJ2NsaWNrJykgcmV0dXJuO1xuXG4gICAgICB2YXIgcmVjdCA9IHRoaXMuJHJlZnMuY2xvY2suZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICB2YXIgY2VudGVyID0geyB4OiByZWN0LndpZHRoIC8gMiwgeTogMCAtIHJlY3Qud2lkdGggLyAyIH07XG4gICAgICB2YXIgY2xpZW50WSA9ICd0b3VjaGVzJyBpbiBlID8gZS50b3VjaGVzWzBdLmNsaWVudFkgOiBlLmNsaWVudFk7XG4gICAgICB2YXIgY2xpZW50WCA9ICd0b3VjaGVzJyBpbiBlID8gZS50b3VjaGVzWzBdLmNsaWVudFggOiBlLmNsaWVudFg7XG4gICAgICB2YXIgY29vcmRzID0ge1xuICAgICAgICB5OiByZWN0LnRvcCAtIGNsaWVudFksXG4gICAgICAgIHg6IGNsaWVudFggLSByZWN0LmxlZnRcbiAgICAgIH07XG5cbiAgICAgIHZhciBzZWxlY3RpbmcgPSB0aGlzLnNlbGVjdGluZ0hvdXIgPyAnaG91cicgOiAnbWludXRlJztcbiAgICAgIHZhciB2YWx1ZSA9IE1hdGgucm91bmQodGhpcy5hbmdsZShjZW50ZXIsIGNvb3JkcykgLyB0aGlzLmRlZ3JlZXNQZXJVbml0KTtcblxuICAgICAgaWYgKHRoaXMuc2VsZWN0aW5nSG91ciAmJiB0aGlzLmlzMjRocikge1xuICAgICAgICB2YXIgaW5zaWRlQ2xpY2sgPSB0aGlzLmV1Y2xpZGVhbihjZW50ZXIsIGNvb3JkcykgLyB0aGlzLnJhZGl1cyA8IDAuNjU7XG4gICAgICAgIHZhbHVlID0gaW5zaWRlQ2xpY2sgPyB2YWx1ZSArIDEyIDogdmFsdWU7XG5cbiAgICAgICAgLy8gTmVjZXNzYXJ5IHRvIGZpeCBlZGdlIGNhc2Ugd2hlbiBzZWxlY3RpbmcgbGVmdCBwYXJ0IG9mIDAgYW5kIDEyXG4gICAgICAgIHZhbHVlID0gdGhpcy5hbmdsZShjZW50ZXIsIGNvb3JkcykgPj0gMzQ1ID8gKHZhbHVlICsgMTIpICUgMjQgOiB2YWx1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuaXNBbGxvd2VkKHNlbGVjdGluZywgdmFsdWUpKSB7XG4gICAgICAgIHRoaXNbc2VsZWN0aW5nXSA9IHZhbHVlO1xuICAgICAgICB0aGlzLmhhc0NoYW5nZWQgPSB0cnVlO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXVjbGlkZWFuOiBmdW5jdGlvbiBldWNsaWRlYW4ocDAsIHAxKSB7XG4gICAgICB2YXIgZHggPSBNYXRoLmFicyhwMS54IC0gcDAueCk7XG4gICAgICB2YXIgZHkgPSBNYXRoLmFicyhwMS55IC0gcDAueSk7XG5cbiAgICAgIHJldHVybiBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xuICAgIH0sXG4gICAgYW5nbGU6IGZ1bmN0aW9uIGFuZ2xlKGNlbnRlciwgcDEpIHtcbiAgICAgIHZhciBwMCA9IHtcbiAgICAgICAgeDogY2VudGVyLngsXG4gICAgICAgIHk6IGNlbnRlci55ICsgTWF0aC5zcXJ0KE1hdGguYWJzKHAxLnggLSBjZW50ZXIueCkgKiBNYXRoLmFicyhwMS54IC0gY2VudGVyLngpICsgTWF0aC5hYnMocDEueSAtIGNlbnRlci55KSAqIE1hdGguYWJzKHAxLnkgLSBjZW50ZXIueSkpXG4gICAgICB9O1xuXG4gICAgICB2YXIgdmFsdWUgPSAyICogTWF0aC5hdGFuMihwMS55IC0gcDAueSwgcDEueCAtIHAwLngpO1xuICAgICAgcmV0dXJuIE1hdGguYWJzKHZhbHVlICogMTgwIC8gTWF0aC5QSSk7XG4gICAgfVxuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyMTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiB1bnVzZWQgaGFybW9ueSBleHBvcnQgVlRvb2xiYXJUaXRsZSAqL1xuLyogdW51c2VkIGhhcm1vbnkgZXhwb3J0IFZUb29sYmFySXRlbXMgKi9cbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX3V0aWxfaGVscGVyc19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZUb29sYmFyX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19WVG9vbGJhclNpZGVJY29uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyMik7XG4vKiB1bnVzZWQgaGFybW9ueSByZWV4cG9ydCBWVG9vbGJhciAqL1xuLyogdW51c2VkIGhhcm1vbnkgcmVleHBvcnQgVlRvb2xiYXJTaWRlSWNvbiAqL1xuXG5cblxuXG5cbnZhciBWVG9vbGJhclRpdGxlID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXRpbF9oZWxwZXJzX19bXCJkXCIgLyogY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCAqL10pKCd0b29sYmFyX190aXRsZScpO1xudmFyIFZUb29sYmFySXRlbXMgPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191dGlsX2hlbHBlcnNfX1tcImRcIiAvKiBjcmVhdGVTaW1wbGVGdW5jdGlvbmFsICovXSkoJ3Rvb2xiYXJfX2l0ZW1zJyk7XG5cblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19WVG9vbGJhcl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLmluc3RhbGwgPSBmdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVlRvb2xiYXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1ZUb29sYmFyX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuY29tcG9uZW50KFZUb29sYmFySXRlbXMubmFtZSwgVlRvb2xiYXJJdGVtcyk7XG4gIFZ1ZS5jb21wb25lbnQoVlRvb2xiYXJUaXRsZS5uYW1lLCBWVG9vbGJhclRpdGxlKTtcbiAgVnVlLmNvbXBvbmVudChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZUb29sYmFyU2lkZUljb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXS5uYW1lLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1ZUb29sYmFyU2lkZUljb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fVlRvb2xiYXJfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogMjIwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2FwcGxpY2F0aW9uYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19taXhpbnNfY29sb3JhYmxlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX3RoZW1lYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbl9fd2VicGFja19yZXF1aXJlX18oMjIxKTtcblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtdG9vbGJhcicsXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfYXBwbGljYXRpb25hYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2NvbG9yYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc190aGVtZWFibGVfX1tcImFcIiAvKiBkZWZhdWx0ICovXV0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGVpZ2h0czoge1xuICAgICAgICBtb2JpbGVMYW5kc2NhcGU6IDQ4LFxuICAgICAgICBtb2JpbGU6IDU2LFxuICAgICAgICBkZXNrdG9wOiA2NCxcbiAgICAgICAgZGVuc2U6IDQ4XG4gICAgICB9LFxuICAgICAgaXNFeHRlbmRlZDogZmFsc2UsXG4gICAgICBpc1Njcm9sbGluZ1Byb3h5OiBmYWxzZSxcbiAgICAgIG1hcmdpblRvcDogMCxcbiAgICAgIHByZXZpb3VzU2Nyb2xsOiBudWxsLFxuICAgICAgdGFyZ2V0OiBudWxsXG4gICAgfTtcbiAgfSxcblxuICBwcm9wczoge1xuICAgIGFic29sdXRlOiBCb29sZWFuLFxuICAgIGNhcmQ6IEJvb2xlYW4sXG4gICAgY2xpcHBlZExlZnQ6IEJvb2xlYW4sXG4gICAgY2xpcHBlZFJpZ2h0OiBCb29sZWFuLFxuICAgIGRlbnNlOiBCb29sZWFuLFxuICAgIGV4dGVuZGVkOiBCb29sZWFuLFxuICAgIGZpeGVkOiBCb29sZWFuLFxuICAgIGZsYXQ6IEJvb2xlYW4sXG4gICAgZmxvYXRpbmc6IEJvb2xlYW4sXG4gICAgaGVpZ2h0OiBbTnVtYmVyLCBTdHJpbmddLFxuICAgIG1hbnVhbFNjcm9sbDoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IG51bGxcbiAgICB9LFxuICAgIHByb21pbmVudDogQm9vbGVhbixcbiAgICBzY3JvbGxPZmZTY3JlZW46IEJvb2xlYW4sXG4gICAgc2Nyb2xsVGFyZ2V0OiBTdHJpbmcsXG4gICAgc2Nyb2xsVGhyZXNob2xkOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAxMDBcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjb21wdXRlZEhlaWdodDogZnVuY3Rpb24gY29tcHV0ZWRIZWlnaHQoKSB7XG4gICAgICBpZiAodGhpcy5oZWlnaHQpIHJldHVybiBwYXJzZUludCh0aGlzLmhlaWdodCk7XG4gICAgICBpZiAodGhpcy5kZW5zZSkgcmV0dXJuIHRoaXMuaGVpZ2h0cy5kZW5zZTtcblxuICAgICAgaWYgKHRoaXMucHJvbWluZW50IHx8IHRoaXMuJHZ1ZXRpZnkuYnJlYWtwb2ludC5tZEFuZFVwKSByZXR1cm4gdGhpcy5oZWlnaHRzLmRlc2t0b3A7XG5cbiAgICAgIGlmICh0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQud2lkdGggPiB0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQuaGVpZ2h0KSByZXR1cm4gdGhpcy5oZWlnaHRzLm1vYmlsZUxhbmRzY2FwZTtcblxuICAgICAgcmV0dXJuIHRoaXMuaGVpZ2h0cy5tb2JpbGU7XG4gICAgfSxcbiAgICBjb21wdXRlZE1hcmdpblRvcDogZnVuY3Rpb24gY29tcHV0ZWRNYXJnaW5Ub3AoKSB7XG4gICAgICBpZiAoIXRoaXMuYXBwKSByZXR1cm4gdGhpcy5tYXJnaW5Ub3A7XG5cbiAgICAgIHJldHVybiB0aGlzLm1hcmdpblRvcCArIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYmFyO1xuICAgIH0sXG4gICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB0aGlzLmFkZEJhY2tncm91bmRDb2xvckNsYXNzQ2hlY2tzKHtcbiAgICAgICAgJ3Rvb2xiYXInOiB0cnVlLFxuICAgICAgICAnZWxldmF0aW9uLTAnOiB0aGlzLmZsYXQsXG4gICAgICAgICd0b29sYmFyLS1hYnNvbHV0ZSc6IHRoaXMuYWJzb2x1dGUsXG4gICAgICAgICd0b29sYmFyLS1jYXJkJzogdGhpcy5jYXJkLFxuICAgICAgICAndG9vbGJhci0tY2xpcHBlZCc6IHRoaXMuY2xpcHBlZExlZnQgfHwgdGhpcy5jbGlwcGVkUmlnaHQsXG4gICAgICAgICd0b29sYmFyLS1kZW5zZSc6IHRoaXMuZGVuc2UsXG4gICAgICAgICd0b29sYmFyLS1maXhlZCc6IHRoaXMuZml4ZWQsXG4gICAgICAgICd0b29sYmFyLS1mbG9hdGluZyc6IHRoaXMuZmxvYXRpbmcsXG4gICAgICAgICd0b29sYmFyLS1wcm9taW5lbnQnOiB0aGlzLnByb21pbmVudCxcbiAgICAgICAgJ3Rvb2xiYXItLWV4dGVuZGVkJzogdGhpcy5pc0V4dGVuZGVkLFxuICAgICAgICAndGhlbWUtLWRhcmsnOiB0aGlzLmRhcmssXG4gICAgICAgICd0aGVtZS0tbGlnaHQnOiB0aGlzLmxpZ2h0XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgaXNTY3JvbGxpbmc6IHtcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYW51YWxTY3JvbGwgIT0gbnVsbCA/IHRoaXMubWFudWFsU2Nyb2xsIDogdGhpcy5pc1Njcm9sbGluZ1Byb3h5O1xuICAgICAgfSxcbiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbCkge1xuICAgICAgICB0aGlzLmlzU2Nyb2xsaW5nUHJveHkgPSB2YWw7XG4gICAgICB9XG4gICAgfSxcbiAgICBwYWRkaW5nTGVmdDogZnVuY3Rpb24gcGFkZGluZ0xlZnQoKSB7XG4gICAgICBpZiAoIXRoaXMuYXBwIHx8IHRoaXMuY2xpcHBlZExlZnQpIHJldHVybiAwO1xuXG4gICAgICByZXR1cm4gdGhpcy4kdnVldGlmeS5hcHBsaWNhdGlvbi5sZWZ0O1xuICAgIH0sXG4gICAgcGFkZGluZ1JpZ2h0OiBmdW5jdGlvbiBwYWRkaW5nUmlnaHQoKSB7XG4gICAgICBpZiAoIXRoaXMuYXBwIHx8IHRoaXMuY2xpcHBlZFJpZ2h0KSByZXR1cm4gMDtcblxuICAgICAgcmV0dXJuIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24ucmlnaHQ7XG4gICAgfSxcbiAgICBzdHlsZXM6IGZ1bmN0aW9uIHN0eWxlcygpIHtcbiAgICAgIHZhciBzdHlsZSA9IHtcbiAgICAgICAgbWFyZ2luVG9wOiB0aGlzLmNvbXB1dGVkTWFyZ2luVG9wICsgJ3B4J1xuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMuYXBwKSB7XG4gICAgICAgIHN0eWxlLnBhZGRpbmdSaWdodCA9IHRoaXMucGFkZGluZ1JpZ2h0ICsgJ3B4JztcbiAgICAgICAgc3R5bGUucGFkZGluZ0xlZnQgPSB0aGlzLnBhZGRpbmdMZWZ0ICsgJ3B4JztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN0eWxlO1xuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIGNsaXBwZWRMZWZ0OiBmdW5jdGlvbiBjbGlwcGVkTGVmdCh2YWwpIHtcbiAgICAgIHRoaXMudXBkYXRlQXBwbGljYXRpb24oKTtcbiAgICB9LFxuICAgIGNsaXBwZWRSaWdodDogZnVuY3Rpb24gY2xpcHBlZFJpZ2h0KHZhbCkge1xuICAgICAgdGhpcy51cGRhdGVBcHBsaWNhdGlvbigpO1xuICAgIH0sXG4gICAgaXNTY3JvbGxpbmc6IGZ1bmN0aW9uIGlzU2Nyb2xsaW5nKHZhbCkge1xuICAgICAgdGhpcy53aGVuU2Nyb2xsZWQodmFsKTtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLndoZW5TY3JvbGxlZCh0aGlzLmlzU2Nyb2xsaW5nKTtcbiAgfSxcbiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7XG4gICAgaWYgKHRoaXMuYXBwKSB0aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uLnRvcCA9IDA7XG4gIH0sXG5cblxuICBtZXRob2RzOiB7XG4gICAgb25TY3JvbGw6IGZ1bmN0aW9uIG9uU2Nyb2xsKCkge1xuICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG5cbiAgICAgIGlmICghdGhpcy50YXJnZXQpIHtcbiAgICAgICAgdGhpcy50YXJnZXQgPSB0aGlzLnNjcm9sbFRhcmdldCA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zY3JvbGxUYXJnZXQpIDogd2luZG93O1xuICAgICAgfVxuXG4gICAgICB2YXIgY3VycmVudFNjcm9sbCA9IHRoaXMuc2Nyb2xsVGFyZ2V0ID8gdGhpcy50YXJnZXQuc2Nyb2xsVG9wIDogdGhpcy50YXJnZXQucGFnZVlPZmZzZXQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcDtcblxuICAgICAgaWYgKGN1cnJlbnRTY3JvbGwgPCB0aGlzLnNjcm9sbFRocmVzaG9sZCkgcmV0dXJuO1xuXG4gICAgICBpZiAodGhpcy5wcmV2aW91c1Njcm9sbCA9PT0gbnVsbCkge1xuICAgICAgICB0aGlzLnByZXZpb3VzU2Nyb2xsID0gY3VycmVudFNjcm9sbDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pc1Njcm9sbGluZ1Byb3h5ID0gdGhpcy5wcmV2aW91c1Njcm9sbCA8IGN1cnJlbnRTY3JvbGw7XG5cbiAgICAgIHRoaXMucHJldmlvdXNTY3JvbGwgPSBjdXJyZW50U2Nyb2xsO1xuICAgIH0sXG4gICAgdXBkYXRlQXBwbGljYXRpb246IGZ1bmN0aW9uIHVwZGF0ZUFwcGxpY2F0aW9uKCkge1xuICAgICAgaWYgKCF0aGlzLmFwcCkgcmV0dXJuO1xuXG4gICAgICB0aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uLnRvcCA9ICF0aGlzLmZpeGVkICYmICF0aGlzLmFic29sdXRlID8gMCA6IHRoaXMuaXNFeHRlbmRlZCAmJiAhdGhpcy5pc1Njcm9sbGluZyA/IHRoaXMuY29tcHV0ZWRIZWlnaHQgKiAyIDogdGhpcy5jb21wdXRlZEhlaWdodDtcbiAgICB9LFxuICAgIHdoZW5TY3JvbGxlZDogZnVuY3Rpb24gd2hlblNjcm9sbGVkKHZhbCkge1xuICAgICAgdGhpcy5tYXJnaW5Ub3AgPSB2YWwgPyAtdGhpcy4kcmVmcy5jb250ZW50LmNsaWVudEhlaWdodCAtIDYgOiAwO1xuXG4gICAgICB0aGlzLnVwZGF0ZUFwcGxpY2F0aW9uKCk7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB0aGlzLmlzRXh0ZW5kZWQgPSB0aGlzLmV4dGVuZGVkIHx8ICEhdGhpcy4kc2xvdHMuZXh0ZW5zaW9uO1xuICAgIHRoaXMudXBkYXRlQXBwbGljYXRpb24oKTtcblxuICAgIHZhciBjaGlsZHJlbiA9IFtdO1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgJ2NsYXNzJzogdGhpcy5jbGFzc2VzLFxuICAgICAgc3R5bGU6IHRoaXMuc3R5bGVzLFxuICAgICAgb246IHRoaXMuJGxpc3RlbmVyc1xuICAgIH07XG5cbiAgICBpZiAodGhpcy5zY3JvbGxPZmZTY3JlZW4pIHtcbiAgICAgIGRhdGEuZGlyZWN0aXZlcyA9IFt7XG4gICAgICAgIG5hbWU6ICdzY3JvbGwnLFxuICAgICAgICB2YWx1ZToge1xuICAgICAgICAgIGNhbGxiYWNrOiB0aGlzLm9uU2Nyb2xsLFxuICAgICAgICAgIHRhcmdldDogdGhpcy5zY3JvbGxUYXJnZXRcbiAgICAgICAgfVxuICAgICAgfV07XG4gICAgfVxuXG4gICAgY2hpbGRyZW4ucHVzaChoKCdkaXYnLCB7XG4gICAgICBzdGF0aWNDbGFzczogJ3Rvb2xiYXJfX2NvbnRlbnQnLFxuICAgICAgc3R5bGU6IHsgaGVpZ2h0OiB0aGlzLmNvbXB1dGVkSGVpZ2h0ICsgJ3B4JyB9LFxuICAgICAgcmVmOiAnY29udGVudCdcbiAgICB9LCB0aGlzLiRzbG90cy5kZWZhdWx0KSk7XG5cbiAgICBpZiAodGhpcy5pc0V4dGVuZGVkKSB7XG4gICAgICBjaGlsZHJlbi5wdXNoKGgoJ2RpdicsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6ICd0b29sYmFyX19leHRlbnNpb24nLFxuICAgICAgICBzdHlsZTogeyBoZWlnaHQ6IHRoaXMuY29tcHV0ZWRIZWlnaHQgKyAncHgnIH1cbiAgICAgIH0sIHRoaXMuJHNsb3RzLmV4dGVuc2lvbikpO1xuICAgIH1cblxuICAgIHJldHVybiBoKCduYXYnLCBkYXRhLCBjaGlsZHJlbik7XG4gIH1cbn0pO1xuXG4vKioqLyB9KSxcbi8qIDIyMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG4vKioqLyB9KSxcbi8qIDIyMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2NvbXBvbmVudHNfVkJ0bl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19jb21wb25lbnRzX1ZJY29uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICd2LXRvb2xiYXItc2lkZS1pY29uJyxcblxuICBmdW5jdGlvbmFsOiB0cnVlLFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIF9yZWYpIHtcbiAgICB2YXIgc2xvdHMgPSBfcmVmLnNsb3RzLFxuICAgICAgICBsaXN0ZW5lcnMgPSBfcmVmLmxpc3RlbmVycyxcbiAgICAgICAgcHJvcHMgPSBfcmVmLnByb3BzLFxuICAgICAgICBkYXRhID0gX3JlZi5kYXRhO1xuXG4gICAgdmFyIGNsYXNzZXMgPSBkYXRhLnN0YXRpY0NsYXNzID8gZGF0YS5zdGF0aWNDbGFzcyArICcgdG9vbGJhcl9fc2lkZS1pY29uJyA6ICd0b29sYmFyX19zaWRlLWljb24nO1xuXG4gICAgdmFyIGQgPSBPYmplY3QuYXNzaWduKGRhdGEsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiBjbGFzc2VzLFxuICAgICAgcHJvcHM6IE9iamVjdC5hc3NpZ24ocHJvcHMsIHtcbiAgICAgICAgaWNvbjogdHJ1ZVxuICAgICAgfSksXG4gICAgICBvbjogbGlzdGVuZXJzXG4gICAgfSk7XG5cbiAgICB2YXIgZGVmYXVsdFNsb3QgPSBzbG90cygpLmRlZmF1bHQ7XG5cbiAgICByZXR1cm4gaChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2NvbXBvbmVudHNfVkJ0bl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBkLCBkZWZhdWx0U2xvdCB8fCBbaChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX2NvbXBvbmVudHNfVkljb25fX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgJ21lbnUnKV0pO1xuICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAyMjMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WVG9vbHRpcF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMjQpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1ZUb29sdGlwX19bXCJhXCIgLyogZGVmYXVsdCAqL10uaW5zdGFsbCA9IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19WVG9vbHRpcF9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLm5hbWUsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlRvb2x0aXBfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fVlRvb2x0aXBfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKiovIH0pLFxuLyogMjI0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWl4aW5zX2NvbG9yYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21peGluc19kZWxheWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMzkpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fbWl4aW5zX2RlcGVuZGVudF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNik7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19taXhpbnNfZGV0YWNoYWJsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19taXhpbnNfbWVudWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNDApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fbWl4aW5zX3RvZ2dsZWFibGVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDIyNSk7XG5cbi8vIE1peGluc1xuXG5cblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKHtcbiAgbmFtZTogJ3YtdG9vbHRpcCcsXG5cbiAgbWl4aW5zOiBbX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19taXhpbnNfY29sb3JhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL10sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fbWl4aW5zX2RlbGF5YWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX21peGluc19kZXBlbmRlbnRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19taXhpbnNfZGV0YWNoYWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX21peGluc19tZW51YWJsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX21peGluc190b2dnbGVhYmxlX19bXCJhXCIgLyogZGVmYXVsdCAqL11dLFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNhbGN1bGF0ZWRNaW5XaWR0aDogMCxcbiAgICAgIGNsb3NlRGVwZW5kZW50czogZmFsc2VcbiAgICB9O1xuICB9LFxuXG4gIHByb3BzOiB7XG4gICAgZGVib3VuY2U6IHtcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXG4gICAgICBkZWZhdWx0OiAwXG4gICAgfSxcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICBmaXhlZDoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICB9LFxuICAgIG9wZW5EZWxheToge1xuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgIGRlZmF1bHQ6IDIwMFxuICAgIH0sXG4gICAgdGFnOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnc3BhbidcbiAgICB9LFxuICAgIHRyYW5zaXRpb246IFN0cmluZyxcbiAgICB6SW5kZXg6IHtcbiAgICAgIGRlZmF1bHQ6IG51bGxcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjYWxjdWxhdGVkTGVmdDogZnVuY3Rpb24gY2FsY3VsYXRlZExlZnQoKSB7XG4gICAgICB2YXIgX2RpbWVuc2lvbnMgPSB0aGlzLmRpbWVuc2lvbnMsXG4gICAgICAgICAgYWN0aXZhdG9yID0gX2RpbWVuc2lvbnMuYWN0aXZhdG9yLFxuICAgICAgICAgIGNvbnRlbnQgPSBfZGltZW5zaW9ucy5jb250ZW50O1xuXG4gICAgICB2YXIgdW5rbm93biA9ICF0aGlzLmJvdHRvbSAmJiAhdGhpcy5sZWZ0ICYmICF0aGlzLnRvcCAmJiAhdGhpcy5yaWdodDtcbiAgICAgIHZhciBsZWZ0ID0gMDtcblxuICAgICAgaWYgKHRoaXMudG9wIHx8IHRoaXMuYm90dG9tIHx8IHVua25vd24pIHtcbiAgICAgICAgbGVmdCA9IGFjdGl2YXRvci5sZWZ0ICsgYWN0aXZhdG9yLndpZHRoIC8gMiAtIGNvbnRlbnQud2lkdGggLyAyO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmxlZnQgfHwgdGhpcy5yaWdodCkge1xuICAgICAgICBsZWZ0ID0gYWN0aXZhdG9yLmxlZnQgKyAodGhpcy5yaWdodCA/IGFjdGl2YXRvci53aWR0aCA6IC1jb250ZW50LndpZHRoKSArICh0aGlzLnJpZ2h0ID8gMTAgOiAtMTApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5jYWxjWE92ZXJmbG93KGxlZnQpICsgJ3B4JztcbiAgICB9LFxuICAgIGNhbGN1bGF0ZWRUb3A6IGZ1bmN0aW9uIGNhbGN1bGF0ZWRUb3AoKSB7XG4gICAgICB2YXIgX2RpbWVuc2lvbnMyID0gdGhpcy5kaW1lbnNpb25zLFxuICAgICAgICAgIGFjdGl2YXRvciA9IF9kaW1lbnNpb25zMi5hY3RpdmF0b3IsXG4gICAgICAgICAgY29udGVudCA9IF9kaW1lbnNpb25zMi5jb250ZW50O1xuXG4gICAgICB2YXIgdG9wID0gMDtcblxuICAgICAgaWYgKHRoaXMudG9wIHx8IHRoaXMuYm90dG9tKSB7XG4gICAgICAgIHRvcCA9IGFjdGl2YXRvci50b3AgLSAodGhpcy50b3AgPyBhY3RpdmF0b3IuaGVpZ2h0IDogLWFjdGl2YXRvci5oZWlnaHQpIC0gKHRoaXMudG9wID8gMCA6IC0xMCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMubGVmdCB8fCB0aGlzLnJpZ2h0KSB7XG4gICAgICAgIHRvcCA9IGFjdGl2YXRvci50b3AgKyBhY3RpdmF0b3IuaGVpZ2h0IC8gMiAtIGNvbnRlbnQuaGVpZ2h0IC8gMjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuY2FsY1lPdmVyZmxvdyh0b3AgKyB0aGlzLnBhZ2VZT2Zmc2V0KSArICdweCc7XG4gICAgfSxcbiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ3Rvb2x0aXAtLXRvcCc6IHRoaXMudG9wLFxuICAgICAgICAndG9vbHRpcC0tcmlnaHQnOiB0aGlzLnJpZ2h0LFxuICAgICAgICAndG9vbHRpcC0tYm90dG9tJzogdGhpcy5ib3R0b20sXG4gICAgICAgICd0b29sdGlwLS1sZWZ0JzogdGhpcy5sZWZ0XG4gICAgICB9O1xuICAgIH0sXG4gICAgY29tcHV0ZWRUcmFuc2l0aW9uOiBmdW5jdGlvbiBjb21wdXRlZFRyYW5zaXRpb24oKSB7XG4gICAgICBpZiAodGhpcy50cmFuc2l0aW9uKSByZXR1cm4gdGhpcy50cmFuc2l0aW9uO1xuICAgICAgaWYgKHRoaXMudG9wKSByZXR1cm4gJ3NsaWRlLXktcmV2ZXJzZS10cmFuc2l0aW9uJztcbiAgICAgIGlmICh0aGlzLnJpZ2h0KSByZXR1cm4gJ3NsaWRlLXgtdHJhbnNpdGlvbic7XG4gICAgICBpZiAodGhpcy5ib3R0b20pIHJldHVybiAnc2xpZGUteS10cmFuc2l0aW9uJztcbiAgICAgIGlmICh0aGlzLmxlZnQpIHJldHVybiAnc2xpZGUteC1yZXZlcnNlLXRyYW5zaXRpb24nO1xuICAgIH0sXG4gICAgb2Zmc2V0WTogZnVuY3Rpb24gb2Zmc2V0WSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnRvcCB8fCB0aGlzLmJvdHRvbTtcbiAgICB9LFxuICAgIG9mZnNldFg6IGZ1bmN0aW9uIG9mZnNldFgoKSB7XG4gICAgICByZXR1cm4gdGhpcy5sZWZ0IHx8IHRoaXMucmlnaHQ7XG4gICAgfSxcbiAgICBzdHlsZXM6IGZ1bmN0aW9uIHN0eWxlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGxlZnQ6IHRoaXMuY2FsY3VsYXRlZExlZnQsXG4gICAgICAgIG1heFdpZHRoOiBpc05hTih0aGlzLm1heFdpZHRoKSA/IHRoaXMubWF4V2lkdGggOiB0aGlzLm1heFdpZHRoICsgJ3B4JyxcbiAgICAgICAgb3BhY2l0eTogdGhpcy5pc0FjdGl2ZSA/IDAuOSA6IDAsXG4gICAgICAgIHRvcDogdGhpcy5jYWxjdWxhdGVkVG9wLFxuICAgICAgICB6SW5kZXg6IHRoaXMuekluZGV4IHx8IHRoaXMuYWN0aXZlWkluZGV4XG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgYWN0aXZhdGU6IGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICAgICAgLy8gVXBkYXRlIGNvb3JkaW5hdGVzIGFuZCBkaW1lbnNpb25zIG9mIG1lbnVcbiAgICAgIC8vIGFuZCBpdHMgYWN0aXZhdG9yXG4gICAgICB0aGlzLnVwZGF0ZURpbWVuc2lvbnMoKTtcbiAgICAgIC8vIFN0YXJ0IHRoZSB0cmFuc2l0aW9uXG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5zdGFydFRyYW5zaXRpb24pO1xuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMudmFsdWUgJiYgdGhpcy5jYWxsQWN0aXZhdGUoKTtcbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgIHZhciBfYWRkQmFja2dyb3VuZENvbG9yQ2wsXG4gICAgICAgIF90aGlzID0gdGhpcztcblxuICAgIHZhciB0b29sdGlwID0gaCgnZGl2Jywge1xuICAgICAgc3RhdGljQ2xhc3M6ICd0b29sdGlwX19jb250ZW50JyxcbiAgICAgICdjbGFzcyc6IHRoaXMuYWRkQmFja2dyb3VuZENvbG9yQ2xhc3NDaGVja3MoKF9hZGRCYWNrZ3JvdW5kQ29sb3JDbCA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FkZEJhY2tncm91bmRDb2xvckNsLCB0aGlzLmNvbnRlbnRDbGFzcywgdHJ1ZSksIF9kZWZpbmVQcm9wZXJ0eShfYWRkQmFja2dyb3VuZENvbG9yQ2wsICdtZW51YWJsZV9fY29udGVudF9fYWN0aXZlJywgdGhpcy5pc0FjdGl2ZSksIF9hZGRCYWNrZ3JvdW5kQ29sb3JDbCkpLFxuICAgICAgc3R5bGU6IHRoaXMuc3R5bGVzLFxuICAgICAgYXR0cnM6IHRoaXMuYXR0cnMsXG4gICAgICBkaXJlY3RpdmVzOiBbe1xuICAgICAgICBuYW1lOiAnc2hvdycsXG4gICAgICAgIHZhbHVlOiB0aGlzLmlzQ29udGVudEFjdGl2ZVxuICAgICAgfV0sXG4gICAgICByZWY6ICdjb250ZW50J1xuICAgIH0sIHRoaXMuJHNsb3RzLmRlZmF1bHQpO1xuXG4gICAgcmV0dXJuIGgodGhpcy50YWcsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiAndG9vbHRpcCcsXG4gICAgICAnY2xhc3MnOiB0aGlzLmNsYXNzZXNcbiAgICB9LCBbaCgndHJhbnNpdGlvbicsIHtcbiAgICAgIHByb3BzOiB7XG4gICAgICAgIG5hbWU6IHRoaXMuY29tcHV0ZWRUcmFuc2l0aW9uXG4gICAgICB9XG4gICAgfSwgW3Rvb2x0aXBdKSwgaCgnc3BhbicsIHtcbiAgICAgIG9uOiB0aGlzLmRpc2FibGVkID8ge30gOiB7XG4gICAgICAgIG1vdXNlZW50ZXI6IGZ1bmN0aW9uIG1vdXNlZW50ZXIoKSB7XG4gICAgICAgICAgX3RoaXMucnVuRGVsYXkoJ29wZW4nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuaXNBY3RpdmUgPSB0cnVlO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBtb3VzZWxlYXZlOiBmdW5jdGlvbiBtb3VzZWxlYXZlKCkge1xuICAgICAgICAgIF90aGlzLnJ1bkRlbGF5KCdjbG9zZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcmVmOiAnYWN0aXZhdG9yJ1xuICAgIH0sIHRoaXMuJHNsb3RzLmFjdGl2YXRvcildKTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMjI1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cbi8qKiovIH0pLFxuLyogMjI2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KF9fd2VicGFja19leHBvcnRzX18sIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyogaGFybW9ueSBleHBvcnQgKGltbXV0YWJsZSkgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImRlZmF1bHRcIl0gPSBpbnN0YWxsO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fY2xpY2tfb3V0c2lkZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX3Jlc2l6ZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3JpcHBsZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX3Njcm9sbF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMjcpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fdG91Y2hfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNyk7XG4vKiBoYXJtb255IHJlZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJDbGlja091dHNpZGVcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX2NsaWNrX291dHNpZGVfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiUmlwcGxlXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19yaXBwbGVfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiUmVzaXplXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19yZXNpemVfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiU2Nyb2xsXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19zY3JvbGxfX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSByZWV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiVG91Y2hcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3RvdWNoX19bXCJhXCJdOyB9KTtcblxuXG5cblxuXG5cblxuXG5mdW5jdGlvbiBpbnN0YWxsKFZ1ZSkge1xuICBWdWUuZGlyZWN0aXZlKCdjbGljay1vdXRzaWRlJywgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19jbGlja19vdXRzaWRlX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuZGlyZWN0aXZlKCdyaXBwbGUnLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX3JpcHBsZV9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKTtcbiAgVnVlLmRpcmVjdGl2ZSgncmVzaXplJywgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19yZXNpemVfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG4gIFZ1ZS5kaXJlY3RpdmUoJ3Njcm9sbCcsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fc2Nyb2xsX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuICBWdWUuZGlyZWN0aXZlKCd0b3VjaCcsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fdG91Y2hfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG59XG5cbi8qKiovIH0pLFxuLyogMjI3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gaW5zZXJ0ZWQoZWwsIGJpbmRpbmcpIHtcbiAgdmFyIGNhbGxiYWNrID0gdHlwZW9mIGJpbmRpbmcudmFsdWUgPT09ICdmdW5jdGlvbicgPyBiaW5kaW5nLnZhbHVlIDogYmluZGluZy52YWx1ZS5jYWxsYmFjaztcbiAgdmFyIG9wdGlvbnMgPSBiaW5kaW5nLnZhbHVlLm9wdGlvbnMgfHwgeyBwYXNzaXZlOiB0cnVlIH07XG4gIHZhciB0YXJnZXQgPSBiaW5kaW5nLnZhbHVlLnRhcmdldCB8fCB3aW5kb3c7XG4gIGlmICh0YXJnZXQgPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG5cbiAgaWYgKHRhcmdldCAhPT0gd2luZG93KSB7XG4gICAgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICB9XG5cbiAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGNhbGxiYWNrLCBvcHRpb25zKTtcblxuICBlbC5fb25TY3JvbGwgPSB7XG4gICAgY2FsbGJhY2s6IGNhbGxiYWNrLFxuICAgIG9wdGlvbnM6IG9wdGlvbnMsXG4gICAgdGFyZ2V0OiB0YXJnZXRcbiAgfTtcbn1cblxuZnVuY3Rpb24gdW5iaW5kKGVsLCBiaW5kaW5nKSB7XG4gIHZhciBfZWwkX29uU2Nyb2xsID0gZWwuX29uU2Nyb2xsLFxuICAgICAgY2FsbGJhY2sgPSBfZWwkX29uU2Nyb2xsLmNhbGxiYWNrLFxuICAgICAgb3B0aW9ucyA9IF9lbCRfb25TY3JvbGwub3B0aW9ucyxcbiAgICAgIHRhcmdldCA9IF9lbCRfb25TY3JvbGwudGFyZ2V0O1xuXG5cbiAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGNhbGxiYWNrLCBvcHRpb25zKTtcbiAgZGVsZXRlIGVsLl9vblNjcm9sbDtcbn1cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9ICh7XG4gIG5hbWU6ICdzY3JvbGwnLFxuICBpbnNlcnRlZDogaW5zZXJ0ZWQsXG4gIHVuYmluZDogdW5iaW5kXG59KTtcblxuLyoqKi8gfSlcbi8qKioqKiovIF0pO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12dWV0aWZ5LmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZXRpZnkvZGlzdC92dWV0aWZ5LmpzXG4vLyBtb2R1bGUgaWQgPSAyNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(26);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(1)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./vuetify.min.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./vuetify.min.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVldGlmeS9kaXN0L3Z1ZXRpZnkubWluLmNzcz81YTAwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzIS4vdnVldGlmeS5taW4uY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi92dWV0aWZ5Lm1pbi5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi92dWV0aWZ5Lm1pbi5jc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZXRpZnkvZGlzdC92dWV0aWZ5Lm1pbi5jc3Ncbi8vIG1vZHVsZSBpZCA9IDI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///25\n");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(0)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"/*!\\n* Vuetify v0.17.7\\n* Forged by John Leider\\n* Released under the MIT License.\\n*/     \\n.black{background-color:#000!important;border-color:#000!important}.black--text{color:#000!important}.black--text input,.black--text textarea{caret-color:#000!important}.black--after:after{background:#000!important}.white{background-color:#fff!important;border-color:#fff!important}.white--text{color:#fff!important}.white--text input,.white--text textarea{caret-color:#fff!important}.white--after:after{background:#fff!important}.transparent{background-color:transparent!important;border-color:transparent!important}.transparent--text{color:transparent!important}.transparent--text input,.transparent--text textarea{caret-color:transparent!important}.transparent--after:after{background:transparent!important}.red{background-color:#f44336!important;border-color:#f44336!important}.red--text{color:#f44336!important}.red--text input,.red--text textarea{caret-color:#f44336!important}.red--after:after{background:#f44336!important}.red.lighten-5{border-color:#ffebee!important}.red.lighten-5,.red.lighten-5--after:after{background-color:#ffebee!important}.red--text.text--lighten-5{color:#ffebee!important}.red--text.text--lighten-5 input,.red--text.text--lighten-5 textarea{caret-color:#ffebee!important}.red.lighten-4{border-color:#ffcdd2!important}.red.lighten-4,.red.lighten-4--after:after{background-color:#ffcdd2!important}.red--text.text--lighten-4{color:#ffcdd2!important}.red--text.text--lighten-4 input,.red--text.text--lighten-4 textarea{caret-color:#ffcdd2!important}.red.lighten-3{border-color:#ef9a9a!important}.red.lighten-3,.red.lighten-3--after:after{background-color:#ef9a9a!important}.red--text.text--lighten-3{color:#ef9a9a!important}.red--text.text--lighten-3 input,.red--text.text--lighten-3 textarea{caret-color:#ef9a9a!important}.red.lighten-2{border-color:#e57373!important}.red.lighten-2,.red.lighten-2--after:after{background-color:#e57373!important}.red--text.text--lighten-2{color:#e57373!important}.red--text.text--lighten-2 input,.red--text.text--lighten-2 textarea{caret-color:#e57373!important}.red.lighten-1{border-color:#ef5350!important}.red.lighten-1,.red.lighten-1--after:after{background-color:#ef5350!important}.red--text.text--lighten-1{color:#ef5350!important}.red--text.text--lighten-1 input,.red--text.text--lighten-1 textarea{caret-color:#ef5350!important}.red.darken-1{border-color:#e53935!important}.red.darken-1,.red.darken-1--after:after{background-color:#e53935!important}.red--text.text--darken-1{color:#e53935!important}.red--text.text--darken-1 input,.red--text.text--darken-1 textarea{caret-color:#e53935!important}.red.darken-2{border-color:#d32f2f!important}.red.darken-2,.red.darken-2--after:after{background-color:#d32f2f!important}.red--text.text--darken-2{color:#d32f2f!important}.red--text.text--darken-2 input,.red--text.text--darken-2 textarea{caret-color:#d32f2f!important}.red.darken-3{border-color:#c62828!important}.red.darken-3,.red.darken-3--after:after{background-color:#c62828!important}.red--text.text--darken-3{color:#c62828!important}.red--text.text--darken-3 input,.red--text.text--darken-3 textarea{caret-color:#c62828!important}.red.darken-4{border-color:#b71c1c!important}.red.darken-4,.red.darken-4--after:after{background-color:#b71c1c!important}.red--text.text--darken-4{color:#b71c1c!important}.red--text.text--darken-4 input,.red--text.text--darken-4 textarea{caret-color:#b71c1c!important}.red.accent-1{border-color:#ff8a80!important}.red.accent-1,.red.accent-1--after:after{background-color:#ff8a80!important}.red--text.text--accent-1{color:#ff8a80!important}.red--text.text--accent-1 input,.red--text.text--accent-1 textarea{caret-color:#ff8a80!important}.red.accent-2{border-color:#ff5252!important}.red.accent-2,.red.accent-2--after:after{background-color:#ff5252!important}.red--text.text--accent-2{color:#ff5252!important}.red--text.text--accent-2 input,.red--text.text--accent-2 textarea{caret-color:#ff5252!important}.red.accent-3{border-color:#ff1744!important}.red.accent-3,.red.accent-3--after:after{background-color:#ff1744!important}.red--text.text--accent-3{color:#ff1744!important}.red--text.text--accent-3 input,.red--text.text--accent-3 textarea{caret-color:#ff1744!important}.red.accent-4{border-color:#d50000!important}.red.accent-4,.red.accent-4--after:after{background-color:#d50000!important}.red--text.text--accent-4{color:#d50000!important}.red--text.text--accent-4 input,.red--text.text--accent-4 textarea{caret-color:#d50000!important}.pink{background-color:#e91e63!important;border-color:#e91e63!important}.pink--text{color:#e91e63!important}.pink--text input,.pink--text textarea{caret-color:#e91e63!important}.pink--after:after{background:#e91e63!important}.pink.lighten-5{border-color:#fce4ec!important}.pink.lighten-5,.pink.lighten-5--after:after{background-color:#fce4ec!important}.pink--text.text--lighten-5{color:#fce4ec!important}.pink--text.text--lighten-5 input,.pink--text.text--lighten-5 textarea{caret-color:#fce4ec!important}.pink.lighten-4{border-color:#f8bbd0!important}.pink.lighten-4,.pink.lighten-4--after:after{background-color:#f8bbd0!important}.pink--text.text--lighten-4{color:#f8bbd0!important}.pink--text.text--lighten-4 input,.pink--text.text--lighten-4 textarea{caret-color:#f8bbd0!important}.pink.lighten-3{border-color:#f48fb1!important}.pink.lighten-3,.pink.lighten-3--after:after{background-color:#f48fb1!important}.pink--text.text--lighten-3{color:#f48fb1!important}.pink--text.text--lighten-3 input,.pink--text.text--lighten-3 textarea{caret-color:#f48fb1!important}.pink.lighten-2{border-color:#f06292!important}.pink.lighten-2,.pink.lighten-2--after:after{background-color:#f06292!important}.pink--text.text--lighten-2{color:#f06292!important}.pink--text.text--lighten-2 input,.pink--text.text--lighten-2 textarea{caret-color:#f06292!important}.pink.lighten-1{border-color:#ec407a!important}.pink.lighten-1,.pink.lighten-1--after:after{background-color:#ec407a!important}.pink--text.text--lighten-1{color:#ec407a!important}.pink--text.text--lighten-1 input,.pink--text.text--lighten-1 textarea{caret-color:#ec407a!important}.pink.darken-1{border-color:#d81b60!important}.pink.darken-1,.pink.darken-1--after:after{background-color:#d81b60!important}.pink--text.text--darken-1{color:#d81b60!important}.pink--text.text--darken-1 input,.pink--text.text--darken-1 textarea{caret-color:#d81b60!important}.pink.darken-2{border-color:#c2185b!important}.pink.darken-2,.pink.darken-2--after:after{background-color:#c2185b!important}.pink--text.text--darken-2{color:#c2185b!important}.pink--text.text--darken-2 input,.pink--text.text--darken-2 textarea{caret-color:#c2185b!important}.pink.darken-3{border-color:#ad1457!important}.pink.darken-3,.pink.darken-3--after:after{background-color:#ad1457!important}.pink--text.text--darken-3{color:#ad1457!important}.pink--text.text--darken-3 input,.pink--text.text--darken-3 textarea{caret-color:#ad1457!important}.pink.darken-4{border-color:#880e4f!important}.pink.darken-4,.pink.darken-4--after:after{background-color:#880e4f!important}.pink--text.text--darken-4{color:#880e4f!important}.pink--text.text--darken-4 input,.pink--text.text--darken-4 textarea{caret-color:#880e4f!important}.pink.accent-1{border-color:#ff80ab!important}.pink.accent-1,.pink.accent-1--after:after{background-color:#ff80ab!important}.pink--text.text--accent-1{color:#ff80ab!important}.pink--text.text--accent-1 input,.pink--text.text--accent-1 textarea{caret-color:#ff80ab!important}.pink.accent-2{border-color:#ff4081!important}.pink.accent-2,.pink.accent-2--after:after{background-color:#ff4081!important}.pink--text.text--accent-2{color:#ff4081!important}.pink--text.text--accent-2 input,.pink--text.text--accent-2 textarea{caret-color:#ff4081!important}.pink.accent-3{border-color:#f50057!important}.pink.accent-3,.pink.accent-3--after:after{background-color:#f50057!important}.pink--text.text--accent-3{color:#f50057!important}.pink--text.text--accent-3 input,.pink--text.text--accent-3 textarea{caret-color:#f50057!important}.pink.accent-4{border-color:#c51162!important}.pink.accent-4,.pink.accent-4--after:after{background-color:#c51162!important}.pink--text.text--accent-4{color:#c51162!important}.pink--text.text--accent-4 input,.pink--text.text--accent-4 textarea{caret-color:#c51162!important}.purple{background-color:#9c27b0!important;border-color:#9c27b0!important}.purple--text{color:#9c27b0!important}.purple--text input,.purple--text textarea{caret-color:#9c27b0!important}.purple--after:after{background:#9c27b0!important}.purple.lighten-5{border-color:#f3e5f5!important}.purple.lighten-5,.purple.lighten-5--after:after{background-color:#f3e5f5!important}.purple--text.text--lighten-5{color:#f3e5f5!important}.purple--text.text--lighten-5 input,.purple--text.text--lighten-5 textarea{caret-color:#f3e5f5!important}.purple.lighten-4{border-color:#e1bee7!important}.purple.lighten-4,.purple.lighten-4--after:after{background-color:#e1bee7!important}.purple--text.text--lighten-4{color:#e1bee7!important}.purple--text.text--lighten-4 input,.purple--text.text--lighten-4 textarea{caret-color:#e1bee7!important}.purple.lighten-3{border-color:#ce93d8!important}.purple.lighten-3,.purple.lighten-3--after:after{background-color:#ce93d8!important}.purple--text.text--lighten-3{color:#ce93d8!important}.purple--text.text--lighten-3 input,.purple--text.text--lighten-3 textarea{caret-color:#ce93d8!important}.purple.lighten-2{border-color:#ba68c8!important}.purple.lighten-2,.purple.lighten-2--after:after{background-color:#ba68c8!important}.purple--text.text--lighten-2{color:#ba68c8!important}.purple--text.text--lighten-2 input,.purple--text.text--lighten-2 textarea{caret-color:#ba68c8!important}.purple.lighten-1{border-color:#ab47bc!important}.purple.lighten-1,.purple.lighten-1--after:after{background-color:#ab47bc!important}.purple--text.text--lighten-1{color:#ab47bc!important}.purple--text.text--lighten-1 input,.purple--text.text--lighten-1 textarea{caret-color:#ab47bc!important}.purple.darken-1{border-color:#8e24aa!important}.purple.darken-1,.purple.darken-1--after:after{background-color:#8e24aa!important}.purple--text.text--darken-1{color:#8e24aa!important}.purple--text.text--darken-1 input,.purple--text.text--darken-1 textarea{caret-color:#8e24aa!important}.purple.darken-2{border-color:#7b1fa2!important}.purple.darken-2,.purple.darken-2--after:after{background-color:#7b1fa2!important}.purple--text.text--darken-2{color:#7b1fa2!important}.purple--text.text--darken-2 input,.purple--text.text--darken-2 textarea{caret-color:#7b1fa2!important}.purple.darken-3{border-color:#6a1b9a!important}.purple.darken-3,.purple.darken-3--after:after{background-color:#6a1b9a!important}.purple--text.text--darken-3{color:#6a1b9a!important}.purple--text.text--darken-3 input,.purple--text.text--darken-3 textarea{caret-color:#6a1b9a!important}.purple.darken-4{border-color:#4a148c!important}.purple.darken-4,.purple.darken-4--after:after{background-color:#4a148c!important}.purple--text.text--darken-4{color:#4a148c!important}.purple--text.text--darken-4 input,.purple--text.text--darken-4 textarea{caret-color:#4a148c!important}.purple.accent-1{border-color:#ea80fc!important}.purple.accent-1,.purple.accent-1--after:after{background-color:#ea80fc!important}.purple--text.text--accent-1{color:#ea80fc!important}.purple--text.text--accent-1 input,.purple--text.text--accent-1 textarea{caret-color:#ea80fc!important}.purple.accent-2{border-color:#e040fb!important}.purple.accent-2,.purple.accent-2--after:after{background-color:#e040fb!important}.purple--text.text--accent-2{color:#e040fb!important}.purple--text.text--accent-2 input,.purple--text.text--accent-2 textarea{caret-color:#e040fb!important}.purple.accent-3{border-color:#d500f9!important}.purple.accent-3,.purple.accent-3--after:after{background-color:#d500f9!important}.purple--text.text--accent-3{color:#d500f9!important}.purple--text.text--accent-3 input,.purple--text.text--accent-3 textarea{caret-color:#d500f9!important}.purple.accent-4{border-color:#a0f!important}.purple.accent-4,.purple.accent-4--after:after{background-color:#a0f!important}.purple--text.text--accent-4{color:#a0f!important}.purple--text.text--accent-4 input,.purple--text.text--accent-4 textarea{caret-color:#a0f!important}.deep-purple{background-color:#673ab7!important;border-color:#673ab7!important}.deep-purple--text{color:#673ab7!important}.deep-purple--text input,.deep-purple--text textarea{caret-color:#673ab7!important}.deep-purple--after:after{background:#673ab7!important}.deep-purple.lighten-5{border-color:#ede7f6!important}.deep-purple.lighten-5,.deep-purple.lighten-5--after:after{background-color:#ede7f6!important}.deep-purple--text.text--lighten-5{color:#ede7f6!important}.deep-purple--text.text--lighten-5 input,.deep-purple--text.text--lighten-5 textarea{caret-color:#ede7f6!important}.deep-purple.lighten-4{border-color:#d1c4e9!important}.deep-purple.lighten-4,.deep-purple.lighten-4--after:after{background-color:#d1c4e9!important}.deep-purple--text.text--lighten-4{color:#d1c4e9!important}.deep-purple--text.text--lighten-4 input,.deep-purple--text.text--lighten-4 textarea{caret-color:#d1c4e9!important}.deep-purple.lighten-3{border-color:#b39ddb!important}.deep-purple.lighten-3,.deep-purple.lighten-3--after:after{background-color:#b39ddb!important}.deep-purple--text.text--lighten-3{color:#b39ddb!important}.deep-purple--text.text--lighten-3 input,.deep-purple--text.text--lighten-3 textarea{caret-color:#b39ddb!important}.deep-purple.lighten-2{border-color:#9575cd!important}.deep-purple.lighten-2,.deep-purple.lighten-2--after:after{background-color:#9575cd!important}.deep-purple--text.text--lighten-2{color:#9575cd!important}.deep-purple--text.text--lighten-2 input,.deep-purple--text.text--lighten-2 textarea{caret-color:#9575cd!important}.deep-purple.lighten-1{border-color:#7e57c2!important}.deep-purple.lighten-1,.deep-purple.lighten-1--after:after{background-color:#7e57c2!important}.deep-purple--text.text--lighten-1{color:#7e57c2!important}.deep-purple--text.text--lighten-1 input,.deep-purple--text.text--lighten-1 textarea{caret-color:#7e57c2!important}.deep-purple.darken-1{border-color:#5e35b1!important}.deep-purple.darken-1,.deep-purple.darken-1--after:after{background-color:#5e35b1!important}.deep-purple--text.text--darken-1{color:#5e35b1!important}.deep-purple--text.text--darken-1 input,.deep-purple--text.text--darken-1 textarea{caret-color:#5e35b1!important}.deep-purple.darken-2{border-color:#512da8!important}.deep-purple.darken-2,.deep-purple.darken-2--after:after{background-color:#512da8!important}.deep-purple--text.text--darken-2{color:#512da8!important}.deep-purple--text.text--darken-2 input,.deep-purple--text.text--darken-2 textarea{caret-color:#512da8!important}.deep-purple.darken-3{border-color:#4527a0!important}.deep-purple.darken-3,.deep-purple.darken-3--after:after{background-color:#4527a0!important}.deep-purple--text.text--darken-3{color:#4527a0!important}.deep-purple--text.text--darken-3 input,.deep-purple--text.text--darken-3 textarea{caret-color:#4527a0!important}.deep-purple.darken-4{border-color:#311b92!important}.deep-purple.darken-4,.deep-purple.darken-4--after:after{background-color:#311b92!important}.deep-purple--text.text--darken-4{color:#311b92!important}.deep-purple--text.text--darken-4 input,.deep-purple--text.text--darken-4 textarea{caret-color:#311b92!important}.deep-purple.accent-1{border-color:#b388ff!important}.deep-purple.accent-1,.deep-purple.accent-1--after:after{background-color:#b388ff!important}.deep-purple--text.text--accent-1{color:#b388ff!important}.deep-purple--text.text--accent-1 input,.deep-purple--text.text--accent-1 textarea{caret-color:#b388ff!important}.deep-purple.accent-2{border-color:#7c4dff!important}.deep-purple.accent-2,.deep-purple.accent-2--after:after{background-color:#7c4dff!important}.deep-purple--text.text--accent-2{color:#7c4dff!important}.deep-purple--text.text--accent-2 input,.deep-purple--text.text--accent-2 textarea{caret-color:#7c4dff!important}.deep-purple.accent-3{border-color:#651fff!important}.deep-purple.accent-3,.deep-purple.accent-3--after:after{background-color:#651fff!important}.deep-purple--text.text--accent-3{color:#651fff!important}.deep-purple--text.text--accent-3 input,.deep-purple--text.text--accent-3 textarea{caret-color:#651fff!important}.deep-purple.accent-4{border-color:#6200ea!important}.deep-purple.accent-4,.deep-purple.accent-4--after:after{background-color:#6200ea!important}.deep-purple--text.text--accent-4{color:#6200ea!important}.deep-purple--text.text--accent-4 input,.deep-purple--text.text--accent-4 textarea{caret-color:#6200ea!important}.indigo{background-color:#3f51b5!important;border-color:#3f51b5!important}.indigo--text{color:#3f51b5!important}.indigo--text input,.indigo--text textarea{caret-color:#3f51b5!important}.indigo--after:after{background:#3f51b5!important}.indigo.lighten-5{border-color:#e8eaf6!important}.indigo.lighten-5,.indigo.lighten-5--after:after{background-color:#e8eaf6!important}.indigo--text.text--lighten-5{color:#e8eaf6!important}.indigo--text.text--lighten-5 input,.indigo--text.text--lighten-5 textarea{caret-color:#e8eaf6!important}.indigo.lighten-4{border-color:#c5cae9!important}.indigo.lighten-4,.indigo.lighten-4--after:after{background-color:#c5cae9!important}.indigo--text.text--lighten-4{color:#c5cae9!important}.indigo--text.text--lighten-4 input,.indigo--text.text--lighten-4 textarea{caret-color:#c5cae9!important}.indigo.lighten-3{border-color:#9fa8da!important}.indigo.lighten-3,.indigo.lighten-3--after:after{background-color:#9fa8da!important}.indigo--text.text--lighten-3{color:#9fa8da!important}.indigo--text.text--lighten-3 input,.indigo--text.text--lighten-3 textarea{caret-color:#9fa8da!important}.indigo.lighten-2{border-color:#7986cb!important}.indigo.lighten-2,.indigo.lighten-2--after:after{background-color:#7986cb!important}.indigo--text.text--lighten-2{color:#7986cb!important}.indigo--text.text--lighten-2 input,.indigo--text.text--lighten-2 textarea{caret-color:#7986cb!important}.indigo.lighten-1{border-color:#5c6bc0!important}.indigo.lighten-1,.indigo.lighten-1--after:after{background-color:#5c6bc0!important}.indigo--text.text--lighten-1{color:#5c6bc0!important}.indigo--text.text--lighten-1 input,.indigo--text.text--lighten-1 textarea{caret-color:#5c6bc0!important}.indigo.darken-1{border-color:#3949ab!important}.indigo.darken-1,.indigo.darken-1--after:after{background-color:#3949ab!important}.indigo--text.text--darken-1{color:#3949ab!important}.indigo--text.text--darken-1 input,.indigo--text.text--darken-1 textarea{caret-color:#3949ab!important}.indigo.darken-2{border-color:#303f9f!important}.indigo.darken-2,.indigo.darken-2--after:after{background-color:#303f9f!important}.indigo--text.text--darken-2{color:#303f9f!important}.indigo--text.text--darken-2 input,.indigo--text.text--darken-2 textarea{caret-color:#303f9f!important}.indigo.darken-3{border-color:#283593!important}.indigo.darken-3,.indigo.darken-3--after:after{background-color:#283593!important}.indigo--text.text--darken-3{color:#283593!important}.indigo--text.text--darken-3 input,.indigo--text.text--darken-3 textarea{caret-color:#283593!important}.indigo.darken-4{border-color:#1a237e!important}.indigo.darken-4,.indigo.darken-4--after:after{background-color:#1a237e!important}.indigo--text.text--darken-4{color:#1a237e!important}.indigo--text.text--darken-4 input,.indigo--text.text--darken-4 textarea{caret-color:#1a237e!important}.indigo.accent-1{border-color:#8c9eff!important}.indigo.accent-1,.indigo.accent-1--after:after{background-color:#8c9eff!important}.indigo--text.text--accent-1{color:#8c9eff!important}.indigo--text.text--accent-1 input,.indigo--text.text--accent-1 textarea{caret-color:#8c9eff!important}.indigo.accent-2{border-color:#536dfe!important}.indigo.accent-2,.indigo.accent-2--after:after{background-color:#536dfe!important}.indigo--text.text--accent-2{color:#536dfe!important}.indigo--text.text--accent-2 input,.indigo--text.text--accent-2 textarea{caret-color:#536dfe!important}.indigo.accent-3{border-color:#3d5afe!important}.indigo.accent-3,.indigo.accent-3--after:after{background-color:#3d5afe!important}.indigo--text.text--accent-3{color:#3d5afe!important}.indigo--text.text--accent-3 input,.indigo--text.text--accent-3 textarea{caret-color:#3d5afe!important}.indigo.accent-4{border-color:#304ffe!important}.indigo.accent-4,.indigo.accent-4--after:after{background-color:#304ffe!important}.indigo--text.text--accent-4{color:#304ffe!important}.indigo--text.text--accent-4 input,.indigo--text.text--accent-4 textarea{caret-color:#304ffe!important}.blue{background-color:#2196f3!important;border-color:#2196f3!important}.blue--text{color:#2196f3!important}.blue--text input,.blue--text textarea{caret-color:#2196f3!important}.blue--after:after{background:#2196f3!important}.blue.lighten-5{border-color:#e3f2fd!important}.blue.lighten-5,.blue.lighten-5--after:after{background-color:#e3f2fd!important}.blue--text.text--lighten-5{color:#e3f2fd!important}.blue--text.text--lighten-5 input,.blue--text.text--lighten-5 textarea{caret-color:#e3f2fd!important}.blue.lighten-4{border-color:#bbdefb!important}.blue.lighten-4,.blue.lighten-4--after:after{background-color:#bbdefb!important}.blue--text.text--lighten-4{color:#bbdefb!important}.blue--text.text--lighten-4 input,.blue--text.text--lighten-4 textarea{caret-color:#bbdefb!important}.blue.lighten-3{border-color:#90caf9!important}.blue.lighten-3,.blue.lighten-3--after:after{background-color:#90caf9!important}.blue--text.text--lighten-3{color:#90caf9!important}.blue--text.text--lighten-3 input,.blue--text.text--lighten-3 textarea{caret-color:#90caf9!important}.blue.lighten-2{border-color:#64b5f6!important}.blue.lighten-2,.blue.lighten-2--after:after{background-color:#64b5f6!important}.blue--text.text--lighten-2{color:#64b5f6!important}.blue--text.text--lighten-2 input,.blue--text.text--lighten-2 textarea{caret-color:#64b5f6!important}.blue.lighten-1{border-color:#42a5f5!important}.blue.lighten-1,.blue.lighten-1--after:after{background-color:#42a5f5!important}.blue--text.text--lighten-1{color:#42a5f5!important}.blue--text.text--lighten-1 input,.blue--text.text--lighten-1 textarea{caret-color:#42a5f5!important}.blue.darken-1{border-color:#1e88e5!important}.blue.darken-1,.blue.darken-1--after:after{background-color:#1e88e5!important}.blue--text.text--darken-1{color:#1e88e5!important}.blue--text.text--darken-1 input,.blue--text.text--darken-1 textarea{caret-color:#1e88e5!important}.blue.darken-2{border-color:#1976d2!important}.blue.darken-2,.blue.darken-2--after:after{background-color:#1976d2!important}.blue--text.text--darken-2{color:#1976d2!important}.blue--text.text--darken-2 input,.blue--text.text--darken-2 textarea{caret-color:#1976d2!important}.blue.darken-3{border-color:#1565c0!important}.blue.darken-3,.blue.darken-3--after:after{background-color:#1565c0!important}.blue--text.text--darken-3{color:#1565c0!important}.blue--text.text--darken-3 input,.blue--text.text--darken-3 textarea{caret-color:#1565c0!important}.blue.darken-4{border-color:#0d47a1!important}.blue.darken-4,.blue.darken-4--after:after{background-color:#0d47a1!important}.blue--text.text--darken-4{color:#0d47a1!important}.blue--text.text--darken-4 input,.blue--text.text--darken-4 textarea{caret-color:#0d47a1!important}.blue.accent-1{border-color:#82b1ff!important}.blue.accent-1,.blue.accent-1--after:after{background-color:#82b1ff!important}.blue--text.text--accent-1{color:#82b1ff!important}.blue--text.text--accent-1 input,.blue--text.text--accent-1 textarea{caret-color:#82b1ff!important}.blue.accent-2{border-color:#448aff!important}.blue.accent-2,.blue.accent-2--after:after{background-color:#448aff!important}.blue--text.text--accent-2{color:#448aff!important}.blue--text.text--accent-2 input,.blue--text.text--accent-2 textarea{caret-color:#448aff!important}.blue.accent-3{border-color:#2979ff!important}.blue.accent-3,.blue.accent-3--after:after{background-color:#2979ff!important}.blue--text.text--accent-3{color:#2979ff!important}.blue--text.text--accent-3 input,.blue--text.text--accent-3 textarea{caret-color:#2979ff!important}.blue.accent-4{border-color:#2962ff!important}.blue.accent-4,.blue.accent-4--after:after{background-color:#2962ff!important}.blue--text.text--accent-4{color:#2962ff!important}.blue--text.text--accent-4 input,.blue--text.text--accent-4 textarea{caret-color:#2962ff!important}.light-blue{background-color:#03a9f4!important;border-color:#03a9f4!important}.light-blue--text{color:#03a9f4!important}.light-blue--text input,.light-blue--text textarea{caret-color:#03a9f4!important}.light-blue--after:after{background:#03a9f4!important}.light-blue.lighten-5{border-color:#e1f5fe!important}.light-blue.lighten-5,.light-blue.lighten-5--after:after{background-color:#e1f5fe!important}.light-blue--text.text--lighten-5{color:#e1f5fe!important}.light-blue--text.text--lighten-5 input,.light-blue--text.text--lighten-5 textarea{caret-color:#e1f5fe!important}.light-blue.lighten-4{border-color:#b3e5fc!important}.light-blue.lighten-4,.light-blue.lighten-4--after:after{background-color:#b3e5fc!important}.light-blue--text.text--lighten-4{color:#b3e5fc!important}.light-blue--text.text--lighten-4 input,.light-blue--text.text--lighten-4 textarea{caret-color:#b3e5fc!important}.light-blue.lighten-3{border-color:#81d4fa!important}.light-blue.lighten-3,.light-blue.lighten-3--after:after{background-color:#81d4fa!important}.light-blue--text.text--lighten-3{color:#81d4fa!important}.light-blue--text.text--lighten-3 input,.light-blue--text.text--lighten-3 textarea{caret-color:#81d4fa!important}.light-blue.lighten-2{border-color:#4fc3f7!important}.light-blue.lighten-2,.light-blue.lighten-2--after:after{background-color:#4fc3f7!important}.light-blue--text.text--lighten-2{color:#4fc3f7!important}.light-blue--text.text--lighten-2 input,.light-blue--text.text--lighten-2 textarea{caret-color:#4fc3f7!important}.light-blue.lighten-1{border-color:#29b6f6!important}.light-blue.lighten-1,.light-blue.lighten-1--after:after{background-color:#29b6f6!important}.light-blue--text.text--lighten-1{color:#29b6f6!important}.light-blue--text.text--lighten-1 input,.light-blue--text.text--lighten-1 textarea{caret-color:#29b6f6!important}.light-blue.darken-1{border-color:#039be5!important}.light-blue.darken-1,.light-blue.darken-1--after:after{background-color:#039be5!important}.light-blue--text.text--darken-1{color:#039be5!important}.light-blue--text.text--darken-1 input,.light-blue--text.text--darken-1 textarea{caret-color:#039be5!important}.light-blue.darken-2{border-color:#0288d1!important}.light-blue.darken-2,.light-blue.darken-2--after:after{background-color:#0288d1!important}.light-blue--text.text--darken-2{color:#0288d1!important}.light-blue--text.text--darken-2 input,.light-blue--text.text--darken-2 textarea{caret-color:#0288d1!important}.light-blue.darken-3{border-color:#0277bd!important}.light-blue.darken-3,.light-blue.darken-3--after:after{background-color:#0277bd!important}.light-blue--text.text--darken-3{color:#0277bd!important}.light-blue--text.text--darken-3 input,.light-blue--text.text--darken-3 textarea{caret-color:#0277bd!important}.light-blue.darken-4{border-color:#01579b!important}.light-blue.darken-4,.light-blue.darken-4--after:after{background-color:#01579b!important}.light-blue--text.text--darken-4{color:#01579b!important}.light-blue--text.text--darken-4 input,.light-blue--text.text--darken-4 textarea{caret-color:#01579b!important}.light-blue.accent-1{border-color:#80d8ff!important}.light-blue.accent-1,.light-blue.accent-1--after:after{background-color:#80d8ff!important}.light-blue--text.text--accent-1{color:#80d8ff!important}.light-blue--text.text--accent-1 input,.light-blue--text.text--accent-1 textarea{caret-color:#80d8ff!important}.light-blue.accent-2{border-color:#40c4ff!important}.light-blue.accent-2,.light-blue.accent-2--after:after{background-color:#40c4ff!important}.light-blue--text.text--accent-2{color:#40c4ff!important}.light-blue--text.text--accent-2 input,.light-blue--text.text--accent-2 textarea{caret-color:#40c4ff!important}.light-blue.accent-3{border-color:#00b0ff!important}.light-blue.accent-3,.light-blue.accent-3--after:after{background-color:#00b0ff!important}.light-blue--text.text--accent-3{color:#00b0ff!important}.light-blue--text.text--accent-3 input,.light-blue--text.text--accent-3 textarea{caret-color:#00b0ff!important}.light-blue.accent-4{border-color:#0091ea!important}.light-blue.accent-4,.light-blue.accent-4--after:after{background-color:#0091ea!important}.light-blue--text.text--accent-4{color:#0091ea!important}.light-blue--text.text--accent-4 input,.light-blue--text.text--accent-4 textarea{caret-color:#0091ea!important}.cyan{background-color:#00bcd4!important;border-color:#00bcd4!important}.cyan--text{color:#00bcd4!important}.cyan--text input,.cyan--text textarea{caret-color:#00bcd4!important}.cyan--after:after{background:#00bcd4!important}.cyan.lighten-5{border-color:#e0f7fa!important}.cyan.lighten-5,.cyan.lighten-5--after:after{background-color:#e0f7fa!important}.cyan--text.text--lighten-5{color:#e0f7fa!important}.cyan--text.text--lighten-5 input,.cyan--text.text--lighten-5 textarea{caret-color:#e0f7fa!important}.cyan.lighten-4{border-color:#b2ebf2!important}.cyan.lighten-4,.cyan.lighten-4--after:after{background-color:#b2ebf2!important}.cyan--text.text--lighten-4{color:#b2ebf2!important}.cyan--text.text--lighten-4 input,.cyan--text.text--lighten-4 textarea{caret-color:#b2ebf2!important}.cyan.lighten-3{border-color:#80deea!important}.cyan.lighten-3,.cyan.lighten-3--after:after{background-color:#80deea!important}.cyan--text.text--lighten-3{color:#80deea!important}.cyan--text.text--lighten-3 input,.cyan--text.text--lighten-3 textarea{caret-color:#80deea!important}.cyan.lighten-2{border-color:#4dd0e1!important}.cyan.lighten-2,.cyan.lighten-2--after:after{background-color:#4dd0e1!important}.cyan--text.text--lighten-2{color:#4dd0e1!important}.cyan--text.text--lighten-2 input,.cyan--text.text--lighten-2 textarea{caret-color:#4dd0e1!important}.cyan.lighten-1{border-color:#26c6da!important}.cyan.lighten-1,.cyan.lighten-1--after:after{background-color:#26c6da!important}.cyan--text.text--lighten-1{color:#26c6da!important}.cyan--text.text--lighten-1 input,.cyan--text.text--lighten-1 textarea{caret-color:#26c6da!important}.cyan.darken-1{border-color:#00acc1!important}.cyan.darken-1,.cyan.darken-1--after:after{background-color:#00acc1!important}.cyan--text.text--darken-1{color:#00acc1!important}.cyan--text.text--darken-1 input,.cyan--text.text--darken-1 textarea{caret-color:#00acc1!important}.cyan.darken-2{border-color:#0097a7!important}.cyan.darken-2,.cyan.darken-2--after:after{background-color:#0097a7!important}.cyan--text.text--darken-2{color:#0097a7!important}.cyan--text.text--darken-2 input,.cyan--text.text--darken-2 textarea{caret-color:#0097a7!important}.cyan.darken-3{border-color:#00838f!important}.cyan.darken-3,.cyan.darken-3--after:after{background-color:#00838f!important}.cyan--text.text--darken-3{color:#00838f!important}.cyan--text.text--darken-3 input,.cyan--text.text--darken-3 textarea{caret-color:#00838f!important}.cyan.darken-4{border-color:#006064!important}.cyan.darken-4,.cyan.darken-4--after:after{background-color:#006064!important}.cyan--text.text--darken-4{color:#006064!important}.cyan--text.text--darken-4 input,.cyan--text.text--darken-4 textarea{caret-color:#006064!important}.cyan.accent-1{border-color:#84ffff!important}.cyan.accent-1,.cyan.accent-1--after:after{background-color:#84ffff!important}.cyan--text.text--accent-1{color:#84ffff!important}.cyan--text.text--accent-1 input,.cyan--text.text--accent-1 textarea{caret-color:#84ffff!important}.cyan.accent-2{border-color:#18ffff!important}.cyan.accent-2,.cyan.accent-2--after:after{background-color:#18ffff!important}.cyan--text.text--accent-2{color:#18ffff!important}.cyan--text.text--accent-2 input,.cyan--text.text--accent-2 textarea{caret-color:#18ffff!important}.cyan.accent-3{border-color:#00e5ff!important}.cyan.accent-3,.cyan.accent-3--after:after{background-color:#00e5ff!important}.cyan--text.text--accent-3{color:#00e5ff!important}.cyan--text.text--accent-3 input,.cyan--text.text--accent-3 textarea{caret-color:#00e5ff!important}.cyan.accent-4{border-color:#00b8d4!important}.cyan.accent-4,.cyan.accent-4--after:after{background-color:#00b8d4!important}.cyan--text.text--accent-4{color:#00b8d4!important}.cyan--text.text--accent-4 input,.cyan--text.text--accent-4 textarea{caret-color:#00b8d4!important}.teal{background-color:#009688!important;border-color:#009688!important}.teal--text{color:#009688!important}.teal--text input,.teal--text textarea{caret-color:#009688!important}.teal--after:after{background:#009688!important}.teal.lighten-5{border-color:#e0f2f1!important}.teal.lighten-5,.teal.lighten-5--after:after{background-color:#e0f2f1!important}.teal--text.text--lighten-5{color:#e0f2f1!important}.teal--text.text--lighten-5 input,.teal--text.text--lighten-5 textarea{caret-color:#e0f2f1!important}.teal.lighten-4{border-color:#b2dfdb!important}.teal.lighten-4,.teal.lighten-4--after:after{background-color:#b2dfdb!important}.teal--text.text--lighten-4{color:#b2dfdb!important}.teal--text.text--lighten-4 input,.teal--text.text--lighten-4 textarea{caret-color:#b2dfdb!important}.teal.lighten-3{border-color:#80cbc4!important}.teal.lighten-3,.teal.lighten-3--after:after{background-color:#80cbc4!important}.teal--text.text--lighten-3{color:#80cbc4!important}.teal--text.text--lighten-3 input,.teal--text.text--lighten-3 textarea{caret-color:#80cbc4!important}.teal.lighten-2{border-color:#4db6ac!important}.teal.lighten-2,.teal.lighten-2--after:after{background-color:#4db6ac!important}.teal--text.text--lighten-2{color:#4db6ac!important}.teal--text.text--lighten-2 input,.teal--text.text--lighten-2 textarea{caret-color:#4db6ac!important}.teal.lighten-1{border-color:#26a69a!important}.teal.lighten-1,.teal.lighten-1--after:after{background-color:#26a69a!important}.teal--text.text--lighten-1{color:#26a69a!important}.teal--text.text--lighten-1 input,.teal--text.text--lighten-1 textarea{caret-color:#26a69a!important}.teal.darken-1{border-color:#00897b!important}.teal.darken-1,.teal.darken-1--after:after{background-color:#00897b!important}.teal--text.text--darken-1{color:#00897b!important}.teal--text.text--darken-1 input,.teal--text.text--darken-1 textarea{caret-color:#00897b!important}.teal.darken-2{border-color:#00796b!important}.teal.darken-2,.teal.darken-2--after:after{background-color:#00796b!important}.teal--text.text--darken-2{color:#00796b!important}.teal--text.text--darken-2 input,.teal--text.text--darken-2 textarea{caret-color:#00796b!important}.teal.darken-3{border-color:#00695c!important}.teal.darken-3,.teal.darken-3--after:after{background-color:#00695c!important}.teal--text.text--darken-3{color:#00695c!important}.teal--text.text--darken-3 input,.teal--text.text--darken-3 textarea{caret-color:#00695c!important}.teal.darken-4{border-color:#004d40!important}.teal.darken-4,.teal.darken-4--after:after{background-color:#004d40!important}.teal--text.text--darken-4{color:#004d40!important}.teal--text.text--darken-4 input,.teal--text.text--darken-4 textarea{caret-color:#004d40!important}.teal.accent-1{border-color:#a7ffeb!important}.teal.accent-1,.teal.accent-1--after:after{background-color:#a7ffeb!important}.teal--text.text--accent-1{color:#a7ffeb!important}.teal--text.text--accent-1 input,.teal--text.text--accent-1 textarea{caret-color:#a7ffeb!important}.teal.accent-2{border-color:#64ffda!important}.teal.accent-2,.teal.accent-2--after:after{background-color:#64ffda!important}.teal--text.text--accent-2{color:#64ffda!important}.teal--text.text--accent-2 input,.teal--text.text--accent-2 textarea{caret-color:#64ffda!important}.teal.accent-3{border-color:#1de9b6!important}.teal.accent-3,.teal.accent-3--after:after{background-color:#1de9b6!important}.teal--text.text--accent-3{color:#1de9b6!important}.teal--text.text--accent-3 input,.teal--text.text--accent-3 textarea{caret-color:#1de9b6!important}.teal.accent-4{border-color:#00bfa5!important}.teal.accent-4,.teal.accent-4--after:after{background-color:#00bfa5!important}.teal--text.text--accent-4{color:#00bfa5!important}.teal--text.text--accent-4 input,.teal--text.text--accent-4 textarea{caret-color:#00bfa5!important}.green{background-color:#4caf50!important;border-color:#4caf50!important}.green--text{color:#4caf50!important}.green--text input,.green--text textarea{caret-color:#4caf50!important}.green--after:after{background:#4caf50!important}.green.lighten-5{border-color:#e8f5e9!important}.green.lighten-5,.green.lighten-5--after:after{background-color:#e8f5e9!important}.green--text.text--lighten-5{color:#e8f5e9!important}.green--text.text--lighten-5 input,.green--text.text--lighten-5 textarea{caret-color:#e8f5e9!important}.green.lighten-4{border-color:#c8e6c9!important}.green.lighten-4,.green.lighten-4--after:after{background-color:#c8e6c9!important}.green--text.text--lighten-4{color:#c8e6c9!important}.green--text.text--lighten-4 input,.green--text.text--lighten-4 textarea{caret-color:#c8e6c9!important}.green.lighten-3{border-color:#a5d6a7!important}.green.lighten-3,.green.lighten-3--after:after{background-color:#a5d6a7!important}.green--text.text--lighten-3{color:#a5d6a7!important}.green--text.text--lighten-3 input,.green--text.text--lighten-3 textarea{caret-color:#a5d6a7!important}.green.lighten-2{border-color:#81c784!important}.green.lighten-2,.green.lighten-2--after:after{background-color:#81c784!important}.green--text.text--lighten-2{color:#81c784!important}.green--text.text--lighten-2 input,.green--text.text--lighten-2 textarea{caret-color:#81c784!important}.green.lighten-1{border-color:#66bb6a!important}.green.lighten-1,.green.lighten-1--after:after{background-color:#66bb6a!important}.green--text.text--lighten-1{color:#66bb6a!important}.green--text.text--lighten-1 input,.green--text.text--lighten-1 textarea{caret-color:#66bb6a!important}.green.darken-1{border-color:#43a047!important}.green.darken-1,.green.darken-1--after:after{background-color:#43a047!important}.green--text.text--darken-1{color:#43a047!important}.green--text.text--darken-1 input,.green--text.text--darken-1 textarea{caret-color:#43a047!important}.green.darken-2{border-color:#388e3c!important}.green.darken-2,.green.darken-2--after:after{background-color:#388e3c!important}.green--text.text--darken-2{color:#388e3c!important}.green--text.text--darken-2 input,.green--text.text--darken-2 textarea{caret-color:#388e3c!important}.green.darken-3{border-color:#2e7d32!important}.green.darken-3,.green.darken-3--after:after{background-color:#2e7d32!important}.green--text.text--darken-3{color:#2e7d32!important}.green--text.text--darken-3 input,.green--text.text--darken-3 textarea{caret-color:#2e7d32!important}.green.darken-4{border-color:#1b5e20!important}.green.darken-4,.green.darken-4--after:after{background-color:#1b5e20!important}.green--text.text--darken-4{color:#1b5e20!important}.green--text.text--darken-4 input,.green--text.text--darken-4 textarea{caret-color:#1b5e20!important}.green.accent-1{border-color:#b9f6ca!important}.green.accent-1,.green.accent-1--after:after{background-color:#b9f6ca!important}.green--text.text--accent-1{color:#b9f6ca!important}.green--text.text--accent-1 input,.green--text.text--accent-1 textarea{caret-color:#b9f6ca!important}.green.accent-2{border-color:#69f0ae!important}.green.accent-2,.green.accent-2--after:after{background-color:#69f0ae!important}.green--text.text--accent-2{color:#69f0ae!important}.green--text.text--accent-2 input,.green--text.text--accent-2 textarea{caret-color:#69f0ae!important}.green.accent-3{border-color:#00e676!important}.green.accent-3,.green.accent-3--after:after{background-color:#00e676!important}.green--text.text--accent-3{color:#00e676!important}.green--text.text--accent-3 input,.green--text.text--accent-3 textarea{caret-color:#00e676!important}.green.accent-4{border-color:#00c853!important}.green.accent-4,.green.accent-4--after:after{background-color:#00c853!important}.green--text.text--accent-4{color:#00c853!important}.green--text.text--accent-4 input,.green--text.text--accent-4 textarea{caret-color:#00c853!important}.light-green{background-color:#8bc34a!important;border-color:#8bc34a!important}.light-green--text{color:#8bc34a!important}.light-green--text input,.light-green--text textarea{caret-color:#8bc34a!important}.light-green--after:after{background:#8bc34a!important}.light-green.lighten-5{border-color:#f1f8e9!important}.light-green.lighten-5,.light-green.lighten-5--after:after{background-color:#f1f8e9!important}.light-green--text.text--lighten-5{color:#f1f8e9!important}.light-green--text.text--lighten-5 input,.light-green--text.text--lighten-5 textarea{caret-color:#f1f8e9!important}.light-green.lighten-4{border-color:#dcedc8!important}.light-green.lighten-4,.light-green.lighten-4--after:after{background-color:#dcedc8!important}.light-green--text.text--lighten-4{color:#dcedc8!important}.light-green--text.text--lighten-4 input,.light-green--text.text--lighten-4 textarea{caret-color:#dcedc8!important}.light-green.lighten-3{border-color:#c5e1a5!important}.light-green.lighten-3,.light-green.lighten-3--after:after{background-color:#c5e1a5!important}.light-green--text.text--lighten-3{color:#c5e1a5!important}.light-green--text.text--lighten-3 input,.light-green--text.text--lighten-3 textarea{caret-color:#c5e1a5!important}.light-green.lighten-2{border-color:#aed581!important}.light-green.lighten-2,.light-green.lighten-2--after:after{background-color:#aed581!important}.light-green--text.text--lighten-2{color:#aed581!important}.light-green--text.text--lighten-2 input,.light-green--text.text--lighten-2 textarea{caret-color:#aed581!important}.light-green.lighten-1{border-color:#9ccc65!important}.light-green.lighten-1,.light-green.lighten-1--after:after{background-color:#9ccc65!important}.light-green--text.text--lighten-1{color:#9ccc65!important}.light-green--text.text--lighten-1 input,.light-green--text.text--lighten-1 textarea{caret-color:#9ccc65!important}.light-green.darken-1{border-color:#7cb342!important}.light-green.darken-1,.light-green.darken-1--after:after{background-color:#7cb342!important}.light-green--text.text--darken-1{color:#7cb342!important}.light-green--text.text--darken-1 input,.light-green--text.text--darken-1 textarea{caret-color:#7cb342!important}.light-green.darken-2{border-color:#689f38!important}.light-green.darken-2,.light-green.darken-2--after:after{background-color:#689f38!important}.light-green--text.text--darken-2{color:#689f38!important}.light-green--text.text--darken-2 input,.light-green--text.text--darken-2 textarea{caret-color:#689f38!important}.light-green.darken-3{border-color:#558b2f!important}.light-green.darken-3,.light-green.darken-3--after:after{background-color:#558b2f!important}.light-green--text.text--darken-3{color:#558b2f!important}.light-green--text.text--darken-3 input,.light-green--text.text--darken-3 textarea{caret-color:#558b2f!important}.light-green.darken-4{border-color:#33691e!important}.light-green.darken-4,.light-green.darken-4--after:after{background-color:#33691e!important}.light-green--text.text--darken-4{color:#33691e!important}.light-green--text.text--darken-4 input,.light-green--text.text--darken-4 textarea{caret-color:#33691e!important}.light-green.accent-1{border-color:#ccff90!important}.light-green.accent-1,.light-green.accent-1--after:after{background-color:#ccff90!important}.light-green--text.text--accent-1{color:#ccff90!important}.light-green--text.text--accent-1 input,.light-green--text.text--accent-1 textarea{caret-color:#ccff90!important}.light-green.accent-2{border-color:#b2ff59!important}.light-green.accent-2,.light-green.accent-2--after:after{background-color:#b2ff59!important}.light-green--text.text--accent-2{color:#b2ff59!important}.light-green--text.text--accent-2 input,.light-green--text.text--accent-2 textarea{caret-color:#b2ff59!important}.light-green.accent-3{border-color:#76ff03!important}.light-green.accent-3,.light-green.accent-3--after:after{background-color:#76ff03!important}.light-green--text.text--accent-3{color:#76ff03!important}.light-green--text.text--accent-3 input,.light-green--text.text--accent-3 textarea{caret-color:#76ff03!important}.light-green.accent-4{border-color:#64dd17!important}.light-green.accent-4,.light-green.accent-4--after:after{background-color:#64dd17!important}.light-green--text.text--accent-4{color:#64dd17!important}.light-green--text.text--accent-4 input,.light-green--text.text--accent-4 textarea{caret-color:#64dd17!important}.lime{background-color:#cddc39!important;border-color:#cddc39!important}.lime--text{color:#cddc39!important}.lime--text input,.lime--text textarea{caret-color:#cddc39!important}.lime--after:after{background:#cddc39!important}.lime.lighten-5{border-color:#f9fbe7!important}.lime.lighten-5,.lime.lighten-5--after:after{background-color:#f9fbe7!important}.lime--text.text--lighten-5{color:#f9fbe7!important}.lime--text.text--lighten-5 input,.lime--text.text--lighten-5 textarea{caret-color:#f9fbe7!important}.lime.lighten-4{border-color:#f0f4c3!important}.lime.lighten-4,.lime.lighten-4--after:after{background-color:#f0f4c3!important}.lime--text.text--lighten-4{color:#f0f4c3!important}.lime--text.text--lighten-4 input,.lime--text.text--lighten-4 textarea{caret-color:#f0f4c3!important}.lime.lighten-3{border-color:#e6ee9c!important}.lime.lighten-3,.lime.lighten-3--after:after{background-color:#e6ee9c!important}.lime--text.text--lighten-3{color:#e6ee9c!important}.lime--text.text--lighten-3 input,.lime--text.text--lighten-3 textarea{caret-color:#e6ee9c!important}.lime.lighten-2{border-color:#dce775!important}.lime.lighten-2,.lime.lighten-2--after:after{background-color:#dce775!important}.lime--text.text--lighten-2{color:#dce775!important}.lime--text.text--lighten-2 input,.lime--text.text--lighten-2 textarea{caret-color:#dce775!important}.lime.lighten-1{border-color:#d4e157!important}.lime.lighten-1,.lime.lighten-1--after:after{background-color:#d4e157!important}.lime--text.text--lighten-1{color:#d4e157!important}.lime--text.text--lighten-1 input,.lime--text.text--lighten-1 textarea{caret-color:#d4e157!important}.lime.darken-1{border-color:#c0ca33!important}.lime.darken-1,.lime.darken-1--after:after{background-color:#c0ca33!important}.lime--text.text--darken-1{color:#c0ca33!important}.lime--text.text--darken-1 input,.lime--text.text--darken-1 textarea{caret-color:#c0ca33!important}.lime.darken-2{border-color:#afb42b!important}.lime.darken-2,.lime.darken-2--after:after{background-color:#afb42b!important}.lime--text.text--darken-2{color:#afb42b!important}.lime--text.text--darken-2 input,.lime--text.text--darken-2 textarea{caret-color:#afb42b!important}.lime.darken-3{border-color:#9e9d24!important}.lime.darken-3,.lime.darken-3--after:after{background-color:#9e9d24!important}.lime--text.text--darken-3{color:#9e9d24!important}.lime--text.text--darken-3 input,.lime--text.text--darken-3 textarea{caret-color:#9e9d24!important}.lime.darken-4{border-color:#827717!important}.lime.darken-4,.lime.darken-4--after:after{background-color:#827717!important}.lime--text.text--darken-4{color:#827717!important}.lime--text.text--darken-4 input,.lime--text.text--darken-4 textarea{caret-color:#827717!important}.lime.accent-1{border-color:#f4ff81!important}.lime.accent-1,.lime.accent-1--after:after{background-color:#f4ff81!important}.lime--text.text--accent-1{color:#f4ff81!important}.lime--text.text--accent-1 input,.lime--text.text--accent-1 textarea{caret-color:#f4ff81!important}.lime.accent-2{border-color:#eeff41!important}.lime.accent-2,.lime.accent-2--after:after{background-color:#eeff41!important}.lime--text.text--accent-2{color:#eeff41!important}.lime--text.text--accent-2 input,.lime--text.text--accent-2 textarea{caret-color:#eeff41!important}.lime.accent-3{border-color:#c6ff00!important}.lime.accent-3,.lime.accent-3--after:after{background-color:#c6ff00!important}.lime--text.text--accent-3{color:#c6ff00!important}.lime--text.text--accent-3 input,.lime--text.text--accent-3 textarea{caret-color:#c6ff00!important}.lime.accent-4{border-color:#aeea00!important}.lime.accent-4,.lime.accent-4--after:after{background-color:#aeea00!important}.lime--text.text--accent-4{color:#aeea00!important}.lime--text.text--accent-4 input,.lime--text.text--accent-4 textarea{caret-color:#aeea00!important}.yellow{background-color:#ffeb3b!important;border-color:#ffeb3b!important}.yellow--text{color:#ffeb3b!important}.yellow--text input,.yellow--text textarea{caret-color:#ffeb3b!important}.yellow--after:after{background:#ffeb3b!important}.yellow.lighten-5{border-color:#fffde7!important}.yellow.lighten-5,.yellow.lighten-5--after:after{background-color:#fffde7!important}.yellow--text.text--lighten-5{color:#fffde7!important}.yellow--text.text--lighten-5 input,.yellow--text.text--lighten-5 textarea{caret-color:#fffde7!important}.yellow.lighten-4{border-color:#fff9c4!important}.yellow.lighten-4,.yellow.lighten-4--after:after{background-color:#fff9c4!important}.yellow--text.text--lighten-4{color:#fff9c4!important}.yellow--text.text--lighten-4 input,.yellow--text.text--lighten-4 textarea{caret-color:#fff9c4!important}.yellow.lighten-3{border-color:#fff59d!important}.yellow.lighten-3,.yellow.lighten-3--after:after{background-color:#fff59d!important}.yellow--text.text--lighten-3{color:#fff59d!important}.yellow--text.text--lighten-3 input,.yellow--text.text--lighten-3 textarea{caret-color:#fff59d!important}.yellow.lighten-2{border-color:#fff176!important}.yellow.lighten-2,.yellow.lighten-2--after:after{background-color:#fff176!important}.yellow--text.text--lighten-2{color:#fff176!important}.yellow--text.text--lighten-2 input,.yellow--text.text--lighten-2 textarea{caret-color:#fff176!important}.yellow.lighten-1{border-color:#ffee58!important}.yellow.lighten-1,.yellow.lighten-1--after:after{background-color:#ffee58!important}.yellow--text.text--lighten-1{color:#ffee58!important}.yellow--text.text--lighten-1 input,.yellow--text.text--lighten-1 textarea{caret-color:#ffee58!important}.yellow.darken-1{border-color:#fdd835!important}.yellow.darken-1,.yellow.darken-1--after:after{background-color:#fdd835!important}.yellow--text.text--darken-1{color:#fdd835!important}.yellow--text.text--darken-1 input,.yellow--text.text--darken-1 textarea{caret-color:#fdd835!important}.yellow.darken-2{border-color:#fbc02d!important}.yellow.darken-2,.yellow.darken-2--after:after{background-color:#fbc02d!important}.yellow--text.text--darken-2{color:#fbc02d!important}.yellow--text.text--darken-2 input,.yellow--text.text--darken-2 textarea{caret-color:#fbc02d!important}.yellow.darken-3{border-color:#f9a825!important}.yellow.darken-3,.yellow.darken-3--after:after{background-color:#f9a825!important}.yellow--text.text--darken-3{color:#f9a825!important}.yellow--text.text--darken-3 input,.yellow--text.text--darken-3 textarea{caret-color:#f9a825!important}.yellow.darken-4{border-color:#f57f17!important}.yellow.darken-4,.yellow.darken-4--after:after{background-color:#f57f17!important}.yellow--text.text--darken-4{color:#f57f17!important}.yellow--text.text--darken-4 input,.yellow--text.text--darken-4 textarea{caret-color:#f57f17!important}.yellow.accent-1{border-color:#ffff8d!important}.yellow.accent-1,.yellow.accent-1--after:after{background-color:#ffff8d!important}.yellow--text.text--accent-1{color:#ffff8d!important}.yellow--text.text--accent-1 input,.yellow--text.text--accent-1 textarea{caret-color:#ffff8d!important}.yellow.accent-2{border-color:#ff0!important}.yellow.accent-2,.yellow.accent-2--after:after{background-color:#ff0!important}.yellow--text.text--accent-2{color:#ff0!important}.yellow--text.text--accent-2 input,.yellow--text.text--accent-2 textarea{caret-color:#ff0!important}.yellow.accent-3{border-color:#ffea00!important}.yellow.accent-3,.yellow.accent-3--after:after{background-color:#ffea00!important}.yellow--text.text--accent-3{color:#ffea00!important}.yellow--text.text--accent-3 input,.yellow--text.text--accent-3 textarea{caret-color:#ffea00!important}.yellow.accent-4{border-color:#ffd600!important}.yellow.accent-4,.yellow.accent-4--after:after{background-color:#ffd600!important}.yellow--text.text--accent-4{color:#ffd600!important}.yellow--text.text--accent-4 input,.yellow--text.text--accent-4 textarea{caret-color:#ffd600!important}.amber{background-color:#ffc107!important;border-color:#ffc107!important}.amber--text{color:#ffc107!important}.amber--text input,.amber--text textarea{caret-color:#ffc107!important}.amber--after:after{background:#ffc107!important}.amber.lighten-5{border-color:#fff8e1!important}.amber.lighten-5,.amber.lighten-5--after:after{background-color:#fff8e1!important}.amber--text.text--lighten-5{color:#fff8e1!important}.amber--text.text--lighten-5 input,.amber--text.text--lighten-5 textarea{caret-color:#fff8e1!important}.amber.lighten-4{border-color:#ffecb3!important}.amber.lighten-4,.amber.lighten-4--after:after{background-color:#ffecb3!important}.amber--text.text--lighten-4{color:#ffecb3!important}.amber--text.text--lighten-4 input,.amber--text.text--lighten-4 textarea{caret-color:#ffecb3!important}.amber.lighten-3{border-color:#ffe082!important}.amber.lighten-3,.amber.lighten-3--after:after{background-color:#ffe082!important}.amber--text.text--lighten-3{color:#ffe082!important}.amber--text.text--lighten-3 input,.amber--text.text--lighten-3 textarea{caret-color:#ffe082!important}.amber.lighten-2{border-color:#ffd54f!important}.amber.lighten-2,.amber.lighten-2--after:after{background-color:#ffd54f!important}.amber--text.text--lighten-2{color:#ffd54f!important}.amber--text.text--lighten-2 input,.amber--text.text--lighten-2 textarea{caret-color:#ffd54f!important}.amber.lighten-1{border-color:#ffca28!important}.amber.lighten-1,.amber.lighten-1--after:after{background-color:#ffca28!important}.amber--text.text--lighten-1{color:#ffca28!important}.amber--text.text--lighten-1 input,.amber--text.text--lighten-1 textarea{caret-color:#ffca28!important}.amber.darken-1{border-color:#ffb300!important}.amber.darken-1,.amber.darken-1--after:after{background-color:#ffb300!important}.amber--text.text--darken-1{color:#ffb300!important}.amber--text.text--darken-1 input,.amber--text.text--darken-1 textarea{caret-color:#ffb300!important}.amber.darken-2{border-color:#ffa000!important}.amber.darken-2,.amber.darken-2--after:after{background-color:#ffa000!important}.amber--text.text--darken-2{color:#ffa000!important}.amber--text.text--darken-2 input,.amber--text.text--darken-2 textarea{caret-color:#ffa000!important}.amber.darken-3{border-color:#ff8f00!important}.amber.darken-3,.amber.darken-3--after:after{background-color:#ff8f00!important}.amber--text.text--darken-3{color:#ff8f00!important}.amber--text.text--darken-3 input,.amber--text.text--darken-3 textarea{caret-color:#ff8f00!important}.amber.darken-4{border-color:#ff6f00!important}.amber.darken-4,.amber.darken-4--after:after{background-color:#ff6f00!important}.amber--text.text--darken-4{color:#ff6f00!important}.amber--text.text--darken-4 input,.amber--text.text--darken-4 textarea{caret-color:#ff6f00!important}.amber.accent-1{border-color:#ffe57f!important}.amber.accent-1,.amber.accent-1--after:after{background-color:#ffe57f!important}.amber--text.text--accent-1{color:#ffe57f!important}.amber--text.text--accent-1 input,.amber--text.text--accent-1 textarea{caret-color:#ffe57f!important}.amber.accent-2{border-color:#ffd740!important}.amber.accent-2,.amber.accent-2--after:after{background-color:#ffd740!important}.amber--text.text--accent-2{color:#ffd740!important}.amber--text.text--accent-2 input,.amber--text.text--accent-2 textarea{caret-color:#ffd740!important}.amber.accent-3{border-color:#ffc400!important}.amber.accent-3,.amber.accent-3--after:after{background-color:#ffc400!important}.amber--text.text--accent-3{color:#ffc400!important}.amber--text.text--accent-3 input,.amber--text.text--accent-3 textarea{caret-color:#ffc400!important}.amber.accent-4{border-color:#ffab00!important}.amber.accent-4,.amber.accent-4--after:after{background-color:#ffab00!important}.amber--text.text--accent-4{color:#ffab00!important}.amber--text.text--accent-4 input,.amber--text.text--accent-4 textarea{caret-color:#ffab00!important}.orange{background-color:#ff9800!important;border-color:#ff9800!important}.orange--text{color:#ff9800!important}.orange--text input,.orange--text textarea{caret-color:#ff9800!important}.orange--after:after{background:#ff9800!important}.orange.lighten-5{border-color:#fff3e0!important}.orange.lighten-5,.orange.lighten-5--after:after{background-color:#fff3e0!important}.orange--text.text--lighten-5{color:#fff3e0!important}.orange--text.text--lighten-5 input,.orange--text.text--lighten-5 textarea{caret-color:#fff3e0!important}.orange.lighten-4{border-color:#ffe0b2!important}.orange.lighten-4,.orange.lighten-4--after:after{background-color:#ffe0b2!important}.orange--text.text--lighten-4{color:#ffe0b2!important}.orange--text.text--lighten-4 input,.orange--text.text--lighten-4 textarea{caret-color:#ffe0b2!important}.orange.lighten-3{border-color:#ffcc80!important}.orange.lighten-3,.orange.lighten-3--after:after{background-color:#ffcc80!important}.orange--text.text--lighten-3{color:#ffcc80!important}.orange--text.text--lighten-3 input,.orange--text.text--lighten-3 textarea{caret-color:#ffcc80!important}.orange.lighten-2{border-color:#ffb74d!important}.orange.lighten-2,.orange.lighten-2--after:after{background-color:#ffb74d!important}.orange--text.text--lighten-2{color:#ffb74d!important}.orange--text.text--lighten-2 input,.orange--text.text--lighten-2 textarea{caret-color:#ffb74d!important}.orange.lighten-1{border-color:#ffa726!important}.orange.lighten-1,.orange.lighten-1--after:after{background-color:#ffa726!important}.orange--text.text--lighten-1{color:#ffa726!important}.orange--text.text--lighten-1 input,.orange--text.text--lighten-1 textarea{caret-color:#ffa726!important}.orange.darken-1{border-color:#fb8c00!important}.orange.darken-1,.orange.darken-1--after:after{background-color:#fb8c00!important}.orange--text.text--darken-1{color:#fb8c00!important}.orange--text.text--darken-1 input,.orange--text.text--darken-1 textarea{caret-color:#fb8c00!important}.orange.darken-2{border-color:#f57c00!important}.orange.darken-2,.orange.darken-2--after:after{background-color:#f57c00!important}.orange--text.text--darken-2{color:#f57c00!important}.orange--text.text--darken-2 input,.orange--text.text--darken-2 textarea{caret-color:#f57c00!important}.orange.darken-3{border-color:#ef6c00!important}.orange.darken-3,.orange.darken-3--after:after{background-color:#ef6c00!important}.orange--text.text--darken-3{color:#ef6c00!important}.orange--text.text--darken-3 input,.orange--text.text--darken-3 textarea{caret-color:#ef6c00!important}.orange.darken-4{border-color:#e65100!important}.orange.darken-4,.orange.darken-4--after:after{background-color:#e65100!important}.orange--text.text--darken-4{color:#e65100!important}.orange--text.text--darken-4 input,.orange--text.text--darken-4 textarea{caret-color:#e65100!important}.orange.accent-1{border-color:#ffd180!important}.orange.accent-1,.orange.accent-1--after:after{background-color:#ffd180!important}.orange--text.text--accent-1{color:#ffd180!important}.orange--text.text--accent-1 input,.orange--text.text--accent-1 textarea{caret-color:#ffd180!important}.orange.accent-2{border-color:#ffab40!important}.orange.accent-2,.orange.accent-2--after:after{background-color:#ffab40!important}.orange--text.text--accent-2{color:#ffab40!important}.orange--text.text--accent-2 input,.orange--text.text--accent-2 textarea{caret-color:#ffab40!important}.orange.accent-3{border-color:#ff9100!important}.orange.accent-3,.orange.accent-3--after:after{background-color:#ff9100!important}.orange--text.text--accent-3{color:#ff9100!important}.orange--text.text--accent-3 input,.orange--text.text--accent-3 textarea{caret-color:#ff9100!important}.orange.accent-4{border-color:#ff6d00!important}.orange.accent-4,.orange.accent-4--after:after{background-color:#ff6d00!important}.orange--text.text--accent-4{color:#ff6d00!important}.orange--text.text--accent-4 input,.orange--text.text--accent-4 textarea{caret-color:#ff6d00!important}.deep-orange{background-color:#ff5722!important;border-color:#ff5722!important}.deep-orange--text{color:#ff5722!important}.deep-orange--text input,.deep-orange--text textarea{caret-color:#ff5722!important}.deep-orange--after:after{background:#ff5722!important}.deep-orange.lighten-5{border-color:#fbe9e7!important}.deep-orange.lighten-5,.deep-orange.lighten-5--after:after{background-color:#fbe9e7!important}.deep-orange--text.text--lighten-5{color:#fbe9e7!important}.deep-orange--text.text--lighten-5 input,.deep-orange--text.text--lighten-5 textarea{caret-color:#fbe9e7!important}.deep-orange.lighten-4{border-color:#ffccbc!important}.deep-orange.lighten-4,.deep-orange.lighten-4--after:after{background-color:#ffccbc!important}.deep-orange--text.text--lighten-4{color:#ffccbc!important}.deep-orange--text.text--lighten-4 input,.deep-orange--text.text--lighten-4 textarea{caret-color:#ffccbc!important}.deep-orange.lighten-3{border-color:#ffab91!important}.deep-orange.lighten-3,.deep-orange.lighten-3--after:after{background-color:#ffab91!important}.deep-orange--text.text--lighten-3{color:#ffab91!important}.deep-orange--text.text--lighten-3 input,.deep-orange--text.text--lighten-3 textarea{caret-color:#ffab91!important}.deep-orange.lighten-2{border-color:#ff8a65!important}.deep-orange.lighten-2,.deep-orange.lighten-2--after:after{background-color:#ff8a65!important}.deep-orange--text.text--lighten-2{color:#ff8a65!important}.deep-orange--text.text--lighten-2 input,.deep-orange--text.text--lighten-2 textarea{caret-color:#ff8a65!important}.deep-orange.lighten-1{border-color:#ff7043!important}.deep-orange.lighten-1,.deep-orange.lighten-1--after:after{background-color:#ff7043!important}.deep-orange--text.text--lighten-1{color:#ff7043!important}.deep-orange--text.text--lighten-1 input,.deep-orange--text.text--lighten-1 textarea{caret-color:#ff7043!important}.deep-orange.darken-1{border-color:#f4511e!important}.deep-orange.darken-1,.deep-orange.darken-1--after:after{background-color:#f4511e!important}.deep-orange--text.text--darken-1{color:#f4511e!important}.deep-orange--text.text--darken-1 input,.deep-orange--text.text--darken-1 textarea{caret-color:#f4511e!important}.deep-orange.darken-2{border-color:#e64a19!important}.deep-orange.darken-2,.deep-orange.darken-2--after:after{background-color:#e64a19!important}.deep-orange--text.text--darken-2{color:#e64a19!important}.deep-orange--text.text--darken-2 input,.deep-orange--text.text--darken-2 textarea{caret-color:#e64a19!important}.deep-orange.darken-3{border-color:#d84315!important}.deep-orange.darken-3,.deep-orange.darken-3--after:after{background-color:#d84315!important}.deep-orange--text.text--darken-3{color:#d84315!important}.deep-orange--text.text--darken-3 input,.deep-orange--text.text--darken-3 textarea{caret-color:#d84315!important}.deep-orange.darken-4{border-color:#bf360c!important}.deep-orange.darken-4,.deep-orange.darken-4--after:after{background-color:#bf360c!important}.deep-orange--text.text--darken-4{color:#bf360c!important}.deep-orange--text.text--darken-4 input,.deep-orange--text.text--darken-4 textarea{caret-color:#bf360c!important}.deep-orange.accent-1{border-color:#ff9e80!important}.deep-orange.accent-1,.deep-orange.accent-1--after:after{background-color:#ff9e80!important}.deep-orange--text.text--accent-1{color:#ff9e80!important}.deep-orange--text.text--accent-1 input,.deep-orange--text.text--accent-1 textarea{caret-color:#ff9e80!important}.deep-orange.accent-2{border-color:#ff6e40!important}.deep-orange.accent-2,.deep-orange.accent-2--after:after{background-color:#ff6e40!important}.deep-orange--text.text--accent-2{color:#ff6e40!important}.deep-orange--text.text--accent-2 input,.deep-orange--text.text--accent-2 textarea{caret-color:#ff6e40!important}.deep-orange.accent-3{border-color:#ff3d00!important}.deep-orange.accent-3,.deep-orange.accent-3--after:after{background-color:#ff3d00!important}.deep-orange--text.text--accent-3{color:#ff3d00!important}.deep-orange--text.text--accent-3 input,.deep-orange--text.text--accent-3 textarea{caret-color:#ff3d00!important}.deep-orange.accent-4{border-color:#dd2c00!important}.deep-orange.accent-4,.deep-orange.accent-4--after:after{background-color:#dd2c00!important}.deep-orange--text.text--accent-4{color:#dd2c00!important}.deep-orange--text.text--accent-4 input,.deep-orange--text.text--accent-4 textarea{caret-color:#dd2c00!important}.brown{background-color:#795548!important;border-color:#795548!important}.brown--text{color:#795548!important}.brown--text input,.brown--text textarea{caret-color:#795548!important}.brown--after:after{background:#795548!important}.brown.lighten-5{border-color:#efebe9!important}.brown.lighten-5,.brown.lighten-5--after:after{background-color:#efebe9!important}.brown--text.text--lighten-5{color:#efebe9!important}.brown--text.text--lighten-5 input,.brown--text.text--lighten-5 textarea{caret-color:#efebe9!important}.brown.lighten-4{border-color:#d7ccc8!important}.brown.lighten-4,.brown.lighten-4--after:after{background-color:#d7ccc8!important}.brown--text.text--lighten-4{color:#d7ccc8!important}.brown--text.text--lighten-4 input,.brown--text.text--lighten-4 textarea{caret-color:#d7ccc8!important}.brown.lighten-3{border-color:#bcaaa4!important}.brown.lighten-3,.brown.lighten-3--after:after{background-color:#bcaaa4!important}.brown--text.text--lighten-3{color:#bcaaa4!important}.brown--text.text--lighten-3 input,.brown--text.text--lighten-3 textarea{caret-color:#bcaaa4!important}.brown.lighten-2{border-color:#a1887f!important}.brown.lighten-2,.brown.lighten-2--after:after{background-color:#a1887f!important}.brown--text.text--lighten-2{color:#a1887f!important}.brown--text.text--lighten-2 input,.brown--text.text--lighten-2 textarea{caret-color:#a1887f!important}.brown.lighten-1{border-color:#8d6e63!important}.brown.lighten-1,.brown.lighten-1--after:after{background-color:#8d6e63!important}.brown--text.text--lighten-1{color:#8d6e63!important}.brown--text.text--lighten-1 input,.brown--text.text--lighten-1 textarea{caret-color:#8d6e63!important}.brown.darken-1{border-color:#6d4c41!important}.brown.darken-1,.brown.darken-1--after:after{background-color:#6d4c41!important}.brown--text.text--darken-1{color:#6d4c41!important}.brown--text.text--darken-1 input,.brown--text.text--darken-1 textarea{caret-color:#6d4c41!important}.brown.darken-2{border-color:#5d4037!important}.brown.darken-2,.brown.darken-2--after:after{background-color:#5d4037!important}.brown--text.text--darken-2{color:#5d4037!important}.brown--text.text--darken-2 input,.brown--text.text--darken-2 textarea{caret-color:#5d4037!important}.brown.darken-3{border-color:#4e342e!important}.brown.darken-3,.brown.darken-3--after:after{background-color:#4e342e!important}.brown--text.text--darken-3{color:#4e342e!important}.brown--text.text--darken-3 input,.brown--text.text--darken-3 textarea{caret-color:#4e342e!important}.brown.darken-4{border-color:#3e2723!important}.brown.darken-4,.brown.darken-4--after:after{background-color:#3e2723!important}.brown--text.text--darken-4{color:#3e2723!important}.brown--text.text--darken-4 input,.brown--text.text--darken-4 textarea{caret-color:#3e2723!important}.blue-grey{background-color:#607d8b!important;border-color:#607d8b!important}.blue-grey--text{color:#607d8b!important}.blue-grey--text input,.blue-grey--text textarea{caret-color:#607d8b!important}.blue-grey--after:after{background:#607d8b!important}.blue-grey.lighten-5{border-color:#eceff1!important}.blue-grey.lighten-5,.blue-grey.lighten-5--after:after{background-color:#eceff1!important}.blue-grey--text.text--lighten-5{color:#eceff1!important}.blue-grey--text.text--lighten-5 input,.blue-grey--text.text--lighten-5 textarea{caret-color:#eceff1!important}.blue-grey.lighten-4{border-color:#cfd8dc!important}.blue-grey.lighten-4,.blue-grey.lighten-4--after:after{background-color:#cfd8dc!important}.blue-grey--text.text--lighten-4{color:#cfd8dc!important}.blue-grey--text.text--lighten-4 input,.blue-grey--text.text--lighten-4 textarea{caret-color:#cfd8dc!important}.blue-grey.lighten-3{border-color:#b0bec5!important}.blue-grey.lighten-3,.blue-grey.lighten-3--after:after{background-color:#b0bec5!important}.blue-grey--text.text--lighten-3{color:#b0bec5!important}.blue-grey--text.text--lighten-3 input,.blue-grey--text.text--lighten-3 textarea{caret-color:#b0bec5!important}.blue-grey.lighten-2{border-color:#90a4ae!important}.blue-grey.lighten-2,.blue-grey.lighten-2--after:after{background-color:#90a4ae!important}.blue-grey--text.text--lighten-2{color:#90a4ae!important}.blue-grey--text.text--lighten-2 input,.blue-grey--text.text--lighten-2 textarea{caret-color:#90a4ae!important}.blue-grey.lighten-1{border-color:#78909c!important}.blue-grey.lighten-1,.blue-grey.lighten-1--after:after{background-color:#78909c!important}.blue-grey--text.text--lighten-1{color:#78909c!important}.blue-grey--text.text--lighten-1 input,.blue-grey--text.text--lighten-1 textarea{caret-color:#78909c!important}.blue-grey.darken-1{border-color:#546e7a!important}.blue-grey.darken-1,.blue-grey.darken-1--after:after{background-color:#546e7a!important}.blue-grey--text.text--darken-1{color:#546e7a!important}.blue-grey--text.text--darken-1 input,.blue-grey--text.text--darken-1 textarea{caret-color:#546e7a!important}.blue-grey.darken-2{border-color:#455a64!important}.blue-grey.darken-2,.blue-grey.darken-2--after:after{background-color:#455a64!important}.blue-grey--text.text--darken-2{color:#455a64!important}.blue-grey--text.text--darken-2 input,.blue-grey--text.text--darken-2 textarea{caret-color:#455a64!important}.blue-grey.darken-3{border-color:#37474f!important}.blue-grey.darken-3,.blue-grey.darken-3--after:after{background-color:#37474f!important}.blue-grey--text.text--darken-3{color:#37474f!important}.blue-grey--text.text--darken-3 input,.blue-grey--text.text--darken-3 textarea{caret-color:#37474f!important}.blue-grey.darken-4{border-color:#263238!important}.blue-grey.darken-4,.blue-grey.darken-4--after:after{background-color:#263238!important}.blue-grey--text.text--darken-4{color:#263238!important}.blue-grey--text.text--darken-4 input,.blue-grey--text.text--darken-4 textarea{caret-color:#263238!important}.grey{background-color:#9e9e9e!important;border-color:#9e9e9e!important}.grey--text{color:#9e9e9e!important}.grey--text input,.grey--text textarea{caret-color:#9e9e9e!important}.grey--after:after{background:#9e9e9e!important}.grey.lighten-5{border-color:#fafafa!important}.grey.lighten-5,.grey.lighten-5--after:after{background-color:#fafafa!important}.grey--text.text--lighten-5{color:#fafafa!important}.grey--text.text--lighten-5 input,.grey--text.text--lighten-5 textarea{caret-color:#fafafa!important}.grey.lighten-4{border-color:#f5f5f5!important}.grey.lighten-4,.grey.lighten-4--after:after{background-color:#f5f5f5!important}.grey--text.text--lighten-4{color:#f5f5f5!important}.grey--text.text--lighten-4 input,.grey--text.text--lighten-4 textarea{caret-color:#f5f5f5!important}.grey.lighten-3{border-color:#eee!important}.grey.lighten-3,.grey.lighten-3--after:after{background-color:#eee!important}.grey--text.text--lighten-3{color:#eee!important}.grey--text.text--lighten-3 input,.grey--text.text--lighten-3 textarea{caret-color:#eee!important}.grey.lighten-2{border-color:#e0e0e0!important}.grey.lighten-2,.grey.lighten-2--after:after{background-color:#e0e0e0!important}.grey--text.text--lighten-2{color:#e0e0e0!important}.grey--text.text--lighten-2 input,.grey--text.text--lighten-2 textarea{caret-color:#e0e0e0!important}.grey.lighten-1{border-color:#bdbdbd!important}.grey.lighten-1,.grey.lighten-1--after:after{background-color:#bdbdbd!important}.grey--text.text--lighten-1{color:#bdbdbd!important}.grey--text.text--lighten-1 input,.grey--text.text--lighten-1 textarea{caret-color:#bdbdbd!important}.grey.darken-1{border-color:#757575!important}.grey.darken-1,.grey.darken-1--after:after{background-color:#757575!important}.grey--text.text--darken-1{color:#757575!important}.grey--text.text--darken-1 input,.grey--text.text--darken-1 textarea{caret-color:#757575!important}.grey.darken-2{border-color:#616161!important}.grey.darken-2,.grey.darken-2--after:after{background-color:#616161!important}.grey--text.text--darken-2{color:#616161!important}.grey--text.text--darken-2 input,.grey--text.text--darken-2 textarea{caret-color:#616161!important}.grey.darken-3{border-color:#424242!important}.grey.darken-3,.grey.darken-3--after:after{background-color:#424242!important}.grey--text.text--darken-3{color:#424242!important}.grey--text.text--darken-3 input,.grey--text.text--darken-3 textarea{caret-color:#424242!important}.grey.darken-4{border-color:#212121!important}.grey.darken-4,.grey.darken-4--after:after{background-color:#212121!important}.grey--text.text--darken-4{color:#212121!important}.grey--text.text--darken-4 input,.grey--text.text--darken-4 textarea{caret-color:#212121!important}.shades.black{border-color:#000!important}.shades.black,.shades.black--after:after{background-color:#000!important}.shades--text.text--black{color:#000!important}.shades--text.text--black input,.shades--text.text--black textarea{caret-color:#000!important}.shades.white{border-color:#fff!important}.shades.white,.shades.white--after:after{background-color:#fff!important}.shades--text.text--white{color:#fff!important}.shades--text.text--white input,.shades--text.text--white textarea{caret-color:#fff!important}.shades.transparent{border-color:transparent!important}.shades.transparent,.shades.transparent--after:after{background-color:transparent!important}.shades--text.text--transparent{color:transparent!important}.shades--text.text--transparent input,.shades--text.text--transparent textarea{caret-color:transparent!important}html{box-sizing:border-box;overflow-y:scroll;-webkit-text-size-adjust:100%}*,:after,:before{box-sizing:inherit}:after,:before{text-decoration:inherit;vertical-align:inherit}*{background-repeat:no-repeat;padding:0;margin:0}audio:not([controls]){display:none;height:0}hr{overflow:visible}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}summary{display:list-item}small{font-size:80%}[hidden],template{display:none}abbr[title]{border-bottom:1px dotted;text-decoration:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}code,kbd,pre,samp{font-family:monospace,monospace}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}input{border-radius:0}[role=button],[type=button],[type=reset],[type=submit],button{cursor:pointer}[disabled]{cursor:default}[type=number]{width:auto}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}textarea{overflow:auto;resize:vertical}button,input,optgroup,select,textarea{font:inherit}optgroup{font-weight:700}button{overflow:visible}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:0;padding:0}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button:-moz-focusring{outline:0;border:0}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}button,select{text-transform:none}button,input,select,textarea{background-color:transparent;border-style:none;color:inherit}select{-moz-appearance:none;-webkit-appearance:none}select::-ms-expand{display:none}select::-ms-value{color:currentColor}legend{border:0;color:inherit;display:table;max-width:100%;white-space:normal}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}img{border-style:none}progress{vertical-align:baseline}svg:not(:root){overflow:hidden}audio,canvas,progress,video{display:inline-block}[aria-busy=true]{cursor:progress}[aria-controls]{cursor:pointer}[aria-disabled]{cursor:default}::-moz-selection{background-color:#b3d4fc;color:#000;text-shadow:none}::selection{background-color:#b3d4fc;color:#000;text-shadow:none}.bottom-sheet-transition-enter,.bottom-sheet-transition-leave-to{-webkit-transform:translateY(100%);transform:translateY(100%)}.carousel-transition-enter{-webkit-transform:translate(100%);transform:translate(100%)}.carousel-transition-leave,.carousel-transition-leave-to{position:absolute;top:0}.carousel-reverse-transition-enter,.carousel-transition-leave,.carousel-transition-leave-to{-webkit-transform:translate(-100%);transform:translate(-100%)}.carousel-reverse-transition-leave,.carousel-reverse-transition-leave-to{position:absolute;top:0;-webkit-transform:translate(100%);transform:translate(100%)}.dialog-transition-enter,.dialog-transition-leave-to{-webkit-transform:scale(.5);transform:scale(.5);opacity:0}.dialog-transition-enter-to,.dialog-transition-leave{opacity:1}.dialog-bottom-transition-enter,.dialog-bottom-transition-leave-to{-webkit-transform:translateY(100%);transform:translateY(100%)}.tab-transition-enter{-webkit-transform:translate(100%);transform:translate(100%)}.tab-transition-enter-to{-webkit-transform:translate(0);transform:translate(0)}.tab-transition-leave,.tab-transition-leave-active{position:absolute;top:0}.tab-transition-leave-to{position:absolute}.tab-reverse-transition-enter,.tab-transition-leave-to{-webkit-transform:translate(-100%);transform:translate(-100%)}.tab-reverse-transition-leave,.tab-reverse-transition-leave-to{top:0;position:absolute;-webkit-transform:translate(100%);transform:translate(100%)}.scale-transition-enter-active,.scale-transition-leave-active{transition:.3s cubic-bezier(.25,.8,.5,1)}.scale-transition-enter,.scale-transition-leave,.scale-transition-leave-to{opacity:0;-webkit-transform:scale(0);transform:scale(0)}.slide-y-transition-enter-active,.slide-y-transition-leave-active{transition:.3s cubic-bezier(.25,.8,.5,1)}.slide-y-transition-enter,.slide-y-transition-leave-to{opacity:0;-webkit-transform:translateY(-15px);transform:translateY(-15px)}.slide-y-reverse-transition-enter-active,.slide-y-reverse-transition-leave-active{transition:.3s cubic-bezier(.25,.8,.5,1)}.slide-y-reverse-transition-enter,.slide-y-reverse-transition-leave-to{opacity:0;-webkit-transform:translateY(15px);transform:translateY(15px)}.slide-x-transition-enter-active,.slide-x-transition-leave-active{transition:.3s cubic-bezier(.25,.8,.5,1)}.slide-x-transition-enter,.slide-x-transition-leave-to{opacity:0;-webkit-transform:translateX(-15px);transform:translateX(-15px)}.slide-x-reverse-transition-enter-active,.slide-x-reverse-transition-leave-active{transition:.3s cubic-bezier(.25,.8,.5,1)}.slide-x-reverse-transition-enter,.slide-x-reverse-transition-leave-to{opacity:0;-webkit-transform:translateX(15px);transform:translateX(15px)}.fade-transition-enter-active,.fade-transition-leave-active{transition:.3s cubic-bezier(.25,.8,.5,1)}.fade-transition-enter,.fade-transition-leave-to{opacity:0}.fab-transition-enter-active,.fab-transition-leave-active{transition:.3s cubic-bezier(.25,.8,.5,1)}.fab-transition-enter,.fab-transition-leave-to{-webkit-transform:scale(0) rotate(-45deg);transform:scale(0) rotate(-45deg)}.blockquote{padding:16px 0 16px 24px;font-size:18px;font-weight:300}code,kbd{display:inline-block;border-radius:3px;white-space:pre-wrap;font-size:85%;font-weight:900}code:after,code:before,kbd:after,kbd:before{content:\\\"\\\\A0\\\";letter-spacing:-1px}code{background-color:#f5f5f5;color:#bd4147;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}kbd{background:#424242;color:#fff}html{font-size:14px;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-tap-highlight-color:rgba(0,0,0,0);overflow-x:hidden}.application{font-family:Roboto,sans-serif;line-height:1.5}::-ms-clear,::-ms-reveal{display:none}.browser-list{padding-left:24px}.browser-list--unstyled{list-style-type:none}.display-4{font-size:112px!important;font-weight:300;line-height:1!important;letter-spacing:-.04em!important}.display-3{font-size:56px!important;font-weight:400;line-height:1.35!important;letter-spacing:-.02em!important}.display-2{font-size:45px!important;line-height:48px!important}.display-1,.display-2{font-weight:400;letter-spacing:normal!important}.display-1{font-size:34px!important;line-height:40px!important}.headline{font-size:24px!important;font-weight:400;line-height:32px!important;letter-spacing:normal!important}.title{font-size:20px!important;font-weight:500;line-height:1!important;letter-spacing:.02em!important}.subheading{font-size:16px!important;font-weight:400}.body-2{font-weight:500}.body-1,.body-2{font-size:14px!important}.body-1,.caption{font-weight:400}.caption{font-size:12px!important}p{margin-bottom:16px}@-webkit-keyframes a{59%{margin-left:0}60%,80%{margin-left:2px}70%,90%{margin-left:-2px}}@keyframes a{59%{margin-left:0}60%,80%{margin-left:2px}70%,90%{margin-left:-2px}}.elevation-0{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)!important}.elevation-1{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)!important}.elevation-2{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)!important}.elevation-3{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)!important}.elevation-4{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)!important}.elevation-5{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 5px 8px 0 rgba(0,0,0,.14),0 1px 14px 0 rgba(0,0,0,.12)!important}.elevation-6{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)!important}.elevation-7{box-shadow:0 4px 5px -2px rgba(0,0,0,.2),0 7px 10px 1px rgba(0,0,0,.14),0 2px 16px 1px rgba(0,0,0,.12)!important}.elevation-8{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)!important}.elevation-9{box-shadow:0 5px 6px -3px rgba(0,0,0,.2),0 9px 12px 1px rgba(0,0,0,.14),0 3px 16px 2px rgba(0,0,0,.12)!important}.elevation-10{box-shadow:0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12)!important}.elevation-11{box-shadow:0 6px 7px -4px rgba(0,0,0,.2),0 11px 15px 1px rgba(0,0,0,.14),0 4px 20px 3px rgba(0,0,0,.12)!important}.elevation-12{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)!important}.elevation-13{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12)!important}.elevation-14{box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)!important}.elevation-15{box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12)!important}.elevation-16{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)!important}.elevation-17{box-shadow:0 8px 11px -5px rgba(0,0,0,.2),0 17px 26px 2px rgba(0,0,0,.14),0 6px 32px 5px rgba(0,0,0,.12)!important}.elevation-18{box-shadow:0 9px 11px -5px rgba(0,0,0,.2),0 18px 28px 2px rgba(0,0,0,.14),0 7px 34px 6px rgba(0,0,0,.12)!important}.elevation-19{box-shadow:0 9px 12px -6px rgba(0,0,0,.2),0 19px 29px 2px rgba(0,0,0,.14),0 7px 36px 6px rgba(0,0,0,.12)!important}.elevation-20{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 20px 31px 3px rgba(0,0,0,.14),0 8px 38px 7px rgba(0,0,0,.12)!important}.elevation-21{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 21px 33px 3px rgba(0,0,0,.14),0 8px 40px 7px rgba(0,0,0,.12)!important}.elevation-22{box-shadow:0 10px 14px -6px rgba(0,0,0,.2),0 22px 35px 3px rgba(0,0,0,.14),0 8px 42px 7px rgba(0,0,0,.12)!important}.elevation-23{box-shadow:0 11px 14px -7px rgba(0,0,0,.2),0 23px 36px 3px rgba(0,0,0,.14),0 9px 44px 8px rgba(0,0,0,.12)!important}.elevation-24{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)!important}.overflow-hidden{overflow:hidden}.overflow-x-hidden{overflow-x:hidden}.overflow-y-hidden{overflow-y:hidden}.right{float:right!important}.left{float:left!important}.mt-0{margin-top:0!important}.mr-0{margin-right:0!important}.mb-0{margin-bottom:0!important}.ml-0,.mx-0{margin-left:0!important}.mx-0{margin-right:0!important}.my-0{margin-top:0!important;margin-bottom:0!important}.ma-0{margin:0!important}.pt-0{padding-top:0!important}.pr-0{padding-right:0!important}.pb-0{padding-bottom:0!important}.pl-0,.px-0{padding-left:0!important}.px-0{padding-right:0!important}.py-0{padding-top:0!important;padding-bottom:0!important}.pa-0{padding:0!important}.mt-1{margin-top:4px!important}.mr-1{margin-right:4px!important}.mb-1{margin-bottom:4px!important}.ml-1,.mx-1{margin-left:4px!important}.mx-1{margin-right:4px!important}.my-1{margin-top:4px!important;margin-bottom:4px!important}.ma-1{margin:4px!important}.pt-1{padding-top:4px!important}.pr-1{padding-right:4px!important}.pb-1{padding-bottom:4px!important}.pl-1,.px-1{padding-left:4px!important}.px-1{padding-right:4px!important}.py-1{padding-top:4px!important;padding-bottom:4px!important}.pa-1{padding:4px!important}.mt-2{margin-top:8px!important}.mr-2{margin-right:8px!important}.mb-2{margin-bottom:8px!important}.ml-2,.mx-2{margin-left:8px!important}.mx-2{margin-right:8px!important}.my-2{margin-top:8px!important;margin-bottom:8px!important}.ma-2{margin:8px!important}.pt-2{padding-top:8px!important}.pr-2{padding-right:8px!important}.pb-2{padding-bottom:8px!important}.pl-2,.px-2{padding-left:8px!important}.px-2{padding-right:8px!important}.py-2{padding-top:8px!important;padding-bottom:8px!important}.pa-2{padding:8px!important}.mt-3{margin-top:16px!important}.mr-3{margin-right:16px!important}.mb-3{margin-bottom:16px!important}.ml-3,.mx-3{margin-left:16px!important}.mx-3{margin-right:16px!important}.my-3{margin-top:16px!important;margin-bottom:16px!important}.ma-3{margin:16px!important}.pt-3{padding-top:16px!important}.pr-3{padding-right:16px!important}.pb-3{padding-bottom:16px!important}.pl-3,.px-3{padding-left:16px!important}.px-3{padding-right:16px!important}.py-3{padding-top:16px!important;padding-bottom:16px!important}.pa-3{padding:16px!important}.mt-4{margin-top:24px!important}.mr-4{margin-right:24px!important}.mb-4{margin-bottom:24px!important}.ml-4,.mx-4{margin-left:24px!important}.mx-4{margin-right:24px!important}.my-4{margin-top:24px!important;margin-bottom:24px!important}.ma-4{margin:24px!important}.pt-4{padding-top:24px!important}.pr-4{padding-right:24px!important}.pb-4{padding-bottom:24px!important}.pl-4,.px-4{padding-left:24px!important}.px-4{padding-right:24px!important}.py-4{padding-top:24px!important;padding-bottom:24px!important}.pa-4{padding:24px!important}.mt-5{margin-top:48px!important}.mr-5{margin-right:48px!important}.mb-5{margin-bottom:48px!important}.ml-5,.mx-5{margin-left:48px!important}.mx-5{margin-right:48px!important}.my-5{margin-top:48px!important;margin-bottom:48px!important}.ma-5{margin:48px!important}.pt-5{padding-top:48px!important}.pr-5{padding-right:48px!important}.pb-5{padding-bottom:48px!important}.pl-5,.px-5{padding-left:48px!important}.px-5{padding-right:48px!important}.py-5{padding-top:48px!important;padding-bottom:48px!important}.pa-5{padding:48px!important}@media screen{[hidden~=screen]{display:inherit}[hidden~=screen]:not(:active):not(:focus):not(:target){position:absolute!important;clip:rect(0 0 0 0)!important}}@media only screen and (max-width:599px){.hidden-xs-only{display:none!important}}@media only screen and (min-width:600px) and (max-width:959px){.hidden-sm-only{display:none!important}}@media only screen and (max-width:959px){.hidden-sm-and-down{display:none!important}.tooltip .tooltip__content{padding:10px 16px}}@media only screen and (min-width:600px){.hidden-sm-and-up{display:none!important}}@media only screen and (min-width:960px) and (max-width:1263px){.hidden-md-only{display:none!important}}@media only screen and (max-width:1263px){.hidden-md-and-down{display:none!important}}@media only screen and (min-width:960px){.hidden-md-and-up{display:none!important}}@media only screen and (min-width:1264px) and (max-width:1903px){.hidden-lg-only{display:none!important}}@media only screen and (max-width:1903px){.hidden-lg-and-down{display:none!important}}@media only screen and (min-width:1264px){.hidden-lg-and-up{display:none!important}}@media only screen and (min-width:1904px){.hidden-xl-only{display:none!important}}@media (min-width:0){.text-xs-left{text-align:left!important}.text-xs-center{text-align:center!important}.text-xs-right{text-align:right!important}.text-xs-justify{text-align:justify!important}}@media (min-width:600px){.text-sm-left{text-align:left!important}.text-sm-center{text-align:center!important}.text-sm-right{text-align:right!important}.text-sm-justify{text-align:justify!important}}@media (min-width:960px){.text-md-left{text-align:left!important}.text-md-center{text-align:center!important}.text-md-right{text-align:right!important}.text-md-justify{text-align:justify!important}}@media (min-width:1264px){.text-lg-left{text-align:left!important}.text-lg-center{text-align:center!important}.text-lg-right{text-align:right!important}.text-lg-justify{text-align:justify!important}}@media (min-width:1904px){.text-xl-left{text-align:left!important}.text-xl-center{text-align:center!important}.text-xl-right{text-align:right!important}.text-xl-justify{text-align:justify!important}}.application{display:-webkit-box;display:-ms-flexbox;display:flex}.application--wrap{-ms-flex:1 1 auto;flex:1 1 auto;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-height:100vh;max-width:100%;position:relative}.application--wrap,.application--wrap>main:not(.content){-webkit-box-flex:1;display:-webkit-box;display:-ms-flexbox;display:flex}.application--wrap>main:not(.content){-ms-flex:1 0 auto;flex:1 0 auto}.application.theme--light{background:#fafafa;color:rgba(0,0,0,.87)}.application.theme--light a{cursor:pointer}.application.theme--dark{background:#303030;color:#fff}.application.theme--dark a{cursor:pointer}@-moz-document url-prefix(){@media print{.application,.application--wrap{display:block}}}.alert{border-radius:0;border-width:4px 0 0;border-style:solid;color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;font-size:14px;margin:4px auto;padding:16px;position:relative;transition:.3s cubic-bezier(.25,.8,.5,1)}.alert .alert__icon.icon,.alert__dismissible .icon{-ms-flex-item-align:center;align-self:center;color:rgba(0,0,0,.3);font-size:24px}.alert--outline .icon{color:inherit!important}.alert__icon{margin-right:16px}.alert__dismissible{-ms-flex-item-align:start;align-self:flex-start;margin-left:16px;margin-right:0;text-decoration:none;transition:.3s cubic-bezier(.25,.8,.5,1)}.alert__dismissible:hover{color:rgba(26,26,26,.3)}.alert--no-icon .alert__icon{display:none}.alert>div{-ms-flex-item-align:center;align-self:center;-webkit-box-flex:1;-ms-flex:1 1;flex:1 1}.alert.alert{border-color:rgba(0,0,0,.12)!important}.alert.alert--outline{border:1px solid currentColor!important}@media screen and (max-width:600px){.alert__icon{display:none}}.application .theme--light.icon,.theme--light .icon{color:rgba(0,0,0,.54)}.application .theme--light.icon.icon--disabled:not(.input-group__append-icon),.theme--light .icon.icon--disabled:not(.input-group__append-icon){color:rgba(0,0,0,.38)!important}.application .theme--dark.icon,.theme--dark .icon{color:#fff}.application .theme--dark.icon.icon--disabled:not(.input-group__append-icon),.theme--dark .icon.icon--disabled:not(.input-group__append-icon){color:hsla(0,0%,100%,.5)!important}.icon{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:24px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;line-height:1;transition:.3s cubic-bezier(.25,.8,.5,1);vertical-align:middle}.icon.icon--large{font-size:2.5rem}.icon.icon--medium{font-size:2rem}.icon.icon--x-large{font-size:3rem}.icon.icon--disabled{cursor:default}.avatar{-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:50%;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-align:center;vertical-align:middle}.avatar .icon,.avatar img{border-radius:50%;height:inherit;width:inherit}.avatar--tile,.avatar--tile .icon,.avatar--tile img{border-radius:0}.badge{display:inline-block;position:relative}.badge__badge{color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;top:-11px;right:-22px;border-radius:50%;height:22px;width:22px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;transition:.3s cubic-bezier(.25,.8,.5,1)}.badge__badge,.badge__badge .icon{font-size:14px}.badge--overlap .badge__badge{top:-8px;right:-8px}.badge--overlap.badge--left .badge__badge{left:-8px;right:auto}.badge--overlap.badge--bottom .badge__badge{bottom:-8px;top:auto}.badge--left .badge__badge{left:-22px}.badge--bottom .badge__badge{bottom:-11px;top:auto}.bottom-nav{bottom:0;box-shadow:0 3px 14px 2px rgba(0,0,0,.12);display:-webkit-box;display:-ms-flexbox;display:flex;height:56px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:fixed;-webkit-transform:translateY(60px);transform:translateY(60px);transition:all .4s cubic-bezier(.25,.8,.5,1);width:100%;z-index:4}.bottom-nav--absolute{position:absolute}.bottom-nav--active{-webkit-transform:translate(0);transform:translate(0)}.bottom-nav .btn{background:transparent!important;border-radius:0;box-shadow:none!important;font-weight:400;height:100%;margin:0;max-width:168px;min-width:80px;padding:0;text-transform:none;opacity:.5;width:100%}.bottom-nav .btn .btn__content{height:100%;-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;height:56px;font-size:12px;-webkit-transform:scale(1) translate(0);transform:scale(1) translate(0);white-space:nowrap;will-change:font-size}.bottom-nav .btn .btn__content i.icon{color:inherit;transition:all .4s cubic-bezier(.25,.8,.5,1)}.bottom-nav .btn--active{opacity:1}.bottom-nav .btn--active .btn__content{font-size:14px}.bottom-nav .btn--active .btn__content:before{opacity:0}.bottom-nav .btn--active .btn__content .icon{-webkit-transform:none;transform:none}.bottom-nav .btn:not(.btn--active){-webkit-filter:grayscale(100%);filter:grayscale(100%)}.bottom-nav--shift .btn__content{font-size:14px}.bottom-nav--shift .btn__content span{height:21px}.bottom-nav--shift .btn{transition:all .3s;min-width:56px;max-width:96px}.bottom-nav--shift .btn--active{min-width:96px;max-width:168px}.bottom-nav--shift .btn:not(.btn--active) .btn__content .icon{-webkit-transform:scale(1) translateY(10px);transform:scale(1) translateY(10px)}.bottom-nav--shift .btn:not(.btn--active) .btn__content span{color:transparent}.bottom-sheet.dialog{-ms-flex-item-align:end;align-self:flex-end;border-radius:0;-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%;margin:0;min-width:100%;overflow:visible;transition:.4s cubic-bezier(.25,.8,.5,1)}.bottom-sheet.dialog.bottom-sheet--inset{max-width:70%;min-width:0}@media only screen and (max-width:599px){.bottom-sheet.dialog.bottom-sheet--inset{max-width:none}}.dialog{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);border-radius:2px;margin:24px;overflow-y:auto;pointer-events:auto}.dialog,.dialog__content{transition:.3s ease-in-out;width:100%}.dialog__content{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;left:0;pointer-events:none;position:fixed;top:0;z-index:6;outline:none}.dialog:not(.dialog--fullscreen){max-height:90%}.dialog__container{display:inline-block;vertical-align:middle}.dialog--fullscreen{margin:0;height:100%;position:fixed;overflow-y:auto;top:0;left:0}.dialog--fullscreen>.card{min-height:100%;min-width:100%;margin:0!important;padding:0!important}.dialog--scrollable,.dialog--scrollable>.card{display:-webkit-box;display:-ms-flexbox;display:flex}.dialog--scrollable>.card{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.dialog--scrollable>.card>.card__actions,.dialog--scrollable>.card>.card__title{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto}.dialog--scrollable>.card>.card__text{overflow-y:auto;-webkit-backface-visibility:hidden;backface-visibility:hidden}.overlay{position:fixed;top:0;left:0;right:0;bottom:0;pointer-events:none;transition:.5s cubic-bezier(.25,.8,.5,1);z-index:5}.overlay--absolute,.overlay:before{position:absolute}.overlay:before{background-color:#212121;bottom:0;content:\\\"\\\";height:100%;left:0;opacity:0;right:0;top:0;transition:inherit;transition-delay:.15s;width:100%}.overlay--active{pointer-events:auto;-ms-touch-action:none;touch-action:none}.overlay--active:before{opacity:.46}.application .theme--light.breadcrumbs li.breadcrumbs__divider,.application .theme--light.breadcrumbs li .breadcrumbs__item--disabled,.application .theme--light.breadcrumbs li:last-child .breadcrumbs__item,.theme--light .breadcrumbs li.breadcrumbs__divider,.theme--light .breadcrumbs li .breadcrumbs__item--disabled,.theme--light .breadcrumbs li:last-child .breadcrumbs__item{color:rgba(0,0,0,.38)}.application .theme--dark.breadcrumbs li.breadcrumbs__divider,.application .theme--dark.breadcrumbs li .breadcrumbs__item--disabled,.application .theme--dark.breadcrumbs li:last-child .breadcrumbs__item,.theme--dark .breadcrumbs li.breadcrumbs__divider,.theme--dark .breadcrumbs li .breadcrumbs__item--disabled,.theme--dark .breadcrumbs li:last-child .breadcrumbs__item{color:hsla(0,0%,100%,.5)}.breadcrumbs{-ms-flex-align:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto;list-style-type:none;margin:0;padding:18px 12px}.breadcrumbs,.breadcrumbs li{-webkit-box-align:center;align-items:center}.breadcrumbs li{-ms-flex-align:center;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px}.breadcrumbs li .icon{font-size:16px}.breadcrumbs li:last-child a{cursor:default;pointer-events:none}.breadcrumbs li:nth-child(2n){padding:0 12px}.breadcrumbs--large li,.breadcrumbs--large li .icon{font-size:16px}.breadcrumbs__item{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;text-decoration:none;transition:.3s cubic-bezier(.25,.8,.5,1)}.breadcrumbs__item--disabled{pointer-events:none}.ripple__container{border-radius:inherit;width:100%;height:100%;z-index:0;contain:strict}.ripple__animation,.ripple__container{color:inherit;position:absolute;left:0;top:0;overflow:hidden;pointer-events:none}.ripple__animation{border-radius:50%;background:currentColor;opacity:0;transition:.4s cubic-bezier(0,0,.2,1);will-change:transform,opacity}.ripple__animation--enter{transition:none}.ripple__animation--visible{opacity:.15}.application .theme--light.btn,.theme--light .btn{color:rgba(0,0,0,.87)}.application .theme--light.btn.btn--disabled,.application .theme--light.btn.btn--disabled .icon,.theme--light .btn.btn--disabled,.theme--light .btn.btn--disabled .icon{color:rgba(0,0,0,.26)!important}.application .theme--light.btn.btn--disabled:not(.btn--icon):not(.btn--flat),.theme--light .btn.btn--disabled:not(.btn--icon):not(.btn--flat){background-color:rgba(0,0,0,.12)!important}.application .theme--light.btn:not(.btn--icon):not(.btn--flat),.theme--light .btn:not(.btn--icon):not(.btn--flat){background-color:#f5f5f5}.application .theme--dark.btn,.theme--dark .btn{color:#fff}.application .theme--dark.btn.btn--disabled,.application .theme--dark.btn.btn--disabled .icon,.theme--dark .btn.btn--disabled,.theme--dark .btn.btn--disabled .icon{color:hsla(0,0%,100%,.3)!important}.application .theme--dark.btn.btn--disabled:not(.btn--icon):not(.btn--flat),.theme--dark .btn.btn--disabled:not(.btn--icon):not(.btn--flat){background-color:hsla(0,0%,100%,.12)!important}.application .theme--dark.btn:not(.btn--icon):not(.btn--flat),.theme--dark .btn:not(.btn--icon):not(.btn--flat){background-color:#212121}.btn{-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:2px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;height:36px;-webkit-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto;font-size:14px;font-weight:500;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin:6px 8px;min-width:88px;outline:0;text-transform:uppercase;text-decoration:none;transition:.3s cubic-bezier(.25,.8,.5,1),color 1ms;position:relative;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.btn__content:before{border-radius:inherit;color:inherit;content:\\\"\\\";position:absolute;left:0;top:0;height:100%;opacity:.12;transition:.3s cubic-bezier(.25,.8,.5,1);width:100%}.btn--active .btn__content:before,.btn:focus .btn__content:before,.btn:hover .btn__content:before{background-color:currentColor}.btn__content{-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:inherit;color:inherit;display:-webkit-box;display:-ms-flexbox;display:flex;height:100%;-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin:0 auto;padding:0 16px;transition:.3s cubic-bezier(.25,.8,.5,1);white-space:nowrap}.btn .btn__content .icon{color:inherit}.btn--flat{background-color:transparent!important;box-shadow:none!important}.btn:not(.btn--depressed){will-change:box-shadow;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.btn:not(.btn--depressed):active{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.btn--icon{background:transparent;box-shadow:none!important;border-radius:50%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:36px;width:36px;min-width:0}.btn--icon .btn__content{padding:0}.btn--icon .btn__content:before{border-radius:50%}.btn--icon.btn--small{width:28px}.btn--icon.btn--small .btn__content{height:28px}.btn--icon.btn--large{width:44px}.btn--icon.btn--large .btn__content{height:44px}.btn--floating{border-radius:50%;min-width:0;height:56px;width:56px;padding:0;box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.btn--floating.btn--absolute,.btn--floating.btn--fixed{z-index:4}.btn--floating:active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.btn--floating .btn__content{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;margin:0;padding:0}.btn--floating:after{border-radius:50%}.btn--floating .btn__content :not(:only-child){transition:.3s cubic-bezier(.25,.8,.5,1)}.btn--floating .btn__content :not(:only-child):last-child{opacity:0;position:absolute;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);left:calc(50% - 12px);top:calc(50% - 12px)}.btn--floating.btn--active .btn__content :not(:only-child):first-child{opacity:0;-webkit-transform:rotate(45deg);transform:rotate(45deg);left:-1150%;top:-1150%}.btn--floating.btn--active .btn__content :not(:only-child):last-child{opacity:1;-webkit-transform:none;transform:none}.btn--floating .icon{height:24px;width:24px}.btn--floating.btn--small{height:40px;width:40px}.btn--floating.btn--small .icon{font-size:18px;height:18px;width:18px}.btn--floating.btn--small.btn--floating .icon{left:calc(50% - 9px);top:calc(50% - 9px)}.btn--floating.btn--large{height:72px;width:72px}.btn--floating.btn--large .icon{font-size:30px;height:30px;width:30px}.btn--floating.btn--large.btn--floating .icon{left:calc(50% - 15px);top:calc(50% - 15px)}.btn--reverse .btn__content{-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.btn--reverse.btn--column .btn__content{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.btn--absolute,.btn--fixed{margin:0}.btn.btn--absolute{position:absolute}.btn.btn--fixed{position:fixed}.btn--top:not(.btn--absolute){top:16px}.btn--top.btn--absolute{top:-28px}.btn--top.btn--absolute.btn--small{top:-20px}.btn--top.btn--absolute.btn--large{top:-36px}.btn--bottom:not(.btn--absolute){bottom:16px}.btn--bottom.btn--absolute{bottom:-28px}.btn--bottom.btn--absolute.btn--small{bottom:-20px}.btn--bottom.btn--absolute.btn--large{bottom:-36px}.btn--left{left:16px}.btn--right{right:16px}.btn.btn--disabled{box-shadow:none!important;pointer-events:none}.btn--small{font-size:13px;height:28px}.btn--small .btn__content{padding:0 8px}.btn--large{font-size:15px;height:44px}.btn--large .btn__content{padding:0 32px}.btn--loader{pointer-events:none}.btn--loader .btn__content{opacity:0}.btn__loading{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;left:0;position:absolute;top:0;width:100%}.btn__loading .icon--left{margin-right:1rem;line-height:inherit}.btn__loading .icon--right{margin-left:1rem;line-height:inherit}.btn.btn--outline{border:1px solid currentColor;background:transparent!important;box-shadow:none}.btn.btn--outline:hover{box-shadow:none}.btn--block{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1;margin:6px 0;width:100%}.btn--round,.btn--round:after{border-radius:28px}.btn .icon--right{margin-left:16px}.btn .icon--left{margin-right:16px}.btn.error,.btn.info,.btn.primary,.btn.secondary,.btn.success,.btn.warning{color:#fff}.application .theme--light.btn-toggle,.theme--light .btn-toggle{background:#fff}.application .theme--light.btn-toggle .btn,.theme--light .btn-toggle .btn{color:rgba(0,0,0,.87)}.application .theme--light.btn-toggle .btn[data-selected]:not(:last-child):not([data-only-child]),.theme--light .btn-toggle .btn[data-selected]:not(:last-child):not([data-only-child]){border-right-color:rgba(0,0,0,.26)}.application .theme--dark.btn-toggle,.theme--dark .btn-toggle{background:#424242}.application .theme--dark.btn-toggle .btn,.theme--dark .btn-toggle .btn{color:#fff}.application .theme--dark.btn-toggle .btn[data-selected]:not(:last-child):not([data-only-child]),.theme--dark .btn-toggle .btn[data-selected]:not(:last-child):not([data-only-child]){border-right-color:hsla(0,0%,100%,.3)}.btn-toggle{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;border-radius:2px;transition:.3s cubic-bezier(.25,.8,.5,1);will-change:background,box-shadow}.btn-toggle .btn{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;min-width:auto;width:auto;padding:0 8px;margin:0;opacity:.4;border-radius:0}.btn-toggle .btn:not(:last-child){border-right:1px solid transparent}.btn-toggle .btn:after{display:none}.btn-toggle .btn[data-selected]{opacity:1}.btn-toggle .btn__content{padding:0}.btn-toggle .btn span+.icon{font-size:medium;margin-left:10px}.btn-toggle .btn:first-child{border-radius:2px 0 0 2px}.btn-toggle .btn:last-child{border-radius:0 2px 2px 0}.btn-toggle--selected{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.application .theme--light.card,.theme--light .card{background-color:#fff;color:rgba(0,0,0,.87)}.application .theme--dark.card,.theme--dark .card{background-color:#424242;color:#fff}.card{display:block;border-radius:2px;min-width:0;position:relative;text-decoration:none;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.card>:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.card>:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.card--raised{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}.card--tile{border-radius:0}.card--flat{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.card--hover{cursor:pointer;transition:all .4s cubic-bezier(.25,.8,.25,1);transition-property:box-shadow}.card--hover:hover{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.card__title{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:16px}.card__title--primary{padding-top:24px}.card__text{padding:16px;width:100%}.card__media{display:-webkit-box;display:-ms-flexbox;display:flex;overflow:hidden;position:relative}.card__media img{width:100%}.card__media__background{border-radius:inherit;position:absolute;left:0;top:0;width:100%;height:100%}.card__media__content{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;position:relative}.card__actions,.card__media__content{display:-webkit-box;display:-ms-flexbox;display:flex}.card__actions{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:8px 4px}.card__actions .btn,.card__actions>*{margin:0 4px}.carousel{height:500px;width:100%;position:relative;overflow:hidden;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.carousel__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%;height:100%;width:100%;background-size:cover;background-position:50%;transition:.2s ease-out}.carousel__left,.carousel__right{position:absolute;top:50%;z-index:1;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.carousel__left .btn,.carousel__right .btn{color:#fff;margin:0!important;height:auto;width:auto}.carousel__left .btn i,.carousel__right .btn i{font-size:48px}.carousel__left .btn:hover,.carousel__right .btn:hover{background:none}.carousel__left{left:5px}.carousel__right{right:5px}.carousel__controls{background:rgba(0,0,0,.5);-webkit-box-align:center;-ms-flex-align:center;align-items:center;bottom:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;left:0;position:absolute;height:50px;list-style-type:none;width:100%;z-index:1}.carousel__controls__item{color:#fff;margin:0 1rem!important}.carousel__controls__item i{opacity:.5;transition:.3s cubic-bezier(.25,.8,.5,1)}.carousel__controls__item--active i{opacity:1;vertical-align:middle;font-size:2rem!important}.carousel__controls__item:hover{background:none}.carousel__controls__item:hover i{opacity:.8}.application .theme--light.input-group input,.application .theme--light.input-group textarea,.theme--light .input-group input,.theme--light .input-group textarea{color:rgba(0,0,0,.87)}.application .theme--light.input-group input:disabled,.application .theme--light.input-group textarea:disabled,.theme--light .input-group input:disabled,.theme--light .input-group textarea:disabled{color:rgba(0,0,0,.38)}.application .theme--light.input-group:not(.input-group--error) .input-group__messages,.theme--light .input-group:not(.input-group--error) .input-group__messages{color:rgba(0,0,0,.54)}.application .theme--light.input-group.input-group--textarea:not(.input-group--full-width) .input-group__input,.theme--light .input-group.input-group--textarea:not(.input-group--full-width) .input-group__input{border:2px solid rgba(0,0,0,.54)}.application .theme--light.input-group.input-group--dirty .input-group__selections__comma:not(.input-group__selections__comma--active),.theme--light .input-group.input-group--dirty .input-group__selections__comma:not(.input-group__selections__comma--active){color:rgba(0,0,0,.87)}.application .theme--light.input-group:not(.input-group--error) label,.theme--light .input-group:not(.input-group--error) label{color:rgba(0,0,0,.54)}.application .theme--light.input-group:not(.input-group--error).input-group--disabled .input-group__selections__comma,.application .theme--light.input-group:not(.input-group--error).input-group--disabled label,.theme--light .input-group:not(.input-group--error).input-group--disabled .input-group__selections__comma,.theme--light .input-group:not(.input-group--error).input-group--disabled label{color:rgba(0,0,0,.38)}.application .theme--light.input-group:not(.input-group--error) .input-group__details:before,.theme--light .input-group:not(.input-group--error) .input-group__details:before{background-color:rgba(0,0,0,.42)}.application .theme--light.input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled) .input-group__input .input-group__append-icon:not(:hover),.application .theme--light.input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled) .input-group__input .input-group__prepend-icon:not(:hover),.theme--light .input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled) .input-group__input .input-group__append-icon:not(:hover),.theme--light .input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled) .input-group__input .input-group__prepend-icon:not(:hover){color:rgba(0,0,0,.54)}.application .theme--light.input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled):not(.input-group--disabled):not(.input-group--overflow):not(.input-group--segmented):not(.input-group--editable):hover .input-group__details:before,.theme--light .input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled):not(.input-group--disabled):not(.input-group--overflow):not(.input-group--segmented):not(.input-group--editable):hover .input-group__details:before{background-color:rgba(0,0,0,.87)}.application .theme--light.input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled):not(.input-group--disabled):not(.input-group--overflow):not(.input-group--segmented):not(.input-group--editable):hover.input-group--textarea:not(.input-group--full-width) .input-group__input,.theme--light .input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled):not(.input-group--disabled):not(.input-group--overflow):not(.input-group--segmented):not(.input-group--editable):hover.input-group--textarea:not(.input-group--full-width) .input-group__input{border-color:rgba(0,0,0,.87)}.application .theme--light.input-group.input-group--editable .input-group__details:before,.application .theme--light.input-group.input-group--editable .input-group__input:before,.application .theme--light.input-group.input-group--overflow .input-group__details:before,.application .theme--light.input-group.input-group--overflow .input-group__input:before,.application .theme--light.input-group.input-group--segmented .input-group__details:before,.application .theme--light.input-group.input-group--segmented .input-group__input:before,.theme--light .input-group.input-group--editable .input-group__details:before,.theme--light .input-group.input-group--editable .input-group__input:before,.theme--light .input-group.input-group--overflow .input-group__details:before,.theme--light .input-group.input-group--overflow .input-group__input:before,.theme--light .input-group.input-group--segmented .input-group__details:before,.theme--light .input-group.input-group--segmented .input-group__input:before{background-color:rgba(0,0,0,.12)}.application .theme--light.input-group.input-group--disabled .input-group__input .input-group__append-icon,.application .theme--light.input-group.input-group--disabled .input-group__input .input-group__prepend-icon,.theme--light .input-group.input-group--disabled .input-group__input .input-group__append-icon,.theme--light .input-group.input-group--disabled .input-group__input .input-group__prepend-icon{color:rgba(0,0,0,.38)}.application .theme--light.input-group.input-group--disabled .input-group__details:before,.theme--light .input-group.input-group--disabled .input-group__details:before{background-color:transparent;background-image:linear-gradient(90deg,rgba(0,0,0,.38) 0,rgba(0,0,0,.38) 33%,transparent 0)}.application .theme--light.input-group .input-group--text-field__prefix,.application .theme--light.input-group .input-group--text-field__suffix,.theme--light .input-group .input-group--text-field__prefix,.theme--light .input-group .input-group--text-field__suffix{color:rgba(0,0,0,.54)}.application .theme--light.input-group .input-group--text-field.input-group--disabled__prefix,.application .theme--light.input-group .input-group--text-field.input-group--disabled__suffix,.theme--light .input-group .input-group--text-field.input-group--disabled__prefix,.theme--light .input-group .input-group--text-field.input-group--disabled__suffix{color:rgba(0,0,0,.38)}.application .theme--dark.input-group input,.application .theme--dark.input-group textarea,.theme--dark .input-group input,.theme--dark .input-group textarea{color:#fff}.application .theme--dark.input-group input:disabled,.application .theme--dark.input-group textarea:disabled,.theme--dark .input-group input:disabled,.theme--dark .input-group textarea:disabled{color:hsla(0,0%,100%,.5)}.application .theme--dark.input-group:not(.input-group--error) .input-group__messages,.theme--dark .input-group:not(.input-group--error) .input-group__messages{color:hsla(0,0%,100%,.7)}.application .theme--dark.input-group.input-group--textarea:not(.input-group--full-width) .input-group__input,.theme--dark .input-group.input-group--textarea:not(.input-group--full-width) .input-group__input{border:2px solid hsla(0,0%,100%,.7)}.application .theme--dark.input-group.input-group--dirty .input-group__selections__comma:not(.input-group__selections__comma--active),.theme--dark .input-group.input-group--dirty .input-group__selections__comma:not(.input-group__selections__comma--active){color:#fff}.application .theme--dark.input-group:not(.input-group--error) label,.theme--dark .input-group:not(.input-group--error) label{color:hsla(0,0%,100%,.7)}.application .theme--dark.input-group:not(.input-group--error).input-group--disabled .input-group__selections__comma,.application .theme--dark.input-group:not(.input-group--error).input-group--disabled label,.theme--dark .input-group:not(.input-group--error).input-group--disabled .input-group__selections__comma,.theme--dark .input-group:not(.input-group--error).input-group--disabled label{color:hsla(0,0%,100%,.5)}.application .theme--dark.input-group:not(.input-group--error) .input-group__details:before,.theme--dark .input-group:not(.input-group--error) .input-group__details:before{background-color:hsla(0,0%,100%,.7)}.application .theme--dark.input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled) .input-group__input .input-group__append-icon:not(:hover),.application .theme--dark.input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled) .input-group__input .input-group__prepend-icon:not(:hover),.theme--dark .input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled) .input-group__input .input-group__append-icon:not(:hover),.theme--dark .input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled) .input-group__input .input-group__prepend-icon:not(:hover){color:hsla(0,0%,100%,.7)}.application .theme--dark.input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled):not(.input-group--disabled):not(.input-group--overflow):not(.input-group--segmented):not(.input-group--editable):hover .input-group__details:before,.theme--dark .input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled):not(.input-group--disabled):not(.input-group--overflow):not(.input-group--segmented):not(.input-group--editable):hover .input-group__details:before{background-color:#fff}.application .theme--dark.input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled):not(.input-group--disabled):not(.input-group--overflow):not(.input-group--segmented):not(.input-group--editable):hover.input-group--textarea:not(.input-group--full-width) .input-group__input,.theme--dark .input-group:not(.input-group--error):not(.input-group--focused):not(.input-group--disabled):not(.input-group--disabled):not(.input-group--overflow):not(.input-group--segmented):not(.input-group--editable):hover.input-group--textarea:not(.input-group--full-width) .input-group__input{border-color:#fff}.application .theme--dark.input-group.input-group--editable .input-group__details:before,.application .theme--dark.input-group.input-group--editable .input-group__input:before,.application .theme--dark.input-group.input-group--overflow .input-group__details:before,.application .theme--dark.input-group.input-group--overflow .input-group__input:before,.application .theme--dark.input-group.input-group--segmented .input-group__details:before,.application .theme--dark.input-group.input-group--segmented .input-group__input:before,.theme--dark .input-group.input-group--editable .input-group__details:before,.theme--dark .input-group.input-group--editable .input-group__input:before,.theme--dark .input-group.input-group--overflow .input-group__details:before,.theme--dark .input-group.input-group--overflow .input-group__input:before,.theme--dark .input-group.input-group--segmented .input-group__details:before,.theme--dark .input-group.input-group--segmented .input-group__input:before{background-color:hsla(0,0%,100%,.12)}.application .theme--dark.input-group.input-group--disabled .input-group__input .input-group__append-icon,.application .theme--dark.input-group.input-group--disabled .input-group__input .input-group__prepend-icon,.theme--dark .input-group.input-group--disabled .input-group__input .input-group__append-icon,.theme--dark .input-group.input-group--disabled .input-group__input .input-group__prepend-icon{color:hsla(0,0%,100%,.5)}.application .theme--dark.input-group.input-group--disabled .input-group__details:before,.theme--dark .input-group.input-group--disabled .input-group__details:before{background-color:transparent;background-image:linear-gradient(90deg,hsla(0,0%,100%,.5) 0,hsla(0,0%,100%,.5) 33%,transparent 0)}.application .theme--dark.input-group .input-group--text-field__prefix,.application .theme--dark.input-group .input-group--text-field__suffix,.theme--dark .input-group .input-group--text-field__prefix,.theme--dark .input-group .input-group--text-field__suffix{color:hsla(0,0%,100%,.7)}.application .theme--dark.input-group .input-group--text-field.input-group--disabled__prefix,.application .theme--dark.input-group .input-group--text-field.input-group--disabled__suffix,.theme--dark .input-group .input-group--text-field.input-group--disabled__prefix,.theme--dark .input-group .input-group--text-field.input-group--disabled__suffix{color:hsla(0,0%,100%,.5)}.input-group{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 1;flex:1 1;-ms-flex-wrap:wrap;flex-wrap:wrap;min-width:24px;padding:18px 0 0;position:relative;width:100%;outline:none;transition:box-shadow .3s cubic-bezier(.25,.8,.5,1)}.input-group label{display:inline-block;font-size:16px;line-height:30px;height:30px;max-width:90%;min-width:0;overflow:hidden;pointer-events:none;text-align:left;text-overflow:ellipsis;-webkit-transform-origin:top left;transform-origin:top left;transition:.4s cubic-bezier(.25,.8,.25,1);white-space:nowrap;width:100%;z-index:0}.input-group__input{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%;min-width:0;min-height:30px}.input-group__icon-cb{cursor:pointer}.input-group.input-group--error .input-group__append-icon,.input-group.input-group--error .input-group__prepend-icon,.input-group.input-group--focused .input-group__append-icon,.input-group.input-group--focused .input-group__prepend-icon{color:inherit}.input-group.input-group--append-icon label,.input-group.input-group--prepend-icon label,.input-group.input-group--selection-controls label{max-width:75%}.input-group.input-group--append-icon.input-group--prepend-icon label{max-width:65%}.input-group .input-group__append-icon{padding:0 6px;transition:.3s cubic-bezier(.4,0,.6,1)}.input-group .input-group__append-icon,.input-group .input-group__prepend-icon{-ms-flex-item-align:center;align-self:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.input-group.input-group--single-line.input-group--dirty label,.input-group.input-group--solo.input-group--dirty label{display:none}.input-group.input-group--solo{background:#fff;min-height:46px;border-radius:2px;padding:0;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.input-group.input-group--solo label{top:8px;padding-left:16px;-webkit-transform:none!important;transform:none!important}.input-group.input-group--solo .input-group__input{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:8px 16px}.input-group.input-group--solo .input-group__details{display:none}.input-group--disabled .input-group__details:before{background-color:transparent;background-position:bottom;background-size:3px 1px;background-repeat:repeat-x}.input-group.input-group--text-field:not(.input-group--single-line):not(.input-group--error).input-group--focused label{color:inherit}.input-group.input-group--text-field:not(.input-group--single-line):not(.input-group--error).input-group--focused .input-group__input{border-color:inherit}.input-group.input-group--text-field.input-group--focused:not(.input-group--disabled) .input-group__details:after{-webkit-transform:scaleX(1);transform:scaleX(1)}.input-group--required label:after{content:\\\"*\\\"}.input-group.input-group--error label{-webkit-animation:a .6s cubic-bezier(.25,.8,.5,1);animation:a .6s cubic-bezier(.25,.8,.5,1)}.input-group.input-group--error .input-group__messages{color:inherit}.input-group.input-group--error .input-group__details:before{background-color:currentColor}.input-group .slide-y-transition-leave,.input-group .slide-y-transition-leave-to{position:absolute}.input-group__details{color:inherit;display:-webkit-box;display:-ms-flexbox;display:flex;padding-top:4px;-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%;font-size:12px;min-height:26px;overflow:hidden;position:relative;width:100%}.input-group__details:after,.input-group__details:before{content:\\\"\\\";position:absolute;left:0;transition:.3s cubic-bezier(.4,0,.2,1)}.input-group__details:after{background-color:currentColor;color:inherit;top:0;height:2px;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:center center 0;transform-origin:center center 0;width:100%;z-index:1}.input-group__details:before{top:0;height:1px;width:100%;z-index:0}.input-group--hide-details .input-group__details{min-height:2px;padding:0}.input-group--async-loading .input-group__details:after,.input-group--async-loading .input-group__details:before{display:none}.input-group .progress-linear{position:absolute;top:0;left:0;margin:0}.input-group .input-group__error,.input-group__hint{transition:.3s cubic-bezier(.25,.8,.25,1)}.input-group .input-group__error{color:inherit;-webkit-box-flex:1;-ms-flex:1 0;flex:1 0}.input-group--editable.input-group--active,.input-group--overflow.input-group--active,.input-group--segmented.input-group--active{background-color:#fff}.application .theme--light.input-group--selection-controls label,.theme--light .input-group--selection-controls label{color:rgba(0,0,0,.87)}.application .theme--light.input-group--selection-controls .icon--selection-control,.theme--light .input-group--selection-controls .icon--selection-control{color:rgba(0,0,0,.54)}.application .theme--light.input-group--selection-controls.input-group--active .icon--selection-control,.theme--light .input-group--selection-controls.input-group--active .icon--selection-control{color:inherit}.application .theme--light.input-group--selection-controls.input-group--disabled .input-group__input,.theme--light .input-group--selection-controls.input-group--disabled .input-group__input{color:rgba(0,0,0,.38)}.application .theme--light.input-group--selection-controls.input-group--disabled .input-group__input .icon--checkbox,.application .theme--light.input-group--selection-controls.input-group--disabled .input-group__input .icon--radio,.theme--light .input-group--selection-controls.input-group--disabled .input-group__input .icon--checkbox,.theme--light .input-group--selection-controls.input-group--disabled .input-group__input .icon--radio{color:inherit}.application .theme--dark.input-group--selection-controls label,.theme--dark .input-group--selection-controls label{color:#fff}.application .theme--dark.input-group--selection-controls .icon--selection-control,.theme--dark .input-group--selection-controls .icon--selection-control{color:hsla(0,0%,100%,.7)}.application .theme--dark.input-group--selection-controls.input-group--active .icon--selection-control,.theme--dark .input-group--selection-controls.input-group--active .icon--selection-control{color:inherit}.application .theme--dark.input-group--selection-controls.input-group--disabled .input-group__input,.theme--dark .input-group--selection-controls.input-group--disabled .input-group__input{color:hsla(0,0%,100%,.5)}.application .theme--dark.input-group--selection-controls.input-group--disabled .input-group__input .icon--checkbox,.application .theme--dark.input-group--selection-controls.input-group--disabled .input-group__input .icon--radio,.theme--dark .input-group--selection-controls.input-group--disabled .input-group__input .icon--checkbox,.theme--dark .input-group--selection-controls.input-group--disabled .input-group__input .icon--radio{color:inherit}.input-group--selection-controls.input-group--tab-focused .input-group--selection-controls__ripple:before,.input-group--tab-focused .input-group:focus .input-group--selection-controls__ripple:before{-webkit-transform:translate(-50%,-50%) scale(1);transform:translate(-50%,-50%) scale(1);opacity:.15}.input-group.input-group--selection-controls{display:-webkit-box;display:-ms-flexbox;display:flex;padding:0}.input-group.input-group--selection-controls .icon--selection-control{cursor:pointer;position:absolute;left:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:.3s cubic-bezier(.4,0,.6,1)}.input-group.input-group--selection-controls .input-group__details:after,.input-group.input-group--selection-controls .input-group__details:before{display:none}.input-group.input-group--selection-controls .input-group__input{color:inherit;width:100%;position:relative}.input-group.input-group--selection-controls .input-group__input .icon--selection-control{-ms-flex-item-align:center;align-self:center;height:30px;margin:auto}.input-group.input-group--selection-controls.input-group--error .input-group__input .icon--selection-control,.input-group.input-group--selection-controls.input-group--error label{color:inherit}.input-group.input-group--selection-controls label{cursor:pointer;position:absolute;left:32px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1;pointer-events:all}.input-group--selection-controls__ripple{border-radius:50%;height:48px;width:48px;cursor:pointer;position:absolute;-webkit-transform:translate(-12px,-50%);transform:translate(-12px,-50%);-webkit-transform-origin:center center;transform-origin:center center;top:50%;left:0}.input-group--selection-controls__ripple:before{content:\\\"\\\";position:absolute;width:36px;height:36px;background:currentColor;border-radius:50%;left:50%;top:50%;-webkit-transform:translate(-50%,-50%) scale(.3);transform:translate(-50%,-50%) scale(.3);opacity:0;transition:.4s cubic-bezier(0,0,.2,1);-webkit-transform-origin:center center;transform-origin:center center}.input-group--prepend-icon.input-group--selection-controls .icon--selection-control,.input-group--prepend-icon.input-group--selection-controls .input-group--selection-controls__ripple{left:38px}.input-group--prepend-icon.input-group--selection-controls label{left:76px}.input-group--prepend-icon.radio-group--row .icon--selection-control,.input-group--prepend-icon.radio-group--row .input-group--selection-controls__ripple{left:14px}.input-group--prepend-icon.radio-group--row label{left:52px}.application .theme--light.chip,.theme--light .chip{background:#e0e0e0;color:rgba(0,0,0,.87)}.application .theme--light.chip:not(.chip--outline) .chip__close,.theme--light .chip:not(.chip--outline) .chip__close{color:rgba(0,0,0,.54)}.application .theme--dark.chip,.theme--dark .chip{background:#fff;color:rgba(0,0,0,.87)}.application .theme--dark.chip:not(.chip--outline) .chip__close,.theme--dark .chip:not(.chip--outline) .chip__close{color:#fff}.chip{border-radius:28px;border:1px solid transparent;font-size:13px;margin:4px;outline:none;position:relative;transition:.3s cubic-bezier(.25,.8,.5,1)}.chip,.chip .chip__content{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.chip .chip__content{border-radius:28px;cursor:default;height:32px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:0 12px;white-space:nowrap;z-index:1}.chip--removable .chip__content{padding:0 4px 0 12px}.chip .avatar{height:32px!important;margin-left:-12px;margin-right:8px;min-width:32px;width:32px!important}.chip .avatar img{height:100%;width:100%}.chip--active:not(.chip--disabled),.chip--selected:not(.chip--disabled),.chip:focus:not(.chip--disabled){border-color:rgba(0,0,0,.13);box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.chip--active:not(.chip--disabled):after,.chip--selected:not(.chip--disabled):after,.chip:focus:not(.chip--disabled):after{background:currentColor;border-radius:inherit;content:\\\"\\\";height:100%;position:absolute;top:0;transition:inherit;width:100%;pointer-events:none;opacity:.13}.chip--label,.chip--label .chip__content{border-radius:2px}.chip.chip--outline{background:transparent!important;border-color:currentColor;color:#9e9e9e}.chip--small{height:26px}.chip--small .avatar{height:26px;min-width:26px;width:26px}.chip--small .icon,.chip__close{font-size:20px}.chip__close{-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:inherit;cursor:pointer;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0 -1px 0 4px;text-decoration:none;transition:none!important;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.chip__close>.icon{color:inherit!important}.chip__close:hover{opacity:.8}.chip--select-multi{margin:4px 4px 4px 0}.chip .icon{color:inherit;transition:none}.chip .icon--right{margin-left:12px;margin-right:-8px}.chip .icon--left{margin-left:-8px;margin-right:12px}.application .theme--light.table,.theme--light .table{background-color:#fff;color:rgba(0,0,0,.87)}.application .theme--light.table thead tr:first-child,.theme--light .table thead tr:first-child{border-bottom:1px solid rgba(0,0,0,.12)}.application .theme--light.table thead th,.theme--light .table thead th{color:rgba(0,0,0,.54)}.application .theme--light.table tbody tr:not(:last-child),.theme--light .table tbody tr:not(:last-child){border-bottom:1px solid rgba(0,0,0,.12)}.application .theme--light.table tbody tr[active],.theme--light .table tbody tr[active]{background:#f5f5f5}.application .theme--light.table tbody tr:hover:not(.datatable__expand-row),.theme--light .table tbody tr:hover:not(.datatable__expand-row){background:#eee}.application .theme--light.table tfoot tr,.theme--light .table tfoot tr{border-top:1px solid rgba(0,0,0,.12)}.application .theme--dark.table,.theme--dark .table{background-color:#424242;color:#fff}.application .theme--dark.table thead tr:first-child,.theme--dark .table thead tr:first-child{border-bottom:1px solid hsla(0,0%,100%,.12)}.application .theme--dark.table thead th,.theme--dark .table thead th{color:hsla(0,0%,100%,.7)}.application .theme--dark.table tbody tr:not(:last-child),.theme--dark .table tbody tr:not(:last-child){border-bottom:1px solid hsla(0,0%,100%,.12)}.application .theme--dark.table tbody tr[active],.theme--dark .table tbody tr[active]{background:#505050}.application .theme--dark.table tbody tr:hover:not(.datatable__expand-row),.theme--dark .table tbody tr:hover:not(.datatable__expand-row){background:#616161}.application .theme--dark.table tfoot tr,.theme--dark .table tfoot tr{border-top:1px solid hsla(0,0%,100%,.12)}.table__overflow{width:100%;overflow-x:auto;overflow-y:hidden}table.table{border-radius:2px;border-collapse:collapse;border-spacing:0;width:100%;max-width:100%}table.table tbody td:first-child,table.table tbody td:not(:first-child),table.table tbody th:first-child,table.table tbody th:not(:first-child),table.table thead td:first-child,table.table thead td:not(:first-child),table.table thead th:first-child,table.table thead th:not(:first-child){padding:0 24px}table.table thead tr{height:56px}table.table thead th{font-weight:500;font-size:12px;transition:.3s cubic-bezier(.25,.8,.5,1);white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}table.table thead th.sortable{pointer-events:auto}table.table thead th>div{width:100%}table.table tbody tr{transition:background .3s cubic-bezier(.25,.8,.5,1);will-change:background}table.table tbody td,table.table tbody th{height:48px}table.table tbody td{font-weight:400;font-size:13px}table.table .input-group--selection-controls{padding:0}table.table .input-group--selection-controls .input-group__details{display:none}table.table .input-group--selection-controls.checkbox .icon{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}table.table .input-group--selection-controls.checkbox .input-group--selection-controls__ripple{left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}table.table tfoot tr:not(:last-child){height:48px}table.table tfoot tr:not(:last-child):not(:only-child) td{padding:0 24px}table.table tfoot tr{height:56px}.application .theme--light.datatable thead th.column.sortable i,.theme--light .datatable thead th.column.sortable i{color:rgba(0,0,0,.38)}.application .theme--light.datatable thead th.column.sortable.active,.application .theme--light.datatable thead th.column.sortable.active i,.application .theme--light.datatable thead th.column.sortable:hover,.theme--light .datatable thead th.column.sortable.active,.theme--light .datatable thead th.column.sortable.active i,.theme--light .datatable thead th.column.sortable:hover{color:rgba(0,0,0,.87)}.application .theme--light.datatable .datatable__actions,.theme--light .datatable .datatable__actions{color:rgba(0,0,0,.54)}.application .theme--light.datatable .datatable__actions__select .input-group--select .input-group__append-icon,.application .theme--light.datatable .datatable__actions__select .input-group--select .input-group__selections__comma,.theme--light .datatable .datatable__actions__select .input-group--select .input-group__append-icon,.theme--light .datatable .datatable__actions__select .input-group--select .input-group__selections__comma{color:rgba(0,0,0,.54)!important}.application .theme--dark.datatable thead th.column.sortable i,.theme--dark .datatable thead th.column.sortable i{color:hsla(0,0%,100%,.5)}.application .theme--dark.datatable thead th.column.sortable.active,.application .theme--dark.datatable thead th.column.sortable.active i,.application .theme--dark.datatable thead th.column.sortable:hover,.theme--dark .datatable thead th.column.sortable.active,.theme--dark .datatable thead th.column.sortable.active i,.theme--dark .datatable thead th.column.sortable:hover{color:#fff}.application .theme--dark.datatable .datatable__actions,.theme--dark .datatable .datatable__actions{color:hsla(0,0%,100%,.7)}.application .theme--dark.datatable .datatable__actions__select .input-group--select .input-group__append-icon,.application .theme--dark.datatable .datatable__actions__select .input-group--select .input-group__selections__comma,.theme--dark .datatable .datatable__actions__select .input-group--select .input-group__append-icon,.theme--dark .datatable .datatable__actions__select .input-group--select .input-group__selections__comma{color:hsla(0,0%,100%,.7)!important}.datatable thead th.column.sortable{cursor:pointer}.datatable thead th.column.sortable i{font-size:16px;vertical-align:sub;display:inline-block;opacity:0;transition:.3s cubic-bezier(.25,.8,.5,1)}.datatable thead th.column.sortable:hover i{opacity:.6}.datatable thead th.column.sortable.active{-webkit-transform:none;transform:none}.datatable thead th.column.sortable.active i{opacity:1}.datatable thead th.column.sortable.active.desc i{-webkit-transform:rotate(-180deg);transform:rotate(-180deg)}.datatable__actions{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:12px}.datatable__actions .btn{color:inherit}.datatable__actions .btn:last-of-type{margin-left:18px}.datatable__actions__pagination{text-align:center;margin:0 26px 0 32px}.datatable__actions__select{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.datatable__actions__select .input-group--select{margin:13px 0 13px 34px;padding:0;position:static}.datatable__actions__select .input-group--select .input-group__selections__comma{font-size:12px}.datatable__progress,.datatable__progress td,.datatable__progress th,.datatable__progress tr{height:auto!important}.datatable__progress th{padding:0!important}.datatable__progress th .progress-linear{top:-2px;margin:0 0 -2px}.datatable__expand-row{border:none!important}.datatable__expand-col{padding:0!important;height:0!important}.datatable__expand-col--expanded{border-bottom:1px solid rgba(0,0,0,.12)}.datatable__expand-content{transition:height .3s cubic-bezier(.25,.8,.5,1)}.datatable__expand-content>.card{border-radius:0;box-shadow:none}.progress-linear{background:transparent;margin:1rem 0;overflow:hidden;width:100%;position:relative}.progress-linear__bar{width:100%;position:relative;z-index:1}.progress-linear__bar,.progress-linear__bar__determinate{height:inherit;transition:.3s ease-in}.progress-linear__bar__indeterminate .long,.progress-linear__bar__indeterminate .short{height:inherit;position:absolute;left:0;top:0;bottom:0;will-change:left,right;width:auto;background-color:inherit}.progress-linear__bar__indeterminate--active .long{-webkit-animation:b;animation:b;-webkit-animation-duration:2.2s;animation-duration:2.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.progress-linear__bar__indeterminate--active .short{-webkit-animation:c;animation:c;-webkit-animation-duration:2.2s;animation-duration:2.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.progress-linear__background{position:absolute;top:0;left:0;bottom:0;transition:.3s ease-in}.progress-linear--query .progress-linear__bar__indeterminate--active .long{-webkit-animation:d;animation:d;-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.progress-linear--query .progress-linear__bar__indeterminate--active .short{-webkit-animation:e;animation:e;-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}@-webkit-keyframes b{0%{left:-90%;right:100%}60%{left:-90%;right:100%}to{left:100%;right:-35%}}@keyframes b{0%{left:-90%;right:100%}60%{left:-90%;right:100%}to{left:100%;right:-35%}}@-webkit-keyframes c{0%{left:-200%;right:100%}60%{left:107%;right:-8%}to{left:107%;right:-8%}}@keyframes c{0%{left:-200%;right:100%}60%{left:107%;right:-8%}to{left:107%;right:-8%}}@-webkit-keyframes d{0%{right:-90%;left:100%}60%{right:-90%;left:100%}to{right:100%;left:-35%}}@keyframes d{0%{right:-90%;left:100%}60%{right:-90%;left:100%}to{right:100%;left:-35%}}@-webkit-keyframes e{0%{right:-200%;left:100%}60%{right:107%;left:-8%}to{right:107%;left:-8%}}@keyframes e{0%{right:-200%;left:100%}60%{right:107%;left:-8%}to{right:107%;left:-8%}}.application .theme--light.input-group--text-field.input-group--text-field-box .input-group__input,.theme--light .input-group--text-field.input-group--text-field-box .input-group__input{background:hsla(0,0%,100%,.6)}.application .theme--light.input-group--text-field input::-webkit-input-placeholder,.application .theme--light.input-group--text-field textarea::-webkit-input-placeholder,.theme--light .input-group--text-field input::-webkit-input-placeholder,.theme--light .input-group--text-field textarea::-webkit-input-placeholder{color:rgba(0,0,0,.38)}.application .theme--light.input-group--text-field input:-ms-input-placeholder,.application .theme--light.input-group--text-field textarea:-ms-input-placeholder,.theme--light .input-group--text-field input:-ms-input-placeholder,.theme--light .input-group--text-field textarea:-ms-input-placeholder{color:rgba(0,0,0,.38)}.application .theme--light.input-group--text-field input::placeholder,.application .theme--light.input-group--text-field textarea::placeholder,.theme--light .input-group--text-field input::placeholder,.theme--light .input-group--text-field textarea::placeholder{color:rgba(0,0,0,.38)}.application .theme--light.input-group--text-field:not(.input-group--error) .input-group__counter,.theme--light .input-group--text-field:not(.input-group--error) .input-group__counter{color:rgba(0,0,0,.54)}.application .theme--dark.input-group--text-field.input-group--text-field-box .input-group__input,.theme--dark .input-group--text-field.input-group--text-field-box .input-group__input{background:hsla(0,0%,100%,.1)}.application .theme--dark.input-group--text-field input::-webkit-input-placeholder,.application .theme--dark.input-group--text-field textarea::-webkit-input-placeholder,.theme--dark .input-group--text-field input::-webkit-input-placeholder,.theme--dark .input-group--text-field textarea::-webkit-input-placeholder{color:hsla(0,0%,100%,.5)}.application .theme--dark.input-group--text-field input:-ms-input-placeholder,.application .theme--dark.input-group--text-field textarea:-ms-input-placeholder,.theme--dark .input-group--text-field input:-ms-input-placeholder,.theme--dark .input-group--text-field textarea:-ms-input-placeholder{color:hsla(0,0%,100%,.5)}.application .theme--dark.input-group--text-field input::placeholder,.application .theme--dark.input-group--text-field textarea::placeholder,.theme--dark .input-group--text-field input::placeholder,.theme--dark .input-group--text-field textarea::placeholder{color:hsla(0,0%,100%,.5)}.application .theme--dark.input-group--text-field:not(.input-group--error) .input-group__counter,.theme--dark .input-group--text-field:not(.input-group--error) .input-group__counter{color:hsla(0,0%,100%,.7)}.input-group--text-field label{position:absolute;top:18px;left:0}.input-group--text-field input,.input-group--text-field textarea{font-size:16px}.input-group--text-field input::-webkit-input-placeholder,.input-group--text-field textarea::-webkit-input-placeholder{color:inherit;transition:.3s cubic-bezier(.25,.8,.5,1)}.input-group--text-field input:-ms-input-placeholder,.input-group--text-field textarea:-ms-input-placeholder{color:inherit;transition:.3s cubic-bezier(.25,.8,.5,1)}.input-group--text-field input::placeholder,.input-group--text-field textarea::placeholder{color:inherit;transition:.3s cubic-bezier(.25,.8,.5,1)}.input-group--text-field input{box-shadow:none;-webkit-box-flex:1;-ms-flex:1;flex:1;height:30px;margin:0;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.input-group--text-field input:focus{outline:none}.input-group--text-field input:disabled{pointer-events:none}.input-group--text-field textarea{-webkit-box-flex:1;-ms-flex:1 1;flex:1 1}.input-group--text-field textarea:focus{outline:none}.input-group--text-field.input-group--textarea label{top:13px}.input-group--text-field.input-group--textarea .input-group__input{border-radius:2px;transition:.4s cubic-bezier(.25,.8,.25,1)}.input-group--text-field.input-group--textarea textarea{font-size:16px;transition:.3s cubic-bezier(.25,.8,.5,1)}.input-group--text-field.input-group--textarea:not(.input-group--full-width) label{top:30px;left:15px}.input-group--text-field.input-group--textarea:not(.input-group--full-width) .input-group__input{padding:30px 0 0 13px}.input-group--text-field.input-group--textarea .input-group__details:after,.input-group--text-field.input-group--textarea .input-group__details:before{opacity:0}.input-group--text-field .input-group__counter{margin-left:auto}.input-group--text-field .input-group__counter--error{color:inherit}.input-group--text-field.input-group--placeholder.input-group--dirty input::-webkit-input-placeholder,.input-group--text-field.input-group--placeholder.input-group--dirty textarea::-webkit-input-placeholder{opacity:0}.input-group--text-field.input-group--placeholder.input-group--dirty input:-ms-input-placeholder,.input-group--text-field.input-group--placeholder.input-group--dirty textarea:-ms-input-placeholder{opacity:0}.input-group--text-field.input-group--placeholder.input-group--dirty input::placeholder,.input-group--text-field.input-group--placeholder.input-group--dirty textarea::placeholder{opacity:0}.input-group--text-field.input-group--prepend-icon .input-group__prepend-icon{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;min-width:40px;transition:.3s cubic-bezier(.25,.8,.25,1)}.input-group--text-field.input-group--prepend-icon .input-group__details{margin-left:auto;max-width:calc(100% - 40px)}.input-group--text-field.input-group--prepend-icon label{left:40px}.input-group--text-field:not(.input-group--single-line).input-group--focused label,.input-group--text-field:not(.input-group--single-line).input-group--placeholder label{opacity:1}.input-group--text-field:not(.input-group--single-line).input-group--focused:not(.input-group--textarea) label,.input-group--text-field:not(.input-group--single-line).input-group--placeholder:not(.input-group--textarea) label{-webkit-transform:translateY(-18px) scale(.75);transform:translateY(-18px) scale(.75)}.input-group--text-field:not(.input-group--single-line).input-group--focused:not(.input-group--full-width).input-group--textarea label,.input-group--text-field:not(.input-group--single-line).input-group--placeholder:not(.input-group--full-width).input-group--textarea label{-webkit-transform:translateY(-8px) scale(.75);transform:translateY(-8px) scale(.75)}.input-group--text-field:not(.input-group--single-line).input-group--focused.input-group--text-field-box label,.input-group--text-field:not(.input-group--single-line).input-group--placeholder.input-group--text-field-box label{-webkit-transform:translateY(-10px) scale(.75);transform:translateY(-10px) scale(.75)}.input-group--text-field.input-group--dirty.input-group--select label,.input-group--text-field.input-group--dirty:not(.input-group--textarea) label{-webkit-transform:translateY(-18px) scale(.75);transform:translateY(-18px) scale(.75)}.input-group--text-field.input-group--dirty:not(.input-group--full-width).input-group--textarea label{-webkit-transform:translateY(-8px) scale(.75);transform:translateY(-8px) scale(.75)}.input-group--text-field.input-group--multi-line textarea{padding-top:4px}.input-group--text-field.input-group--full-width{padding:16px}.input-group--text-field.input-group--full-width label{margin-left:16px}.input-group--text-field.input-group--full-width .input-group__details:after,.input-group--text-field.input-group--full-width .input-group__details:before{display:none}.input-group--prefix:not(.input-group--focused):not(.input-group--dirty) label{left:16px}.input-group--prefix .input-group--text-field__prefix,.input-group--prefix .input-group--text-field__suffix,.input-group--suffix .input-group--text-field__prefix,.input-group--suffix .input-group--text-field__suffix{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:16px;margin-top:1px}.input-group--prefix .input-group--text-field__prefix,.input-group--suffix .input-group--text-field__prefix{margin-right:3px}.input-group--prefix .input-group--text-field__suffix,.input-group--suffix .input-group--text-field__suffix{margin-left:3px}.input-group--text-field-box input,.input-group--text-field-box textarea{cursor:pointer}.input-group--text-field-box label{left:16px}.input-group--text-field-box .input-group__input{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;border-radius:4px 4px 0 0;cursor:pointer;min-height:56px}.input-group--text-field-box .input-group__details{padding:8px 16px 0}.input-group--text-field-box .input-group__details:after,.input-group--text-field-box .input-group__details:before{height:2px;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.input-group--text-field-box.input-group--multi-line textarea{padding-left:24px;padding-right:24px}.input-group--text-field-box:not(.input-group--textarea).input-group--multi-line .input-group__input{padding-top:26px}.input-group--text-field-box:not(.input-group--textarea).input-group--multi-line label{top:26px}.input-group--text-field-box:not(.input-group--textarea):not(.input-group--multi-line) .input-group__input{padding-left:16px;padding-right:16px}.input-group--text-field-box:not(.input-group--textarea):not(.input-group--multi-line) label{top:32px}.input-group--text-field-box:not(.input-group--textarea):not(.input-group--single-line).input-group--dirty label,.input-group--text-field-box:not(.input-group--textarea):not(.input-group--single-line).input-group--focused label{-webkit-transform:translateY(-10px) scale(.75);transform:translateY(-10px) scale(.75)}.input-group--text-field-box.input-group--prepend-icon .input-group__details:after,.input-group--text-field-box.input-group--prepend-icon .input-group__details:before{margin-left:56px;max-width:calc(100% - 56px)}.input-group--text-field-box.input-group--prepend-icon label{left:56px}.application .theme--light.input-group--select.input-group--editable.input-group--focused .input-group__input,.application .theme--light.input-group--select.input-group--editable .input-group__input:hover,.application .theme--light.input-group--select.input-group--overflow.input-group--focused .input-group__input,.application .theme--light.input-group--select.input-group--overflow .input-group__input:hover,.application .theme--light.input-group--select.input-group--segmented.input-group--focused .input-group__input,.application .theme--light.input-group--select.input-group--segmented .input-group__input:hover,.theme--light .input-group--select.input-group--editable.input-group--focused .input-group__input,.theme--light .input-group--select.input-group--editable .input-group__input:hover,.theme--light .input-group--select.input-group--overflow.input-group--focused .input-group__input,.theme--light .input-group--select.input-group--overflow .input-group__input:hover,.theme--light .input-group--select.input-group--segmented.input-group--focused .input-group__input,.theme--light .input-group--select.input-group--segmented .input-group__input:hover{background:#fff}.application .theme--dark.input-group--select.input-group--editable.input-group--focused .input-group__input,.application .theme--dark.input-group--select.input-group--editable .input-group__input:hover,.application .theme--dark.input-group--select.input-group--overflow.input-group--focused .input-group__input,.application .theme--dark.input-group--select.input-group--overflow .input-group__input:hover,.application .theme--dark.input-group--select.input-group--segmented.input-group--focused .input-group__input,.application .theme--dark.input-group--select.input-group--segmented .input-group__input:hover,.theme--dark .input-group--select.input-group--editable.input-group--focused .input-group__input,.theme--dark .input-group--select.input-group--editable .input-group__input:hover,.theme--dark .input-group--select.input-group--overflow.input-group--focused .input-group__input,.theme--dark .input-group--select.input-group--overflow .input-group__input:hover,.theme--dark .input-group--select.input-group--segmented.input-group--focused .input-group__input,.theme--dark .input-group--select.input-group--segmented .input-group__input:hover{background:#424242}.input-group--select .input-group--select__autocomplete{display:block;height:0}.input-group--select .input-group--select__autocomplete--index{opacity:0!important}.input-group--select .input-group__append-icon{transition:.3s cubic-bezier(0,0,.2,1)}.input-group--select .input-group__append-icon.input-group__icon-clearable{transition:none}.input-group--select.input-group--focused .input-group--select__autocomplete,.input-group--select:not(.input-group--dirty) .input-group--select__autocomplete{padding-bottom:1px;height:30px}.input-group--select.input-group--focused .input-group--select__autocomplete{display:inline-block;opacity:1}.input-group--select.input-group--focused.input-group--open .input-group__append-icon:not(.input-group__icon-clearable){-webkit-transform:rotate(-180deg);transform:rotate(-180deg)}.input-group--select .input-group__input{cursor:pointer}.input-group--select.input-group--disabled{cursor:default;pointer-events:none}.input-group--select .input-group__selections{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;width:100%}.input-group--select .input-group__selections__comma{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:16px;padding:3px 4px 3px 0}.input-group--select .input-group__selections__comma--active{color:inherit}.input-group--select .menu{display:inline}.input-group--select .fade-transition-leave-active{position:absolute;left:0}.input-group--select.input-group--autocomplete.input-group--search-focused .input-group__selections__comma{display:none}.input-group--autocomplete .input-group__selections{cursor:text}.input-group.input-group--editable,.input-group.input-group--editable .input-group__append-icon,.input-group.input-group--overflow,.input-group.input-group--overflow .input-group__append-icon,.input-group.input-group--segmented,.input-group.input-group--segmented .input-group__append-icon{padding:0}.input-group.input-group--editable .input-group__selections,.input-group.input-group--editable input,.input-group.input-group--overflow .input-group__selections,.input-group.input-group--overflow input,.input-group.input-group--segmented .input-group__selections,.input-group.input-group--segmented input{height:48px}.input-group.input-group--editable .input-group__selections__comma,.input-group.input-group--editable input,.input-group.input-group--overflow .input-group__selections__comma,.input-group.input-group--overflow input,.input-group.input-group--segmented .input-group__selections__comma,.input-group.input-group--segmented input{top:0;left:0;padding-left:16px}.input-group.input-group--editable .input-group__selections,.input-group.input-group--overflow .input-group__selections,.input-group.input-group--segmented .input-group__selections{width:calc(100% - 55px)}.input-group.input-group--editable .input-group__selections .btn,.input-group.input-group--overflow .input-group__selections .btn,.input-group.input-group--segmented .input-group__selections .btn{border-radius:0;margin:0;height:48px;width:100%}.input-group.input-group--editable .input-group__selections .btn .btn__content,.input-group.input-group--overflow .input-group__selections .btn .btn__content,.input-group.input-group--segmented .input-group__selections .btn .btn__content{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}.input-group.input-group--editable .input-group__input,.input-group.input-group--overflow .input-group__input,.input-group.input-group--segmented .input-group__input{transition:.3s cubic-bezier(.25,.8,.5,1)}.input-group.input-group--editable.input-group--focused .input-group__input,.input-group.input-group--overflow.input-group--focused .input-group__input,.input-group.input-group--segmented.input-group--focused .input-group__input{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.input-group.input-group--editable label,.input-group.input-group--overflow label,.input-group.input-group--segmented label{left:16px!important;top:9px!important}.input-group.input-group--editable .input-group__details:after,.input-group.input-group--overflow .input-group__details:after,.input-group.input-group--segmented .input-group__details:after{display:none}.input-group.input-group--editable .input-group__input,.input-group.input-group--overflow .input-group__input,.input-group.input-group--segmented .input-group__input{padding:0}.input-group.input-group--editable .input-group__input:before,.input-group.input-group--overflow .input-group__input:before,.input-group.input-group--segmented .input-group__input:before{content:\\\"\\\";position:absolute;left:0;width:100%;height:1px;top:0;transition:.3s cubic-bezier(.25,.8,.5,1)}.input-group.input-group--editable .input-group__append-icon,.input-group.input-group--overflow .input-group__append-icon,.input-group.input-group--segmented .input-group__append-icon{width:55px}.input-group--editable .input-group__input:hover:after,.input-group--segmented .input-group__input:after,.input-group.input-group--focused.input-group--editable .input-group__input:after{background-color:rgba(0,0,0,.12);content:\\\"\\\";position:absolute;right:55px;height:48px;top:0;width:1px}.menu__content--select .input-group--selection-controls__ripple{display:none}.menu__content--autocomplete,.menu__content--autocomplete>.card{border-radius:0}.application .theme--light.list,.theme--light .list{background:#fff}.application .theme--light.list .list__tile:not(.list__tile--active),.theme--light .list .list__tile:not(.list__tile--active){color:rgba(0,0,0,.87)}.application .theme--light.list .list__tile__sub-title,.theme--light .list .list__tile__sub-title{color:rgba(0,0,0,.54)}.application .theme--light.list .divider,.theme--light .list .divider{background-color:rgba(0,0,0,.12)}.application .theme--light.list .list__tile__mask,.theme--light .list .list__tile__mask{color:rgba(0,0,0,.38)}.application .theme--light.list--group .list__tile--active .list__tile__title,.theme--light .list--group .list__tile--active .list__tile__title{color:#1976d2}.application .theme--dark.list,.theme--dark .list{background:#424242}.application .theme--dark.list .list__tile:not(.list__tile--active),.theme--dark .list .list__tile:not(.list__tile--active){color:#fff}.application .theme--dark.list .list__tile__sub-title,.theme--dark .list .list__tile__sub-title{color:hsla(0,0%,100%,.7)}.application .theme--dark.list .divider,.theme--dark .list .divider{background-color:hsla(0,0%,100%,.12)}.application .theme--dark.list .list__tile__mask,.theme--dark .list .list__tile__mask{color:hsla(0,0%,100%,.5)}.application .theme--dark.list--group .list__tile--active .list__tile__title,.theme--dark .list--group .list__tile--active .list__tile__title{color:#82b1ff}.list{list-style-type:none;padding:8px 0;transition:height .3s cubic-bezier(.4,0,.2,1)}.list .input-group{margin:0}.list>.list__tile~.list__tile{margin-top:0}.list__tile{font-size:16px;font-weight:400;display:-webkit-box;display:-ms-flexbox;display:flex;height:48px;text-decoration:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 16px;margin:0;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.list__tile,.list__tile:after{transition:.3s cubic-bezier(.25,.8,.5,1)}.list__tile:after{content:\\\"\\\";position:absolute;left:0;top:0;height:1px;opacity:0;width:100%;background-color:rgba(0,0,0,.12)}.list__tile--link{cursor:pointer}.list__tile--highlighted,.list__tile--link:hover{background:rgba(0,0,0,.12)}.list__tile__action,.list__tile__avatar,.list__tile__content{height:100%}.list__tile__sub-title,.list__tile__title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;width:100%}.list__tile__title{transition:.3s cubic-bezier(.25,.8,.5,1);height:24px;line-height:24px;position:relative;text-align:left}.list__tile__sub-title{font-size:14px}.list__tile .avatar,.list__tile__action{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;min-width:56px}.list__tile__action{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.list__tile__action .input-group--selection-controls{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0}.list__tile__action .input-group__details{display:none}.list__tile__action .icon{transition:.3s cubic-bezier(.25,.8,.5,1)}.list__tile__action .btn{padding:0;margin:0}.list__tile__action .btn--icon{margin:-8px}.list__tile__action-text{color:#9e9e9e;font-size:12px}.list__tile__action--stack{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-top:8px;padding-bottom:8px;white-space:nowrap;-ms-flex-direction:column;flex-direction:column}.list__tile__action--stack,.list__tile__content{-webkit-box-orient:vertical;-webkit-box-direction:normal}.list__tile__content{text-align:left;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}.list__tile__content~.avatar,.list__tile__content~.list__tile__action:not(.list__tile__action--stack){-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.list__tile--active .list__tile__action:first-of-type .icon{color:inherit}.list__tile--disabled{opacity:.4!important;pointer-events:none}.list__tile--avatar{height:56px}.list__tile--avatar .avatar .icon,.list__tile--avatar .avatar img{height:40px;width:40px}.list--dense{padding-top:4px;padding-bottom:4px}.list--dense .subheader{font-size:13px;height:40px}.list--dense .list--group .subheader{height:40px}.list--dense .list__tile{font-size:13px}.list--dense .list__tile--avatar{height:48px}.list--dense .list__tile:not(.list__tile--avatar){height:40px}.list--dense .list__tile .icon{font-size:22px}.list--dense .list__tile__sub-title{font-size:13px}.list--two-line .list__tile{height:72px}.list--two-line.list--dense .list__tile{height:60px}.list--three-line .list__tile{height:88px}.list--three-line .list__tile__sub-title{white-space:normal;-webkit-line-clamp:2;-webkit-box-orient:vertical;display:-webkit-box}.list--three-line.list--dense .list__tile{height:76px}.list--group{position:relative;padding:0}.list--group:after{content:\\\"\\\";position:absolute;left:0;bottom:0;height:1px;opacity:0;width:100%;background-color:rgba(0,0,0,.12)}.list--group .list__tile{padding-left:72px}.list--group__header>li:first-child{cursor:pointer;display:block}.list--group__header>li:first-child:hover{background:rgba(0,0,0,.12)}.list--group__header+.list--group:after{opacity:1}.list--group__header--active .list__tile{background:rgba(0,0,0,.12)}.list--group__header--active .list__tile:after{opacity:1}.list--group__header--active .list__tile .list__tile__title{color:inherit}.list--group__header--active .list__tile .list__tile__action:last-of-type .icon{-webkit-transform:rotate(-180deg);transform:rotate(-180deg)}.list--group__header--no-action+.list--group .list__tile{padding-left:16px}.list--subheader{padding-top:0}.list.list--three-line .list__tile__avatar,.list.list--two-line .list__tile__avatar{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.menu{display:inline-block;position:relative;vertical-align:middle}.menu--disabled{cursor:default}.menu--disabled .menu__activator,.menu--disabled .menu__activator>*{cursor:default;pointer-events:none}.menu__activator{-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;position:relative}.menu__activator input[readonly]{cursor:pointer}.menu__activator .toolbar__side-icon{margin:0}.menu__content{position:absolute;display:inline-block;border-radius:2px;max-width:80%;overflow-y:auto;overflow-x:hidden;contain:content;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.menu__content--active{pointer-events:none}.menu__content--dropdown{border-top-left-radius:0;border-top-right-radius:0;border-top:1px solid rgba(0,0,0,.12)}.menu__content>.card{contain:content;-webkit-backface-visibility:hidden;backface-visibility:hidden}.menu-transition-enter .list__tile{min-width:0;transition-delay:.4s;opacity:0;-webkit-transform:translateY(-15px);transform:translateY(-15px);pointer-events:none}.menu-transition-enter-to .list__tile{pointer-events:auto;opacity:1}.menu-transition-enter-to .list__tile--active{-webkit-transform:none!important;transform:none!important}.menu-transition-leave-to{-webkit-transform:translateY(-10px);transform:translateY(-10px)}.menu-transition-leave-active,.menu-transition-leave-to{pointer-events:none}.menu-transition-enter,.menu-transition-leave-to{opacity:0}.menu-transition-enter-to,.menu-transition-leave{opacity:1}.menu-transition-enter-active,.menu-transition-leave-active{transition:all .5s cubic-bezier(.25,.8,.5,1)}.menu-transition-enter.menu__content--auto .list__tile--active{opacity:1;-webkit-transform:none!important;transform:none!important;pointer-events:auto}.application .theme--light.small-dialog__actions,.application .theme--light.small-dialog__content,.theme--light .small-dialog__actions,.theme--light .small-dialog__content{background:#fff}.application .theme--light.small-dialog a,.theme--light .small-dialog a{color:rgba(0,0,0,.87)}.application .theme--dark.small-dialog__actions,.application .theme--dark.small-dialog__content,.theme--dark .small-dialog__actions,.theme--dark .small-dialog__content{background:#424242}.application .theme--dark.small-dialog a,.theme--dark .small-dialog a{color:#fff}.small-dialog{display:block;height:100%}.small-dialog__content{padding:0 24px}.small-dialog__actions{text-align:right}.small-dialog a{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;text-decoration:none}.small-dialog a>*{width:100%}.small-dialog .menu__activator{height:100%}.application .theme--dark.picker .picker__title,.theme--dark .picker .picker__title{background:#616161}.application .theme--light.picker,.theme--light .picker{color:rgba(0,0,0,.87)}.application .theme--light.picker .picker__body,.theme--light .picker .picker__body{background:#fff}.application .theme--dark.picker,.theme--dark .picker{color:#fff}.application .theme--dark.picker .picker__body,.theme--dark .picker .picker__body{background:#424242}.picker{border-radius:2px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:290px;contain:layout style}.picker .card__row--actions{border:none;margin-top:-20px}.picker__title{color:#fff;border-top-left-radius:2px;border-top-right-radius:2px;height:105px;padding:16px}.picker__body{height:290px;overflow:hidden;position:relative}.picker--landscape{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;width:500px}.picker--landscape .picker__title{border-top-right-radius:0;border-bottom-right-radius:0;-webkit-box-flex:0;-ms-flex:0 1 170px;flex:0 1 170px;width:170px;height:auto;position:absolute;top:0;left:0;height:100%;z-index:1}.picker--landscape .picker__body{-webkit-box-flex:1;-ms-flex:1 0;flex:1 0;width:330px;margin-left:170px}.picker--landscape .card__row--actions{margin-left:170px;width:330px}.application .theme--light.picker--date .picker--date__years li,.theme--light .picker--date .picker--date__years li{color:rgba(0,0,0,.87)}.application .theme--light.picker--date .picker--date__header-selector-date strong:not(:hover),.theme--light .picker--date .picker--date__header-selector-date strong:not(:hover){color:rgba(0,0,0,.87)!important}.application .theme--dark.picker--date .picker--date__years li,.theme--dark .picker--date .picker--date__years li{color:#fff}.application .theme--dark.picker--date .picker--date__header-selector-date strong:not(:hover),.theme--dark .picker--date .picker--date__header-selector-date strong:not(:hover){color:#fff!important}.picker--date__table .btn.btn--active{color:#fff}.picker--date__years{font-size:16px;font-weight:400;list-style-type:none;max-height:290px;overflow:auto;padding:0;text-align:center}.picker--date__years li{cursor:pointer;padding:8px 0;transition:none}.picker--date__years li.active{font-size:24px;font-weight:500;padding:10px 0}.picker--date__years li:hover{background:rgba(0,0,0,.12)}.picker--date__title{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:wrap;flex-wrap:wrap}.picker--date__title-year{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px}.picker--date__title-date{font-size:34px;text-align:left}.picker--date__title-date>div{position:relative}.picker--date__title-date,.picker--date__title-year{font-weight:500;transition:.3s cubic-bezier(.25,.8,.5,1);width:100%}.picker--date__title-date:not(.active),.picker--date__title-year:not(.active){cursor:pointer}.picker--date__header{padding:4px 16px}.picker--date__header-selector{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;position:relative}.picker--date__header-selector .btn{margin:0}.picker--date__header-selector .icon{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker--date__header-selector-date{-webkit-box-flex:1;-ms-flex:1;flex:1;text-align:center;position:relative;overflow:hidden}.picker--date__header-selector-date strong{cursor:pointer;transition:.3s cubic-bezier(.25,.8,.5,1);display:block;width:100%}.picker--date .btn{z-index:auto}.picker--date__table{position:relative}.picker--date table{transition:.3s cubic-bezier(.25,.8,.5,1);top:0;table-layout:fixed}.picker--date table th{padding:8px 0;font-weight:600;font-size:12px}.picker--date table td,.picker--date table th{text-align:center;width:45px}.picker--date table .btn{margin:0;height:32px;width:32px}.picker--month__table table{width:100%}.picker--month__table table td{width:33.333333%;height:56px;vertical-align:middle}.application .theme--light.divider,.theme--light .divider{background-color:rgba(0,0,0,.12)}.application .theme--dark.divider,.theme--dark .divider{background-color:hsla(0,0%,100%,.12)}.divider{border:none;display:block;height:1px;min-height:1px;-webkit-box-flex:1;-ms-flex:1;flex:1;width:100%}.divider--inset{margin-left:72px;width:calc(100% - 72px)}.application .theme--light.expansion-panel .expansion-panel__container,.theme--light .expansion-panel .expansion-panel__container{border-top:1px solid rgba(0,0,0,.12);background-color:#fff;color:rgba(0,0,0,.87)}.application .theme--light.expansion-panel .expansion-panel__container .expansion-panel__header .icon,.theme--light .expansion-panel .expansion-panel__container .expansion-panel__header .icon{color:rgba(0,0,0,.54)}.application .theme--light.expansion-panel--focusable .expansion-panel__container:focus,.theme--light .expansion-panel--focusable .expansion-panel__container:focus{background-color:#eee}.application .theme--dark.expansion-panel .expansion-panel__container,.theme--dark .expansion-panel .expansion-panel__container{border-top:1px solid hsla(0,0%,100%,.12);background-color:#424242;color:#fff}.application .theme--dark.expansion-panel .expansion-panel__container .expansion-panel__header .icon,.theme--dark .expansion-panel .expansion-panel__container .expansion-panel__header .icon{color:#fff}.application .theme--dark.expansion-panel--focusable .expansion-panel__container:focus,.theme--dark .expansion-panel--focusable .expansion-panel__container:focus{background-color:rgba(0,0,0,.7)}.expansion-panel{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;list-style-type:none;padding:0;text-align:left;width:100%;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.expansion-panel__container{-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%;outline:none;transition:.3s cubic-bezier(.25,.8,.5,1)}.expansion-panel__container:first-child{border-top:none!important}.expansion-panel__container .header__icon{margin-left:auto}.expansion-panel__container .header__icon .icon{transition:none}.expansion-panel__container--active>.expansion-panel__header .header__icon .icon{-webkit-transform:rotate(-180deg);transform:rotate(-180deg)}.expansion-panel__header{display:-webkit-box;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;padding:12px 24px}.expansion-panel__header>:not(.header__icon){-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.expansion-panel__body{transition:.3s cubic-bezier(.25,.8,.5,1)}.expansion-panel__body .card{border-radius:0}.expansion-panel--inset,.expansion-panel--popout,.expansion-panel__body .card{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.expansion-panel--inset .expansion-panel__container--active,.expansion-panel--popout .expansion-panel__container--active{margin:16px;box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}.expansion-panel--inset .expansion-panel__container,.expansion-panel--popout .expansion-panel__container{max-width:95%}.expansion-panel--popout .expansion-panel__container--active{max-width:100%}.expansion-panel--inset .expansion-panel__container--active{max-width:85%}.application .theme--light.footer,.theme--light .footer{background:#f5f5f5}.application .theme--dark.footer,.theme--dark .footer{background:#212121}.footer{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:0!important;-ms-flex:0 1 auto!important;flex:0 1 auto!important;min-height:36px;transition:.2s cubic-bezier(.4,0,.2,1)}.footer--absolute,.footer--fixed{bottom:0;left:0;width:100%;z-index:3}.footer--absolute{position:absolute}.footer--fixed{position:fixed}.footer>:first-child{margin-left:8px}.footer>:last-child{margin-right:8px}@media only screen and (max-width:599px){.footer>:first-child{margin-left:16px}.footer>:last-child{margin-right:16px}}.content{-ms-flex:1 1 auto;flex:1 1 auto;transition:padding .2s cubic-bezier(.4,0,.2,1);will-change:padding}.content,.content--wrap{-webkit-box-flex:1;max-width:100%}.content--wrap{-ms-flex:1 0 auto;flex:1 0 auto;display:-webkit-box;display:-ms-flexbox;display:flex}@-moz-document url-prefix(){@media print{.content--wrap{display:block}}}.container{-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%;margin:auto;padding:16px;width:100%}.container.fluid{max-width:100%}.container.fill-height{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex}.container.fill-height .layout{height:100%;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.container.grid-list-xs{padding:2px}.container.grid-list-xs .layout .flex{padding:1px}.container.grid-list-xs .layout:only-child{margin:-1px}.container.grid-list-xs .layout:not(:only-child){margin:auto -1px}.container.grid-list-xs :not(:only-child) .layout:first-child{margin-top:-1px}.container.grid-list-xs :not(:only-child) .layout:last-child{margin-bottom:-1px}.container.grid-list-sm{padding:4px}.container.grid-list-sm .layout .flex{padding:2px}.container.grid-list-sm .layout:only-child{margin:-2px}.container.grid-list-sm .layout:not(:only-child){margin:auto -2px}.container.grid-list-sm :not(:only-child) .layout:first-child{margin-top:-2px}.container.grid-list-sm :not(:only-child) .layout:last-child{margin-bottom:-2px}.container.grid-list-md{padding:8px}.container.grid-list-md .layout .flex{padding:4px}.container.grid-list-md .layout:only-child{margin:-4px}.container.grid-list-md .layout:not(:only-child){margin:auto -4px}.container.grid-list-md :not(:only-child) .layout:first-child{margin-top:-4px}.container.grid-list-md :not(:only-child) .layout:last-child{margin-bottom:-4px}.container.grid-list-lg{padding:16px}.container.grid-list-lg .layout .flex{padding:8px}.container.grid-list-lg .layout:only-child{margin:-8px}.container.grid-list-lg .layout:not(:only-child){margin:auto -8px}.container.grid-list-lg :not(:only-child) .layout:first-child{margin-top:-8px}.container.grid-list-lg :not(:only-child) .layout:last-child{margin-bottom:-8px}.container.grid-list-xl{padding:24px}.container.grid-list-xl .layout .flex{padding:12px}.container.grid-list-xl .layout:only-child{margin:-12px}.container.grid-list-xl .layout:not(:only-child){margin:auto -12px}.container.grid-list-xl :not(:only-child) .layout:first-child{margin-top:-12px}.container.grid-list-xl :not(:only-child) .layout:last-child{margin-bottom:-12px}.layout{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.layout.row{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.layout.row.reverse{-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.layout.column{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.layout.column.reverse{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.layout.wrap{-ms-flex-wrap:wrap;flex-wrap:wrap}.child-flex>*,.flex{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.align-start{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.align-end{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.align-center{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.align-baseline{-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.align-content-start{-ms-flex-line-pack:start;align-content:flex-start}.align-content-end{-ms-flex-line-pack:end;align-content:flex-end}.align-content-center{-ms-flex-line-pack:center;align-content:center}.align-content-space-between{-ms-flex-line-pack:justify;align-content:space-between}.align-content-space-around{-ms-flex-line-pack:distribute;align-content:space-around}.justify-start{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.justify-end{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.justify-center{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.justify-space-around{-ms-flex-pack:distribute;justify-content:space-around}.justify-space-between{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.spacer{-webkit-box-flex:1!important;-ms-flex-positive:1!important;flex-grow:1!important}.scroll-y{overflow-y:auto}.fill-height{height:100%}.hide-overflow{overflow:hidden!important}.show-overflow{overflow:visible!important}.ellipsis,.no-wrap{white-space:nowrap}.ellipsis{overflow:hidden;text-overflow:ellipsis}.d-flex{display:-webkit-box;display:-ms-flexbox;display:flex}.d-inline-flex{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}.d-flex>*,.d-inline-flex>*{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.d-block{display:block}.d-inline-block{display:inline-block}@media only screen and (min-width:960px){.container{max-width:900px}}@media only screen and (min-width:1264px){.container{max-width:1185px}}@media only screen and (min-width:1904px){.container{max-width:1785px}}@media only screen and (max-width:599px){.container{padding:24px}}@media (min-width:0){.flex.xs1{-ms-flex-preferred-size:8.333333333333332%;flex-basis:8.333333333333332%;max-width:8.333333333333332%}.flex.order-xs1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.flex.xs2{-ms-flex-preferred-size:16.666666666666664%;flex-basis:16.666666666666664%;max-width:16.666666666666664%}.flex.order-xs2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.flex.xs3{-ms-flex-preferred-size:25%;flex-basis:25%;max-width:25%}.flex.order-xs3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.flex.xs4{-ms-flex-preferred-size:33.33333333333333%;flex-basis:33.33333333333333%;max-width:33.33333333333333%}.flex.order-xs4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.flex.xs5{-ms-flex-preferred-size:41.66666666666667%;flex-basis:41.66666666666667%;max-width:41.66666666666667%}.flex.order-xs5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.flex.xs6{-ms-flex-preferred-size:50%;flex-basis:50%;max-width:50%}.flex.order-xs6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.flex.xs7{-ms-flex-preferred-size:58.333333333333336%;flex-basis:58.333333333333336%;max-width:58.333333333333336%}.flex.order-xs7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.flex.xs8{-ms-flex-preferred-size:66.66666666666666%;flex-basis:66.66666666666666%;max-width:66.66666666666666%}.flex.order-xs8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.flex.xs9{-ms-flex-preferred-size:75%;flex-basis:75%;max-width:75%}.flex.order-xs9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.flex.xs10{-ms-flex-preferred-size:83.33333333333334%;flex-basis:83.33333333333334%;max-width:83.33333333333334%}.flex.order-xs10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.flex.xs11{-ms-flex-preferred-size:91.66666666666666%;flex-basis:91.66666666666666%;max-width:91.66666666666666%}.flex.order-xs11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.flex.xs12{-ms-flex-preferred-size:100%;flex-basis:100%;max-width:100%}.flex.order-xs12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.flex.offset-xs0{margin-left:0}.flex.offset-xs1{margin-left:8.333333333333332%}.flex.offset-xs2{margin-left:16.666666666666664%}.flex.offset-xs3{margin-left:25%}.flex.offset-xs4{margin-left:33.33333333333333%}.flex.offset-xs5{margin-left:41.66666666666667%}.flex.offset-xs6{margin-left:50%}.flex.offset-xs7{margin-left:58.333333333333336%}.flex.offset-xs8{margin-left:66.66666666666666%}.flex.offset-xs9{margin-left:75%}.flex.offset-xs10{margin-left:83.33333333333334%}.flex.offset-xs11{margin-left:91.66666666666666%}.flex.offset-xs12{margin-left:100%}}@media (min-width:600px){.flex.sm1{-ms-flex-preferred-size:8.333333333333332%;flex-basis:8.333333333333332%;max-width:8.333333333333332%}.flex.order-sm1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.flex.sm2{-ms-flex-preferred-size:16.666666666666664%;flex-basis:16.666666666666664%;max-width:16.666666666666664%}.flex.order-sm2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.flex.sm3{-ms-flex-preferred-size:25%;flex-basis:25%;max-width:25%}.flex.order-sm3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.flex.sm4{-ms-flex-preferred-size:33.33333333333333%;flex-basis:33.33333333333333%;max-width:33.33333333333333%}.flex.order-sm4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.flex.sm5{-ms-flex-preferred-size:41.66666666666667%;flex-basis:41.66666666666667%;max-width:41.66666666666667%}.flex.order-sm5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.flex.sm6{-ms-flex-preferred-size:50%;flex-basis:50%;max-width:50%}.flex.order-sm6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.flex.sm7{-ms-flex-preferred-size:58.333333333333336%;flex-basis:58.333333333333336%;max-width:58.333333333333336%}.flex.order-sm7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.flex.sm8{-ms-flex-preferred-size:66.66666666666666%;flex-basis:66.66666666666666%;max-width:66.66666666666666%}.flex.order-sm8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.flex.sm9{-ms-flex-preferred-size:75%;flex-basis:75%;max-width:75%}.flex.order-sm9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.flex.sm10{-ms-flex-preferred-size:83.33333333333334%;flex-basis:83.33333333333334%;max-width:83.33333333333334%}.flex.order-sm10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.flex.sm11{-ms-flex-preferred-size:91.66666666666666%;flex-basis:91.66666666666666%;max-width:91.66666666666666%}.flex.order-sm11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.flex.sm12{-ms-flex-preferred-size:100%;flex-basis:100%;max-width:100%}.flex.order-sm12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.flex.offset-sm0{margin-left:0}.flex.offset-sm1{margin-left:8.333333333333332%}.flex.offset-sm2{margin-left:16.666666666666664%}.flex.offset-sm3{margin-left:25%}.flex.offset-sm4{margin-left:33.33333333333333%}.flex.offset-sm5{margin-left:41.66666666666667%}.flex.offset-sm6{margin-left:50%}.flex.offset-sm7{margin-left:58.333333333333336%}.flex.offset-sm8{margin-left:66.66666666666666%}.flex.offset-sm9{margin-left:75%}.flex.offset-sm10{margin-left:83.33333333333334%}.flex.offset-sm11{margin-left:91.66666666666666%}.flex.offset-sm12{margin-left:100%}}@media (min-width:960px){.flex.md1{-ms-flex-preferred-size:8.333333333333332%;flex-basis:8.333333333333332%;max-width:8.333333333333332%}.flex.order-md1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.flex.md2{-ms-flex-preferred-size:16.666666666666664%;flex-basis:16.666666666666664%;max-width:16.666666666666664%}.flex.order-md2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.flex.md3{-ms-flex-preferred-size:25%;flex-basis:25%;max-width:25%}.flex.order-md3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.flex.md4{-ms-flex-preferred-size:33.33333333333333%;flex-basis:33.33333333333333%;max-width:33.33333333333333%}.flex.order-md4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.flex.md5{-ms-flex-preferred-size:41.66666666666667%;flex-basis:41.66666666666667%;max-width:41.66666666666667%}.flex.order-md5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.flex.md6{-ms-flex-preferred-size:50%;flex-basis:50%;max-width:50%}.flex.order-md6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.flex.md7{-ms-flex-preferred-size:58.333333333333336%;flex-basis:58.333333333333336%;max-width:58.333333333333336%}.flex.order-md7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.flex.md8{-ms-flex-preferred-size:66.66666666666666%;flex-basis:66.66666666666666%;max-width:66.66666666666666%}.flex.order-md8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.flex.md9{-ms-flex-preferred-size:75%;flex-basis:75%;max-width:75%}.flex.order-md9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.flex.md10{-ms-flex-preferred-size:83.33333333333334%;flex-basis:83.33333333333334%;max-width:83.33333333333334%}.flex.order-md10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.flex.md11{-ms-flex-preferred-size:91.66666666666666%;flex-basis:91.66666666666666%;max-width:91.66666666666666%}.flex.order-md11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.flex.md12{-ms-flex-preferred-size:100%;flex-basis:100%;max-width:100%}.flex.order-md12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.flex.offset-md0{margin-left:0}.flex.offset-md1{margin-left:8.333333333333332%}.flex.offset-md2{margin-left:16.666666666666664%}.flex.offset-md3{margin-left:25%}.flex.offset-md4{margin-left:33.33333333333333%}.flex.offset-md5{margin-left:41.66666666666667%}.flex.offset-md6{margin-left:50%}.flex.offset-md7{margin-left:58.333333333333336%}.flex.offset-md8{margin-left:66.66666666666666%}.flex.offset-md9{margin-left:75%}.flex.offset-md10{margin-left:83.33333333333334%}.flex.offset-md11{margin-left:91.66666666666666%}.flex.offset-md12{margin-left:100%}}@media (min-width:1264px){.flex.lg1{-ms-flex-preferred-size:8.333333333333332%;flex-basis:8.333333333333332%;max-width:8.333333333333332%}.flex.order-lg1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.flex.lg2{-ms-flex-preferred-size:16.666666666666664%;flex-basis:16.666666666666664%;max-width:16.666666666666664%}.flex.order-lg2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.flex.lg3{-ms-flex-preferred-size:25%;flex-basis:25%;max-width:25%}.flex.order-lg3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.flex.lg4{-ms-flex-preferred-size:33.33333333333333%;flex-basis:33.33333333333333%;max-width:33.33333333333333%}.flex.order-lg4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.flex.lg5{-ms-flex-preferred-size:41.66666666666667%;flex-basis:41.66666666666667%;max-width:41.66666666666667%}.flex.order-lg5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.flex.lg6{-ms-flex-preferred-size:50%;flex-basis:50%;max-width:50%}.flex.order-lg6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.flex.lg7{-ms-flex-preferred-size:58.333333333333336%;flex-basis:58.333333333333336%;max-width:58.333333333333336%}.flex.order-lg7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.flex.lg8{-ms-flex-preferred-size:66.66666666666666%;flex-basis:66.66666666666666%;max-width:66.66666666666666%}.flex.order-lg8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.flex.lg9{-ms-flex-preferred-size:75%;flex-basis:75%;max-width:75%}.flex.order-lg9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.flex.lg10{-ms-flex-preferred-size:83.33333333333334%;flex-basis:83.33333333333334%;max-width:83.33333333333334%}.flex.order-lg10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.flex.lg11{-ms-flex-preferred-size:91.66666666666666%;flex-basis:91.66666666666666%;max-width:91.66666666666666%}.flex.order-lg11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.flex.lg12{-ms-flex-preferred-size:100%;flex-basis:100%;max-width:100%}.flex.order-lg12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.flex.offset-lg0{margin-left:0}.flex.offset-lg1{margin-left:8.333333333333332%}.flex.offset-lg2{margin-left:16.666666666666664%}.flex.offset-lg3{margin-left:25%}.flex.offset-lg4{margin-left:33.33333333333333%}.flex.offset-lg5{margin-left:41.66666666666667%}.flex.offset-lg6{margin-left:50%}.flex.offset-lg7{margin-left:58.333333333333336%}.flex.offset-lg8{margin-left:66.66666666666666%}.flex.offset-lg9{margin-left:75%}.flex.offset-lg10{margin-left:83.33333333333334%}.flex.offset-lg11{margin-left:91.66666666666666%}.flex.offset-lg12{margin-left:100%}}@media (min-width:1904px){.flex.xl1{-ms-flex-preferred-size:8.333333333333332%;flex-basis:8.333333333333332%;max-width:8.333333333333332%}.flex.order-xl1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.flex.xl2{-ms-flex-preferred-size:16.666666666666664%;flex-basis:16.666666666666664%;max-width:16.666666666666664%}.flex.order-xl2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.flex.xl3{-ms-flex-preferred-size:25%;flex-basis:25%;max-width:25%}.flex.order-xl3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.flex.xl4{-ms-flex-preferred-size:33.33333333333333%;flex-basis:33.33333333333333%;max-width:33.33333333333333%}.flex.order-xl4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.flex.xl5{-ms-flex-preferred-size:41.66666666666667%;flex-basis:41.66666666666667%;max-width:41.66666666666667%}.flex.order-xl5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.flex.xl6{-ms-flex-preferred-size:50%;flex-basis:50%;max-width:50%}.flex.order-xl6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.flex.xl7{-ms-flex-preferred-size:58.333333333333336%;flex-basis:58.333333333333336%;max-width:58.333333333333336%}.flex.order-xl7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.flex.xl8{-ms-flex-preferred-size:66.66666666666666%;flex-basis:66.66666666666666%;max-width:66.66666666666666%}.flex.order-xl8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.flex.xl9{-ms-flex-preferred-size:75%;flex-basis:75%;max-width:75%}.flex.order-xl9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.flex.xl10{-ms-flex-preferred-size:83.33333333333334%;flex-basis:83.33333333333334%;max-width:83.33333333333334%}.flex.order-xl10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.flex.xl11{-ms-flex-preferred-size:91.66666666666666%;flex-basis:91.66666666666666%;max-width:91.66666666666666%}.flex.order-xl11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.flex.xl12{-ms-flex-preferred-size:100%;flex-basis:100%;max-width:100%}.flex.order-xl12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.flex.offset-xl0{margin-left:0}.flex.offset-xl1{margin-left:8.333333333333332%}.flex.offset-xl2{margin-left:16.666666666666664%}.flex.offset-xl3{margin-left:25%}.flex.offset-xl4{margin-left:33.33333333333333%}.flex.offset-xl5{margin-left:41.66666666666667%}.flex.offset-xl6{margin-left:50%}.flex.offset-xl7{margin-left:58.333333333333336%}.flex.offset-xl8{margin-left:66.66666666666666%}.flex.offset-xl9{margin-left:75%}.flex.offset-xl10{margin-left:83.33333333333334%}.flex.offset-xl11{margin-left:91.66666666666666%}.flex.offset-xl12{margin-left:100%}}.application .theme--light.navigation-drawer,.theme--light .navigation-drawer{background-color:#fff}.application .theme--light.navigation-drawer:not(.navigation-drawer--floating) .navigation-drawer__border,.theme--light .navigation-drawer:not(.navigation-drawer--floating) .navigation-drawer__border{background-color:rgba(0,0,0,.12)}.application .theme--light.navigation-drawer .list,.application .theme--light.navigation-drawer a:not(.list__tile--active),.theme--light .navigation-drawer .list,.theme--light .navigation-drawer a:not(.list__tile--active){color:rgba(0,0,0,.87)}.application .theme--light.navigation-drawer .divider,.theme--light .navigation-drawer .divider{background-color:rgba(0,0,0,.12)}.application .theme--light.navigation-drawer .list__tile:not(.list__tile--active),.theme--light .navigation-drawer .list__tile:not(.list__tile--active){color:rgba(0,0,0,.87)}.application .theme--light.navigation-drawer .list__tile:not(.list__tile--active) .icon,.application .theme--light.navigation-drawer .list__tile__sub-title,.theme--light .navigation-drawer .list__tile:not(.list__tile--active) .icon,.theme--light .navigation-drawer .list__tile__sub-title{color:rgba(0,0,0,.54)}.application .theme--light.navigation-drawer .list--group__header--active+.list--group:after,.application .theme--light.navigation-drawer .list--group__header--active .list__tile:after,.theme--light .navigation-drawer .list--group__header--active+.list--group:after,.theme--light .navigation-drawer .list--group__header--active .list__tile:after{background:rgba(0,0,0,.12)}.application .theme--dark.navigation-drawer,.theme--dark .navigation-drawer{background-color:#424242}.application .theme--dark.navigation-drawer:not(.navigation-drawer--floating) .navigation-drawer__border,.theme--dark .navigation-drawer:not(.navigation-drawer--floating) .navigation-drawer__border{background-color:hsla(0,0%,100%,.12)}.application .theme--dark.navigation-drawer .list,.application .theme--dark.navigation-drawer a:not(.list__tile--active),.theme--dark .navigation-drawer .list,.theme--dark .navigation-drawer a:not(.list__tile--active){color:#fff}.application .theme--dark.navigation-drawer .divider,.theme--dark .navigation-drawer .divider{background-color:hsla(0,0%,100%,.12)}.application .theme--dark.navigation-drawer .list__tile:not(.list__tile--active),.application .theme--dark.navigation-drawer .list__tile:not(.list__tile--active) .icon,.theme--dark .navigation-drawer .list__tile:not(.list__tile--active),.theme--dark .navigation-drawer .list__tile:not(.list__tile--active) .icon{color:#fff}.application .theme--dark.navigation-drawer .list__tile__sub-title,.theme--dark .navigation-drawer .list__tile__sub-title{color:hsla(0,0%,100%,.7)}.application .theme--dark.navigation-drawer .list--group__header--active+.list--group:after,.application .theme--dark.navigation-drawer .list--group__header--active .list__tile:after,.theme--dark .navigation-drawer .list--group__header--active+.list--group:after,.theme--dark .navigation-drawer .list--group__header--active .list__tile:after{background:hsla(0,0%,100%,.12)}.navigation-drawer{max-width:100%;overflow-y:auto;overflow-x:hidden;-webkit-overflow-scrolling:touch;padding:0 0 100px;pointer-events:auto;transition:.2s cubic-bezier(.4,0,.2,1);top:0;left:0;will-change:transform;z-index:3}.navigation-drawer__border{position:absolute;right:0;top:0;height:100%;width:1px}.navigation-drawer.navigation-drawer--right:after{left:0;right:auto}.navigation-drawer--close.navigation-drawer:not(.navigation-drawer--right){-webkit-transform:translateX(-100%);transform:translateX(-100%)}.navigation-drawer--close.navigation-drawer--right{-webkit-transform:translateX(100%);transform:translateX(100%)}.navigation-drawer--right{left:auto;right:0}.navigation-drawer--right>.navigation-drawer__border{right:auto;left:0}.navigation-drawer--absolute{position:absolute}.navigation-drawer--fixed{position:fixed}.navigation-drawer--floating:after{display:none}.navigation-drawer--mini-variant{overflow:hidden}.navigation-drawer--mini-variant .list__tile__action,.navigation-drawer--mini-variant .list__tile__avatar{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;min-width:48px}.navigation-drawer--mini-variant .list__tile:after,.navigation-drawer--mini-variant .list__tile__content{opacity:0}.navigation-drawer--mini-variant .divider,.navigation-drawer--mini-variant .list--group,.navigation-drawer--mini-variant .subheader{display:none!important}.navigation-drawer--is-mobile,.navigation-drawer--temporary{z-index:6}.navigation-drawer--is-mobile:not(.navigation-drawer--close),.navigation-drawer--temporary:not(.navigation-drawer--close){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.navigation-drawer .list{background:inherit}.navigation-drawer>.list .list__tile{transition:none;font-weight:500}.navigation-drawer>.list .list__tile--active .list__tile__title{color:inherit}.navigation-drawer>.list .list--group .list__tile{font-weight:400}.navigation-drawer>.list .list--group__header--active:after{background:transparent}.navigation-drawer>.list:not(.list--dense) .list__tile{font-size:14px}.application .theme--light.pagination__item,.theme--light .pagination__item{background:#fff;color:#000}.application .theme--light.pagination__item--active,.theme--light .pagination__item--active{color:#fff}.application .theme--light.pagination__navigation,.theme--light .pagination__navigation{background:#fff}.application .theme--light.pagination__navigation .icon,.theme--light .pagination__navigation .icon{color:rgba(0,0,0,.54)}.application .theme--dark.pagination__item,.theme--dark .pagination__item{background:#424242;color:#fff}.application .theme--dark.pagination__item--active,.theme--dark .pagination__item--active{color:#fff}.application .theme--dark.pagination__navigation,.theme--dark .pagination__navigation{background:#424242}.application .theme--dark.pagination__navigation .icon,.theme--dark .pagination__navigation .icon{color:#fff}.pagination{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;list-style-type:none;margin:0;overflow-x:auto;max-width:100%;padding:0}.pagination,.pagination>li{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.pagination>li{display:-webkit-box;display:-ms-flexbox;display:flex}.pagination--circle .pagination__item,.pagination--circle .pagination__more,.pagination--circle .pagination__navigation{border-radius:50%}.pagination--disabled{pointer-events:none;opacity:.6}.pagination__item{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);border-radius:4px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:14px;background:transparent;height:34px;width:34px;margin:.3rem;text-decoration:none;transition:.3s cubic-bezier(0,0,.2,1)}.pagination__item--active{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}.pagination__navigation{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-decoration:none;height:2rem;border-radius:4px;width:2rem;margin:.3rem 10px}.pagination__navigation .icon{font-size:2rem;transition:.2s cubic-bezier(.4,0,.6,1);vertical-align:middle}.pagination__navigation--disabled{opacity:.6;pointer-events:none}.pagination__more{margin:.3rem;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:2rem;width:2rem}.parallax{position:relative;overflow:hidden;z-index:0}.parallax__image-container{position:absolute;top:0;left:0;right:0;bottom:0;z-index:1;contain:strict}.parallax__image{position:absolute;bottom:0;left:50%;min-width:100%;min-height:100%;display:none;-webkit-transform:translate(-50%);transform:translate(-50%);will-change:transform;transition:opacity .3s cubic-bezier(.25,.8,.5,1);z-index:1}.parallax__content{color:#fff;height:100%;z-index:2;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:0 1rem}.progress-circular{position:relative;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}.progress-circular--indeterminate svg{-webkit-animation:g 1.4s linear infinite;animation:g 1.4s linear infinite;-webkit-transform-origin:center center;transform-origin:center center;width:100%;height:100%;margin:auto;position:absolute;top:0;bottom:0;left:0;right:0;transition:all .2s ease-in-out;z-index:0}.progress-circular--indeterminate .progress-circular__overlay{-webkit-animation:f 1.4s ease-in-out infinite;animation:f 1.4s ease-in-out infinite;stroke-linecap:round;stroke-dasharray:80,200;stroke-dashoffset:0px}.progress-circular__underlay{stroke:rgba(0,0,0,.1);z-index:1}.progress-circular__overlay{stroke:currentColor;z-index:2;transition:all .6s ease-in-out}.progress-circular__info{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}@-webkit-keyframes f{0%{stroke-dasharray:1,200;stroke-dashoffset:0px}50%{stroke-dasharray:100,200;stroke-dashoffset:-15px}to{stroke-dasharray:100,200;stroke-dashoffset:-125px}}@keyframes f{0%{stroke-dasharray:1,200;stroke-dashoffset:0px}50%{stroke-dasharray:100,200;stroke-dashoffset:-15px}to{stroke-dasharray:100,200;stroke-dashoffset:-125px}}@-webkit-keyframes g{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes g{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.radio-group .input-group__details:after,.radio-group .input-group__details:before{display:none}.radio-group .input-group{padding:0}.radio-group--column .input-group__input{display:block}.radio-group--row .input-group__input{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.radio-group.input-group--error .radio .icon--selection-control,.radio-group.input-group--error .radio label{color:inherit}.application .theme--light.input-group--slider label,.theme--light .input-group--slider label{color:rgba(0,0,0,.54)}.application .theme--light.input-group--slider .slider__track,.application .theme--light.input-group--slider .slider__track-fill,.theme--light .input-group--slider .slider__track,.theme--light .input-group--slider .slider__track-fill{background:rgba(0,0,0,.26)}.application .theme--light.input-group--slider .slider__tick,.application .theme--light.input-group--slider .slider__track__container:after,.theme--light .input-group--slider .slider__tick,.theme--light .input-group--slider .slider__track__container:after{border:1px solid rgba(0,0,0,.87)}.application .theme--light.input-group--slider:not(.input-group--dirty) .slider__thumb--label,.theme--light .input-group--slider:not(.input-group--dirty) .slider__thumb--label{background:rgba(0,0,0,.26)}.application .theme--light.input-group--slider:not(.input-group--dirty) .slider__thumb,.theme--light .input-group--slider:not(.input-group--dirty) .slider__thumb{border:3px solid rgba(0,0,0,.26)}.application .theme--light.input-group--slider:not(.input-group--dirty):focus .slider__thumb,.theme--light .input-group--slider:not(.input-group--dirty):focus .slider__thumb{border:3px solid rgba(0,0,0,.38)}.application .theme--light.input-group--slider.input-group--disabled .slider__thumb,.theme--light .input-group--slider.input-group--disabled .slider__thumb{background:none;border:3px solid rgba(0,0,0,.26)}.application .theme--light.input-group--slider.input-group--disabled.input-group--dirty .slider__thumb,.theme--light .input-group--slider.input-group--disabled.input-group--dirty .slider__thumb{background:rgba(0,0,0,.26);border:0 solid transparent}.application .theme--light.input-group--slider:focus .slider__track,.theme--light .input-group--slider:focus .slider__track{background:rgba(0,0,0,.38)}.application .theme--dark.input-group--slider label,.theme--dark .input-group--slider label{color:hsla(0,0%,100%,.7)}.application .theme--dark.input-group--slider .slider__track,.application .theme--dark.input-group--slider .slider__track-fill,.theme--dark .input-group--slider .slider__track,.theme--dark .input-group--slider .slider__track-fill{background:hsla(0,0%,100%,.2)}.application .theme--dark.input-group--slider .slider__tick,.application .theme--dark.input-group--slider .slider__track__container:after,.theme--dark .input-group--slider .slider__tick,.theme--dark .input-group--slider .slider__track__container:after{border:1px solid #fff}.application .theme--dark.input-group--slider:not(.input-group--dirty) .slider__thumb--label,.theme--dark .input-group--slider:not(.input-group--dirty) .slider__thumb--label{background:hsla(0,0%,100%,.2)}.application .theme--dark.input-group--slider:not(.input-group--dirty) .slider__thumb,.theme--dark .input-group--slider:not(.input-group--dirty) .slider__thumb{border:3px solid hsla(0,0%,100%,.2)}.application .theme--dark.input-group--slider:not(.input-group--dirty):focus .slider__thumb,.theme--dark .input-group--slider:not(.input-group--dirty):focus .slider__thumb{border:3px solid hsla(0,0%,100%,.3)}.application .theme--dark.input-group--slider.input-group--disabled .slider__thumb,.theme--dark .input-group--slider.input-group--disabled .slider__thumb{background:none;border:3px solid hsla(0,0%,100%,.2)}.application .theme--dark.input-group--slider.input-group--disabled.input-group--dirty .slider__thumb,.theme--dark .input-group--slider.input-group--disabled.input-group--dirty .slider__thumb{background:hsla(0,0%,100%,.2);border:0 solid transparent}.application .theme--dark.input-group--slider:focus .slider__track,.theme--dark .input-group--slider:focus .slider__track{background:hsla(0,0%,100%,.3)}.input-group.input-group--slider{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-right:16px}.input-group.input-group--slider .input-group__details:after,.input-group.input-group--slider .input-group__details:before{display:none}.input-group.input-group--slider .input-group__input{-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%}.input-group.input-group--slider label{-webkit-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto;width:auto;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:18px;-webkit-transform:none;transform:none}.input-group.input-group--slider label+.input-group__input{margin-left:16px;-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto}.input-group.input-group--slider.input-group--active .slider__thumb{-webkit-transform:translateY(-50%) scale(1.2);transform:translateY(-50%) scale(1.2)}.input-group.input-group--slider.input-group--active .slider__track{transition:none}.input-group.input-group--slider.input-group--active .slider__thumb-container--label .slider__thumb,.input-group.input-group--slider.input-group--active .slider__thumb-container--label .slider__thumb:hover{-webkit-transform:translateY(-50%) scale(0);transform:translateY(-50%) scale(0)}.input-group.input-group--slider.input-group--active .slider__thumb-container,.input-group.input-group--slider.input-group--active .slider__track-fill{transition:none}.input-group.input-group--slider.input-group--active.input-group--ticks .slider__tick,.input-group.input-group--slider.input-group--active.input-group--ticks .slider__track__container:after{opacity:1}.input-group.input-group--slider.input-group--disabled{pointer-events:none}.input-group.input-group--slider.input-group--disabled .slider__thumb{-webkit-transform:translateY(-50%) scale(.5);transform:translateY(-50%) scale(.5);background:transparent}.input-group.input-group--slider.input-group--disabled.input-group--dirty{border-color:transparent}.input-group.input-group--slider.input-group--prepend-icon .slider{margin-left:40px}.input-group.input-group--slider.input-group--append-icon .slider{margin-right:40px}.slider{cursor:default;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;height:30px;-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.slider__track__container{position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);height:2px;width:100%;overflow:hidden}.slider__track__container:after{content:\\\"\\\";position:absolute;right:0;top:0;height:2px;transition:.3s cubic-bezier(.25,.8,.5,1);width:2px;opacity:0}.slider__thumb,.slider__tick,.slider__track{position:absolute;top:0}.slider__track{-webkit-transform-origin:right;transform-origin:right;overflow:hidden}.slider__track,.slider__track-fill{height:2px;left:0;transition:.3s cubic-bezier(.25,.8,.5,1);width:100%}.slider__track-fill{position:absolute;-webkit-transform-origin:left;transform-origin:left}.slider__ticks-container{position:absolute;left:0;height:2px;width:100%;top:50%;overflow:hidden}.slider__tick{transition:.3s cubic-bezier(.25,.8,.5,1);opacity:0}.slider__thumb-container{position:absolute}.slider__thumb,.slider__thumb-container{top:50%;transition:.3s cubic-bezier(.25,.8,.5,1)}.slider__thumb{width:16px;height:16px;left:-8px;border-radius:50%;background:transparent;-webkit-transform:translateY(-50%) scale(.8);transform:translateY(-50%) scale(.8);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.slider__thumb--label__container{position:absolute;left:0;top:0;transition:.3s ease-in-out}.slider__thumb--label{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:12px;color:#fff;width:28px;height:28px;border-radius:50% 50% 0;position:absolute;left:-14px;top:-40px;-webkit-transform:rotate(45deg);transform:rotate(45deg);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:.3s ease-in-out}.slider__thumb--label span{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.slider__track,.slider__track-fill{position:absolute}.snack{background-color:#323232;position:fixed;display:-webkit-box;display:-ms-flexbox;display:flex;height:0;pointer-events:none;visibility:visible;z-index:1000}.snack--absolute{position:absolute}.snack--top{top:0}.snack--bottom,.snack--top{left:50%;-webkit-transform:translate(-50%);transform:translate(-50%)}.snack--bottom{bottom:48px}.snack--left{left:8px;right:auto;-webkit-transform:none;transform:none}.snack--left.snack--top{top:8px}.snack--left.snack--bottom{bottom:56px}.snack--right{left:auto;right:8px;-webkit-transform:none;transform:none}.snack--right.snack--top{top:8px}.snack--right.snack--bottom{top:auto;bottom:56px}.snack__content{background-color:inherit;padding:14px 24px;border-radius:2px;pointer-events:auto;max-width:568px;min-width:288px;height:48px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;font-size:14px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;transition:.4s cubic-bezier(.25,.8,.5,1);position:relative!important;box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.snack__content .btn{margin:0 0 0 48px}.snack--multi-line .snack__content{height:80px;padding:24px}.snack--bottom.snack--multi-line,.snack--right.snack--multi-line{bottom:80px}.snack--vertical .snack__content{height:112px;padding:24px 24px 14px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:initial;-ms-flex-align:initial;align-items:initial}.snack--vertical .snack__content .btn{-ms-flex-item-align:end;align-self:flex-end}.snack--bottom.snack--vertical,.snack--right.snack--vertical{bottom:112px}@media only screen and (max-width:599px){.snack{width:100%;left:0;right:auto;-webkit-transform:none;transform:none}.snack--left.snack--top,.snack--right.snack--top{top:0}.snack--left.snack--bottom,.snack--right.snack--bottom{bottom:48px}.snack__content{border-radius:0;max-width:100%;width:100%}.snack__content .btn{margin:0 0 0 24px}}.speed-dial{position:relative}.speed-dial--absolute{position:absolute}.speed-dial--fixed{position:fixed}.speed-dial--top:not(.speed-dial--absolute){top:16px}.speed-dial--top.speed-dial--absolute{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.speed-dial--bottom:not(.speed-dial--absolute){bottom:16px}.speed-dial--bottom.speed-dial--absolute{bottom:50%;-webkit-transform:translateY(50%);transform:translateY(50%)}.speed-dial--left{left:16px}.speed-dial--right{right:16px}.speed-dial--direction-left .speed-dial__list,.speed-dial--direction-right .speed-dial__list{height:100%;top:0}.speed-dial--direction-bottom .speed-dial__list,.speed-dial--direction-top .speed-dial__list{left:0;width:100%}.speed-dial--direction-top .speed-dial__list{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;bottom:100%}.speed-dial--direction-right .speed-dial__list{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;left:100%}.speed-dial--direction-bottom .speed-dial__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;top:100%}.speed-dial--direction-left .speed-dial__list{-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse;right:100%}.speed-dial__list{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:absolute}.speed-dial__list .btn:first-child{transition-delay:.05s}.speed-dial__list .btn:nth-child(2){transition-delay:.1s}.speed-dial__list .btn:nth-child(3){transition-delay:.15s}.speed-dial__list .btn:nth-child(4){transition-delay:.2s}.speed-dial__list .btn:nth-child(5){transition-delay:.25s}.speed-dial__list .btn:nth-child(6){transition-delay:.3s}.speed-dial__list .btn:nth-child(7){transition-delay:.35s}.application .theme--light.stepper,.theme--light .stepper{background:#fff}.application .theme--light.stepper .stepper__step:not(.stepper__step--active):not(.stepper__step--complete):not(.stepper__step--error) .stepper__step__step,.theme--light .stepper .stepper__step:not(.stepper__step--active):not(.stepper__step--complete):not(.stepper__step--error) .stepper__step__step{background:rgba(0,0,0,.38)}.application .theme--light.stepper .stepper__step__step,.application .theme--light.stepper .stepper__step__step .icon,.theme--light .stepper .stepper__step__step,.theme--light .stepper .stepper__step__step .icon{color:#fff}.application .theme--light.stepper .stepper__header .divider,.theme--light .stepper .stepper__header .divider{background:rgba(0,0,0,.12)}.application .theme--light.stepper .stepper__step--active .stepper__label,.theme--light .stepper .stepper__step--active .stepper__label{text-shadow:0 0 0 #000}.application .theme--light.stepper .stepper__step--editable:hover,.theme--light .stepper .stepper__step--editable:hover{background:rgba(0,0,0,.06)}.application .theme--light.stepper .stepper__step--editable:hover .stepper__label,.theme--light .stepper .stepper__step--editable:hover .stepper__label{text-shadow:0 0 0 #000}.application .theme--light.stepper .stepper__step--complete .stepper__label,.theme--light .stepper .stepper__step--complete .stepper__label{color:rgba(0,0,0,.87)}.application .theme--light.stepper .stepper__step--inactive.stepper__step--editable:not(.stepper__step--error):hover .stepper__step__step,.theme--light .stepper .stepper__step--inactive.stepper__step--editable:not(.stepper__step--error):hover .stepper__step__step{background:rgba(0,0,0,.54)}.application .theme--light.stepper .stepper__label,.theme--light .stepper .stepper__label{color:rgba(0,0,0,.38)}.application .theme--light.stepper--non-linear .stepper__step:not(.stepper__step--complete):not(.stepper__step--error) .stepper__label,.application .theme--light.stepper .stepper__label small,.theme--light .stepper--non-linear .stepper__step:not(.stepper__step--complete):not(.stepper__step--error) .stepper__label,.theme--light .stepper .stepper__label small{color:rgba(0,0,0,.54)}.application .theme--light.stepper--vertical .stepper__content:not(:last-child),.theme--light .stepper--vertical .stepper__content:not(:last-child){border-left:1px solid rgba(0,0,0,.12)}.application .theme--dark.stepper,.theme--dark .stepper{background:#303030}.application .theme--dark.stepper .stepper__step:not(.stepper__step--active):not(.stepper__step--complete):not(.stepper__step--error) .stepper__step__step,.theme--dark .stepper .stepper__step:not(.stepper__step--active):not(.stepper__step--complete):not(.stepper__step--error) .stepper__step__step{background:hsla(0,0%,100%,.5)}.application .theme--dark.stepper .stepper__step__step,.application .theme--dark.stepper .stepper__step__step .icon,.theme--dark .stepper .stepper__step__step,.theme--dark .stepper .stepper__step__step .icon{color:#fff}.application .theme--dark.stepper .stepper__header .divider,.theme--dark .stepper .stepper__header .divider{background:hsla(0,0%,100%,.12)}.application .theme--dark.stepper .stepper__step--active .stepper__label,.theme--dark .stepper .stepper__step--active .stepper__label{text-shadow:0 0 0 #fff}.application .theme--dark.stepper .stepper__step--editable:hover,.theme--dark .stepper .stepper__step--editable:hover{background:hsla(0,0%,100%,.06)}.application .theme--dark.stepper .stepper__step--editable:hover .stepper__label,.theme--dark .stepper .stepper__step--editable:hover .stepper__label{text-shadow:0 0 0 #fff}.application .theme--dark.stepper .stepper__step--complete .stepper__label,.theme--dark .stepper .stepper__step--complete .stepper__label{color:hsla(0,0%,100%,.87)}.application .theme--dark.stepper .stepper__step--inactive.stepper__step--editable:not(.stepper__step--error):hover .stepper__step__step,.theme--dark .stepper .stepper__step--inactive.stepper__step--editable:not(.stepper__step--error):hover .stepper__step__step{background:hsla(0,0%,100%,.75)}.application .theme--dark.stepper .stepper__label,.theme--dark .stepper .stepper__label{color:hsla(0,0%,100%,.5)}.application .theme--dark.stepper--non-linear .stepper__step:not(.stepper__step--complete):not(.stepper__step--error) .stepper__label,.application .theme--dark.stepper .stepper__label small,.theme--dark .stepper--non-linear .stepper__step:not(.stepper__step--complete):not(.stepper__step--error) .stepper__label,.theme--dark .stepper .stepper__label small{color:hsla(0,0%,100%,.7)}.application .theme--dark.stepper--vertical .stepper__content:not(:last-child),.theme--dark .stepper--vertical .stepper__content:not(:last-child){border-left:1px solid hsla(0,0%,100%,.12)}.stepper{overflow:hidden;position:relative}.stepper,.stepper__header{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.stepper__header{-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.stepper__header .divider{-ms-flex-item-align:center;align-self:center;margin:0 -16px}.stepper__items{position:relative;overflow:hidden}.stepper__step__step{-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:50%;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:12px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:24px;margin-right:8px;min-width:24px;width:24px;transition:.3s cubic-bezier(.25,.8,.25,1)}.stepper__step__step .icon{font-size:18px}.stepper__step{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;padding:24px;position:relative}.stepper__step--active .stepper__label{transition:.3s cubic-bezier(.4,0,.6,1)}.stepper__step--editable{cursor:pointer}.stepper__step.stepper__step--error .stepper__step__step{background:transparent;color:inherit}.stepper__step.stepper__step--error .stepper__step__step .icon{font-size:24px;color:inherit}.stepper__step.stepper__step--error .stepper__label{color:inherit;text-shadow:none;font-weight:500}.stepper__step.stepper__step--error .stepper__label small{color:inherit}.stepper__label{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;text-align:left}.stepper__label small{font-size:12px;font-weight:300;text-shadow:none}.stepper__wrapper{overflow:hidden;transition:none}.stepper__content{top:auto;bottom:0;padding:16px;-webkit-box-flex:1;-ms-flex:1;flex:1;width:100%}.stepper__content .btn{margin-left:0}.stepper--is-booted .stepper__content,.stepper--is-booted .stepper__wrapper{transition:.4s cubic-bezier(.4,0,.6,1)}.stepper--vertical{padding-bottom:36px}.stepper--vertical .stepper__content{margin:-8px -36px -16px 36px;padding:16px 60px 16px 23px;width:auto}.stepper--vertical .stepper__step{padding:24px 24px 16px}.stepper--vertical .stepper__step__step{margin-right:12px}.stepper--alt-labels .stepper__header .divider{margin:35px -67px 0;-ms-flex-item-align:start;align-self:flex-start}.stepper--alt-labels .stepper__step{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-preferred-size:175px;flex-basis:175px}.stepper--alt-labels .stepper__step small{-ms-flex-item-align:center;align-self:center}.stepper--alt-labels .stepper__step__step{margin-right:0;margin-bottom:12px}@media only screen and (max-width:959px){.stepper:not(.stepper--vertical) .stepper__label{display:none}.stepper:not(.stepper--vertical) .stepper__step__step{margin-right:0}}.application .theme--light.subheader,.theme--light .subheader{color:rgba(0,0,0,.54)}.application .theme--dark.subheader,.theme--dark .subheader{color:hsla(0,0%,100%,.7)}.subheader{height:48px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:14px;font-weight:500;padding:0 16px}.subheader--inset{margin-left:56px}.application .theme--light.switch:not(.input-group--dirty) .input-group--selection-controls__container,.theme--light .switch:not(.input-group--dirty) .input-group--selection-controls__container{color:rgba(0,0,0,.38)!important}.application .theme--light.switch .input-group--selection-controls__ripple:after,.theme--light .switch .input-group--selection-controls__ripple:after{background-color:#fafafa}.application .theme--light.switch .input-group--selection-controls__ripple:not(.input-group--selection-controls__ripple--active),.theme--light .switch .input-group--selection-controls__ripple:not(.input-group--selection-controls__ripple--active){color:rgba(0,0,0,.38)}.application .theme--light.switch .input-group--selection-controls__ripple--active:after,.theme--light .switch .input-group--selection-controls__ripple--active:after{background-color:currentColor}.application .theme--light.switch .input-group--selection-controls__toggle,.theme--light .switch .input-group--selection-controls__toggle{color:rgba(0,0,0,.38)}.application .theme--light.switch .input-group--selection-controls__toggle--active,.theme--light .switch .input-group--selection-controls__toggle--active{color:inherit}.application .theme--light.switch.input-group--disabled .input-group--selection-controls__ripple:after,.theme--light .switch.input-group--disabled .input-group--selection-controls__ripple:after{background-color:#bdbdbd!important}.application .theme--light.switch.input-group--disabled .input-group--selection-controls__toggle,.theme--light .switch.input-group--disabled .input-group--selection-controls__toggle{color:rgba(0,0,0,.12)!important}.application .theme--dark.switch:not(.input-group--dirty) .input-group--selection-controls__container,.theme--dark .switch:not(.input-group--dirty) .input-group--selection-controls__container{color:hsla(0,0%,100%,.3)!important}.application .theme--dark.switch .input-group--selection-controls__ripple:after,.theme--dark .switch .input-group--selection-controls__ripple:after{background-color:#bdbdbd}.application .theme--dark.switch .input-group--selection-controls__ripple:not(.input-group--selection-controls__ripple--active),.theme--dark .switch .input-group--selection-controls__ripple:not(.input-group--selection-controls__ripple--active){color:hsla(0,0%,100%,.3)}.application .theme--dark.switch .input-group--selection-controls__ripple--active:after,.theme--dark .switch .input-group--selection-controls__ripple--active:after{background-color:currentColor}.application .theme--dark.switch .input-group--selection-controls__toggle,.theme--dark .switch .input-group--selection-controls__toggle{color:hsla(0,0%,100%,.3)}.application .theme--dark.switch .input-group--selection-controls__toggle--active,.theme--dark .switch .input-group--selection-controls__toggle--active{color:inherit}.application .theme--dark.switch.input-group--disabled .input-group--selection-controls__ripple:after,.theme--dark .switch.input-group--disabled .input-group--selection-controls__ripple:after{background-color:#424242!important}.application .theme--dark.switch.input-group--disabled .input-group--selection-controls__toggle,.theme--dark .switch.input-group--disabled .input-group--selection-controls__toggle{color:hsla(0,0%,100%,.1)!important}.input-group.input-group--selection-controls{z-index:0}.input-group.input-group--selection-controls.switch{min-width:36px}.input-group.input-group--selection-controls.switch .input-group--selection-controls__container{color:inherit;position:relative}.input-group.input-group--selection-controls.switch .input-group--selection-controls__container[class*=\\\"--text\\\"] .input-group--selection-controls__ripple--active:after{background-color:currentColor}.input-group.input-group--selection-controls.switch .input-group--selection-controls__toggle{background-color:currentColor;color:inherit;position:absolute;height:14px;top:50%;left:0;width:34px;border-radius:8px;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.input-group.input-group--selection-controls.switch .input-group--selection-controls__toggle.input-group--selection-controls__toggle--active{opacity:.5}.input-group.input-group--selection-controls.switch .input-group--selection-controls__ripple{-webkit-transform:translate(-15px,-24px);transform:translate(-15px,-24px);transition:.3s cubic-bezier(.25,.8,.25,1);z-index:1}.input-group.input-group--selection-controls.switch .input-group--selection-controls__ripple:after{content:\\\"\\\";position:absolute;display:inline-block;cursor:pointer;width:20px;border-radius:50%;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);height:20px;box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}.input-group.input-group--selection-controls.switch .input-group--selection-controls__ripple--active{-webkit-transform:translate(2px,-24px);transform:translate(2px,-24px)}.input-group.input-group--selection-controls.switch label{padding-left:14px}.application .theme--light.system-bar,.theme--light .system-bar{background-color:#e0e0e0;color:rgba(0,0,0,.54)}.application .theme--light.system-bar .icon,.theme--light .system-bar .icon{color:rgba(0,0,0,.54)}.application .theme--light.system-bar--lights-out,.theme--light .system-bar--lights-out{background-color:hsla(0,0%,100%,.7)!important}.application .theme--dark.system-bar,.theme--dark .system-bar{background-color:#000;color:hsla(0,0%,100%,.7)}.application .theme--dark.system-bar .icon,.theme--dark .system-bar .icon{color:hsla(0,0%,100%,.7)}.application .theme--dark.system-bar--lights-out,.theme--dark .system-bar--lights-out{background-color:rgba(0,0,0,.2)!important}.system-bar{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;font-size:14px;font-weight:500;padding:0 8px}.system-bar .icon{font-size:16px}.system-bar--absolute,.system-bar--fixed{left:0;top:0;width:100%;z-index:3}.system-bar--fixed{position:fixed}.system-bar--absolute{position:absolute}.system-bar--status .icon{margin-right:4px}.system-bar--window .icon{font-size:20px;margin-right:8px}.application .theme--light.tabs__bar .tabs__li,.theme--light .tabs__bar .tabs__li{color:rgba(0,0,0,.87)}.application .theme--light.tabs__bar .tabs__li.tabs__item--disabled,.theme--light .tabs__bar .tabs__li.tabs__item--disabled{color:rgba(0,0,0,.26)}.application .theme--light.tabs__bar .tabs__bar,.theme--light .tabs__bar .tabs__bar{background-color:#fff}.application .theme--light.tabs__bar .tabs__bar .icon--left,.application .theme--light.tabs__bar .tabs__bar .icon--right,.theme--light .tabs__bar .tabs__bar .icon--left,.theme--light .tabs__bar .tabs__bar .icon--right{color:rgba(0,0,0,.38)}.application .theme--dark.tabs__bar .tabs__li,.theme--dark .tabs__bar .tabs__li{color:#fff}.application .theme--dark.tabs__bar .tabs__li.tabs__item--disabled,.theme--dark .tabs__bar .tabs__li.tabs__item--disabled{color:hsla(0,0%,100%,.3)}.application .theme--dark.tabs__bar .tabs__bar,.theme--dark .tabs__bar .tabs__bar{background-color:#424242}.application .theme--dark.tabs__bar .tabs__bar .icon--left,.application .theme--dark.tabs__bar .tabs__bar .icon--right,.theme--dark .tabs__bar .tabs__bar .icon--left,.theme--dark .tabs__bar .tabs__bar .icon--right{color:hsla(0,0%,100%,.5)}.tabs{overflow:hidden;position:relative;width:100%}.tabs--grow .tabs__bar .tabs__li{-webkit-box-flex:1;-ms-flex:1;flex:1}.tabs--fixed>.tabs__bar .tabs__li{min-width:160px;max-width:264px;-webkit-box-flex:0;-ms-flex:0 1 160px;flex:0 1 160px}.tabs--centered .tabs__bar .tabs__container{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.tabs--icons .tabs__bar{height:72px}.tabs--icons .tabs__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.tabs.tabs--mobile .tabs__bar .icon--left,.tabs.tabs--mobile .tabs__bar .icon--right{display:none}.tabs.tabs--mobile .tabs__bar .tabs__wrapper--scrollable.tabs__wrapper--overflow{overflow:hidden!important}.tabs:not(.tabs--grow):not(.tabs--mobile) .tabs__item{padding:0 24px}.tabs:not(.tabs--centered):not(.tabs--grow):not(.tabs--mobile) .tabs__wrapper--scrollable{margin:0 60px;overflow:hidden!important}.tabs__bar{width:100%;position:relative;height:48px}.tabs__bar .icon--left,.tabs__bar .icon--right{position:absolute;top:0;width:32px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.tabs__bar .icon--left{left:28px}.tabs__bar .icon--right{right:28px}.tabs__container{display:-webkit-box;display:-ms-flexbox;display:flex;height:100%;width:100%;position:absolute;padding:0;top:0;-webkit-box-align:center;-ms-flex-align:center;align-items:center;list-style:none;will-change:transform;transition:-webkit-transform .6s cubic-bezier(.86,0,.07,1);transition:transform .6s cubic-bezier(.86,0,.07,1);transition:transform .6s cubic-bezier(.86,0,.07,1),-webkit-transform .6s cubic-bezier(.86,0,.07,1)}.tabs__container>li:not(.tabs__slider){height:100%}.tabs__container-left{position:absolute;left:0;top:0;height:100%;width:32px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.tabs__wrapper{position:relative;overflow-x:auto;height:inherit}.tabs__item{-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:inherit!important;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:100%;padding:0 12px;position:relative;opacity:.7;text-align:center;text-decoration:none;text-transform:uppercase;text-overflow:ellipsis;white-space:nowrap}.tabs__item .icon{color:inherit;margin:0 0 5px}.tabs__item--active{opacity:1}.tabs__item--disabled{pointer-events:none}.tabs__items{position:relative;overflow:hidden}.tabs__content{transition:.3s cubic-bezier(.25,.8,.5,1);width:100%}.tabs__content .card{border-radius:0 0 2px 2px}.tabs__slider{position:absolute;bottom:0;height:2px;transition:.3s cubic-bezier(.25,.8,.5,1)}@media only screen and (max-width:599px){.tabs--fixed>.tabs__bar .tabs__li{min-width:72px}}@media only screen and (max-width:959px){.tabs__bar{padding-left:0}}.application .theme--light.picker--time .picker--time__clock,.theme--light .picker--time .picker--time__clock{background:#e0e0e0}.application .theme--light.picker--time .picker--time__clock>span.disabled,.theme--light .picker--time .picker--time__clock>span.disabled{color:rgba(0,0,0,.26)}.application .theme--dark.picker--time .picker--time__clock,.theme--dark .picker--time .picker--time__clock{background:#616161}.application .theme--dark.picker--time .picker--time__clock>span.disabled,.theme--dark .picker--time .picker--time__clock>span.disabled{color:hsla(0,0%,100%,.3)}.picker--time .card__row--actions{margin-top:-10px}.picker--time.picker--landscape{-ms-flex-wrap:wrap;flex-wrap:wrap}.picker--time.picker--landscape .picker__title{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.picker--time.picker--landscape .picker__title div:first-child{text-align:right}.picker--time.picker--landscape .picker__title div:first-child span{height:55px;font-size:55px}.picker--time.picker--landscape .picker__title div:last-child{margin:16px 0 0;-ms-flex-item-align:initial;align-self:auto;text-align:center}.picker--time.picker--landscape .picker--time__clock{height:250px;width:250px}.picker--time.picker--landscape .picker--time__clock-hand{height:97px}.picker--time .picker__title{color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.picker--time .picker__title div:first-child{white-space:nowrap}.picker--time .picker__title div:first-child span{-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;height:70px;font-size:70px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;opacity:.6;transition:.3s cubic-bezier(.25,.8,.5,1)}.picker--time .picker__title div:first-child span.active{opacity:1}.picker--time .picker__title div:last-child{-ms-flex-item-align:end;align-self:flex-end;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;font-size:16px;margin:8px 0 6px 8px}.picker--time .picker__title div:last-child span{cursor:pointer;opacity:.6;transition:.3s cubic-bezier(.25,.8,.5,1)}.picker--time .picker__title div:last-child span.active{opacity:1}.picker--time .picker__title div:only-child{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.picker--time__clock{height:270px;width:270px;border-radius:100%;position:absolute;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;top:50%;left:50%;transition:.3s cubic-bezier(.25,.8,.5,1);-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker--time__clock-hand{height:40%;width:2px;bottom:50%;left:calc(50% - 1px);-webkit-transform-origin:center bottom;transform-origin:center bottom;position:absolute;will-change:transform;z-index:1}.picker--time__clock-hand:before{background:transparent;border-width:2px;width:10px;height:10px;top:-3%}.picker--time__clock-hand:after,.picker--time__clock-hand:before{border-style:solid;border-color:inherit;border-radius:100%;content:\\\"\\\";position:absolute;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker--time__clock-hand:after{height:8px;width:8px;top:100%;background-color:inherit}.picker--time__clock>span{-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:100%;cursor:default;display:-webkit-box;display:-ms-flexbox;display:flex;font-size:16px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;left:calc(50% - 16px);height:32px;position:absolute;text-align:center;top:calc(50% - 16px);width:32px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker--time__clock>span>span{z-index:1}.picker--time__clock>span:after,.picker--time__clock>span:before{content:\\\"\\\";border-radius:100%;position:absolute;top:50%;left:50%;height:14px;width:14px;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);height:40px;width:40px}.picker--time__clock>span.active{color:#fff;cursor:default;z-index:2}.picker--time__clock>span.disabled{pointer-events:none}.picker--time .card__row--actions{border:none}.application .theme--light.toolbar,.theme--light .toolbar{background-color:#f5f5f5;color:rgba(0,0,0,.87)}.application .theme--dark.toolbar,.theme--dark .toolbar{background-color:#212121;color:#fff}.toolbar{position:relative;transition:.2s cubic-bezier(.4,0,.2,1);width:100%;will-change:padding-left;box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}.toolbar .input-group--solo .input-group__details{display:none}.toolbar .input-group--single-line:not(.input-group--solo){padding:0}.toolbar .input-group--single-line:not(.input-group--solo) label{top:auto}.toolbar__title{font-size:20px;font-weight:500;letter-spacing:.02em;margin-left:16px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.toolbar__content,.toolbar__extension{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex}.toolbar__content>.list,.toolbar__extension>.list{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;margin:0!important;max-height:100%}.toolbar__content>.btn:last-child,.toolbar__content>.menu:first-child,.toolbar__extension>.btn:last-child,.toolbar__extension>.menu:first-child{margin-right:8px}.toolbar__content>.btn:first-child,.toolbar__content>.menu:first-child,.toolbar__extension>.btn:first-child,.toolbar__extension>.menu:first-child{margin-left:8px}.toolbar__content>:not(.btn):not(.menu):first-child,.toolbar__extension>:not(.btn):not(.menu):first-child{margin-left:16px}.toolbar__content>:not(.btn):not(.menu):last-child,.toolbar__extension>:not(.btn):not(.menu):last-child{margin-right:16px}.toolbar__items{display:-webkit-box;display:-ms-flexbox;display:flex;height:100%;max-width:100%;padding:0}.toolbar__items .menu,.toolbar__items>.menu .menu__activator{height:100%}.toolbar__items>.btn,.toolbar__items>.menu .menu__activator .btn{height:100%;margin:0}.toolbar--card{border-radius:2px 2px 0 0;box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.toolbar--fixed{position:fixed;z-index:2}.toolbar--absolute,.toolbar--fixed{top:0;left:0}.toolbar--absolute{position:absolute;z-index:2}.toolbar--floating{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;margin:16px;width:auto}.toolbar--clipped{z-index:3}.toolbar__extension .toolbar__title{margin-left:72px!important}.toolbar__extension .tabs__bar{-ms-flex-item-align:end;align-self:flex-end;margin:0}@media only screen and (max-width:599px){.toolbar .toolbar__content>.btn:last-child,.toolbar .toolbar__extension>.btn:last-child{margin-right:17px}.toolbar .toolbar__content>.btn:first-child,.toolbar .toolbar__extension>.btn:first-child{margin-left:17px}.toolbar .toolbar__content>:not(.btn):not(.menu):first-child,.toolbar .toolbar__extension>:not(.btn):not(.menu):first-child{margin-left:24px}.toolbar .toolbar__content>:not(.btn):not(.menu):last-child,.toolbar .toolbar__extension>:not(.btn):not(.menu):last-child{margin-right:24px}}.tooltip{position:relative}.tooltip__content{background:#616161;border-radius:2px;color:#fff;font-size:12px;display:inline-block;padding:5px 8px;position:absolute;text-transform:none;transition:.15s cubic-bezier(.25,.8,.5,1);width:auto;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.tooltip__content[class*=-active]{pointer-events:none}@media only screen and (max-width:959px){.tooltip .tooltip__content{padding:10px 16px}}\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///26\n");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(28);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(1)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./index.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL2luZGV4LnNjc3M/NDMyNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vaW5kZXguc2Nzc1wiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvc3R5bGVzL2luZGV4LnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDI3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///27\n");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(0)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"body {\\n  font: 13px Roboto, Tahoma, Geneva, sans-serif;\\n  color: #888; }\\n\\n.application.theme--light,\\n.application .theme--light.card, .theme--light .card {\\n  color: inherit; }\\n\\nh1, h2, h3, h4 {\\n  font-weight: normal;\\n  margin-bottom: 0.5em; }\\n\\nh1 {\\n  font-size: 2.5em;\\n  margin-bottom: 0; }\\n\\nh2 {\\n  margin-top: 3em;\\n  font-size: 2em;\\n  color: #ff5252;\\n  padding-bottom: 0.3em;\\n  border-bottom: 1px solid #ddd; }\\n\\nh3 {\\n  font-size: 1.5em;\\n  margin-top: 4em;\\n  color: #42b983; }\\n\\nh2 + h3,\\nh2 + a[name] + h3 {\\n  margin-top: 0; }\\n\\nh3 a[href] {\\n  color: inherit !important; }\\n\\nh3 a[href]:before {\\n  content: \\\"# \\\";\\n  color: #ddd;\\n  font-size: 1.2em;\\n  transition: 0.3s; }\\n\\nh3 a[href]:hover:before {\\n  color: #ccc; }\\n\\nh4 {\\n  margin-top: 2em;\\n  font-size: 1.2em;\\n  color: #666; }\\n\\na {\\n  text-decoration: none; }\\n\\np b {\\n  color: #333;\\n  font-weight: 500; }\\n\\n.toolbar {\\n  z-index: 100;\\n  position: absolute;\\n  border-bottom: 1px solid transparent !important;\\n  transition: 0.3s ease-in-out all, 0.1s 0s ease-in-out border-color;\\n  top: 0; }\\n  .toolbar__title {\\n    position: relative;\\n    overflow: visible;\\n    margin-left: auto !important;\\n    margin-right: auto !important;\\n    width: 22em;\\n    transition: 0.3s ease-in-out;\\n    font-size: 1em;\\n    padding: 0 1em;\\n    background-color: #fff; }\\n    .toolbar__title:before, .toolbar__title:after {\\n      content: \\\"\\\";\\n      position: absolute;\\n      top: 50%;\\n      left: -40%;\\n      right: -40%;\\n      display: block;\\n      z-index: -1; }\\n    .toolbar__title:before {\\n      margin-top: -1px;\\n      border: 2px solid #ff5252; }\\n    .toolbar__title:after {\\n      margin-top: 5px;\\n      border: 1px solid #42b983; }\\n  .toolbar__logo {\\n    width: 60px;\\n    padding-right: 1em;\\n    fill: #ff5252;\\n    vertical-align: middle;\\n    transition: 0.2s 0s ease-in-out; }\\n  .toolbar__logo-link {\\n    display: inline-block; }\\n  .toolbar__logo-title {\\n    display: inline-block;\\n    vertical-align: middle;\\n    transition: 0.3s ease-in-out; }\\n  .toolbar__items {\\n    position: absolute;\\n    right: 0;\\n    transition: 0.3s ease-in-out;\\n    transform: translateX(100%);\\n    opacity: 0; }\\n  .toolbar .intro {\\n    position: absolute;\\n    top: 5em;\\n    left: 0;\\n    right: 0;\\n    color: #999;\\n    opacity: 1;\\n    transform: translateY(0em);\\n    transition: 0.3s .4s ease-in-out, 0s 0s top;\\n    text-align: center;\\n    font-style: italic; }\\n  .toolbar.scrolled {\\n    transition: 0.6s ease-in-out all, 0.3s 0.5s ease-in-out border-color;\\n    border-bottom-color: #ddd !important;\\n    position: fixed; }\\n    .toolbar.scrolled .toolbar__title {\\n      width: 100%;\\n      transition: 0.6s ease-in-out all, 0.3s 0.3s ease-in-out background-color; }\\n    .toolbar.scrolled .toolbar__logo {\\n      width: 50px; }\\n    .toolbar.scrolled .toolbar__logo-title {\\n      font-size: 1.7em; }\\n    .toolbar.scrolled .toolbar__items {\\n      transition: 0.3s 0.3s ease-in-out all;\\n      transform: translateX(0%);\\n      opacity: 1; }\\n    .toolbar.scrolled .intro {\\n      transition: 0.2s 0s ease-in-out all, 0s 0.3s top;\\n      transform: translateY(1em);\\n      opacity: 0;\\n      top: -5em; }\\n\\na[name] {\\n  position: relative;\\n  top: -4em;\\n  display: block; }\\n\\nul {\\n  margin-top: 1em;\\n  padding-left: 1.3em; }\\n\\npre {\\n  padding: 0.5em;\\n  margin: 1.5em 0;\\n  border: 1px solid #ddd;\\n  background-color: #f8f8f8;\\n  border-radius: 4px;\\n  display: block;\\n  box-shadow: none; }\\n\\n.page__title {\\n  color: #ff5252;\\n  background-color: #fff;\\n  padding: 1.5em;\\n  display: inline-flex;\\n  align-items: center; }\\n\\n.max-widthed, h2, h3, h4, p, pre {\\n  max-width: 1100px;\\n  margin-left: auto !important;\\n  margin-right: auto !important; }\\n\\n.application {\\n  background-color: #fff !important;\\n  padding-top: 8em; }\\n\\n.application--wrap {\\n  padding-top: 16em; }\\n\\n.application--wrap footer.footer {\\n  background: none;\\n  font-style: italic;\\n  color: #888;\\n  font-size: .9em; }\\n  .application--wrap footer.footer i {\\n    font-size: 1.2em;\\n    vertical-align: middle;\\n    transition: 1s ease-out;\\n    cursor: pointer; }\\n    .application--wrap footer.footer i.fa-css3 {\\n      font-size: 1.1em; }\\n    .application--wrap footer.footer i.fa-html5:hover, .application--wrap footer.footer i.fa-css3:hover {\\n      transform: rotate(360deg); }\\n    .application--wrap footer.footer i.heart:hover {\\n      animation: pulse 1.8s ease-out infinite; }\\n\\n@keyframes pulse {\\n  0%, 20%, 30%, 35%, 45%, 100% {\\n    transform: scale(1); }\\n  25%, 40% {\\n    transform: scale(1.3); } }\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

eval("module.exports = \"<v-app light=\\\"light\\\" v-scroll=\\\"onScroll\\\"><v-toolbar app=\\\"app\\\" light=\\\"light\\\" color=\\\"white\\\" dense=\\\"dense\\\" flat=\\\"flat\\\" fixed=\\\"fixed\\\" align-center=\\\"align-center\\\" :class=\\\"{'scrolled': offsetTop &gt; 104}\\\"><v-toolbar-title><router-link class=\\\"toolbar__logo-link\\\" to=\\\"/\\\"><svg class=\\\"toolbar__logo\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 442 442\\\"><g><path d=\\\"M166.636,225.195c3.941,15.981,27.265,26.307,59.421,26.307c24.085,0,39.358-8.799,45.619-17.032 c4.127-5.425,5.304-11.479,3.498-17.994c-3.601-12.994-22.35-19.318-52.796-28.189l-8.495-2.479 c-31.046-9.043-66.234-19.293-73.691-46.198c-3.764-13.58-1.119-27.262,7.447-38.526c0.341-0.448,0.694-0.889,1.052-1.328 c2.441-2.992,2.942-7.122,1.287-10.611c-1.656-3.489-5.172-5.712-9.034-5.712h-35.127c-2.912,0-5.679,1.269-7.579,3.476l-43.038,50 c-3.228,3.75-3.228,9.297,0,13.048l74.285,86.302c2.859,3.32,7.544,4.393,11.563,2.648c4.019-1.745,6.433-5.903,5.958-10.258 c-0.54-4.949,2.697-9.58,7.531-10.771c0.795-0.196,1.605-0.295,2.409-0.295C161.546,217.583,165.532,220.713,166.636,225.195z   M149.746,198.46c-6.929,1.708-12.766,5.77-16.8,11.164l-56.974-66.191l34.431-40h12.92c-5.458,12.997-6.348,27.293-2.405,41.518 c10.435,37.647,53.094,50.074,87.369,60.057l8.493,2.478c8.507,2.479,18.15,5.289,26.049,8.284 c8.659,3.285,11.886,5.539,12.992,6.508c-0.02,0.026-0.04,0.054-0.062,0.083c-2.794,3.674-13.009,9.14-29.7,9.14 c-27.185,0-39.002-8.284-40.002-11.095c-3.313-13.438-15.284-22.824-29.112-22.824C154.527,197.583,152.106,197.879,149.746,198.46 z\\\"></path><path d=\\\"M263.197,264.516c-10.906,4.57-23.749,6.986-37.14,6.986c-18.762,0-35.732-3.221-49.077-9.313 c-4.274-1.952-9.329-0.665-12.149,3.091c-2.821,3.756-2.648,8.969,0.417,12.53l48.173,55.966c1.9,2.207,4.667,3.476,7.579,3.476 s5.679-1.269,7.579-3.476l46.062-53.513c3.026-3.516,3.237-8.651,0.51-12.403C272.424,264.107,267.476,262.723,263.197,264.516z   M221,311.922l-19.034-22.113c7.686,1.12,15.757,1.692,24.091,1.692c4.414,0,8.791-0.224,13.093-0.666L221,311.922z\\\"></path><path d=\\\"M336.185,83.434h-36.583c-3.924,0-7.485,2.295-9.106,5.867c-1.622,3.573-1.004,7.764,1.58,10.717 c7.581,8.665,11.425,18.845,11.425,30.258c0,5.514-4.486,10-10,10s-10-4.486-10-10c0-25.24-34.223-36.538-68.141-36.538 c-27.285,0-44.649,10.049-51.802,19.454c-4.832,6.353-6.208,13.444-4.093,21.076c4.159,15.004,27.497,22.868,60.008,32.337 l8.496,2.479c30.671,8.937,59.641,17.377,66.479,42.049c1.536,5.544,1.931,11.109,1.174,16.54 c-0.612,4.393,1.743,8.665,5.785,10.493c1.325,0.599,2.727,0.889,4.116,0.889c2.847,0,5.637-1.217,7.583-3.477l73.698-85.62 c3.228-3.75,3.228-9.297,0-13.048l-43.038-50C341.864,84.703,339.097,83.434,336.185,83.434z M313.378,204.602 c-10.316-34.469-47.216-45.221-79.811-54.718l-8.497-2.479c-9.928-2.892-21.182-6.17-30.645-9.91 c-12.553-4.962-15.322-8.215-15.757-8.831c-0.352-1.365-0.253-1.969,0.809-3.365c3.041-3.999,14.455-11.561,35.883-11.561 c27.553,0,48.141,8.732,48.141,16.538c0,16.542,13.458,30,30,30s30-13.458,30-30c0-9.448-1.934-18.504-5.679-26.842h13.777 l34.431,40L313.378,204.602z\\\"></path><path d=\\\"M439.579,136.91l-77.468-90c-1.9-2.207-4.667-3.476-7.579-3.476H87.468c-2.912,0-5.679,1.269-7.579,3.476l-77.468,90 c-3.228,3.75-3.228,9.297,0,13.048l211,245.132c1.9,2.207,4.667,3.477,7.579,3.477s5.679-1.27,7.579-3.477l211-245.132 C442.807,146.208,442.807,140.661,439.579,136.91z M221,373.238L23.194,143.434l68.861-80h257.89l68.861,80L221,373.238z\\\"></path></g></svg><h1 class=\\\"primary--text toolbar__logo-title\\\">Vueper Slides</h1></router-link></v-toolbar-title><p class=\\\"intro\\\">Vueper Slides is an easy to use responsive & touch-ready slideshow made for VueJS.\\n<br/>- Inspired by <a href=\\\"http://kenwheeler.github.io/slick/\\\" target=\\\"_blank\\\">Slick</a> -</p><v-toolbar-items><v-btn flat=\\\"flat\\\" color=\\\"secondary\\\" href=\\\"#examples\\\"><v-icon>apps &nbsp;</v-icon><span>Examples</span></v-btn></v-toolbar-items></v-toolbar><div><router-view></router-view><v-footer class=\\\"max-widthed\\\"><span class=\\\"copyright\\\">Copyright © 2018 Antoni André, all rights reserved.</span><v-spacer></v-spacer><span class=\\\"made-with\\\">This site is made with &nbsp; VueJS, <v-icon class=\\\"heart\\\">favorite</v-icon></span></v-footer></div></v-app>\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGUucHVnP2FjZDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNE1BQTRNLDBCQUEwQixLQUFLLHlpSEFBeWlILG9TQUFvUyIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8di1hcHAgbGlnaHQ9XFxcImxpZ2h0XFxcIiB2LXNjcm9sbD1cXFwib25TY3JvbGxcXFwiPjx2LXRvb2xiYXIgYXBwPVxcXCJhcHBcXFwiIGxpZ2h0PVxcXCJsaWdodFxcXCIgY29sb3I9XFxcIndoaXRlXFxcIiBkZW5zZT1cXFwiZGVuc2VcXFwiIGZsYXQ9XFxcImZsYXRcXFwiIGZpeGVkPVxcXCJmaXhlZFxcXCIgYWxpZ24tY2VudGVyPVxcXCJhbGlnbi1jZW50ZXJcXFwiIDpjbGFzcz1cXFwieydzY3JvbGxlZCc6IG9mZnNldFRvcCAmZ3Q7IDEwNH1cXFwiPjx2LXRvb2xiYXItdGl0bGU+PHJvdXRlci1saW5rIGNsYXNzPVxcXCJ0b29sYmFyX19sb2dvLWxpbmtcXFwiIHRvPVxcXCIvXFxcIj48c3ZnIGNsYXNzPVxcXCJ0b29sYmFyX19sb2dvXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHhtbG5zOnhsaW5rPVxcXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXFxcIiB2aWV3Qm94PVxcXCIwIDAgNDQyIDQ0MlxcXCI+PGc+PHBhdGggZD1cXFwiTTE2Ni42MzYsMjI1LjE5NWMzLjk0MSwxNS45ODEsMjcuMjY1LDI2LjMwNyw1OS40MjEsMjYuMzA3YzI0LjA4NSwwLDM5LjM1OC04Ljc5OSw0NS42MTktMTcuMDMyIGM0LjEyNy01LjQyNSw1LjMwNC0xMS40NzksMy40OTgtMTcuOTk0Yy0zLjYwMS0xMi45OTQtMjIuMzUtMTkuMzE4LTUyLjc5Ni0yOC4xODlsLTguNDk1LTIuNDc5IGMtMzEuMDQ2LTkuMDQzLTY2LjIzNC0xOS4yOTMtNzMuNjkxLTQ2LjE5OGMtMy43NjQtMTMuNTgtMS4xMTktMjcuMjYyLDcuNDQ3LTM4LjUyNmMwLjM0MS0wLjQ0OCwwLjY5NC0wLjg4OSwxLjA1Mi0xLjMyOCBjMi40NDEtMi45OTIsMi45NDItNy4xMjIsMS4yODctMTAuNjExYy0xLjY1Ni0zLjQ4OS01LjE3Mi01LjcxMi05LjAzNC01LjcxMmgtMzUuMTI3Yy0yLjkxMiwwLTUuNjc5LDEuMjY5LTcuNTc5LDMuNDc2bC00My4wMzgsNTAgYy0zLjIyOCwzLjc1LTMuMjI4LDkuMjk3LDAsMTMuMDQ4bDc0LjI4NSw4Ni4zMDJjMi44NTksMy4zMiw3LjU0NCw0LjM5MywxMS41NjMsMi42NDhjNC4wMTktMS43NDUsNi40MzMtNS45MDMsNS45NTgtMTAuMjU4IGMtMC41NC00Ljk0OSwyLjY5Ny05LjU4LDcuNTMxLTEwLjc3MWMwLjc5NS0wLjE5NiwxLjYwNS0wLjI5NSwyLjQwOS0wLjI5NUMxNjEuNTQ2LDIxNy41ODMsMTY1LjUzMiwyMjAuNzEzLDE2Ni42MzYsMjI1LjE5NXogICBNMTQ5Ljc0NiwxOTguNDZjLTYuOTI5LDEuNzA4LTEyLjc2Niw1Ljc3LTE2LjgsMTEuMTY0bC01Ni45NzQtNjYuMTkxbDM0LjQzMS00MGgxMi45MmMtNS40NTgsMTIuOTk3LTYuMzQ4LDI3LjI5My0yLjQwNSw0MS41MTggYzEwLjQzNSwzNy42NDcsNTMuMDk0LDUwLjA3NCw4Ny4zNjksNjAuMDU3bDguNDkzLDIuNDc4YzguNTA3LDIuNDc5LDE4LjE1LDUuMjg5LDI2LjA0OSw4LjI4NCBjOC42NTksMy4yODUsMTEuODg2LDUuNTM5LDEyLjk5Miw2LjUwOGMtMC4wMiwwLjAyNi0wLjA0LDAuMDU0LTAuMDYyLDAuMDgzYy0yLjc5NCwzLjY3NC0xMy4wMDksOS4xNC0yOS43LDkuMTQgYy0yNy4xODUsMC0zOS4wMDItOC4yODQtNDAuMDAyLTExLjA5NWMtMy4zMTMtMTMuNDM4LTE1LjI4NC0yMi44MjQtMjkuMTEyLTIyLjgyNEMxNTQuNTI3LDE5Ny41ODMsMTUyLjEwNiwxOTcuODc5LDE0OS43NDYsMTk4LjQ2IHpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjYzLjE5NywyNjQuNTE2Yy0xMC45MDYsNC41Ny0yMy43NDksNi45ODYtMzcuMTQsNi45ODZjLTE4Ljc2MiwwLTM1LjczMi0zLjIyMS00OS4wNzctOS4zMTMgYy00LjI3NC0xLjk1Mi05LjMyOS0wLjY2NS0xMi4xNDksMy4wOTFjLTIuODIxLDMuNzU2LTIuNjQ4LDguOTY5LDAuNDE3LDEyLjUzbDQ4LjE3Myw1NS45NjZjMS45LDIuMjA3LDQuNjY3LDMuNDc2LDcuNTc5LDMuNDc2IHM1LjY3OS0xLjI2OSw3LjU3OS0zLjQ3Nmw0Ni4wNjItNTMuNTEzYzMuMDI2LTMuNTE2LDMuMjM3LTguNjUxLDAuNTEtMTIuNDAzQzI3Mi40MjQsMjY0LjEwNywyNjcuNDc2LDI2Mi43MjMsMjYzLjE5NywyNjQuNTE2eiAgIE0yMjEsMzExLjkyMmwtMTkuMDM0LTIyLjExM2M3LjY4NiwxLjEyLDE1Ljc1NywxLjY5MiwyNC4wOTEsMS42OTJjNC40MTQsMCw4Ljc5MS0wLjIyNCwxMy4wOTMtMC42NjZMMjIxLDMxMS45MjJ6XFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTMzNi4xODUsODMuNDM0aC0zNi41ODNjLTMuOTI0LDAtNy40ODUsMi4yOTUtOS4xMDYsNS44NjdjLTEuNjIyLDMuNTczLTEuMDA0LDcuNzY0LDEuNTgsMTAuNzE3IGM3LjU4MSw4LjY2NSwxMS40MjUsMTguODQ1LDExLjQyNSwzMC4yNThjMCw1LjUxNC00LjQ4NiwxMC0xMCwxMHMtMTAtNC40ODYtMTAtMTBjMC0yNS4yNC0zNC4yMjMtMzYuNTM4LTY4LjE0MS0zNi41MzggYy0yNy4yODUsMC00NC42NDksMTAuMDQ5LTUxLjgwMiwxOS40NTRjLTQuODMyLDYuMzUzLTYuMjA4LDEzLjQ0NC00LjA5MywyMS4wNzZjNC4xNTksMTUuMDA0LDI3LjQ5NywyMi44NjgsNjAuMDA4LDMyLjMzNyBsOC40OTYsMi40NzljMzAuNjcxLDguOTM3LDU5LjY0MSwxNy4zNzcsNjYuNDc5LDQyLjA0OWMxLjUzNiw1LjU0NCwxLjkzMSwxMS4xMDksMS4xNzQsMTYuNTQgYy0wLjYxMiw0LjM5MywxLjc0Myw4LjY2NSw1Ljc4NSwxMC40OTNjMS4zMjUsMC41OTksMi43MjcsMC44ODksNC4xMTYsMC44ODljMi44NDcsMCw1LjYzNy0xLjIxNyw3LjU4My0zLjQ3N2w3My42OTgtODUuNjIgYzMuMjI4LTMuNzUsMy4yMjgtOS4yOTcsMC0xMy4wNDhsLTQzLjAzOC01MEMzNDEuODY0LDg0LjcwMywzMzkuMDk3LDgzLjQzNCwzMzYuMTg1LDgzLjQzNHogTTMxMy4zNzgsMjA0LjYwMiBjLTEwLjMxNi0zNC40NjktNDcuMjE2LTQ1LjIyMS03OS44MTEtNTQuNzE4bC04LjQ5Ny0yLjQ3OWMtOS45MjgtMi44OTItMjEuMTgyLTYuMTctMzAuNjQ1LTkuOTEgYy0xMi41NTMtNC45NjItMTUuMzIyLTguMjE1LTE1Ljc1Ny04LjgzMWMtMC4zNTItMS4zNjUtMC4yNTMtMS45NjksMC44MDktMy4zNjVjMy4wNDEtMy45OTksMTQuNDU1LTExLjU2MSwzNS44ODMtMTEuNTYxIGMyNy41NTMsMCw0OC4xNDEsOC43MzIsNDguMTQxLDE2LjUzOGMwLDE2LjU0MiwxMy40NTgsMzAsMzAsMzBzMzAtMTMuNDU4LDMwLTMwYzAtOS40NDgtMS45MzQtMTguNTA0LTUuNjc5LTI2Ljg0MmgxMy43NzcgbDM0LjQzMSw0MEwzMTMuMzc4LDIwNC42MDJ6XFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTQzOS41NzksMTM2LjkxbC03Ny40NjgtOTBjLTEuOS0yLjIwNy00LjY2Ny0zLjQ3Ni03LjU3OS0zLjQ3Nkg4Ny40NjhjLTIuOTEyLDAtNS42NzksMS4yNjktNy41NzksMy40NzZsLTc3LjQ2OCw5MCBjLTMuMjI4LDMuNzUtMy4yMjgsOS4yOTcsMCwxMy4wNDhsMjExLDI0NS4xMzJjMS45LDIuMjA3LDQuNjY3LDMuNDc3LDcuNTc5LDMuNDc3czUuNjc5LTEuMjcsNy41NzktMy40NzdsMjExLTI0NS4xMzIgQzQ0Mi44MDcsMTQ2LjIwOCw0NDIuODA3LDE0MC42NjEsNDM5LjU3OSwxMzYuOTF6IE0yMjEsMzczLjIzOEwyMy4xOTQsMTQzLjQzNGw2OC44NjEtODBoMjU3Ljg5bDY4Ljg2MSw4MEwyMjEsMzczLjIzOHpcXFwiPjwvcGF0aD48L2c+PC9zdmc+PGgxIGNsYXNzPVxcXCJwcmltYXJ5LS10ZXh0IHRvb2xiYXJfX2xvZ28tdGl0bGVcXFwiPlZ1ZXBlciBTbGlkZXM8L2gxPjwvcm91dGVyLWxpbms+PC92LXRvb2xiYXItdGl0bGU+PHAgY2xhc3M9XFxcImludHJvXFxcIj5WdWVwZXIgU2xpZGVzIGlzIGFuIGVhc3kgdG8gdXNlIHJlc3BvbnNpdmUgJiB0b3VjaC1yZWFkeSBzbGlkZXNob3cgbWFkZSBmb3IgVnVlSlMuXFxuPGJyLz4tIEluc3BpcmVkIGJ5IDxhIGhyZWY9XFxcImh0dHA6Ly9rZW53aGVlbGVyLmdpdGh1Yi5pby9zbGljay9cXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj5TbGljazwvYT4gLTwvcD48di10b29sYmFyLWl0ZW1zPjx2LWJ0biBmbGF0PVxcXCJmbGF0XFxcIiBjb2xvcj1cXFwic2Vjb25kYXJ5XFxcIiBocmVmPVxcXCIjZXhhbXBsZXNcXFwiPjx2LWljb24+YXBwcyAmbmJzcDs8L3YtaWNvbj48c3Bhbj5FeGFtcGxlczwvc3Bhbj48L3YtYnRuPjwvdi10b29sYmFyLWl0ZW1zPjwvdi10b29sYmFyPjxkaXY+PHJvdXRlci12aWV3Pjwvcm91dGVyLXZpZXc+PHYtZm9vdGVyIGNsYXNzPVxcXCJtYXgtd2lkdGhlZFxcXCI+PHNwYW4gY2xhc3M9XFxcImNvcHlyaWdodFxcXCI+Q29weXJpZ2h0IMKpIDIwMTggQW50b25pIEFuZHLDqSwgYWxsIHJpZ2h0cyByZXNlcnZlZC48L3NwYW4+PHYtc3BhY2VyPjwvdi1zcGFjZXI+PHNwYW4gY2xhc3M9XFxcIm1hZGUtd2l0aFxcXCI+VGhpcyBzaXRlIGlzIG1hZGUgd2l0aCAmbmJzcDsgVnVlSlMsIDx2LWljb24gY2xhc3M9XFxcImhlYXJ0XFxcIj5mYXZvcml0ZTwvdi1pY29uPjwvc3Bhbj48L3YtZm9vdGVyPjwvZGl2Pjwvdi1hcHA+XCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvdGVtcGxhdGUucHVnXG4vLyBtb2R1bGUgaWQgPSAyOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///29\n");

/***/ })
/******/ ]);