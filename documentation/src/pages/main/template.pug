div.documentation
  v-layout.max-widthed(row)
    v-layout(column)
      div.mb-3.title Features
      div.features
        v-icon.pr-2(color="secondary") check
        | Vueper Slides is #[strong fully responsive] and scales with its container.#[br]
        v-icon.pr-2(color="secondary") check
        | #[strong Touch ready] & mouse dragging for desktop.#[br]
        v-icon.pr-2(color="secondary") check
        | Uses #[strong CSS for animations] & comes with a minimum of styles (using the #[i BEM] convention). Fully customizable.#[br]
        v-icon.pr-2(color="secondary") check
        | #[strong Infinite looping], customizable arrows or disable arrow on a slideshow end, autoplay.#[br]
        v-icon.pr-2(color="secondary") check
        | Customizable bullets with or without numeric index.#[br]
        v-icon.pr-2(color="secondary") check
        | Navigate with #[strong keyboard arrows].#[br]
        v-icon.pr-2(color="secondary") check
        | Separate settings per #[strong breakpoint] - coming soon!#[br]
        v-icon.pr-2(color="secondary") check
        | Slide content supports #[strong title & description, inside OR outside] the current slide.#[br]
        v-icon.pr-2(color="secondary") check
        | #[strong Add or remove slides] on the fly, #[strong disable or enable the slideshow].#[br]
        v-icon.pr-2(color="secondary") check
        | #[strong Events] for callbacks, etc...
    v-card.coming-soon
      v-card-title
        div To do...
      v-card-text
        v-layout(row)
          v-layout(column)
            v-chip(color="light-green lighten-1" text-color="white" small)
              v-icon check_circle
              | Minify VueperSlides
            v-chip(color="light-green lighten-1" text-color="white" small)
              v-icon check_circle
              | Emit events with params
            v-chip(color="light-green lighten-1" text-color="white" small)
              v-icon check_circle
              | Slide with keyboard arrows
            v-chip(color="light-green lighten-1" text-color="white" small)
              v-icon check_circle
              | Add / remove slides
            v-chip(color="light-green lighten-1" text-color="white" small)
              v-icon check_circle
              | Disable / enable slideshow
            v-chip(color="light-green lighten-1" text-color="white" small)
              v-icon check_circle
              | Center mode
            v-chip(color="amber lighten-2" text-color="white" small)
              v-icon access_time
              | Breakpoints
            v-chip(color="deep-orange lighten-1" text-color="white" small)
              v-icon remove_circle
              | Release on NPM
            v-chip(color="deep-orange lighten-1" text-color="white" small)
              v-icon remove_circle
              | Dragging distance
            v-chip(color="deep-orange lighten-1" text-color="white" small)
              v-icon remove_circle
              | Slides to scroll at once
            v-chip(color="deep-orange lighten-1" text-color="white" small)
              v-icon remove_circle
              | Parallax
            v-chip(color="deep-orange lighten-1" text-color="white" small)
              v-icon remove_circle
              | Lazy loading
            v-chip(color="deep-orange lighten-1" text-color="white" small)
              v-icon remove_circle
              | Nav for

  h2
    a(href="#installation") Installation
    a(name="installation")
  p You have two options: NPM or Browser inclusion.
  h3 NPM - Coming Soon!
  precode(language="shell" label="Shell") npm install vueper-slides --save
  p Then import the 2 components and use it:
  precode(language="js" label="Javascript").
    import { VueperSlides, VueperSlide } from '../../../../dist/vueperslides'
    ...

    export default {
      components: {
        VueperSlides,
        VueperSlide
      },
      template: ...,
      data: () => ({
        ...
      }),
      ...
    }

  h3 Browser Use
  p Include the VueperSlides script in your document #[code &lt;head&gt;] as follows:
  precode(language="html" label="HTML").
    &lt;head&gt;
      ...
      &lt;script src="https://unpkg.com/vue/dist/vue.min.js"&gt;&lt;/script&gt;
      &lt;script src="../dist/vueperslides.js"&gt;&lt;/script&gt;
    &lt;/head&gt;

  h2
    a(href="#how-to-use") How to use
    a(name="how-to-use")
  p Once included in your project, use as follows. The #[a(href="#examples") example section] may be more talkative to you.
  precode(language="html-vue" label="HTML Vue Template").
    &lt;vueper-slides&gt;
      &lt;vueper-slide v-for="(slide, i) in slides" :key="i" :title="slide.title" :content="slide.content"&gt;&lt;/vueper-slide&gt;
    &lt;/vueper-slides&gt;

  precode(language="js" label="Javascript").
    data: () => ({
      slides: [
        {
          title: 'Slide #1',
          content: 'Slide content.'
        },
        ...
      ]
    })
  p.highlight.info If you don't need a #[code v-for] loop, you don't need to place your slides data in your VueJs component's data.

  h2
    a(href="#vueper-slides-api") &lt;vueper-slides&gt; API
    a(name="vueper-slides-api")
  p.
    This is the main tag for the slider.#[br]
    You can set different options directly through html attributes.#[br]
    You can also override the default arrows and `paused` indicator if you want.

  h3
    a(href="#vueper-slides-settings") Settings
    a(name="vueper-slides-settings")
  p Settings
  precode(language="js").
    initSlide:                [Number],         default: 1
    slideRatio:               [Number],         default: 1/3
    arrows:                   [Boolean],        default: true
    disableArrowsOnEdges:     [Boolean],        default: false
    bullets:                  [Boolean],        default: true
    bulletsOutside:           [Boolean],        default: false
    fade:                     [Boolean],        default: false
    slideContentOutside:      [Boolean],        default: false
    slideContentOutsideClass: [String],         default: ""
    autoplay:                 [Boolean],        default: false
    speed:                    [Number, String], default: 4000
    pauseOnHover:             [Boolean],        default: true
    infinite:                 [Boolean],        default: true
    touchable:                [Boolean],        default: true
    disable:                  [Boolean],        default: false

  h3
    a(href="#events") Events
    a(name="events")
  p To see the events in action you can check the #[a(href="#ex--events") Events example].
  ul.max-widthed
    li
      h4
        code before-init
    li
      h4
        code ready
    li
      h4
        code before-slide
      p This event is emitted with:
      ul
        li a #[code currentSlide] object containing the slide index, title & content of the current slide.
        li a #[code nextSlide] object containing the slide index, title & content of the next slide.
    li
      h4
        code slide
      p comes with information about the new current slide.

  h2
    a(href="#vueper-slide-api") &lt;vueper-slide&gt; API
    a(name="vueper-slide-api")
  h3
    a(href="#vueper-slide-settings") Settings
    a(name="vueper-slide-settings")
  p Settings
  precode(language="js").
    image:   [String], default: ''
    title:   [String], default: ''
    content: [String], default: ''

  h2
    a(href="#examples") Examples of Use
    a(name="examples")

  h3
    a(href="#ex--simplest-ever") Simplest Ever
    a(name="ex--simplest-ever")
  precode(language="html-vue" label="HTML Vue Template").
    &lt;vueper-slides&gt;
      &lt;vueper-slide v-for="i in 5" :key="i" :title="i"&gt;&lt;/vueper-slide&gt;
    &lt;/vueper-slides&gt;
  vueper-slides.ex1
    vueper-slide(v-for="i in 5" :key="i" :title="i.toString()")

  h3
    a(href="#ex--basic") Basic with Autoplay
    a(name="ex--basic")
  p
    | This example uses autoplay, slide titles & contents & an infinite mode (by default).#[br]
    em The autoplay circles between all the slides and goes back to the begining after the last slide.
  precode(language="html-vue" label="HTML Vue Template").
    &lt;vueper-slides autoplay&gt;
      &lt;v-icon slot="pausedIcon" large color="white"&gt;pause_circle_outline&lt;/v-icon&gt;
      &lt;vueper-slide v-for="(slide, i) in slides"
        :key="slide.id"
        :title="slide.title"
        :content="slide.content"
        :style="'background-color: ' + colors[i % 4]"&gt;&lt;/vueper-slide&gt;
    &lt;/vueper-slides&gt;
  precode(language="js" label="Javascript").
    import { VueperSlides, VueperSlide } from '../../../../dist/vueperslides'

    export default {
      components: {
        VueperSlides,
        VueperSlide
      },
      template: ...,
      data: () => ({
        slides: [
          {
            id: 'slide-1',
            title: 'Slide <b style="font-size: 1.3em;color: yellow">#1</b>',
            content: 'Slide title can be HTML.<br>And so does the slide content, <span style="font-size: 1.2em;color: yellow">why not?</span>'
          },
          ...
        ]
      }),
      ...
    }
  vueper-slides.ex2(autoplay)
    v-icon(slot="pausedIcon" large color="white") pause_circle_outline
    vueper-slide(v-for="(slide, i) in slides" :key="slide.id" :title="slide.title" :content="slide.content" :style="'background-color: ' + colors[i % 4]")

  h3
    a(href="#ex--arrows-and-bullets") Arrows & bullets
    a(name="ex--arrows-and-bullets")
  p.
    This example uses custom arrows and positions the bullets outside of the slideshow.#[br]
    The bullets are showing slide indexes which is disabled by default.#[br]
    You can also disable arrows and/or bullets. E.g. #[code :arrows="false"], #[code :bullets="false"]
  precode(language="html-vue" label="HTML Vue Template").
    &lt;vueper-slides :infinite="false" :bullets-outside="true"&gt;
      &lt;v-icon slot="arrowLeft" color="white" large&gt;arrow_left&lt;/v-icon&gt;
      &lt;v-icon slot="arrowRight" color="white" large&gt;arrow_right&lt;/v-icon&gt;
      &lt;vueper-slide
        v-for="(slide, i) in slides"
        :key="slide.id"
        :title="slide.title"
        :content="slide.content"
        :style="'background-color: ' + colors[(i + 1) % 4]"&gt;&lt;/vueper-slide&gt;
    &lt;/vueper-slides&gt;
  precode(language="css" label="CSS").
    .vueperslides__bullet {
      background-color: rgba(0, 0, 0, 0.3);
      border: none;
      box-shadow: none;
      transition: 0.3s;
      width: 16px;
      height: 16px;
    }

    .vueperslides__bullet--active {
      background-color: #ff5252;
    }

    .vueperslides__bullet span {
      display: block;
      color: #fff;
      font-size: 10px;
      opacity: 0.8;
    }
  vueper-slides.ex--arrows-and-bullets(:infinite="false" :bullets-outside="true")
    v-icon(slot="arrowLeft" color="white" x-large) undo
    v-icon(slot="arrowRight" color="white" x-large) redo
    vueper-slide(v-for="(slide, i) in slides" :key="slide.id" :title="slide.title" :content="slide.content" :style="'background-color: ' + colors[(i + 1) % 4]")

  h3
    a(href="#ex--images-and-fading") Images & Fading
    a(name="ex--images-and-fading")
  p.
    This example uses #[b images] and #[b fading] as the slide transition.#[br]
    The #[b dragging] ability to change slide is #[b disabled].#[br]
    The current slide title & content are shown #[b outside] of the slider.
    #[br]Of course you can position it with a bit of CSS.
  precode(language="html-vue" label="HTML Vue Template").
    &lt;vueper-slides fade :slide-content-outside="true" slide-content-outside-class="max-widthed" :touchable="false" :slide-ratio="0.3"&gt;
      &lt;vueper-slide
        v-for="(slide, i) in slides2"
        :key="i"
        :image="'images/' + slide.image"
        :title="'# ' + slide.title"
        :content="slide.content"&gt;&lt;/vueper-slide&gt;
    &lt;/vueper-slides&gt;
  vueper-slides(fade :slide-content-outside="true" slide-content-outside-class="max-widthed" :touchable="false" :slide-ratio="0.3")
    vueper-slide(v-for="(slide, i) in slides2" :key="i" :image="slide.image" :title="'# ' + slide.title" :content="slide.content")

  h3
    a(href="#ex--events") Events
    a(name="ex--events")
  p.
    This example demonstrates how to use the vueper slides provided events and how to style the current slide.#[br]
    The events box bellow will log all the events (and the given params) triggered while using the slideshow.#[br]
    You can change slides to see new events.
  precode(language="html-vue" label="HTML Vue Template").
    &lt;vueper-slides
      class="ex--events"
      @before-init="logEvents"
      @ready="logEvents"
      @before-slide="logEvents"
      @slide="logEvents"
      :slide-ratio="0.2"&gt;
      &lt;vueper-slide
        v-for="i in 6"
        :key="i"
        :title="i.toString()"
        :content="slide.content"&gt;&lt;/vueper-slide&gt;
    &lt;/vueper-slides&gt;
  precode(language="css" label="CSS").
    .ex--events .vueperslides__slide--active:before {
      content: 'This slide is active!';
      position: absolute;
      top: -18px;
      right: -18px;
      padding: 4px 25px;
      background: orange;
      color: #fff;
      font-size: 10px;
      transform: translateX(30%) rotate(45deg);
      transform-origin: 0 0;
      box-shadow: 0 0 9px rgba(0, 0, 0, 0.2);
    }
  pre.precode(data-label="Event box" style="min-height: 120px")
    | listening...
    p(v-html="events")
  vueper-slides.ex--events(@before-init="logEvents" @ready="logEvents" @before-slide="logEvents" @slide="logEvents" :slide-ratio="0.2")
    vueper-slide(v-for="i in 6" :key="i" :title="i.toString()" :style="'background-color: ' + ['#ff5252', '#42b983'][i % 2]")

  h3
    a(href="#ex--add-remove-slides--disable") Add / remove slides & disable slideshow
    a(name="ex--add-remove-slides--disable")
  p
    | This example illustrates how to add or remove slides on the fly from a running VueperSlides instance.#[br]
    | You can also completely freeze the slideshow and unfreeze when you want to.#[br]
    v-btn(color="primary" @click="appendSlide" small)
      v-icon add
      | &nbsp; Add Slide
    v-btn(color="primary" @click="removeSlide" small)
      v-icon remove
      | &nbsp; Remove Slide
    v-btn(color="secondary" @click="toggleSlideshow" small)
      v-icon {{ slideshowDisabled ? 'check_circle' : 'highlight_off'}}
      | &nbsp; {{ slideshowDisabled ? 'Enable' : 'Disable' }} Slideshow
  p.highlight.info Note that the slideshow disables controls if you have only 1 slide or none.

  vueper-slides(:slide-ratio="0.2" :infinite="false" disableArrowsOnEdges :disable="slideshowDisabled")
    vueper-slide(v-for="(slide, i) in slides3" :key="i" :title="slide.title" :content="slide.content" :style="'background-color: ' + ['#ff5252', '#42b983'][i % 2]")

  h3
    a(href="#ex--center-mode") Center mode slideshow
    a(name="ex--center-mode")
  p This example demonstrates how to use the vueper slides in a center mode.#[br]
  precode(language="html-vue" label="HTML Vue Template").
    &lt;vueper-slides&gt;
      &lt;vueper-slide
        v-for="i in 6"
        :key="i"
        :title="i.toString()"
        :style="'background-color: ' + ['#ff5252', '#42b983'][i % 2]"&gt;&lt;/vueper-slide&gt;
    &lt;/vueper-slides&gt;
  precode(language="css" label="CSS").
    .ex--center-mode {
      width: 600px;
      margin: auto;
    }
  vueper-slides.ex--center-mode(:infinite="false")
    vueper-slide(v-for="i in 6" :key="i" :title="i.toString()" :style="'background-color: ' + ['#ff5252', '#42b983'][i % 2]")
